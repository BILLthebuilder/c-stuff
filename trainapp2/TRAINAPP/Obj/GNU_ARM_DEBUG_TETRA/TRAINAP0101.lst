
Obj/GNU_ARM_DEBUG_TETRA/TRAINAP0101.axf:     file format elf32-littlearm

SYMBOL TABLE:
00008134 l    d  .interp	00000000              .interp
00008148 l    d  .note.ABI-tag	00000000              .note.ABI-tag
00008168 l    d  .hash	00000000              .hash
000082d0 l    d  .dynsym	00000000              .dynsym
00008600 l    d  .dynstr	00000000              .dynstr
000088da l    d  .gnu.version	00000000              .gnu.version
00008940 l    d  .gnu.version_r	00000000              .gnu.version_r
00008990 l    d  .rel.dyn	00000000              .rel.dyn
000089b8 l    d  .rel.plt	00000000              .rel.plt
00008ad0 l    d  .init	00000000              .init
00008adc l    d  .plt	00000000              .plt
00008ca0 l    d  .text	00000000              .text
000190b0 l    d  .fini	00000000              .fini
000190b8 l    d  .rodata	00000000              .rodata
0001b730 l    d  .ARM.exidx	00000000              .ARM.exidx
0001b738 l    d  .eh_frame	00000000              .eh_frame
00024000 l    d  .init_array	00000000              .init_array
00024008 l    d  .fini_array	00000000              .fini_array
00024014 l    d  .jcr	00000000              .jcr
00024018 l    d  .dynamic	00000000              .dynamic
00024118 l    d  .got	00000000              .got
00024200 l    d  .data	00000000              .data
00024980 l    d  .bss	00000000              .bss
00000000 l    d  .comment	00000000              .comment
00000000 l    d  .ARM.attributes	00000000              .ARM.attributes
00000000 l    d  .debug_aranges	00000000              .debug_aranges
00000000 l    d  .debug_info	00000000              .debug_info
00000000 l    d  .debug_abbrev	00000000              .debug_abbrev
00000000 l    d  .debug_line	00000000              .debug_line
00000000 l    d  .debug_frame	00000000              .debug_frame
00000000 l    d  .debug_str	00000000              .debug_str
00000000 l    d  .debug_loc	00000000              .debug_loc
00000000 l    d  .debug_ranges	00000000              .debug_ranges
00008db8 l     F .text	00000000              call_gmon_start
00000000 l    df *ABS*	00000000              init.c
00000000 l    df *ABS*	00000000              stapp_legacyexitpoint.c
0001b690 l     O .rodata	00000018              __FUNCTION__.7509
00000000 l    df *ABS*	00000000              startup_tplusentry.c
00000000 l    df *ABS*	00000000              crtstuff.c
00024014 l     O .jcr	00000000              __JCR_LIST__
00008e18 l     F .text	00000000              deregister_tm_clones
00008e50 l     F .text	00000000              register_tm_clones
00008e94 l     F .text	00000000              __do_global_dtors_aux
00024984 l     O .bss	00000001              completed.9454
00024010 l     O .fini_array	00000000              __do_global_dtors_aux_fini_array_entry
00008ebc l     F .text	00000000              frame_dummy
00024004 l     O .init_array	00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000              Main.c
00000000 l    df *ABS*	00000000              Entry.c
0002498c l     O .bss	00000020              xCfg
000249ac l     O .bss	00000004              ulSize
00024208 l     O .data	00000108              Services
000249b0 l     O .bss	00000015              appName
000249c8 l     O .bss	00000015              fileName
000190bc l     O .rodata	00000013              timeToCall
000190d0 l     O .rodata	0000001f              idleMsg
000190f0 l     O .rodata	00000020              szDate
000091c8 l     F .text	0000003e              Progress
00019110 l       .rodata	00000000              .LC0
0001911c l       .rodata	00000000              .LC1
00019120 l       .rodata	00000000              .LC2
00019140 l       .rodata	00000000              .LC3
00019158 l       .rodata	00000000              .LC4
0001917c l       .rodata	00000000              .LC5
00019198 l       .rodata	00000000              .LC6
000191a0 l       .rodata	00000000              .LC7
000191a4 l       .rodata	00000000              .LC8
000191ac l       .rodata	00000000              .LC9
000191b0 l       .rodata	00000000              .LC10
000191b8 l       .rodata	00000000              .LC11
000191f8 l       .rodata	00000000              .LC12
00019208 l       .rodata	00000000              .LC13
00019218 l       .rodata	00000000              .LC14
0001928c l       .rodata	00000000              .LC15
00019304 l       .rodata	00000000              .LC16
00019308 l       .rodata	00000000              .LC17
0001931c l       .rodata	00000000              .LC18
00019320 l       .rodata	00000000              .LC19
00019338 l       .rodata	00000000              .LC20
00019340 l       .rodata	00000000              .LC21
00019344 l       .rodata	00000000              .LC22
00019348 l       .rodata	00000000              .LC23
00019358 l       .rodata	00000000              .LC24
00019368 l       .rodata	00000000              .LC25
0001937c l       .rodata	00000000              .LC26
00019388 l       .rodata	00000000              .LC27
00019394 l       .rodata	00000000              .LC28
0001939c l       .rodata	00000000              .LC29
000193a4 l       .rodata	00000000              .LC30
000193b8 l       .rodata	00000000              .LC31
000193c8 l       .rodata	00000000              .LC32
000193d0 l       .rodata	00000000              .LC33
000193e4 l       .rodata	00000000              .LC34
00000000 l    df *ABS*	00000000              Menu.c
000249e8 l     O .bss	00000004              sKeyboard
000249ec l     O .bss	00000004              sDisplay
000193fc l       .rodata	00000000              .LC8
00019404 l       .rodata	00000000              .LC9
00019410 l       .rodata	00000000              .LC10
00019428 l       .rodata	00000000              .LC11
00019434 l       .rodata	00000000              .LC12
0001944c l       .rodata	00000000              .LC13
00019458 l       .rodata	00000000              .LC14
00019470 l       .rodata	00000000              .LC15
0001947c l       .rodata	00000000              .LC16
000194e4 l       .rodata	00000000              .LC7
00019500 l       .rodata	00000000              .LC17
00019508 l       .rodata	00000000              .LC18
0001950c l       .rodata	00000000              .LC19
00019518 l       .rodata	00000000              .LC20
0001951c l       .rodata	00000000              .LC21
00000000 l    df *ABS*	00000000              ComGPRS.c
00019524 l     O .rodata	0000035c              txGPRS
00019880 l     O .rodata	00000050              xPrinter
00024310 l     O .data	0000000c              tzRequirePin
000198d8 l       .rodata	00000000              .LC2
000198f0 l       .rodata	00000000              .LC3
000198fc l       .rodata	00000000              .LC4
00019910 l       .rodata	00000000              .LC5
00019928 l       .rodata	00000000              .LC6
0001993c l       .rodata	00000000              .LC7
00019950 l       .rodata	00000000              .LC8
00019964 l       .rodata	00000000              .LC9
0001997c l       .rodata	00000000              .LC10
00019988 l       .rodata	00000000              .LC11
000199a0 l       .rodata	00000000              .LC12
000199ac l       .rodata	00000000              .LC13
000199c0 l       .rodata	00000000              .LC14
000199c4 l       .rodata	00000000              .LC15
000199d0 l       .rodata	00000000              .LC16
000199dc l       .rodata	00000000              .LC17
000199ec l       .rodata	00000000              .LC18
00019a00 l       .rodata	00000000              .LC19
00019a18 l       .rodata	00000000              .LC20
00019a30 l       .rodata	00000000              .LC21
00019a48 l       .rodata	00000000              .LC22
00019a54 l       .rodata	00000000              .LC23
00019a60 l       .rodata	00000000              .LC24
00019a70 l       .rodata	00000000              .LC25
00019a80 l       .rodata	00000000              .LC26
00019a94 l       .rodata	00000000              .LC27
00019aa8 l       .rodata	00000000              .LC28
00019abc l       .rodata	00000000              .LC29
0000a974 l     F .text	00000b60              GprsReport
00019ad0 l       .rodata	00000000              .LC30
0000b4d4 l     F .text	00000294              StartGPRS
0000b768 l     F .text	000001ec              OpenGPRS
0000b954 l     F .text	0000003c              ConnectGPRS
0000b990 l     F .text	0000005c              SendGPRS
0000b9ec l     F .text	00000160              ReceiveGPRS
0000bb4c l     F .text	0000003c              DisconnectGPRS
0000bb88 l     F .text	00000040              CloseGPRS
0000bbc8 l     F .text	00000036              StopGPRS
00019ae4 l       .rodata	00000000              .LC31
00019af4 l       .rodata	00000000              .LC32
00019af8 l       .rodata	00000000              .LC33
00019b04 l       .rodata	00000000              .LC34
00019b10 l       .rodata	00000000              .LC35
00019b24 l       .rodata	00000000              .LC36
00019b30 l       .rodata	00000000              .LC37
00019b44 l       .rodata	00000000              .LC38
00019b54 l       .rodata	00000000              .LC39
00019b70 l       .rodata	00000000              .LC40
00019b7c l       .rodata	00000000              .LC41
00019b8c l       .rodata	00000000              .LC42
00019b94 l       .rodata	00000000              .LC43
00019bac l       .rodata	00000000              .LC44
00019bbc l       .rodata	00000000              .LC45
00019bcc l       .rodata	00000000              .LC46
00019bd4 l       .rodata	00000000              .LC47
00019be4 l       .rodata	00000000              .LC48
00019bf4 l       .rodata	00000000              .LC49
00019c04 l       .rodata	00000000              .LC50
00019c14 l       .rodata	00000000              .LC51
00019c80 l       .rodata	00000000              .LC52
00019c90 l       .rodata	00000000              .LC53
00019c9c l       .rodata	00000000              .LC54
00019cb4 l       .rodata	00000000              .LC55
00019cc0 l       .rodata	00000000              .LC56
00019cd0 l       .rodata	00000000              .LC57
00019cdc l       .rodata	00000000              .LC58
00019ce8 l       .rodata	00000000              .LC59
00019cf4 l       .rodata	00000000              .LC60
00019cfc l       .rodata	00000000              .LC61
00019d10 l       .rodata	00000000              .LC62
00000000 l    df *ABS*	00000000              Goal.c
0000ce80 l     F .text	00000054              CallBackPressKey
0000ced4 l     F .text	0000003c              CallBackValidKey
0000cf10 l     F .text	0000003c              CallBackCancelKey
0000cf4c l     F .text	0000003c              CallBackDownKey
0000cf88 l     F .text	0000003c              CallBackUpKey
0000cfc4 l     F .text	0000004a              CallBackTimeout
00019d14 l       .rodata	00000000              .LC0
00019d30 l       .rodata	00000000              .LC1
00019d4c l       .rodata	00000000              .LC2
00019d68 l       .rodata	00000000              .LC3
00019d88 l       .rodata	00000000              .LC4
00019d8c l       .rodata	00000000              .LC5
00019d94 l       .rodata	00000000              .LC6
00000000 l    df *ABS*	00000000              Mapapp.c
00019d98 l       .rodata	00000000              .LC0
00019da4 l       .rodata	00000000              .LC1
00019e40 l     O .rodata	000000d0              tzApp
00019f10 l     O .rodata	0000000b              zAppTab
00019f1c l       .rodata	00000000              .LC17
00000000 l    df *ABS*	00000000              FMG.c
00019f28 l     O .rodata	000002b0              txBatch
0001a1d8 l     O .rodata	000004b4              txTrans
0001a68c l     O .rodata	00000284              zBatch
000249f0 l     O .bss	0000002c              xFileInfo
0001a910 l       .rodata	00000000              .LC0
0001a920 l       .rodata	00000000              .LC1
0001a938 l       .rodata	00000000              .LC2
0001a948 l       .rodata	00000000              .LC3
0000f87c l     F .text	00000088              GetBatchIdx
0000f904 l     F .text	00000070              SetBatchIdx
0001a960 l       .rodata	00000000              .LC4
0001a96c l       .rodata	00000000              .LC5
0001a980 l       .rodata	00000000              .LC6
0001a984 l       .rodata	00000000              .LC7
0001a994 l       .rodata	00000000              .LC8
0001a9a4 l       .rodata	00000000              .LC9
0001a9b0 l       .rodata	00000000              .LC10
0001a9c8 l       .rodata	00000000              .LC11
0001a9e0 l       .rodata	00000000              .LC12
0001a9f8 l       .rodata	00000000              .LC13
0001aa0c l       .rodata	00000000              .LC14
0001aa18 l       .rodata	00000000              .LC15
0001aa24 l       .rodata	00000000              .LC16
0001aa38 l       .rodata	00000000              .LC17
0001aa44 l       .rodata	00000000              .LC18
0001aa54 l       .rodata	00000000              .LC19
0001aa60 l       .rodata	00000000              .LC20
00000000 l    df *ABS*	00000000              Utility.c
0002431c l     O .data	00000014              tzConverter
00024a1c l     O .bss	00000010              tcIp
0001aa9c l       .rodata	00000000              .LC5
0001aaac l       .rodata	00000000              .LC6
0001aac4 l       .rodata	00000000              .LC7
0001aadc l       .rodata	00000000              .LC8
0001aaec l       .rodata	00000000              .LC9
0001aafc l       .rodata	00000000              .LC10
0001ab14 l       .rodata	00000000              .LC11
0001ab28 l       .rodata	00000000              .LC12
0001ab3c l       .rodata	00000000              .LC13
0001ab48 l       .rodata	00000000              .LC14
0001ab64 l       .rodata	00000000              .LC15
0001ab80 l       .rodata	00000000              .LC16
0001ab9c l       .rodata	00000000              .LC17
0001abb8 l       .rodata	00000000              .LC18
0001abcc l       .rodata	00000000              .LC19
0001abdc l       .rodata	00000000              .LC20
0001abec l       .rodata	00000000              .LC21
0001abfc l       .rodata	00000000              .LC22
0001ac0c l       .rodata	00000000              .LC23
0001ac24 l       .rodata	00000000              .LC24
0001ac38 l       .rodata	00000000              .LC25
0001ac48 l       .rodata	00000000              .LC26
0001ac58 l       .rodata	00000000              .LC27
0001ac5c l       .rodata	00000000              .LC28
0001ac64 l       .rodata	00000000              .LC29
0001ac70 l       .rodata	00000000              .LC30
0001ac80 l       .rodata	00000000              .LC31
0001ac94 l       .rodata	00000000              .LC32
0001aca4 l       .rodata	00000000              .LC33
0001acb8 l       .rodata	00000000              .LC34
0001acc8 l       .rodata	00000000              .LC35
0001acd8 l       .rodata	00000000              .LC36
0001ace4 l       .rodata	00000000              .LC37
0001acf0 l       .rodata	00000000              .LC38
0001ad04 l       .rodata	00000000              .LC39
0001ad18 l       .rodata	00000000              .LC40
0001ad2c l       .rodata	00000000              .LC41
0001ad38 l       .rodata	00000000              .LC42
0001ad48 l       .rodata	00000000              .LC43
0001ad58 l       .rodata	00000000              .LC44
0001ad68 l       .rodata	00000000              .LC45
0001ad78 l       .rodata	00000000              .LC46
0001ad88 l       .rodata	00000000              .LC47
0001ad98 l       .rodata	00000000              .LC48
0001ada8 l       .rodata	00000000              .LC49
0001adb4 l       .rodata	00000000              .LC50
0001adc4 l       .rodata	00000000              .LC51
0001add0 l       .rodata	00000000              .LC52
0001add8 l       .rodata	00000000              .LC53
0001ade8 l       .rodata	00000000              .LC54
0001adf4 l       .rodata	00000000              .LC55
0001ae08 l       .rodata	00000000              .LC56
0001ae18 l       .rodata	00000000              .LC57
0001ae28 l       .rodata	00000000              .LC58
0001ae38 l       .rodata	00000000              .LC59
0001ae48 l       .rodata	00000000              .LC60
0001ae5c l       .rodata	00000000              .LC61
0001ae6c l       .rodata	00000000              .LC62
0001ae80 l       .rodata	00000000              .LC63
0001ae94 l       .rodata	00000000              .LC64
0001aea8 l       .rodata	00000000              .LC65
0001aeb8 l       .rodata	00000000              .LC66
0001aec0 l       .rodata	00000000              .LC67
0001aed0 l       .rodata	00000000              .LC68
0001aee0 l       .rodata	00000000              .LC69
0001aef0 l       .rodata	00000000              .LC70
0001af00 l       .rodata	00000000              .LC71
0001af10 l       .rodata	00000000              .LC72
0001af24 l       .rodata	00000000              .LC73
0001af34 l       .rodata	00000000              .LC74
0001af40 l       .rodata	00000000              .LC75
0001af4c l       .rodata	00000000              .LC76
0001af58 l       .rodata	00000000              .LC77
0001af64 l       .rodata	00000000              .LC78
0001af74 l       .rodata	00000000              .LC79
0001af84 l       .rodata	00000000              .LC80
0001af94 l       .rodata	00000000              .LC81
0001afa4 l       .rodata	00000000              .LC82
0001afb4 l       .rodata	00000000              .LC83
0001afc4 l       .rodata	00000000              .LC84
0001afd4 l       .rodata	00000000              .LC85
0001afe8 l       .rodata	00000000              .LC86
0001aff8 l       .rodata	00000000              .LC87
0001b00c l       .rodata	00000000              .LC88
0001b01c l       .rodata	00000000              .LC89
0001b024 l       .rodata	00000000              .LC90
0001b030 l       .rodata	00000000              .LC91
0001b038 l       .rodata	00000000              .LC92
0001b048 l       .rodata	00000000              .LC93
0001b05c l       .rodata	00000000              .LC94
0001b07c l       .rodata	00000000              .LC95
0001b08c l       .rodata	00000000              .LC96
0001b09c l       .rodata	00000000              .LC97
0001b0ac l       .rodata	00000000              .LC98
0001b0b8 l       .rodata	00000000              .LC99
0001b0c8 l       .rodata	00000000              .LC100
0001b0d8 l       .rodata	00000000              .LC101
0001b0e8 l       .rodata	00000000              .LC102
0001b0f8 l       .rodata	00000000              .LC103
0001b108 l       .rodata	00000000              .LC104
0001b114 l       .rodata	00000000              .LC105
0001b124 l       .rodata	00000000              .LC106
0001b134 l       .rodata	00000000              .LC107
0001b144 l       .rodata	00000000              .LC108
0001b154 l       .rodata	00000000              .LC109
0001b164 l       .rodata	00000000              .LC110
0001b178 l       .rodata	00000000              .LC111
0001b180 l       .rodata	00000000              .LC112
0001b194 l       .rodata	00000000              .LC113
0001b1a0 l       .rodata	00000000              .LC114
0001b1b0 l       .rodata	00000000              .LC115
0001b1bc l       .rodata	00000000              .LC116
0001b1cc l       .rodata	00000000              .LC117
0001b1dc l       .rodata	00000000              .LC118
0001b1ec l       .rodata	00000000              .LC119
0001b1fc l       .rodata	00000000              .LC120
0001b20c l       .rodata	00000000              .LC121
0001b21c l       .rodata	00000000              .LC122
00010d58 l     F .text	0000006c              BitOn
00010dc4 l     F .text	00000070              BitOff
00010e34 l     F .text	00000068              BitTest
0001b220 l       .rodata	00000000              .LC123
00000000 l    df *ABS*	00000000              Timer.c
0001b22c l     O .rodata	00000204              txCounter
00024a30 l     O .bss	00000020              tllTimer
0001b430 l       .rodata	00000000              .LC0
0001b440 l       .rodata	00000000              .LC1
0001b450 l       .rodata	00000000              .LC2
0001b45c l       .rodata	00000000              .LC3
0001b470 l       .rodata	00000000              .LC4
00000000 l    df *ABS*	00000000              iso8583.c
00000000 l    df *ABS*	00000000              VGE_FMG.c
00024a50 l     O .bss	00000011              g_acDisKLabel
00000000 l    df *ABS*	00000000              md5.c
00015fcc l     F .text	00000d60              md5_process
0001b530 l     O .rodata	00000004              w.5151
0001b4f0 l     O .rodata	00000040              pad.5177
00000001 l       *ABS*	00000000              __TELIUM3__
00024340 l       .data	00000000              gprs_GetInformation_Callback
00016f88 l     F .text	00000000              gprs_GetInformation_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024350 l       .data	00000000              gprs_SetPinModeFree_Callback
00016fac l     F .text	00000000              gprs_SetPinModeFree_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024360 l       .data	00000000              gprs_SubmitPuk_Callback
00016fd0 l     F .text	00000000              gprs_SubmitPuk_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024a64 l     O .bss	00000004              LIBGPRS_Dll
00024a68 l     O .bss	00000004              LIBGPRS_present
00000001 l       *ABS*	00000000              __TELIUM3__
00024370 l       .data	00000000              LL_ClearReceiveBuffer_Callback
0001709c l     F .text	00000000              LL_ClearReceiveBuffer_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024380 l       .data	00000000              LL_ClearSendBuffer_Callback
000170c0 l     F .text	00000000              LL_ClearSendBuffer_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024390 l       .data	00000000              LL_Configure_Callback
000170e4 l     F .text	00000000              LL_Configure_Init
00000001 l       *ABS*	00000000              __TELIUM3__
000243a0 l       .data	00000000              LL_Connect_Callback
00017108 l     F .text	00000000              LL_Connect_Init
00000001 l       *ABS*	00000000              __TELIUM3__
000243b0 l       .data	00000000              LL_Disconnect_Callback
0001712c l     F .text	00000000              LL_Disconnect_Init
00000001 l       *ABS*	00000000              __TELIUM3__
000243c0 l       .data	00000000              LL_GetLastError_Callback
00017150 l     F .text	00000000              LL_GetLastError_Init
00000001 l       *ABS*	00000000              __TELIUM3__
000243d0 l       .data	00000000              LL_GPRS_Connect_Callback
00017174 l     F .text	00000000              LL_GPRS_Connect_Init
00000001 l       *ABS*	00000000              __TELIUM3__
000243e0 l       .data	00000000              LL_GPRS_Start_Callback
00017198 l     F .text	00000000              LL_GPRS_Start_Init
00000001 l       *ABS*	00000000              __TELIUM3__
000243f0 l       .data	00000000              LL_GSM_Start_Callback
000171bc l     F .text	00000000              LL_GSM_Start_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024400 l       .data	00000000              LL_Network_GetStatus_Callback
000171e0 l     F .text	00000000              LL_Network_GetStatus_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024410 l       .data	00000000              LL_Receive_Callback
00017204 l     F .text	00000000              LL_Receive_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024420 l       .data	00000000              LL_Send_Callback
00017228 l     F .text	00000000              LL_Send_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024a6c l     O .bss	00000004              LINKLAYER_Dll
00024a70 l     O .bss	00000004              LINKLAYER_present
00000001 l       *ABS*	00000000              __TELIUM3__
00024430 l       .data	00000000              TlvTree_AddChild_Callback
000172f4 l     F .text	00000000              TlvTree_AddChild_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024440 l       .data	00000000              TlvTree_AddChildInteger_Callback
00017318 l     F .text	00000000              TlvTree_AddChildInteger_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024450 l       .data	00000000              TlvTree_AddChildString_Callback
0001733c l     F .text	00000000              TlvTree_AddChildString_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024460 l       .data	00000000              TlvTree_New_Callback
00017360 l     F .text	00000000              TlvTree_New_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024470 l       .data	00000000              TlvTree_Release_Callback
00017384 l     F .text	00000000              TlvTree_Release_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024a74 l     O .bss	00000004              TLV_TREE_DLL_Dll
00024a78 l     O .bss	00000004              TLV_TREE_DLL_present
00024480 l       .data	00000004              function_var
00017450 l       .text	0000000e              function_name
000174a0 l       .text	00000000              .direct_call
0001748c l       .text	00000000              .bad_return
0001749e l       .text	00000000              .call_function
00017486 l       .text	00000000              .exit_return
00017496 l       .text	00000000              .already_initialized
00024484 l       .data	00000004              function_var
000174b4 l       .text	0000000d              function_name
00017504 l       .text	00000000              .direct_call
000174f0 l       .text	00000000              .bad_return
00017502 l       .text	00000000              .call_function
000174ea l       .text	00000000              .exit_return
000174fa l       .text	00000000              .already_initialized
00024488 l       .data	00000004              function_var
00017518 l       .text	00000011              function_name
00017566 l       .text	00000000              .direct_call
00017552 l       .text	00000000              .bad_return
00017564 l       .text	00000000              .call_function
0001755c l       .text	00000000              .already_initialized
0002448c l       .data	00000004              function_var
00017578 l       .text	0000000e              function_name
000175c6 l       .text	00000000              .direct_call
000175b4 l       .text	00000000              .bad_return
000175c4 l       .text	00000000              .call_function
000175ae l       .text	00000000              .exit_return
000175bc l       .text	00000000              .already_initialized
00024490 l       .data	00000004              function_var
000175d8 l       .text	0000000e              function_name
00017628 l       .text	00000000              .direct_call
00017614 l       .text	00000000              .bad_return
00017626 l       .text	00000000              .call_function
0001760e l       .text	00000000              .exit_return
0001761e l       .text	00000000              .already_initialized
00024494 l       .data	00000004              function_var
0001763c l       .text	00000010              function_name
0001768c l       .text	00000000              .direct_call
00017678 l       .text	00000000              .bad_return
0001768a l       .text	00000000              .call_function
00017672 l       .text	00000000              .exit_return
00017682 l       .text	00000000              .already_initialized
00024498 l       .data	00000004              function_var
000176a0 l       .text	00000010              function_name
000176f0 l       .text	00000000              .direct_call
000176dc l       .text	00000000              .bad_return
000176ee l       .text	00000000              .call_function
000176d6 l       .text	00000000              .exit_return
000176e6 l       .text	00000000              .already_initialized
0002449c l       .data	00000004              function_var
00017704 l       .text	00000007              function_name
00017744 l       .text	00000000              .direct_call
00017732 l       .text	00000000              .bad_return
00017742 l       .text	00000000              .call_function
0001773a l       .text	00000000              .already_initialized
000244a0 l       .data	00000004              function_var
00017754 l       .text	00000011              function_name
000177a2 l       .text	00000000              .direct_call
0001778e l       .text	00000000              .bad_return
000177a0 l       .text	00000000              .call_function
00017798 l       .text	00000000              .already_initialized
000244a4 l       .data	00000004              function_var
000177b4 l       .text	0000000f              function_name
00017804 l       .text	00000000              .direct_call
000177f0 l       .text	00000000              .bad_return
00017802 l       .text	00000000              .call_function
000177ea l       .text	00000000              .exit_return
000177fa l       .text	00000000              .already_initialized
000244a8 l       .data	00000004              function_var
00017818 l       .text	0000000a              function_name
00017864 l       .text	00000000              .direct_call
00017850 l       .text	00000000              .bad_return
00017862 l       .text	00000000              .call_function
0001784a l       .text	00000000              .exit_return
0001785a l       .text	00000000              .already_initialized
000244ac l       .data	00000004              function_var
00017878 l       .text	00000017              function_name
000178ca l       .text	00000000              .direct_call
000178b6 l       .text	00000000              .bad_return
000178c8 l       .text	00000000              .call_function
000178c0 l       .text	00000000              .already_initialized
00000000 l    df *ABS*	00000000              Telium_Pprintf.c
00000000 l    df *ABS*	00000000              Telium_Printf.c
0001792c l       .text	00000008              periph_name
00000000 l    df *ABS*	00000000              Telium_Sprintf.c
000244b0 l       .data	00000004              function_var
0001796c l       .text	00000016              function_name
000179be l       .text	00000000              .direct_call
000179aa l       .text	00000000              .bad_return
000179bc l       .text	00000000              .call_function
000179b4 l       .text	00000000              .already_initialized
000244b4 l       .data	00000004              function_var
000179d0 l       .text	00000009              function_name
00017a16 l       .text	00000000              .direct_call
00017a02 l       .text	00000000              .bad_return
00017a14 l       .text	00000000              .call_function
00017a0c l       .text	00000000              .already_initialized
000244b8 l       .data	00000004              function_var
00017a28 l       .text	0000000d              function_name
00017a72 l       .text	00000000              .direct_call
00017a5e l       .text	00000000              .bad_return
00017a70 l       .text	00000000              .call_function
00017a68 l       .text	00000000              .already_initialized
000244bc l       .data	00000004              function_var
00017a84 l       .text	00000009              function_name
00017aca l       .text	00000000              .direct_call
00017ab6 l       .text	00000000              .bad_return
00017ac8 l       .text	00000000              .call_function
00017ac0 l       .text	00000000              .already_initialized
000244c0 l       .data	00000004              function_var
00017adc l       .text	0000000a              function_name
00017b22 l       .text	00000000              .direct_call
00017b0e l       .text	00000000              .bad_return
00017b20 l       .text	00000000              .call_function
00017b18 l       .text	00000000              .already_initialized
000244c4 l       .data	00000004              function_var
00017b34 l       .text	00000009              function_name
00017b7a l       .text	00000000              .direct_call
00017b66 l       .text	00000000              .bad_return
00017b78 l       .text	00000000              .call_function
00017b70 l       .text	00000000              .already_initialized
000244c8 l       .data	00000004              function_var
00017b8c l       .text	00000008              function_name
00017bce l       .text	00000000              .direct_call
00017bba l       .text	00000000              .bad_return
00017bcc l       .text	00000000              .call_function
00017bc4 l       .text	00000000              .already_initialized
000244cc l       .data	00000004              function_var
00017be0 l       .text	00000008              function_name
00017c22 l       .text	00000000              .direct_call
00017c0e l       .text	00000000              .bad_return
00017c20 l       .text	00000000              .call_function
00017c18 l       .text	00000000              .already_initialized
000244d0 l       .data	00000004              function_var
00017c34 l       .text	0000000a              function_name
00017c7a l       .text	00000000              .direct_call
00017c66 l       .text	00000000              .bad_return
00017c78 l       .text	00000000              .call_function
00017c70 l       .text	00000000              .already_initialized
000244d4 l       .data	00000004              function_var
00017c8c l       .text	00000008              function_name
00017cce l       .text	00000000              .direct_call
00017cba l       .text	00000000              .bad_return
00017ccc l       .text	00000000              .call_function
00017cc4 l       .text	00000000              .already_initialized
000244d8 l       .data	00000004              function_var
00017cdc l       .text	0000000a              function_name
00017d22 l       .text	00000000              .direct_call
00017d0e l       .text	00000000              .bad_return
00017d20 l       .text	00000000              .call_function
00017d18 l       .text	00000000              .already_initialized
000244dc l       .data	00000004              function_var
00017d34 l       .text	0000000b              function_name
00017d7a l       .text	00000000              .direct_call
00017d66 l       .text	00000000              .bad_return
00017d78 l       .text	00000000              .call_function
00017d70 l       .text	00000000              .already_initialized
000244e0 l       .data	00000004              function_var
00017d8c l       .text	00000009              function_name
00017dd2 l       .text	00000000              .direct_call
00017dbe l       .text	00000000              .bad_return
00017dd0 l       .text	00000000              .call_function
00017dc8 l       .text	00000000              .already_initialized
000244e4 l       .data	00000004              function_var
00017de4 l       .text	00000014              function_name
00017e32 l       .text	00000000              .direct_call
00017e1e l       .text	00000000              .bad_return
00017e30 l       .text	00000000              .call_function
00017e28 l       .text	00000000              .already_initialized
000244e8 l       .data	00000004              function_var
00017e44 l       .text	0000000e              function_name
00017e8e l       .text	00000000              .direct_call
00017e7a l       .text	00000000              .bad_return
00017e8c l       .text	00000000              .call_function
00017e84 l       .text	00000000              .already_initialized
000244ec l       .data	00000004              function_var
00017ea0 l       .text	0000000a              function_name
00017ee6 l       .text	00000000              .direct_call
00017ed2 l       .text	00000000              .bad_return
00017ee4 l       .text	00000000              .call_function
00017edc l       .text	00000000              .already_initialized
000244f0 l       .data	00000004              function_var
00017ef4 l       .text	00000009              function_name
00017f3a l       .text	00000000              .direct_call
00017f26 l       .text	00000000              .bad_return
00017f38 l       .text	00000000              .call_function
00017f30 l       .text	00000000              .already_initialized
000244f4 l       .data	00000004              function_var
00017f4c l       .text	0000000b              function_name
00017f92 l       .text	00000000              .direct_call
00017f7e l       .text	00000000              .bad_return
00017f90 l       .text	00000000              .call_function
00017f88 l       .text	00000000              .already_initialized
000244f8 l       .data	00000004              function_var
00017fa4 l       .text	00000009              function_name
00017fea l       .text	00000000              .direct_call
00017fd6 l       .text	00000000              .bad_return
00017fe8 l       .text	00000000              .call_function
00017fe0 l       .text	00000000              .already_initialized
000244fc l       .data	00000004              function_var
00017ffc l       .text	00000012              function_name
0001804a l       .text	00000000              .direct_call
00018036 l       .text	00000000              .bad_return
00018048 l       .text	00000000              .call_function
00018040 l       .text	00000000              .already_initialized
00024500 l       .data	00000004              function_var
0001805c l       .text	00000012              function_name
000180aa l       .text	00000000              .direct_call
00018096 l       .text	00000000              .bad_return
000180a8 l       .text	00000000              .call_function
000180a0 l       .text	00000000              .already_initialized
00024504 l       .data	00000004              function_var
000180bc l       .text	00000010              function_name
00018106 l       .text	00000000              .direct_call
000180f2 l       .text	00000000              .bad_return
00018104 l       .text	00000000              .call_function
000180fc l       .text	00000000              .already_initialized
00024508 l       .data	00000004              function_var
00018118 l       .text	0000000d              function_name
00018162 l       .text	00000000              .direct_call
0001814e l       .text	00000000              .bad_return
00018160 l       .text	00000000              .call_function
00018158 l       .text	00000000              .already_initialized
0002450c l       .data	00000004              function_var
00018174 l       .text	00000016              function_name
000181c6 l       .text	00000000              .direct_call
000181b2 l       .text	00000000              .bad_return
000181c4 l       .text	00000000              .call_function
000181bc l       .text	00000000              .already_initialized
00024510 l       .data	00000004              function_var
000181d8 l       .text	00000010              function_name
00018222 l       .text	00000000              .direct_call
0001820e l       .text	00000000              .bad_return
00018220 l       .text	00000000              .call_function
00018218 l       .text	00000000              .already_initialized
00024514 l       .data	00000004              function_var
00018234 l       .text	0000001a              function_name
0001828a l       .text	00000000              .direct_call
00018276 l       .text	00000000              .bad_return
00018288 l       .text	00000000              .call_function
00018280 l       .text	00000000              .already_initialized
00000000 l    df *ABS*	00000000              emulationtp1.c
00000000 l    df *ABS*	00000000              extenstp1.c
00000000 l    df *ABS*	00000000              extensttrois9.c
00024a8c l     O .bss	00000004              _Telium_VfprintfAddress
00000000 l    df *ABS*	00000000              toolstp1.c
00000000 l    df *ABS*	00000000              wrappertp1.c
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Button_Create_FallBack_Present
00024520 l       .data	00000000              GL_Button_Create_Callback
000184c4 l     F .text	00000000              GL_Button_Create_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Dialog_Choice_FallBack_Present
00024530 l       .data	00000000              GL_Dialog_Choice_Callback
000184e8 l     F .text	00000000              GL_Dialog_Choice_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Dialog_Menu_FallBack_Present
00024540 l       .data	00000000              GL_Dialog_Menu_Callback
0001850c l     F .text	00000000              GL_Dialog_Menu_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Dialog_Message_FallBack_Present
00024550 l       .data	00000000              GL_Dialog_Message_Callback
00018530 l     F .text	00000000              GL_Dialog_Message_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Dialog_Password_FallBack_Present
00024560 l       .data	00000000              GL_Dialog_Password_Callback
00018554 l     F .text	00000000              GL_Dialog_Password_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Dialog_Progress_FallBack_Present
00024570 l       .data	00000000              GL_Dialog_Progress_Callback
00018578 l     F .text	00000000              GL_Dialog_Progress_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Dialog_Text_FallBack_Present
00024580 l       .data	00000000              GL_Dialog_Text_Callback
0001859c l     F .text	00000000              GL_Dialog_Text_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Dialog_VirtualKeyboard_FallBack_Present
00024590 l       .data	00000000              GL_Dialog_VirtualKeyboard_Callback
000185c0 l     F .text	00000000              GL_Dialog_VirtualKeyboard_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Document_Create_FallBack_Present
000245a0 l       .data	00000000              GL_Document_Create_Callback
000185e4 l     F .text	00000000              GL_Document_Create_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Document_Print_FallBack_Present
000245b0 l       .data	00000000              GL_Document_Print_Callback
00018608 l     F .text	00000000              GL_Document_Print_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Drawing_Clear_FallBack_Present
000245c0 l       .data	00000000              GL_Drawing_Clear_Callback
0001862c l     F .text	00000000              GL_Drawing_Clear_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Drawing_Create_FallBack_Present
000245d0 l       .data	00000000              GL_Drawing_Create_Callback
00018650 l     F .text	00000000              GL_Drawing_Create_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Drawing_DrawEllipse_FallBack_Present
000245e0 l       .data	00000000              GL_Drawing_DrawEllipse_Callback
00018674 l     F .text	00000000              GL_Drawing_DrawEllipse_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Drawing_DrawLine_FallBack_Present
000245f0 l       .data	00000000              GL_Drawing_DrawLine_Callback
00018698 l     F .text	00000000              GL_Drawing_DrawLine_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Drawing_DrawRect_FallBack_Present
00024600 l       .data	00000000              GL_Drawing_DrawRect_Callback
000186bc l     F .text	00000000              GL_Drawing_DrawRect_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Drawing_DrawText_FallBack_Present
00024610 l       .data	00000000              GL_Drawing_DrawText_Callback
000186e0 l     F .text	00000000              GL_Drawing_DrawText_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Drawing_SetBrush_FallBack_Present
00024620 l       .data	00000000              GL_Drawing_SetBrush_Callback
00018704 l     F .text	00000000              GL_Drawing_SetBrush_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Drawing_SetFont_FallBack_Present
00024630 l       .data	00000000              GL_Drawing_SetFont_Callback
00018728 l     F .text	00000000              GL_Drawing_SetFont_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Drawing_SetPen_FallBack_Present
00024640 l       .data	00000000              GL_Drawing_SetPen_Callback
0001874c l     F .text	00000000              GL_Drawing_SetPen_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_GraphicLib_BindSingleKey_FallBack_Present
00024650 l       .data	00000000              GL_GraphicLib_BindSingleKey_Callback
00018770 l     F .text	00000000              GL_GraphicLib_BindSingleKey_Init
00024aa0 l     O .bss	00000004              setStubVersion.5010
00024660 l     O .data	00000004              GL_callback
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_GraphicLib_IsTouchPresent_FallBack_Present
00024670 l       .data	00000000              GL_GraphicLib_IsTouchPresent_Callback
00018814 l     F .text	00000000              GL_GraphicLib_IsTouchPresent_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_GraphicLib_SetCharset_FallBack_Present
00024680 l       .data	00000000              GL_GraphicLib_SetCharset_Callback
00018838 l     F .text	00000000              GL_GraphicLib_SetCharset_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_GraphicLib_UnbindKey_FallBack_Present
00024690 l       .data	00000000              GL_GraphicLib_UnbindKey_Callback
0001885c l     F .text	00000000              GL_GraphicLib_UnbindKey_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Label_Create_FallBack_Present
000246a0 l       .data	00000000              GL_Label_Create_Callback
00018880 l     F .text	00000000              GL_Label_Create_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Layout_Create_FallBack_Present
000246b0 l       .data	00000000              GL_Layout_Create_Callback
000188a4 l     F .text	00000000              GL_Layout_Create_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Message_GetKey_FallBack_Present
000246c0 l       .data	00000000              GL_Message_GetKey_Callback
000188c8 l     F .text	00000000              GL_Message_GetKey_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Message_GetWidget_FallBack_Present
000246d0 l       .data	00000000              GL_Message_GetWidget_Callback
000188ec l     F .text	00000000              GL_Message_GetWidget_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Message_SetResult_FallBack_Present
000246e0 l       .data	00000000              GL_Message_SetResult_Callback
00018910 l     F .text	00000000              GL_Message_SetResult_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Message_SetUserData_FallBack_Present
000246f0 l       .data	00000000              GL_Message_SetUserData_Callback
00018934 l     F .text	00000000              GL_Message_SetUserData_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Picture_Create_FallBack_Present
00024700 l       .data	00000000              GL_Picture_Create_Callback
00018958 l     F .text	00000000              GL_Picture_Create_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Print_Create_FallBack_Present
00024710 l       .data	00000000              GL_Print_Create_Callback
0001897c l     F .text	00000000              GL_Print_Create_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Timer_Create_FallBack_Present
00024720 l       .data	00000000              GL_Timer_Create_Callback
000189a0 l     F .text	00000000              GL_Timer_Create_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Timer_SetInterval_FallBack_Present
00024730 l       .data	00000000              GL_Timer_SetInterval_Callback
000189c4 l     F .text	00000000              GL_Timer_SetInterval_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Timer_Stop_FallBack_Present
00024740 l       .data	00000000              GL_Timer_Stop_Callback
000189e8 l     F .text	00000000              GL_Timer_Stop_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_Destroy_FallBack_Present
00024750 l       .data	00000000              GL_Widget_Destroy_Callback
00018a0c l     F .text	00000000              GL_Widget_Destroy_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_GetUserData_FallBack_Present
00024760 l       .data	00000000              GL_Widget_GetUserData_Callback
00018a30 l     F .text	00000000              GL_Widget_GetUserData_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_RegisterCallback_FallBack_Present
00024770 l       .data	00000000              GL_Widget_RegisterCallback_Callback
00018a54 l     F .text	00000000              GL_Widget_RegisterCallback_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SearchId_FallBack_Present
00024780 l       .data	00000000              GL_Widget_SearchId_Callback
00018a78 l     F .text	00000000              GL_Widget_SearchId_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetBackAlign_FallBack_Present
00024790 l       .data	00000000              GL_Widget_SetBackAlign_Callback
00018a9c l     F .text	00000000              GL_Widget_SetBackAlign_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetBackColor_FallBack_Present
000247a0 l       .data	00000000              GL_Widget_SetBackColor_Callback
00018ac0 l     F .text	00000000              GL_Widget_SetBackColor_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetBorders_FallBack_Present
000247b0 l       .data	00000000              GL_Widget_SetBorders_Callback
00018ae4 l     F .text	00000000              GL_Widget_SetBorders_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetExpand_FallBack_Present
000247c0 l       .data	00000000              GL_Widget_SetExpand_Callback
00018b08 l     F .text	00000000              GL_Widget_SetExpand_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetFocusable_FallBack_Present
000247d0 l       .data	00000000              GL_Widget_SetFocusable_Callback
00018b2c l     F .text	00000000              GL_Widget_SetFocusable_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetFontName_FallBack_Present
000247e0 l       .data	00000000              GL_Widget_SetFontName_Callback
00018b50 l     F .text	00000000              GL_Widget_SetFontName_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetFontScale_FallBack_Present
000247f0 l       .data	00000000              GL_Widget_SetFontScale_Callback
00018b74 l     F .text	00000000              GL_Widget_SetFontScale_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetFontStyle_FallBack_Present
00024800 l       .data	00000000              GL_Widget_SetFontStyle_Callback
00018b98 l     F .text	00000000              GL_Widget_SetFontStyle_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetForeColor_FallBack_Present
00024810 l       .data	00000000              GL_Widget_SetForeColor_Callback
00018bbc l     F .text	00000000              GL_Widget_SetForeColor_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetGrow_FallBack_Present
00024820 l       .data	00000000              GL_Widget_SetGrow_Callback
00018be0 l     F .text	00000000              GL_Widget_SetGrow_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetId_FallBack_Present
00024830 l       .data	00000000              GL_Widget_SetId_Callback
00018c04 l     F .text	00000000              GL_Widget_SetId_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetItem_FallBack_Present
00024840 l       .data	00000000              GL_Widget_SetItem_Callback
00018c28 l     F .text	00000000              GL_Widget_SetItem_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetMargins_FallBack_Present
00024850 l       .data	00000000              GL_Widget_SetMargins_Callback
00018c4c l     F .text	00000000              GL_Widget_SetMargins_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetMinSize_FallBack_Present
00024860 l       .data	00000000              GL_Widget_SetMinSize_Callback
00018c70 l     F .text	00000000              GL_Widget_SetMinSize_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetShortcut_FallBack_Present
00024870 l       .data	00000000              GL_Widget_SetShortcut_Callback
00018c94 l     F .text	00000000              GL_Widget_SetShortcut_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetShrink_FallBack_Present
00024880 l       .data	00000000              GL_Widget_SetShrink_Callback
00018cb8 l     F .text	00000000              GL_Widget_SetShrink_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetSize_FallBack_Present
00024890 l       .data	00000000              GL_Widget_SetSize_Callback
00018cdc l     F .text	00000000              GL_Widget_SetSize_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetSource_FallBack_Present
000248a0 l       .data	00000000              GL_Widget_SetSource_Callback
00018d00 l     F .text	00000000              GL_Widget_SetSource_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetText_FallBack_Present
000248b0 l       .data	00000000              GL_Widget_SetText_Callback
00018d24 l     F .text	00000000              GL_Widget_SetText_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetTextAlign_FallBack_Present
000248c0 l       .data	00000000              GL_Widget_SetTextAlign_Callback
00018d48 l     F .text	00000000              GL_Widget_SetTextAlign_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetTextPaddings_FallBack_Present
000248d0 l       .data	00000000              GL_Widget_SetTextPaddings_Callback
00018d6c l     F .text	00000000              GL_Widget_SetTextPaddings_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetTransformation_FallBack_Present
000248e0 l       .data	00000000              GL_Widget_SetTransformation_Callback
00018d90 l     F .text	00000000              GL_Widget_SetTransformation_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetVisible_FallBack_Present
000248f0 l       .data	00000000              GL_Widget_SetVisible_Callback
00018db4 l     F .text	00000000              GL_Widget_SetVisible_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_SetWrap_FallBack_Present
00024900 l       .data	00000000              GL_Widget_SetWrap_Callback
00018dd8 l     F .text	00000000              GL_Widget_SetWrap_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Widget_UnregisterCallback_FallBack_Present
00024910 l       .data	00000000              GL_Widget_UnregisterCallback_Callback
00018dfc l     F .text	00000000              GL_Widget_UnregisterCallback_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Window_Create_FallBack_Present
00024920 l       .data	00000000              GL_Window_Create_Callback
00018e20 l     F .text	00000000              GL_Window_Create_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Window_Dispatch_FallBack_Present
00024930 l       .data	00000000              GL_Window_Dispatch_Callback
00018e44 l     F .text	00000000              GL_Window_Dispatch_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Window_GetResult_FallBack_Present
00024940 l       .data	00000000              GL_Window_GetResult_Callback
00018e68 l     F .text	00000000              GL_Window_GetResult_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00000000 l       *ABS*	00000000              GL_Window_MainLoop_FallBack_Present
00024950 l       .data	00000000              GL_Window_MainLoop_Callback
00018e8c l     F .text	00000000              GL_Window_MainLoop_Init
00024aa4 l     O .bss	00000004              GL_Dll
00024aa8 l     O .bss	00000004              GL_present
00000001 l       *ABS*	00000000              __TELIUM3__
00000001 l       *ABS*	00000000              __TELIUM3__
00024960 l       .data	00000000              OSL_Dll_Close_Callback
00018f68 l     F .text	00000000              OSL_Dll_Close_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024964 l       .data	00000000              OSL_Dll_GetSymbolByName_Callback
00018f88 l     F .text	00000000              OSL_Dll_GetSymbolByName_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024968 l       .data	00000000              OSL_Dll_IsPresent_Callback
00018fa8 l     F .text	00000000              OSL_Dll_IsPresent_Init
00000001 l       *ABS*	00000000              __TELIUM3__
0002496c l       .data	00000000              OSL_Dll_Open_Callback
00018fc8 l     F .text	00000000              OSL_Dll_Open_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024970 l       .data	00000000              OSL_Dll_OpenByAppliType_Callback
00018fe8 l     F .text	00000000              OSL_Dll_OpenByAppliType_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024974 l       .data	00000000              OSL_TimeStp_ElapsedMs_Callback
00019008 l     F .text	00000000              OSL_TimeStp_ElapsedMs_Init
00000001 l       *ABS*	00000000              __TELIUM3__
00024978 l       .data	00000000              OSL_TimeStp_Now_Callback
00019028 l     F .text	00000000              OSL_TimeStp_Now_Init
00000000 l    df *ABS*	00000000              elf-init.c
00000000 l    df *ABS*	00000000              crtstuff.c
0001b738 l     O .eh_frame	00000000              __FRAME_END__
00024014 l     O .jcr	00000000              __JCR_END__
00024a90 l     O .bss	00000004              DllGetProcAddressTools
00024330 l     O .data	0000000c              g_FileType
00018454 l     F .text	00000020              GetProcAddressWrapper
0001830c l     F .text	00000020              GetProcAddressExtens
0001829c l     F .text	00000020              GetProcAddressEmulation
00024a98 l     O .bss	00000004              wrapper_Dll
00024a94 l     O .bss	00000004              toolsDll
00008ef0 l     F .text	00000014              __stack_chk_fail
00024a88 l     O .bss	00000004              DllGetProcAddress3
000187f4 l     F .text	00000020              GL_GraphicLib_Create_Init
00024a9c l     O .bss	00000004              DllGetProcAddress55
00024a84 l     O .bss	00000004              extens_Dll
00024018 l     O .dynamic	00000000              _DYNAMIC
00024008 l       .init_array	00000000              __init_array_end
000183d8 l     F .text	00000020              GetProcAddressTools
00024000 l       .init_array	00000000              __init_array_start
00024a80 l     O .bss	00000004              DllGetProcAddressEmul
00024a7c l     O .bss	00000004              emulation_Dll
00024118 l     O .got	00000000              _GLOBAL_OFFSET_TABLE_
00000000 l       .rodata	00000000              
00008af0       F *UND*	00000000              Odm_AppGetCurrentAppliIdentifier
00017112 g     F .text	00000000              .hidden LL_Connect
0000a6a0 g     F .text	0000011c              initUIContext
00016fda g     F .text	00000000              .hidden gprs_SubmitPuk
00018b5c g     F .text	00000000              .hidden GL_Widget_SetFontName
0001853c g     F .text	00000000              .hidden GL_Dialog_Message
0000a8c4 g     F .text	000000ae              ResetPeripherals
000172bc g     F .text	00000028              .hidden LINKLAYER_GetProcAddress
00018d78 g     F .text	00000000              .hidden GL_Widget_SetTextPaddings
00018964 g     F .text	00000000              .hidden GL_Picture_Create
00008db4 g     F .text	00000004              .hidden telinux_before_main_first
00008afc       F *UND*	00000000              getpid@@GLIBC_2.4
00016fb6 g     F .text	00000000              .hidden gprs_SetPinModeFree
00019032 g     F .text	00000000              .hidden OSL_TimeStp_Now
00016f92 g     F .text	00000000              .hidden gprs_GetInformation
000170ee g     F .text	00000000              .hidden LL_Configure
00014a88 g     F .text	000000e0              .hidden FMG_DeleteFile
000171c6 g     F .text	00000000              .hidden LL_GSM_Start
00017890 g     F .text	00000000              .hidden Telium_ServiceRegister
000183f8 g     F .text	00000044              .hidden toolslib_open
000175e8 g     F .text	00000000              .hidden Telium_Stdout
0001132c g     F .text	0000009e              TimerStart
00018f92 g     F .text	00000000              .hidden OSL_Dll_GetSymbolByName
00013b58 g     F .text	0000042c              .hidden DeleteRecordMiddleWithCkecksum
000188d4 g     F .text	00000000              .hidden GL_Message_GetKey
00018d54 g     F .text	00000000              .hidden GL_Widget_SetTextAlign
00018388 g     F .text	00000050              .hidden Telium_Vfprintf
0000f070 g     F .text	0000019a              GoalPrnMultiLine
0002497c g       *ABS*	00000000              _edata
0000eb28 g     F .text	000002ae              GoalDspPicture
00016eb8 g     F .text	000000d0              .hidden md5_finish
00018c58 g     F .text	00000000              .hidden GL_Widget_SetMargins
00018868 g     F .text	00000000              .hidden GL_GraphicLib_UnbindKey
00024200  w      .data	00000000              data_start
00024980 g     O .bss	00000004              __stack_chk_guard@@GLIBC_2.4
00018ba4 g     F .text	00000000              .hidden GL_Widget_SetFontStyle
00018070 g     F .text	00000000              .hidden DisplayHeader
00018d30 g     F .text	00000000              .hidden GL_Widget_SetText
00017440 g     F .text	00000010              .hidden TLV_TREE_DLL_IsPresent
000173a8 g     F .text	00000000              .hidden TLV_TREE_DLL_InitFuncAndBranch
000190b8 g     O .rodata	00000004              _IO_stdin_used
00018638 g     F .text	00000000              .hidden GL_Drawing_Clear
0000a0d4 g     F .text	000001a0              is_for_you_after
000112d8 g     F .text	00000052              AppliExist
0001843c g     F .text	00000018              .hidden toolslib_close
0000dbec g     F .text	000002c2              GoalGetKey
00018a18 g     F .text	00000000              .hidden GL_Widget_Destroy
00017ce8 g     F .text	00000000              .hidden FS_unlink
000099a8 g     F .text	000000bc              consult
00018dc0 g     F .text	00000000              .hidden GL_Widget_SetVisible
0001888c g     F .text	00000000              .hidden GL_Label_Create
00018af0 g     F .text	00000000              .hidden GL_Widget_SetBorders
00018bec g     F .text	00000000              .hidden GL_Widget_SetGrow
00018988 g     F .text	00000000              .hidden GL_Print_Create
00008b08       F *UND*	00000000              iniparser_getint
00018e50 g     F .text	00000000              .hidden GL_Window_Dispatch
00008da4 g     F .text	00000010              .hidden main
00018b14 g     F .text	00000000              .hidden GL_Widget_SetExpand
00018f5a g     F .text	00000000              .hidden GL_Swi_DllLink
00017b94 g     F .text	00000000              .hidden FS_open
00015834 g     F .text	00000484              .hidden FMG_ReadRecord
00018370 g     F .text	00000018              .hidden extenslib_close
00018128 g     F .text	00000000              .hidden IsFooter
00018d0c g     F .text	00000000              .hidden GL_Widget_SetSource
0001708c g     F .text	00000010              .hidden LIBGPRS_IsPresent
00025bec g       *ABS*	00000000              __end__
0000bc00 g     F .text	0000074a              PromptGPRS
00017ae8 g     F .text	00000000              .hidden FS_length
00024ab8 g     O .bss	00001134              g_sFileManagement
0001865c g     F .text	00000000              .hidden GL_Drawing_Create
00024988 g     O .bss	00000004              gGoalGraphicLibInstance
0001486c g     F .text	00000058              .hidden FMG_GetFileDescription
0000edd8 g     F .text	00000040              GoalDestroyPicture
00024204 g     O .data	00000000              .hidden __dso_handle
00011454 g     F .text	0000005e              TimerStop
0000e5ec g     F .text	0000019c              GoalDrawText
0001720e g     F .text	00000000              .hidden LL_Receive
0000a52c g     F .text	00000174              menuGoalDisplay
00018cc4 g     F .text	00000000              .hidden GL_Widget_SetShrink
00017f58 g     F .text	00000000              .hidden first_init
000184d0 g     F .text	00000000              .hidden GL_Button_Create
00011044 g     F .text	00000082              parseStr
00008b14       F *UND*	00000000              atoi@@GLIBC_2.4
00018eb0 g     F .text	00000060              .hidden GL_GetProcAddressWithoutExit
00009c8c g     F .text	00000098              modif_param
00017768 g     F .text	00000000              .hidden Telium_Read_date
00018844 g     F .text	00000000              .hidden GL_GraphicLib_SetCharset
00008b20       F *UND*	00000000              Odm_AppGetAppliTypeFromAppId
000154e8 g     F .text	0000034c              .hidden FMG_ModifyRecord
000185cc g     F .text	00000000              .hidden GL_Dialog_VirtualKeyboard
0000f3bc g     F .text	00000154              appReset
000173b8 g     F .text	00000060              .hidden TLV_TREE_DLL_GetProcAddressWithoutExit
00017824 g     F .text	00000000              .hidden IsPrinter
00011c3c g     F .text	0000041c              .hidden AddModifyRecordBeginWithCkecksum
00009208 g     F .text	0000006a              give_your_domain
00008b2c       F *UND*	00000000              memset@@GLIBC_2.4
00017064 g     F .text	00000028              .hidden LIBGPRS_GetProcAddress
000249e0 g     O .bss	00000004              hTsc
00008b38       F *UND*	00000000              Sap_trace_debug
00018518 g     F .text	00000000              .hidden GL_Dialog_Menu
000190b0 g     F .fini	00000000              _fini
000150e0 g     F .text	0000007c              .hidden FMG_CheckRecordCoherence
00017418 g     F .text	00000028              .hidden TLV_TREE_DLL_GetProcAddress
000098b8 g     F .text	000000f0              state
0000f384 g     F .text	00000038              getAppCmpTim
00017004 g     F .text	00000060              .hidden LIBGPRS_GetProcAddressWithoutExit
0001877c g     F .text	00000000              .hidden GL_GraphicLib_BindSingleKey
00008b44       F *UND*	00000000              snprintf@@GLIBC_2.4
00014664 g     F .text	00000208              .hidden FMG_Init
00018ff2 g     F .text	00000000              .hidden OSL_Dll_OpenByAppliType
00011684 g     F .text	0000008c              .hidden CreateOrMountDisk
00018e2c g     F .text	00000000              .hidden GL_Window_Create
00025bec g       *ABS*	00000000              __bss_end__
0001752c g     F .text	00000000              .hidden Telium_Reset_buf
0001891c g     F .text	00000000              .hidden GL_Message_SetResult
00013f84 g     F .text	0000033c              .hidden DeleteRecordEnd
00015cb8 g     F .text	00000314              .hidden FMG_DeleteRecord
0000deb0 g     F .text	00000040              GoalDestroyScreen
00018aa8 g     F .text	00000000              .hidden GL_Widget_SetBackAlign
00008b50       F *UND*	00000000              abort@@GLIBC_2.4
00016d2c g     F .text	00000074              .hidden md5_init
00014d8c g     F .text	00000110              .hidden FMG_DeleteFileType
0000fd64 g     F .text	000003a8              FMGReadTransactions
00018710 g     F .text	00000000              .hidden GL_Drawing_SetBrush
00018820 g     F .text	00000000              .hidden GL_GraphicLib_IsTouchPresent
00008b5c       F *UND*	00000000              pause@@GLIBC_2.4
00017588 g     F .text	00000000              .hidden Telium_Status
0000def0 g     F .text	000001d4              GoalCreateDrawing
00010f80 g     F .text	000000c2              CheckParity
000249e4 g     O .bss	00000004              hPrn
00018b38 g     F .text	00000000              .hidden GL_Widget_SetFocusable
000186c8 g     F .text	00000000              .hidden GL_Drawing_DrawRect
00025bec g       *ABS*	00000000              _bss_end__
000129a0 g     F .text	000004bc              .hidden AddModifyRecordEnd
000184ac g     F .text	00000018              .hidden wrapperlib_close
00017a90 g     F .text	00000000              .hidden FS_exist
000185a8 g     F .text	00000000              .hidden GL_Dialog_Text
0001764c g     F .text	00000000              .hidden Telium_Stdperif
0000965c g     F .text	00000060              is_state
000176b0 g     F .text	00000000              .hidden Telium_Ttestall
000142c0 g     F .text	0000034c              .hidden DeleteRecordEndWithCkecksum
000184f4 g     F .text	00000000              .hidden GL_Dialog_Choice
00008b6c       F *UND*	00000000              kill@@GLIBC_2.4
0001770c g     F .text	00000000              .hidden buzzer
00009f68 g     F .text	000000bc              message_received
00011148 g     F .text	00000126              IpToUint
00008b78       F *UND*	00000000              COREDBG_StackOverFlowSet
00008b84       F *UND*	00000000              strcpy@@GLIBC_2.4
00018c10 g     F .text	00000000              .hidden GL_Widget_SetId
0001738e g     F .text	00000000              .hidden TlvTree_Release
00018b80 g     F .text	00000000              .hidden GL_Widget_SetFontScale
00012470 g     F .text	00000530              .hidden AddModifyRecordMiddleWithCkecksum
00017934 g     F .text	00000000              .hidden Telium_Stdprt
00008f04 g     F .text	000002c2              Main
00008ddc g     F .text	00000000              _start
00008b90       F *UND*	00000000              iniparser_freedict
000151d0 g     F .text	00000318              .hidden FMG_AddRecord
00017460 g     F .text	00000000              .hidden Telium_Fclose
0000d928 g     F .text	000002c4              GoalDspMultiLine
0000d34c g     F .text	000001fc              GoalClrScreen
000178dc g     F .text	0000002e              .hidden Telium_Pprintf
00018ca0 g     F .text	00000000              .hidden GL_Widget_SetShortcut
000095bc g     F .text	000000a0              is_name
00017d40 g     F .text	00000000              .hidden FS_unmount
0000f974 g     F .text	000003f0              FMGAddDelTransactions
000181e8 g     F .text	00000000              .hidden Telium_Exit
00018f3c g     F .text	00000000              .hidden GL_InitFuncAndBranch
00018d9c g     F .text	00000000              .hidden GL_Widget_SetTransformation
00009b80 g     F .text	00000066              time_function
000189f4 g     F .text	00000000              .hidden GL_Timer_Stop
0000a7bc g     F .text	00000108              releaseUIContext
00024aac g     O .bss	00000004              sSavedStatusHeader
00008b9c       F *UND*	00000000              strcat@@GLIBC_2.4
000113cc g     F .text	00000086              TimerGet
00017136 g     F .text	00000000              .hidden LL_Disconnect
0001460c g     F .text	00000058              .hidden IsFileEmpty
00017b40 g     F .text	00000000              .hidden FS_mount
0000c34c g     F .text	00000b34              ComGPRS
000182bc g     F .text	00000038              .hidden emulationlib_open
0000f5dc g     F .text	000000da              appGet
000114b4 g     F .text	000001d0              Timer
00011710 g     F .text	000000c4              .hidden SaveMangementFile
00009b20 g     F .text	00000060              is_time_function
0000e0c4 g     F .text	0000011e              GoalClrDrawing
00008ad0 g     F .init	00000000              _init
00008ba8       F *UND*	00000000              OSL_Logger_Log
00019012 g     F .text	00000000              .hidden OSL_TimeStp_ElapsedMs
00018a3c g     F .text	00000000              .hidden GL_Widget_GetUserData
00018c34 g     F .text	00000000              .hidden GL_Widget_SetItem
0002497c g     O .data	00000000              .hidden __TMC_END__
0001724c g     F .text	00000000              .hidden LINKLAYER_InitFuncAndBranch
00008ca0 g     F .text	0000003c              .hidden telinux_after_main_last
00008bb4       F *UND*	00000000              access@@GLIBC_2.4
00016ff4 g     F .text	00000000              .hidden LIBGPRS_InitFuncAndBranch
0000e9c8 g     F .text	00000160              GoalClrPicture
00009dc4 g     F .text	000001a4              file_received
00009d84 g     F .text	00000040              is_delete
00017346 g     F .text	00000000              .hidden TlvTree_AddChildString
00000000  w      *UND*	00000000              _Jv_RegisterClasses
000177c4 g     F .text	00000000              .hidden IsColorDisplay
00016da0 g     F .text	00000118              .hidden md5_append
00018de4 g     F .text	00000000              .hidden GL_Widget_SetWrap
0000a084 g     F .text	0000004e              card_inside
00013818 g     F .text	00000340              .hidden DeleteRecordMiddle
0000ee18 g     F .text	00000078              GoalCreateDocument
00017c94 g     F .text	00000000              .hidden FS_seek
0000d010 g     F .text	0000033c              GoalCreateScreen
00017984 g     F .text	00000000              .hidden ApplicationGetCurrent
0001832c g     F .text	00000044              .hidden extenslib_open
0001010c g     F .text	000001d0              FMG_ErrorMsg
00018bc8 g     F .text	00000000              .hidden GL_Widget_SetForeColor
000134e8 g     F .text	00000330              .hidden DeleteRecordBeginWithCkecksum
00018758 g     F .text	00000000              .hidden GL_Drawing_SetPen
0001790a g     F .text	00000020              .hidden Telium_Printf
00009780 g     F .text	0000003e              more_function
000189d0 g     F .text	00000000              .hidden GL_Timer_SetInterval
0000f510 g     F .text	000000ca              appPut
0000e7c8 g     F .text	000001fe              GoalCreatePicture
00008bc4       F *UND*	00000000              Stapp_LegacyInstall
00009274 g     F .text	00000346              after_reset
000171ea g     F .text	00000000              .hidden LL_Network_GetStatus
000186a4 g     F .text	00000000              .hidden GL_Drawing_DrawLine
00009be8 g     F .text	000000a4              is_change_init
0001717e g     F .text	00000000              .hidden LL_GPRS_Connect
0002497c g       *ABS*	00000000              __bss_start__
000189ac g     F .text	00000000              .hidden GL_Timer_Create
0000f20c g     F .text	000000a8              GoalPrnPicture
000172fe g     F .text	00000000              .hidden TlvTree_AddChild
0000a460 g     F .text	000000ca              entry
00024200 g       .data	00000000              __data_start
00010e9c g     F .text	000000e2              SetParity
00025bec g       *ABS*	00000000              _end
00017eac g     F .text	00000000              .hidden PageAlloc
00017df8 g     F .text	00000000              .hidden ObjectGetDescriptor
0000e1e4 g     F .text	00000146              GoalDrawLine
000171a2 g     F .text	00000000              .hidden LL_GPRS_Start
00017fb0 g     F .text	00000000              .hidden raz_init
0001191c g     F .text	00000320              .hidden AddModifyRecordBegin
000148c4 g     F .text	000001c4              .hidden FMG_CreateFile
00018fd2 g     F .text	00000000              .hidden OSL_Dll_Open
000180cc g     F .text	00000000              .hidden DisplayLeds
00018474 g     F .text	00000038              .hidden wrapperlib_open
00008bd0       F *UND*	00000000              memcpy@@GLIBC_2.4
000117d4 g     F .text	000000ac              .hidden ExtraireFileID
00018f10 g     F .text	0000001c              .hidden GL_GetProcAddress
00013274 g     F .text	00000274              .hidden DeleteRecordBegin
0002497c g       *ABS*	00000000              __bss_start
0001818c g     F .text	00000000              .hidden IsHeader
000102dc g     F .text	0000070c              LL_ErrorMsg
00024ab0 g     O .bss	00000004              sSavedStatusLeds
00014b68 g     F .text	00000224              .hidden FMG_CreateFileType
000110c8 g     F .text	00000080              UintToIp
00018fb2 g     F .text	00000000              .hidden OSL_Dll_IsPresent
000174c4 g     F .text	00000000              .hidden Telium_Fopen
00008bdc       F *UND*	00000000              strlen@@GLIBC_2.4
0000a3ec g     F .text	00000072              give_interface
000096bc g     F .text	000000c2              idle_message
00011880 g     F .text	0000009c              .hidden DeleteFileFromTable
00008be8       F *UND*	00000000              Sys_GetMode
00008bf4       F *UND*	00000000              Stapp_LegacyInstall_end
00019048 g     F .text	00000064              .hidden __libc_csu_init
0001736a g     F .text	00000000              .hidden TlvTree_New
00014e9c g     F .text	00000244              .hidden FMG_CheckFileCoherence
00008c00       F *UND*	00000000              OSL_InitFuncAndBranch
0000f2b4 g     F .text	00000058              GoalPrnDocument
00018a84 g     F .text	00000000              .hidden GL_Widget_SearchId
00008c0c       F *UND*	00000000              sprintf@@GLIBC_2.4
0001715a g     F .text	00000000              .hidden LL_GetLastError
0000f7bc g     F .text	000000be              FMGDeleteBatch
00008c18       F *UND*	00000000              Oem_upload_diagnostic_txt
0001794c g     F .text	00000020              .hidden Telium_Sprintf
00012058 g     F .text	00000418              .hidden AddModifyRecordMiddle
00018a60 g     F .text	00000000              .hidden GL_Widget_RegisterCallback
000170ca g     F .text	00000000              .hidden LL_ClearSendBuffer
00018614 g     F .text	00000000              .hidden GL_Document_Print
0000d580 g     F .text	000003a6              GoalDspLine
00018010 g     F .text	00000000              .hidden DisplayFooter
00017a38 g     F .text	00000000              .hidden FS_dskcreate
00011270 g     F .text	00000068              ParamExist
00018ce8 g     F .text	00000000              .hidden GL_Widget_SetSize
00018584 g     F .text	00000000              .hidden GL_Dialog_Progress
00017232 g     F .text	00000000              .hidden LL_Send
00017322 g     F .text	00000000              .hidden TlvTree_AddChildInteger
0000e788 g     F .text	00000040              GoalDestroyDrawing
00000000       O *UND*	00000000              __libc_enable_secure@@GLIBC_PRIVATE
00012e5c g     F .text	00000418              .hidden AddModifyRecordEndWithCkecksum
00008c28       F *UND*	00000000              Stapp_LegacyUninstall
00008c34       F *UND*	00000000              strcmp@@GLIBC_2.4
00017e54 g     F .text	00000000              .hidden ObjectGetInfo
000170a6 g     F .text	00000000              .hidden LL_ClearReceiveBuffer
0000a274 g     F .text	00000176              debit_non_emv
000097c0 g     F .text	000000f8              keyboard_event
00008cdc g     F .text	000000c8              .hidden telinux_gmon_dump_prepare
00024ab4 g     O .bss	00000004              sSavedStatusFooter
00018f4c g     F .text	00000000              .hidden GL_Swi_ObjectLoad
00018c7c g     F .text	00000000              .hidden GL_Widget_SetMinSize
0000f6b8 g     F .text	00000104              FMGCreateBatch
00018f2c g     F .text	00000010              .hidden GL_IsPresent
00008c40       F *UND*	00000000              strncpy@@GLIBC_2.4
00018acc g     F .text	00000000              .hidden GL_Widget_SetBackColor
00017f00 g     F .text	00000000              .hidden PageFree
0001725c g     F .text	00000060              .hidden LINKLAYER_GetProcAddressWithoutExit
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
00008c4c       F *UND*	00000000              memcmp@@GLIBC_2.4
00017d98 g     F .text	00000000              .hidden FS_write
0000d548 g     F .text	00000038              GoalRefreshScreen
000179dc g     F .text	00000000              .hidden FS_close
000190ac g     F .text	00000004              .hidden __libc_csu_fini
00018734 g     F .text	00000000              .hidden GL_Drawing_SetFont
000109e8 g     F .text	000002b0              SEC_ErrorMsg
0000e48c g     F .text	0000015e              GoalDrawEllipse
00017c40 g     F .text	00000000              .hidden FS_rename
00018e98 g     F .text	00000000              .hidden GL_Window_MainLoop
00017be8 g     F .text	00000000              .hidden FS_read
000188f8 g     F .text	00000000              .hidden GL_Message_GetWidget
00009a64 g     F .text	000000bc              mcall
000188b0 g     F .text	00000000              .hidden GL_Layout_Create
00008c58       F *UND*	00000000              getenv@@GLIBC_2.4
00008c64       F *UND*	00000000              __libc_start_main@@GLIBC_2.4
000185f0 g     F .text	00000000              .hidden GL_Document_Create
0000a024 g     F .text	00000060              is_card_specific
0000f30c g     F .text	00000040              GoalDestroyDocument
00008c70       F *UND*	00000000              vsprintf@@GLIBC_2.4
00008c7c       F *UND*	00000000              iniparser_load
00000000  w      *UND*	00000000              __gmon_start__
000186ec g     F .text	00000000              .hidden GL_Drawing_DrawText
00009d24 g     F .text	00000060              is_evol_pg
00018e08 g     F .text	00000000              .hidden GL_Widget_UnregisterCallback
00018f72 g     F .text	00000000              .hidden OSL_Dll_Close
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
0001515c g     F .text	00000074              .hidden FMG_CalculMD5
00018940 g     F .text	00000000              .hidden GL_Message_SetUserData
00008c94       F *UND*	00000000              strchr@@GLIBC_2.4
00018560 g     F .text	00000000              .hidden GL_Dialog_Password
00018e74 g     F .text	00000000              .hidden GL_Window_GetResult
0000ee90 g     F .text	000001de              GoalPrnLine
00018794 g     F .text	00000060              .hidden GL_GraphicLib_Create
000182f4 g     F .text	00000018              .hidden emulationlib_close
0000e32c g     F .text	0000015e              GoalDrawRect
00010c98 g     F .text	000000c0              OpenConverter
00018250 g     F .text	00000000              .hidden upload_diagnostic_txt
0000f34c g     F .text	00000038              getAppCmpDat
000172e4 g     F .text	00000010              .hidden LINKLAYER_IsPresent
00018680 g     F .text	00000000              .hidden GL_Drawing_DrawEllipse



Disassembly of section .init:

00008ad0 <_init>:
    8ad0:	e92d4008 	push	{r3, lr}
    8ad4:	eb0000b7 	bl	8db8 <call_gmon_start>
    8ad8:	e8bd8008 	pop	{r3, pc}

Disassembly of section .plt:

00008adc <.plt>:
    8adc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8ae0:	e59fe004 	ldr	lr, [pc, #4]	; 8aec <_init+0x1c>
    8ae4:	e08fe00e 	add	lr, pc, lr
    8ae8:	e5bef008 	ldr	pc, [lr, #8]!
    8aec:	0001b62c 	.word	0x0001b62c
    8af0:	e28fc600 	add	ip, pc, #0
    8af4:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8af8:	e5bcf62c 	ldr	pc, [ip, #1580]!	; 0x62c
    8afc:	e28fc600 	add	ip, pc, #0
    8b00:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8b04:	e5bcf624 	ldr	pc, [ip, #1572]!	; 0x624
    8b08:	e28fc600 	add	ip, pc, #0
    8b0c:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8b10:	e5bcf61c 	ldr	pc, [ip, #1564]!	; 0x61c
    8b14:	e28fc600 	add	ip, pc, #0
    8b18:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8b1c:	e5bcf614 	ldr	pc, [ip, #1556]!	; 0x614
    8b20:	e28fc600 	add	ip, pc, #0
    8b24:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8b28:	e5bcf60c 	ldr	pc, [ip, #1548]!	; 0x60c
    8b2c:	e28fc600 	add	ip, pc, #0
    8b30:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8b34:	e5bcf604 	ldr	pc, [ip, #1540]!	; 0x604
    8b38:	e28fc600 	add	ip, pc, #0
    8b3c:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8b40:	e5bcf5fc 	ldr	pc, [ip, #1532]!	; 0x5fc
    8b44:	e28fc600 	add	ip, pc, #0
    8b48:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8b4c:	e5bcf5f4 	ldr	pc, [ip, #1524]!	; 0x5f4
    8b50:	e28fc600 	add	ip, pc, #0
    8b54:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8b58:	e5bcf5ec 	ldr	pc, [ip, #1516]!	; 0x5ec
    8b5c:	e28fc600 	add	ip, pc, #0
    8b60:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8b64:	e5bcf5e4 	ldr	pc, [ip, #1508]!	; 0x5e4
    8b68:	4778      	bx	pc
    8b6a:	46c0      	nop			; (mov r8, r8)
    8b6c:	e28fc600 	add	ip, pc, #0
    8b70:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8b74:	e5bcf5d8 	ldr	pc, [ip, #1496]!	; 0x5d8
    8b78:	e28fc600 	add	ip, pc, #0
    8b7c:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8b80:	e5bcf5d0 	ldr	pc, [ip, #1488]!	; 0x5d0
    8b84:	e28fc600 	add	ip, pc, #0
    8b88:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8b8c:	e5bcf5c8 	ldr	pc, [ip, #1480]!	; 0x5c8
    8b90:	e28fc600 	add	ip, pc, #0
    8b94:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8b98:	e5bcf5c0 	ldr	pc, [ip, #1472]!	; 0x5c0
    8b9c:	e28fc600 	add	ip, pc, #0
    8ba0:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8ba4:	e5bcf5b8 	ldr	pc, [ip, #1464]!	; 0x5b8
    8ba8:	e28fc600 	add	ip, pc, #0
    8bac:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8bb0:	e5bcf5b0 	ldr	pc, [ip, #1456]!	; 0x5b0
    8bb4:	e28fc600 	add	ip, pc, #0
    8bb8:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8bbc:	e5bcf5a8 	ldr	pc, [ip, #1448]!	; 0x5a8
    8bc0:	4778      	bx	pc
    8bc2:	46c0      	nop			; (mov r8, r8)
    8bc4:	e28fc600 	add	ip, pc, #0
    8bc8:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8bcc:	e5bcf59c 	ldr	pc, [ip, #1436]!	; 0x59c
    8bd0:	e28fc600 	add	ip, pc, #0
    8bd4:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8bd8:	e5bcf594 	ldr	pc, [ip, #1428]!	; 0x594
    8bdc:	e28fc600 	add	ip, pc, #0
    8be0:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8be4:	e5bcf58c 	ldr	pc, [ip, #1420]!	; 0x58c
    8be8:	e28fc600 	add	ip, pc, #0
    8bec:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8bf0:	e5bcf584 	ldr	pc, [ip, #1412]!	; 0x584
    8bf4:	e28fc600 	add	ip, pc, #0
    8bf8:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8bfc:	e5bcf57c 	ldr	pc, [ip, #1404]!	; 0x57c
    8c00:	e28fc600 	add	ip, pc, #0
    8c04:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8c08:	e5bcf574 	ldr	pc, [ip, #1396]!	; 0x574
    8c0c:	e28fc600 	add	ip, pc, #0
    8c10:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8c14:	e5bcf56c 	ldr	pc, [ip, #1388]!	; 0x56c
    8c18:	e28fc600 	add	ip, pc, #0
    8c1c:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8c20:	e5bcf564 	ldr	pc, [ip, #1380]!	; 0x564
    8c24:	4778      	bx	pc
    8c26:	46c0      	nop			; (mov r8, r8)
    8c28:	e28fc600 	add	ip, pc, #0
    8c2c:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8c30:	e5bcf558 	ldr	pc, [ip, #1368]!	; 0x558
    8c34:	e28fc600 	add	ip, pc, #0
    8c38:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8c3c:	e5bcf550 	ldr	pc, [ip, #1360]!	; 0x550
    8c40:	e28fc600 	add	ip, pc, #0
    8c44:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8c48:	e5bcf548 	ldr	pc, [ip, #1352]!	; 0x548
    8c4c:	e28fc600 	add	ip, pc, #0
    8c50:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8c54:	e5bcf540 	ldr	pc, [ip, #1344]!	; 0x540
    8c58:	e28fc600 	add	ip, pc, #0
    8c5c:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8c60:	e5bcf538 	ldr	pc, [ip, #1336]!	; 0x538
    8c64:	e28fc600 	add	ip, pc, #0
    8c68:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8c6c:	e5bcf530 	ldr	pc, [ip, #1328]!	; 0x530
    8c70:	e28fc600 	add	ip, pc, #0
    8c74:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8c78:	e5bcf528 	ldr	pc, [ip, #1320]!	; 0x528
    8c7c:	e28fc600 	add	ip, pc, #0
    8c80:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8c84:	e5bcf520 	ldr	pc, [ip, #1312]!	; 0x520
    8c88:	e28fc600 	add	ip, pc, #0
    8c8c:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8c90:	e5bcf518 	ldr	pc, [ip, #1304]!	; 0x518
    8c94:	e28fc600 	add	ip, pc, #0
    8c98:	e28cca1b 	add	ip, ip, #110592	; 0x1b000
    8c9c:	e5bcf510 	ldr	pc, [ip, #1296]!	; 0x510

Disassembly of section .text:

00008ca0 <telinux_after_main_last>:
    8ca0:	480b      	ldr	r0, [pc, #44]	; (8cd0 <telinux_after_main_last+0x30>)
    8ca2:	b510      	push	{r4, lr}
    8ca4:	490b      	ldr	r1, [pc, #44]	; (8cd4 <telinux_after_main_last+0x34>)
    8ca6:	4a0c      	ldr	r2, [pc, #48]	; (8cd8 <telinux_after_main_last+0x38>)
    8ca8:	b084      	sub	sp, #16
    8caa:	4478      	add	r0, pc
    8cac:	2459      	movs	r4, #89	; 0x59
    8cae:	4479      	add	r1, pc
    8cb0:	447a      	add	r2, pc
    8cb2:	2300      	movs	r3, #0
    8cb4:	9003      	str	r0, [sp, #12]
    8cb6:	9101      	str	r1, [sp, #4]
    8cb8:	9200      	str	r2, [sp, #0]
    8cba:	9402      	str	r4, [sp, #8]
    8cbc:	461a      	mov	r2, r3
    8cbe:	2111      	movs	r1, #17
    8cc0:	2007      	movs	r0, #7
    8cc2:	f7ff ef3a 	blx	8b38 <_init+0x68>
    8cc6:	b004      	add	sp, #16
    8cc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    8ccc:	f7ff bfaa 	b.w	8c24 <_init+0x154>
    8cd0:	000129fa 	.word	0x000129fa
    8cd4:	000129de 	.word	0x000129de
    8cd8:	00012a14 	.word	0x00012a14

00008cdc <telinux_gmon_dump_prepare>:
    8cdc:	4a2b      	ldr	r2, [pc, #172]	; (8d8c <telinux_gmon_dump_prepare+0xb0>)
    8cde:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    8ce2:	492b      	ldr	r1, [pc, #172]	; (8d90 <telinux_gmon_dump_prepare+0xb4>)
    8ce4:	447a      	add	r2, pc
    8ce6:	4b2b      	ldr	r3, [pc, #172]	; (8d94 <telinux_gmon_dump_prepare+0xb8>)
    8ce8:	5854      	ldr	r4, [r2, r1]
    8cea:	b08e      	sub	sp, #56	; 0x38
    8cec:	6821      	ldr	r1, [r4, #0]
    8cee:	910d      	str	r1, [sp, #52]	; 0x34
    8cf0:	58d5      	ldr	r5, [r2, r3]
    8cf2:	682b      	ldr	r3, [r5, #0]
    8cf4:	b933      	cbnz	r3, 8d04 <telinux_gmon_dump_prepare+0x28>
    8cf6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    8cf8:	6823      	ldr	r3, [r4, #0]
    8cfa:	429a      	cmp	r2, r3
    8cfc:	d143      	bne.n	8d86 <telinux_gmon_dump_prepare+0xaa>
    8cfe:	b00e      	add	sp, #56	; 0x38
    8d00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    8d04:	4824      	ldr	r0, [pc, #144]	; (8d98 <telinux_gmon_dump_prepare+0xbc>)
    8d06:	4478      	add	r0, pc
    8d08:	f7ff efa6 	blx	8c58 <_init+0x188>
    8d0c:	2800      	cmp	r0, #0
    8d0e:	d0f2      	beq.n	8cf6 <telinux_gmon_dump_prepare+0x1a>
    8d10:	a804      	add	r0, sp, #16
    8d12:	f7ff ef6a 	blx	8be8 <_init+0x118>
    8d16:	4606      	mov	r6, r0
    8d18:	2800      	cmp	r0, #0
    8d1a:	d1ec      	bne.n	8cf6 <telinux_gmon_dump_prepare+0x1a>
    8d1c:	9b04      	ldr	r3, [sp, #16]
    8d1e:	2b00      	cmp	r3, #0
    8d20:	d0e9      	beq.n	8cf6 <telinux_gmon_dump_prepare+0x1a>
    8d22:	4f1e      	ldr	r7, [pc, #120]	; (8d9c <telinux_gmon_dump_prepare+0xc0>)
    8d24:	f7ff eee4 	blx	8af0 <_init+0x20>
    8d28:	f10d 020e 	add.w	r2, sp, #14
    8d2c:	a903      	add	r1, sp, #12
    8d2e:	447f      	add	r7, pc
    8d30:	f7ff eef6 	blx	8b20 <_init+0x50>
    8d34:	4631      	mov	r1, r6
    8d36:	4638      	mov	r0, r7
    8d38:	f7ff ef3c 	blx	8bb4 <_init+0xe4>
    8d3c:	4606      	mov	r6, r0
    8d3e:	2800      	cmp	r0, #0
    8d40:	d1d9      	bne.n	8cf6 <telinux_gmon_dump_prepare+0x1a>
    8d42:	4638      	mov	r0, r7
    8d44:	f7ff ef9a 	blx	8c7c <_init+0x1ac>
    8d48:	4607      	mov	r7, r0
    8d4a:	2800      	cmp	r0, #0
    8d4c:	d0d3      	beq.n	8cf6 <telinux_gmon_dump_prepare+0x1a>
    8d4e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
    8d52:	f10d 0814 	add.w	r8, sp, #20
    8d56:	9200      	str	r2, [sp, #0]
    8d58:	4a11      	ldr	r2, [pc, #68]	; (8da0 <telinux_gmon_dump_prepare+0xc4>)
    8d5a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
    8d5e:	4640      	mov	r0, r8
    8d60:	447a      	add	r2, pc
    8d62:	2120      	movs	r1, #32
    8d64:	f7ff eeee 	blx	8b44 <_init+0x74>
    8d68:	4641      	mov	r1, r8
    8d6a:	f04f 32ff 	mov.w	r2, #4294967295
    8d6e:	4638      	mov	r0, r7
    8d70:	f7ff eeca 	blx	8b08 <_init+0x38>
    8d74:	4680      	mov	r8, r0
    8d76:	4638      	mov	r0, r7
    8d78:	f7ff ef0a 	blx	8b90 <_init+0xc0>
    8d7c:	f1b8 0f00 	cmp.w	r8, #0
    8d80:	d0b9      	beq.n	8cf6 <telinux_gmon_dump_prepare+0x1a>
    8d82:	602e      	str	r6, [r5, #0]
    8d84:	e7b7      	b.n	8cf6 <telinux_gmon_dump_prepare+0x1a>
    8d86:	f000 f8b3 	bl	8ef0 <__stack_chk_fail>
    8d8a:	bf00      	nop
    8d8c:	0001b430 	.word	0x0001b430
    8d90:	000000a0 	.word	0x000000a0
    8d94:	000000d4 	.word	0x000000d4
    8d98:	000129da 	.word	0x000129da
    8d9c:	000129c2 	.word	0x000129c2
    8da0:	000129b4 	.word	0x000129b4

00008da4 <main>:
    8da4:	b508      	push	{r3, lr}
    8da6:	f001 fb5b 	bl	a460 <entry>
    8daa:	f7ff ef24 	blx	8bf4 <_init+0x124>
    8dae:	f7ff eed6 	blx	8b5c <_init+0x8c>
    8db2:	e7fc      	b.n	8dae <main+0xa>

00008db4 <telinux_before_main_first>:
    8db4:	f7ff bf04 	b.w	8bc0 <_init+0xf0>

00008db8 <call_gmon_start>:
    8db8:	e59f3014 	ldr	r3, [pc, #20]	; 8dd4 <call_gmon_start+0x1c>
    8dbc:	e59f2014 	ldr	r2, [pc, #20]	; 8dd8 <call_gmon_start+0x20>
    8dc0:	e08f3003 	add	r3, pc, r3
    8dc4:	e7933002 	ldr	r3, [r3, r2]
    8dc8:	e3530000 	cmp	r3, #0
    8dcc:	012fff1e 	bxeq	lr
    8dd0:	eaffffac 	b	8c88 <_init+0x1b8>
    8dd4:	0001b350 	.word	0x0001b350
    8dd8:	000000dc 	.word	0x000000dc

00008ddc <_start>:
    8ddc:	e3a0b000 	mov	fp, #0
    8de0:	e3a0e000 	mov	lr, #0
    8de4:	e49d1004 	pop	{r1}		; (ldr r1, [sp], #4)
    8de8:	e1a0200d 	mov	r2, sp
    8dec:	e52d2004 	push	{r2}		; (str r2, [sp, #-4]!)
    8df0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    8df4:	e59fc010 	ldr	ip, [pc, #16]	; 8e0c <_start+0x30>
    8df8:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)
    8dfc:	e59f000c 	ldr	r0, [pc, #12]	; 8e10 <_start+0x34>
    8e00:	e59f300c 	ldr	r3, [pc, #12]	; 8e14 <_start+0x38>
    8e04:	ebffff96 	bl	8c64 <_init+0x194>
    8e08:	ebffff50 	bl	8b50 <_init+0x80>
    8e0c:	000190ac 	.word	0x000190ac
    8e10:	00008da5 	.word	0x00008da5
    8e14:	00019048 	.word	0x00019048

00008e18 <deregister_tm_clones>:
    8e18:	e92d4008 	push	{r3, lr}
    8e1c:	e59f0020 	ldr	r0, [pc, #32]	; 8e44 <deregister_tm_clones+0x2c>
    8e20:	e59f3020 	ldr	r3, [pc, #32]	; 8e48 <deregister_tm_clones+0x30>
    8e24:	e0603003 	rsb	r3, r0, r3
    8e28:	e3530006 	cmp	r3, #6
    8e2c:	98bd8008 	popls	{r3, pc}
    8e30:	e59f3014 	ldr	r3, [pc, #20]	; 8e4c <deregister_tm_clones+0x34>
    8e34:	e3530000 	cmp	r3, #0
    8e38:	08bd8008 	popeq	{r3, pc}
    8e3c:	e12fff33 	blx	r3
    8e40:	e8bd8008 	pop	{r3, pc}
    8e44:	0002497c 	.word	0x0002497c
    8e48:	0002497f 	.word	0x0002497f
    8e4c:	00000000 	.word	0x00000000

00008e50 <register_tm_clones>:
    8e50:	e92d4008 	push	{r3, lr}
    8e54:	e59f202c 	ldr	r2, [pc, #44]	; 8e88 <register_tm_clones+0x38>
    8e58:	e59f302c 	ldr	r3, [pc, #44]	; 8e8c <register_tm_clones+0x3c>
    8e5c:	e0633002 	rsb	r3, r3, r2
    8e60:	e1b03143 	asrs	r3, r3, #2
    8e64:	42833001 	addmi	r3, r3, #1
    8e68:	e1b010c3 	asrs	r1, r3, #1
    8e6c:	08bd8008 	popeq	{r3, pc}
    8e70:	e59f2018 	ldr	r2, [pc, #24]	; 8e90 <register_tm_clones+0x40>
    8e74:	e3520000 	cmp	r2, #0
    8e78:	08bd8008 	popeq	{r3, pc}
    8e7c:	e59f0008 	ldr	r0, [pc, #8]	; 8e8c <register_tm_clones+0x3c>
    8e80:	e12fff32 	blx	r2
    8e84:	e8bd8008 	pop	{r3, pc}
    8e88:	0002497c 	.word	0x0002497c
    8e8c:	0002497c 	.word	0x0002497c
    8e90:	00000000 	.word	0x00000000

00008e94 <__do_global_dtors_aux>:
    8e94:	e92d4010 	push	{r4, lr}
    8e98:	e59f4018 	ldr	r4, [pc, #24]	; 8eb8 <__do_global_dtors_aux+0x24>
    8e9c:	e5d43000 	ldrb	r3, [r4]
    8ea0:	e3530000 	cmp	r3, #0
    8ea4:	18bd8010 	popne	{r4, pc}
    8ea8:	ebffffda 	bl	8e18 <deregister_tm_clones>
    8eac:	e3a03001 	mov	r3, #1
    8eb0:	e5c43000 	strb	r3, [r4]
    8eb4:	e8bd8010 	pop	{r4, pc}
    8eb8:	00024984 	.word	0x00024984

00008ebc <frame_dummy>:
    8ebc:	e59f0024 	ldr	r0, [pc, #36]	; 8ee8 <frame_dummy+0x2c>
    8ec0:	e92d4008 	push	{r3, lr}
    8ec4:	e5903000 	ldr	r3, [r0]
    8ec8:	e3530000 	cmp	r3, #0
    8ecc:	0a000003 	beq	8ee0 <frame_dummy+0x24>
    8ed0:	e59f3014 	ldr	r3, [pc, #20]	; 8eec <frame_dummy+0x30>
    8ed4:	e3530000 	cmp	r3, #0
    8ed8:	0a000000 	beq	8ee0 <frame_dummy+0x24>
    8edc:	e12fff33 	blx	r3
    8ee0:	e8bd4008 	pop	{r3, lr}
    8ee4:	eaffffd9 	b	8e50 <register_tm_clones>
    8ee8:	00024014 	.word	0x00024014
    8eec:	00000000 	.word	0x00000000

00008ef0 <__stack_chk_fail>:
    8ef0:	b508      	push	{r3, lr}
    8ef2:	f7ff ee42 	blx	8b78 <_init+0xa8>
    8ef6:	f7ff ee02 	blx	8afc <_init+0x2c>
    8efa:	210b      	movs	r1, #11
    8efc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    8f00:	f7ff be32 	b.w	8b68 <_init+0x98>

00008f04 <Main>:
 *
 * \see sdk_tplus.h
 *      etat.h
 */
int Main(unsigned int size, StructPt *data)
{
    8f04:	b580      	push	{r7, lr}
    8f06:	b086      	sub	sp, #24
    8f08:	af00      	add	r7, sp, #0
    8f0a:	6078      	str	r0, [r7, #4]
    8f0c:	6039      	str	r1, [r7, #0]
    8f0e:	f644 1380 	movw	r3, #18816	; 0x4980
    8f12:	f2c0 0302 	movt	r3, #2
    8f16:	681b      	ldr	r3, [r3, #0]
    8f18:	617b      	str	r3, [r7, #20]
  NO_SEGMENT No;
  int ret = FCT_OK;
    8f1a:	2300      	movs	r3, #0
    8f1c:	613b      	str	r3, [r7, #16]

  // Service call management
  No = ApplicationGetCurrent(); // Return the application number
    8f1e:	f00e fd31 	bl	17984 <ApplicationGetCurrent>
    8f22:	4603      	mov	r3, r0
    8f24:	73fb      	strb	r3, [r7, #15]
  switch (data->service)
    8f26:	683b      	ldr	r3, [r7, #0]
    8f28:	885b      	ldrh	r3, [r3, #2]
    8f2a:	3b01      	subs	r3, #1
    8f2c:	2b2a      	cmp	r3, #42	; 0x2a
    8f2e:	f200 8139 	bhi.w	91a4 <Main+0x2a0>
    8f32:	a201      	add	r2, pc, #4	; (adr r2, 8f38 <Main+0x34>)
    8f34:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    8f38:	00009043 	.word	0x00009043
    8f3c:	0000909b 	.word	0x0000909b
    8f40:	000090af 	.word	0x000090af
    8f44:	000091a5 	.word	0x000091a5
    8f48:	0000907b 	.word	0x0000907b
    8f4c:	0000908b 	.word	0x0000908b
    8f50:	0000906b 	.word	0x0000906b
    8f54:	000091a5 	.word	0x000091a5
    8f58:	0000900d 	.word	0x0000900d
    8f5c:	00009021 	.word	0x00009021
    8f60:	000090e7 	.word	0x000090e7
    8f64:	000090bf 	.word	0x000090bf
    8f68:	000090d3 	.word	0x000090d3
    8f6c:	000091a5 	.word	0x000091a5
    8f70:	000091a5 	.word	0x000091a5
    8f74:	000091a5 	.word	0x000091a5
    8f78:	000091a5 	.word	0x000091a5
    8f7c:	000091a5 	.word	0x000091a5
    8f80:	000091a5 	.word	0x000091a5
    8f84:	000090fb 	.word	0x000090fb
    8f88:	000091a5 	.word	0x000091a5
    8f8c:	000091a5 	.word	0x000091a5
    8f90:	00009035 	.word	0x00009035
    8f94:	000091a5 	.word	0x000091a5
    8f98:	000091a5 	.word	0x000091a5
    8f9c:	00009053 	.word	0x00009053
    8fa0:	000091a5 	.word	0x000091a5
    8fa4:	0000910f 	.word	0x0000910f
    8fa8:	00009123 	.word	0x00009123
    8fac:	00009151 	.word	0x00009151
    8fb0:	000091a5 	.word	0x000091a5
    8fb4:	000091a5 	.word	0x000091a5
    8fb8:	00009137 	.word	0x00009137
    8fbc:	000091a5 	.word	0x000091a5
    8fc0:	000091a5 	.word	0x000091a5
    8fc4:	0000916d 	.word	0x0000916d
    8fc8:	000091a5 	.word	0x000091a5
    8fcc:	000091a5 	.word	0x000091a5
    8fd0:	00009189 	.word	0x00009189
    8fd4:	000091a5 	.word	0x000091a5
    8fd8:	000091a5 	.word	0x000091a5
    8fdc:	00008fe5 	.word	0x00008fe5
    8fe0:	00008ff9 	.word	0x00008ff9
  {
  case GIVE_YOUR_DOMAIN: // Return application domain to Manager
    ret = give_your_domain(No, NULL, &data->Param.GiveYourType.param_out);
    8fe4:	683b      	ldr	r3, [r7, #0]
    8fe6:	3304      	adds	r3, #4
    8fe8:	7bfa      	ldrb	r2, [r7, #15]
    8fea:	4610      	mov	r0, r2
    8fec:	2100      	movs	r1, #0
    8fee:	461a      	mov	r2, r3
    8ff0:	f000 f90a 	bl	9208 <give_your_domain>
    8ff4:	6138      	str	r0, [r7, #16]
    break;
    8ff6:	e0d6      	b.n	91a6 <Main+0x2a2>

  case AFTER_RESET: // Activated on each terminal reset
    ret = after_reset(No, NULL, &data->Param.AfterReset.param_out);
    8ff8:	683b      	ldr	r3, [r7, #0]
    8ffa:	3304      	adds	r3, #4
    8ffc:	7bfa      	ldrb	r2, [r7, #15]
    8ffe:	4610      	mov	r0, r2
    9000:	2100      	movs	r1, #0
    9002:	461a      	mov	r2, r3
    9004:	f000 f936 	bl	9274 <after_reset>
    9008:	6138      	str	r0, [r7, #16]
    break;
    900a:	e0cc      	b.n	91a6 <Main+0x2a2>

  case IS_NAME: // Activated when Manager wants to get application name
    ret = is_name(No, NULL, &data->Param.IsName.param_out);
    900c:	683b      	ldr	r3, [r7, #0]
    900e:	3304      	adds	r3, #4
    9010:	7bfa      	ldrb	r2, [r7, #15]
    9012:	4610      	mov	r0, r2
    9014:	2100      	movs	r1, #0
    9016:	461a      	mov	r2, r3
    9018:	f000 fad0 	bl	95bc <is_name>
    901c:	6138      	str	r0, [r7, #16]
    break;
    901e:	e0c2      	b.n	91a6 <Main+0x2a2>

  case IS_STATE: // Activated at boot and every minute to check if application is initialized
    ret = is_state(No, NULL, &data->Param.IsState.param_out);
    9020:	683b      	ldr	r3, [r7, #0]
    9022:	3304      	adds	r3, #4
    9024:	7bfa      	ldrb	r2, [r7, #15]
    9026:	4610      	mov	r0, r2
    9028:	2100      	movs	r1, #0
    902a:	461a      	mov	r2, r3
    902c:	f000 fb16 	bl	965c <is_state>
    9030:	6138      	str	r0, [r7, #16]
    break;
    9032:	e0b8      	b.n	91a6 <Main+0x2a2>

  case IDLE_MESSAGE: // Activated when Manager goes back to idle, to display its message
    idle_message(No, NULL, NULL);
    9034:	7bfb      	ldrb	r3, [r7, #15]
    9036:	4618      	mov	r0, r3
    9038:	2100      	movs	r1, #0
    903a:	2200      	movs	r2, #0
    903c:	f000 fb3e 	bl	96bc <idle_message>
    break;
    9040:	e0b1      	b.n	91a6 <Main+0x2a2>
    //       can be used with INCENDO.
    // This other prototype is used if the application manages more than one application name.
    // The 'S_ETATOUT' structure allows to know the name selected by the user after pressing the "F" key.
    // This new prototype can be used with SDK version >= 6.5.
    // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    ret = more_function(No, NULL, NULL);
    9042:	7bfb      	ldrb	r3, [r7, #15]
    9044:	4618      	mov	r0, r3
    9046:	2100      	movs	r1, #0
    9048:	2200      	movs	r2, #0
    904a:	f000 fb99 	bl	9780 <more_function>
    904e:	6138      	str	r0, [r7, #16]
    break;
    9050:	e0a9      	b.n	91a6 <Main+0x2a2>

  case KEYBOARD_EVENT: // Activated when key is pressed
    ret = keyboard_event(No, &data->Param.KeyboardEvent.param_in,
    9052:	683b      	ldr	r3, [r7, #0]
    9054:	1d1a      	adds	r2, r3, #4
    9056:	683b      	ldr	r3, [r7, #0]
    9058:	3308      	adds	r3, #8
    905a:	7bf9      	ldrb	r1, [r7, #15]
    905c:	4608      	mov	r0, r1
    905e:	4611      	mov	r1, r2
    9060:	461a      	mov	r2, r3
    9062:	f000 fbad 	bl	97c0 <keyboard_event>
    9066:	6138      	str	r0, [r7, #16]
        &data->Param.KeyboardEvent.param_out);
    break;
    9068:	e09d      	b.n	91a6 <Main+0x2a2>

  case STATE: // Activated on "F" key: Consultation->State, to print terminal content receipt
    ret = state(No, NULL, NULL);
    906a:	7bfb      	ldrb	r3, [r7, #15]
    906c:	4618      	mov	r0, r3
    906e:	2100      	movs	r1, #0
    9070:	2200      	movs	r2, #0
    9072:	f000 fc21 	bl	98b8 <state>
    9076:	6138      	str	r0, [r7, #16]
    break;
    9078:	e095      	b.n	91a6 <Main+0x2a2>

  case CONSULT: // Activated on "F" key: Consultation->Transactions, to print transaction totals receipt
    ret = consult(No, NULL, NULL);
    907a:	7bfb      	ldrb	r3, [r7, #15]
    907c:	4618      	mov	r0, r3
    907e:	2100      	movs	r1, #0
    9080:	2200      	movs	r2, #0
    9082:	f000 fc91 	bl	99a8 <consult>
    9086:	6138      	str	r0, [r7, #16]
    break;
    9088:	e08d      	b.n	91a6 <Main+0x2a2>

  case MCALL: // Activated on "F" key: Consultation->Call->Planning of Call, to print host call planning receipt
    ret = mcall(No, NULL, NULL);
    908a:	7bfb      	ldrb	r3, [r7, #15]
    908c:	4618      	mov	r0, r3
    908e:	2100      	movs	r1, #0
    9090:	2200      	movs	r2, #0
    9092:	f000 fce7 	bl	9a64 <mcall>
    9096:	6138      	str	r0, [r7, #16]
    break;
    9098:	e085      	b.n	91a6 <Main+0x2a2>

  case IS_TIME_FUNCTION: // Activated every minute, do you need the peripherals at the next call of time_function()?
    ret = is_time_function(No, NULL, &data->Param.IsTimeFunction.param_out);
    909a:	683b      	ldr	r3, [r7, #0]
    909c:	3304      	adds	r3, #4
    909e:	7bfa      	ldrb	r2, [r7, #15]
    90a0:	4610      	mov	r0, r2
    90a2:	2100      	movs	r1, #0
    90a4:	461a      	mov	r2, r3
    90a6:	f000 fd3b 	bl	9b20 <is_time_function>
    90aa:	6138      	str	r0, [r7, #16]
    break;
    90ac:	e07b      	b.n	91a6 <Main+0x2a2>

  case TIME_FUNCTION: // Activated every minute, to execute automatic periodic functions
    ret = time_function(No, NULL, NULL);
    90ae:	7bfb      	ldrb	r3, [r7, #15]
    90b0:	4618      	mov	r0, r3
    90b2:	2100      	movs	r1, #0
    90b4:	2200      	movs	r2, #0
    90b6:	f000 fd63 	bl	9b80 <time_function>
    90ba:	6138      	str	r0, [r7, #16]
    break;
    90bc:	e073      	b.n	91a6 <Main+0x2a2>

  case IS_CHANGE_INIT: // Activated on "F" key: Initialization->Parameters->List, Conditions for changing Manager parameters?
    ret = is_change_init(No, NULL, &data->Param.IsChangeInit.param_out);
    90be:	683b      	ldr	r3, [r7, #0]
    90c0:	3304      	adds	r3, #4
    90c2:	7bfa      	ldrb	r2, [r7, #15]
    90c4:	4610      	mov	r0, r2
    90c6:	2100      	movs	r1, #0
    90c8:	461a      	mov	r2, r3
    90ca:	f000 fd8d 	bl	9be8 <is_change_init>
    90ce:	6138      	str	r0, [r7, #16]
    break;
    90d0:	e069      	b.n	91a6 <Main+0x2a2>

  case MODIF_PARAM: // Activated on "F" key: Initialization->Parameters->List, Manager reports parameters changed.
    ret = modif_param(No, &data->Param.ModifParam.param_in, NULL);
    90d2:	683b      	ldr	r3, [r7, #0]
    90d4:	3304      	adds	r3, #4
    90d6:	7bfa      	ldrb	r2, [r7, #15]
    90d8:	4610      	mov	r0, r2
    90da:	4619      	mov	r1, r3
    90dc:	2200      	movs	r2, #0
    90de:	f000 fdd5 	bl	9c8c <modif_param>
    90e2:	6138      	str	r0, [r7, #16]
    break;
    90e4:	e05f      	b.n	91a6 <Main+0x2a2>

  case IS_EVOL_PG: // Activated on "F" key: Evolution->Load->Local or RemoteLoad, Conditions for application downloading?
    ret = is_evol_pg(No, NULL, &data->Param.IsEvolPg.param_out);
    90e6:	683b      	ldr	r3, [r7, #0]
    90e8:	3304      	adds	r3, #4
    90ea:	7bfa      	ldrb	r2, [r7, #15]
    90ec:	4610      	mov	r0, r2
    90ee:	2100      	movs	r1, #0
    90f0:	461a      	mov	r2, r3
    90f2:	f000 fe17 	bl	9d24 <is_evol_pg>
    90f6:	6138      	str	r0, [r7, #16]
    break;
    90f8:	e055      	b.n	91a6 <Main+0x2a2>

  case IS_DELETE: // Activated on "F" key: Deletion, Conditions for application deletion?
    ret = is_delete(No, NULL, &data->Param.IsDelete.param_out);
    90fa:	683b      	ldr	r3, [r7, #0]
    90fc:	3304      	adds	r3, #4
    90fe:	7bfa      	ldrb	r2, [r7, #15]
    9100:	4610      	mov	r0, r2
    9102:	2100      	movs	r1, #0
    9104:	461a      	mov	r2, r3
    9106:	f000 fe3d 	bl	9d84 <is_delete>
    910a:	6138      	str	r0, [r7, #16]
    break;
    910c:	e04b      	b.n	91a6 <Main+0x2a2>

  case FILE_RECEIVED: // Activated each time Manager received a file from a "parameters" downloading session
    ret = file_received(No, &data->Param.FileReceived.param_in, NULL);
    910e:	683b      	ldr	r3, [r7, #0]
    9110:	3304      	adds	r3, #4
    9112:	7bfa      	ldrb	r2, [r7, #15]
    9114:	4610      	mov	r0, r2
    9116:	4619      	mov	r1, r3
    9118:	2200      	movs	r2, #0
    911a:	f000 fe53 	bl	9dc4 <file_received>
    911e:	6138      	str	r0, [r7, #16]
    break;
    9120:	e041      	b.n	91a6 <Main+0x2a2>

  case MESSAGE_RECEIVED: // Activated each time Manager received a message in its own mailbox for this application
    ret = message_received(No, &data->Param.MessageReceived.param_in, NULL);
    9122:	683b      	ldr	r3, [r7, #0]
    9124:	3304      	adds	r3, #4
    9126:	7bfa      	ldrb	r2, [r7, #15]
    9128:	4610      	mov	r0, r2
    912a:	4619      	mov	r1, r3
    912c:	2200      	movs	r2, #0
    912e:	f000 ff1b 	bl	9f68 <message_received>
    9132:	6138      	str	r0, [r7, #16]
    break;
    9134:	e037      	b.n	91a6 <Main+0x2a2>

  case IS_CARD_SPECIFIC: // Activated when card inserted card swiped or manually entry, do you want to process the card?
    ret = is_card_specific(No, &data->Param.IsCardSpecific.param_in,
    9136:	683b      	ldr	r3, [r7, #0]
    9138:	f503 729a 	add.w	r2, r3, #308	; 0x134
    913c:	683b      	ldr	r3, [r7, #0]
    913e:	3304      	adds	r3, #4
    9140:	7bf9      	ldrb	r1, [r7, #15]
    9142:	4608      	mov	r0, r1
    9144:	4611      	mov	r1, r2
    9146:	461a      	mov	r2, r3
    9148:	f000 ff6c 	bl	a024 <is_card_specific>
    914c:	6138      	str	r0, [r7, #16]
        &data->Param.IsCardSpecific.param_out);
    break;
    914e:	e02a      	b.n	91a6 <Main+0x2a2>

  case CARD_INSIDE: // Activated when the card is specific, the application process the card in transparent mode
    ret = card_inside(No, &data->Param.CardInside.param_in,
    9150:	683b      	ldr	r3, [r7, #0]
    9152:	1d1a      	adds	r2, r3, #4
    9154:	683b      	ldr	r3, [r7, #0]
    9156:	f503 535a 	add.w	r3, r3, #13952	; 0x3680
    915a:	3320      	adds	r3, #32
    915c:	7bf9      	ldrb	r1, [r7, #15]
    915e:	4608      	mov	r0, r1
    9160:	4611      	mov	r1, r2
    9162:	461a      	mov	r2, r3
    9164:	f000 ff8e 	bl	a084 <card_inside>
    9168:	6138      	str	r0, [r7, #16]
        &data->Param.CardInside. param_out);
    break;
    916a:	e01c      	b.n	91a6 <Main+0x2a2>

  case IS_FOR_YOU_AFTER:
    ret = is_for_you_after(No, &data->Param.IsForYouAfter.param_in,
    916c:	683b      	ldr	r3, [r7, #0]
    916e:	1d1a      	adds	r2, r3, #4
    9170:	683b      	ldr	r3, [r7, #0]
    9172:	f503 535a 	add.w	r3, r3, #13952	; 0x3680
    9176:	3320      	adds	r3, #32
    9178:	7bf9      	ldrb	r1, [r7, #15]
    917a:	4608      	mov	r0, r1
    917c:	4611      	mov	r1, r2
    917e:	461a      	mov	r2, r3
    9180:	f000 ffa8 	bl	a0d4 <is_for_you_after>
    9184:	6138      	str	r0, [r7, #16]
        &data->Param.IsForYouAfter.param_out);
    break;
    9186:	e00e      	b.n	91a6 <Main+0x2a2>

  case DEBIT_NON_EMV:
    ret = debit_non_emv(No, &data->Param.DebitNonEmv.param_in,
    9188:	683b      	ldr	r3, [r7, #0]
    918a:	1d1a      	adds	r2, r3, #4
    918c:	683b      	ldr	r3, [r7, #0]
    918e:	f503 535a 	add.w	r3, r3, #13952	; 0x3680
    9192:	3320      	adds	r3, #32
    9194:	7bf9      	ldrb	r1, [r7, #15]
    9196:	4608      	mov	r0, r1
    9198:	4611      	mov	r1, r2
    919a:	461a      	mov	r2, r3
    919c:	f001 f86a 	bl	a274 <debit_non_emv>
    91a0:	6138      	str	r0, [r7, #16]
        &data->Param.DebitNonEmv.param_out);
    break;
    91a2:	e000      	b.n	91a6 <Main+0x2a2>
  case IS_CARD_EMV_FOR_YOU:
  case DEBIT_EMV:
  case SELECT_FUNCTION: // French Bank Domain
  case SELECT_FUNCTION_EMV: // French Bank Domain
  default:
    break;
    91a4:	bf00      	nop
  }

  return ret;
    91a6:	693b      	ldr	r3, [r7, #16]
}
    91a8:	4618      	mov	r0, r3
    91aa:	f644 1380 	movw	r3, #18816	; 0x4980
    91ae:	f2c0 0302 	movt	r3, #2
    91b2:	697a      	ldr	r2, [r7, #20]
    91b4:	681b      	ldr	r3, [r3, #0]
    91b6:	429a      	cmp	r2, r3
    91b8:	d001      	beq.n	91be <Main+0x2ba>
    91ba:	f7ff fe99 	bl	8ef0 <__stack_chk_fail>
    91be:	f107 0718 	add.w	r7, r7, #24
    91c2:	46bd      	mov	sp, r7
    91c4:	bd80      	pop	{r7, pc}
    91c6:	bf00      	nop

000091c8 <Progress>:

// *****************************************************
// Progress bar counter (See after_reset() service call)
// *****************************************************
static T_GL_COORD Progress(T_GL_COORD sValue) // This function is called periodically to update the progress bar of the dialog box.
{                                             // The value received as parameter corresponds to the current value of the progress bar.
    91c8:	b580      	push	{r7, lr}
    91ca:	b084      	sub	sp, #16
    91cc:	af00      	add	r7, sp, #0
    91ce:	6078      	str	r0, [r7, #4]
    91d0:	f644 1380 	movw	r3, #18816	; 0x4980
    91d4:	f2c0 0302 	movt	r3, #2
    91d8:	681b      	ldr	r3, [r3, #0]
    91da:	60fb      	str	r3, [r7, #12]
	Telium_Ttestall(0, 2);                    // When this value reaches the maximum, the dialog is automatically closed.
    91dc:	2000      	movs	r0, #0
    91de:	2102      	movs	r1, #2
    91e0:	f00e fa66 	bl	176b0 <Telium_Ttestall>

	return sValue+1;
    91e4:	687b      	ldr	r3, [r7, #4]
    91e6:	3301      	adds	r3, #1
}
    91e8:	4618      	mov	r0, r3
    91ea:	f644 1380 	movw	r3, #18816	; 0x4980
    91ee:	f2c0 0302 	movt	r3, #2
    91f2:	68fa      	ldr	r2, [r7, #12]
    91f4:	681b      	ldr	r3, [r3, #0]
    91f6:	429a      	cmp	r2, r3
    91f8:	d001      	beq.n	91fe <Progress+0x36>
    91fa:	f7ff fe79 	bl	8ef0 <__stack_chk_fail>
    91fe:	f107 0710 	add.w	r7, r7, #16
    9202:	46bd      	mov	sp, r7
    9204:	bd80      	pop	{r7, pc}
    9206:	bf00      	nop

00009208 <give_your_domain>:
 * \return FCT_OK
 *
 * \see sdk_tplus.h
 */
int give_your_domain(NO_SEGMENT no, void *p1, S_INITPARAMOUT *param_out)
{
    9208:	b580      	push	{r7, lr}
    920a:	b086      	sub	sp, #24
    920c:	af00      	add	r7, sp, #0
    920e:	4603      	mov	r3, r0
    9210:	60b9      	str	r1, [r7, #8]
    9212:	607a      	str	r2, [r7, #4]
    9214:	73fb      	strb	r3, [r7, #15]
    9216:	f644 1380 	movw	r3, #18816	; 0x4980
    921a:	f2c0 0302 	movt	r3, #2
    921e:	681b      	ldr	r3, [r3, #0]
    9220:	617b      	str	r3, [r7, #20]

    // Return application domain to Manager
    // Setting parameters initialization
    param_out->returned_state[param_out->response_number].mask = MSK_ALL_PARAM;  // Accept all
    9222:	687b      	ldr	r3, [r7, #4]
    9224:	781b      	ldrb	r3, [r3, #0]
    9226:	687a      	ldr	r2, [r7, #4]
    9228:	00db      	lsls	r3, r3, #3
    922a:	18d3      	adds	r3, r2, r3
    922c:	f64f 72ff 	movw	r2, #65535	; 0xffff
    9230:	f2c0 0207 	movt	r2, #7
    9234:	605a      	str	r2, [r3, #4]
    // International domain
    param_out->returned_state[param_out->response_number].application_type = TYP_EXPORT;
    9236:	687b      	ldr	r3, [r7, #4]
    9238:	781b      	ldrb	r3, [r3, #0]
    923a:	687a      	ldr	r2, [r7, #4]
    923c:	00db      	lsls	r3, r3, #3
    923e:	18d3      	adds	r3, r2, r3
    9240:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    9244:	811a      	strh	r2, [r3, #8]
    param_out->response_number++;
    9246:	687b      	ldr	r3, [r7, #4]
    9248:	781b      	ldrb	r3, [r3, #0]
    924a:	3301      	adds	r3, #1
    924c:	b2da      	uxtb	r2, r3
    924e:	687b      	ldr	r3, [r7, #4]
    9250:	701a      	strb	r2, [r3, #0]

    return (FCT_OK);
    9252:	2300      	movs	r3, #0
}
    9254:	4618      	mov	r0, r3
    9256:	f644 1380 	movw	r3, #18816	; 0x4980
    925a:	f2c0 0302 	movt	r3, #2
    925e:	697a      	ldr	r2, [r7, #20]
    9260:	681b      	ldr	r3, [r3, #0]
    9262:	429a      	cmp	r2, r3
    9264:	d001      	beq.n	926a <give_your_domain+0x62>
    9266:	f7ff fe43 	bl	8ef0 <__stack_chk_fail>
    926a:	f107 0718 	add.w	r7, r7, #24
    926e:	46bd      	mov	sp, r7
    9270:	bd80      	pop	{r7, pc}
    9272:	bf00      	nop

00009274 <after_reset>:
 * \return FCT_OK
 *
 * \see sdk_tplus.h
 */
int after_reset(NO_SEGMENT no, void *p1, S_TRANSOUT *param_out)
{
    9274:	b580      	push	{r7, lr}
    9276:	b0b4      	sub	sp, #208	; 0xd0
    9278:	af06      	add	r7, sp, #24
    927a:	4603      	mov	r3, r0
    927c:	60b9      	str	r1, [r7, #8]
    927e:	607a      	str	r2, [r7, #4]
    9280:	73fb      	strb	r3, [r7, #15]
    9282:	f644 1380 	movw	r3, #18816	; 0x4980
    9286:	f2c0 0302 	movt	r3, #2
    928a:	681b      	ldr	r3, [r3, #0]
    928c:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
	doubleword uiMode;  // Bug in prototype => 2nd parameter (output) on FS_mount returns Mode (FS_WRITEONCE or FS_WRITEMANY)
	// and NOT AccessMode (FS_NOFLAGS or FS_RONLYMOD or FS_WRTMOD)
	T_GL_COORD sValue;
	int iRet;

    first_init(no, &chgt, (unsigned char *)&type); // New software loaded ?
    9290:	7bf9      	ldrb	r1, [r7, #15]
    9292:	f107 0216 	add.w	r2, r7, #22
    9296:	f107 0317 	add.w	r3, r7, #23
    929a:	4608      	mov	r0, r1
    929c:	4611      	mov	r1, r2
    929e:	461a      	mov	r2, r3
    92a0:	f00e fe5a 	bl	17f58 <first_init>
    if (chgt == 0xFF) // Yes, just loaded with first execution
    92a4:	7dbb      	ldrb	r3, [r7, #22]
    92a6:	2bff      	cmp	r3, #255	; 0xff
    92a8:	d103      	bne.n	92b2 <after_reset+0x3e>
    {
        raz_init(no); // Reset downloading indicator
    92aa:	7bfb      	ldrb	r3, [r7, #15]
    92ac:	4618      	mov	r0, r3
    92ae:	f00e fe7f 	bl	17fb0 <raz_init>


	// Create Parameter Disk (See Mapapp.c)
	// ====================================
	// ** Parameters Disk used by FMG library **
	strcpy(xCfg.Label, PARAM_DISK);            // Disk name
    92b2:	f644 138c 	movw	r3, #18828	; 0x498c
    92b6:	f2c0 0302 	movt	r3, #2
    92ba:	f249 1210 	movw	r2, #37136	; 0x9110
    92be:	f2c0 0201 	movt	r2, #1
    92c2:	ca07      	ldmia	r2, {r0, r1, r2}
    92c4:	c303      	stmia	r3!, {r0, r1}
    92c6:	801a      	strh	r2, [r3, #0]
	xCfg.Mode = FS_WRITEONCE;                  // Disk on Flash
    92c8:	f644 138c 	movw	r3, #18828	; 0x498c
    92cc:	f2c0 0302 	movt	r3, #2
    92d0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    92d4:	611a      	str	r2, [r3, #16]
	xCfg.AccessMode	= FS_WRTMOD;               // r/w access
    92d6:	f644 138c 	movw	r3, #18828	; 0x498c
    92da:	f2c0 0302 	movt	r3, #2
    92de:	2204      	movs	r2, #4
    92e0:	615a      	str	r2, [r3, #20]
	xCfg.NbFichierMax = 20;                     // Max files number
    92e2:	f644 138c 	movw	r3, #18828	; 0x498c
    92e6:	f2c0 0302 	movt	r3, #2
    92ea:	2214      	movs	r2, #20
    92ec:	619a      	str	r2, [r3, #24]
	xCfg.IdentZone	= FS_WO_ZONE_DATA;         // Zone id
    92ee:	f644 138c 	movw	r3, #18828	; 0x498c
    92f2:	f2c0 0302 	movt	r3, #2
    92f6:	2201      	movs	r2, #1
    92f8:	61da      	str	r2, [r3, #28]
	ulSize = xCfg.NbFichierMax*32768;          // Disk size in bytes
    92fa:	f644 138c 	movw	r3, #18828	; 0x498c
    92fe:	f2c0 0302 	movt	r3, #2
    9302:	699b      	ldr	r3, [r3, #24]
    9304:	03da      	lsls	r2, r3, #15
    9306:	f644 13ac 	movw	r3, #18860	; 0x49ac
    930a:	f2c0 0302 	movt	r3, #2
    930e:	601a      	str	r2, [r3, #0]

	// ** All disks created by FFMS and used by FMG library must be mounted before the call to FMG_init() **
	Telium_Sprintf(tcPath, "/%s", PARAM_DISK);
    9310:	f107 0350 	add.w	r3, r7, #80	; 0x50
    9314:	4618      	mov	r0, r3
    9316:	f249 111c 	movw	r1, #37148	; 0x911c
    931a:	f2c0 0101 	movt	r1, #1
    931e:	f249 1210 	movw	r2, #37136	; 0x9110
    9322:	f2c0 0201 	movt	r2, #1
    9326:	f00e fb11 	bl	1794c <Telium_Sprintf>
	iRet = FS_mount (tcPath, &uiMode);         // Check if disk already activated (!!! second parameter returns (FS_WRITEONCE or FS_WRITEMANY))
    932a:	f107 0250 	add.w	r2, r7, #80	; 0x50
    932e:	f107 0318 	add.w	r3, r7, #24
    9332:	4610      	mov	r0, r2
    9334:	4619      	mov	r1, r3
    9336:	f00e fc03 	bl	17b40 <FS_mount>
    933a:	6238      	str	r0, [r7, #32]

	if (iRet != FS_OK) {
    933c:	6a3b      	ldr	r3, [r7, #32]
    933e:	2b02      	cmp	r3, #2
    9340:	f000 8081 	beq.w	9446 <after_reset+0x1d2>
		// == Application added ==
		iRet = FS_dskcreate(&xCfg, &ulSize);   // Create and format the none volatile disk
    9344:	f644 108c 	movw	r0, #18828	; 0x498c
    9348:	f2c0 0002 	movt	r0, #2
    934c:	f644 11ac 	movw	r1, #18860	; 0x49ac
    9350:	f2c0 0102 	movt	r1, #2
    9354:	f00e fb70 	bl	17a38 <FS_dskcreate>
    9358:	6238      	str	r0, [r7, #32]
		CHECK(iRet==FS_OK, lblKO);
    935a:	6a3b      	ldr	r3, [r7, #32]
    935c:	2b02      	cmp	r3, #2
    935e:	f040 811b 	bne.w	9598 <after_reset+0x324>
		iRet = FS_mount(tcPath, &uiMode);      // Activate a disk (!!! second parameter returns (FS_WRITEONCE or FS_WRITEMANY))
    9362:	f107 0250 	add.w	r2, r7, #80	; 0x50
    9366:	f107 0318 	add.w	r3, r7, #24
    936a:	4610      	mov	r0, r2
    936c:	4619      	mov	r1, r3
    936e:	f00e fbe7 	bl	17b40 <FS_mount>
    9372:	6238      	str	r0, [r7, #32]
		CHECK(iRet==FS_OK, lblKO);
    9374:	6a3b      	ldr	r3, [r7, #32]
    9376:	2b02      	cmp	r3, #2
    9378:	f040 810e 	bne.w	9598 <after_reset+0x324>
		iRet = FMG_Init();                     // Initialize File ManaGement
    937c:	f00b f972 	bl	14664 <FMG_Init>
    9380:	6238      	str	r0, [r7, #32]
		CHECK(iRet==FMG_SUCCESS, lblKO);
    9382:	6a3b      	ldr	r3, [r7, #32]
    9384:	2b0a      	cmp	r3, #10
    9386:	f040 8107 	bne.w	9598 <after_reset+0x324>

		iRet = appReset();                     // Reset application parameters (Flash)
    938a:	f006 f817 	bl	f3bc <appReset>
    938e:	6238      	str	r0, [r7, #32]
		CHECK(iRet>=0, lblKO);
    9390:	6a3b      	ldr	r3, [r7, #32]
    9392:	2b00      	cmp	r3, #0
    9394:	f2c0 8100 	blt.w	9598 <after_reset+0x324>

		iRet = appPut(appCmpDat, (char*)getAppCmpDat(), lenCmpDat);  // Store compiler date/time (See Mapapp.c)
    9398:	f005 ffd8 	bl	f34c <getAppCmpDat>
    939c:	4603      	mov	r3, r0
    939e:	2000      	movs	r0, #0
    93a0:	4619      	mov	r1, r3
    93a2:	220b      	movs	r2, #11
    93a4:	f006 f8b4 	bl	f510 <appPut>
    93a8:	6238      	str	r0, [r7, #32]
		CHECK(iRet>=0, lblKO);
    93aa:	6a3b      	ldr	r3, [r7, #32]
    93ac:	2b00      	cmp	r3, #0
    93ae:	f2c0 80f3 	blt.w	9598 <after_reset+0x324>
		iRet = appPut(appCmpTim, (char*)getAppCmpTim(), lenCmpTim);
    93b2:	f005 ffe7 	bl	f384 <getAppCmpTim>
    93b6:	4603      	mov	r3, r0
    93b8:	2001      	movs	r0, #1
    93ba:	4619      	mov	r1, r3
    93bc:	2208      	movs	r2, #8
    93be:	f006 f8a7 	bl	f510 <appPut>
    93c2:	6238      	str	r0, [r7, #32]
		CHECK(iRet>=0, lblKO);
    93c4:	6a3b      	ldr	r3, [r7, #32]
    93c6:	2b00      	cmp	r3, #0
    93c8:	f2c0 80e6 	blt.w	9598 <after_reset+0x324>

		GL_Dialog_Progress(gGoalGraphicLibInstance, NULL, "New Software\nReset In Progress", NULL, NULL, 0, 100, Progress, GL_BUTTON_NONE, GL_TIME_INFINITE);
    93cc:	f644 1388 	movw	r3, #18824	; 0x4988
    93d0:	f2c0 0302 	movt	r3, #2
    93d4:	681a      	ldr	r2, [r3, #0]
    93d6:	2300      	movs	r3, #0
    93d8:	9300      	str	r3, [sp, #0]
    93da:	2300      	movs	r3, #0
    93dc:	9301      	str	r3, [sp, #4]
    93de:	2364      	movs	r3, #100	; 0x64
    93e0:	9302      	str	r3, [sp, #8]
    93e2:	f249 13c9 	movw	r3, #37321	; 0x91c9
    93e6:	f2c0 0300 	movt	r3, #0
    93ea:	9303      	str	r3, [sp, #12]
    93ec:	2300      	movs	r3, #0
    93ee:	9304      	str	r3, [sp, #16]
    93f0:	f04f 33ff 	mov.w	r3, #4294967295
    93f4:	9305      	str	r3, [sp, #20]
    93f6:	4610      	mov	r0, r2
    93f8:	2100      	movs	r1, #0
    93fa:	f249 1220 	movw	r2, #37152	; 0x9120
    93fe:	f2c0 0201 	movt	r2, #1
    9402:	2300      	movs	r3, #0
    9404:	f00f f8be 	bl	18584 <GL_Dialog_Progress>
		sValue = 100;
    9408:	2364      	movs	r3, #100	; 0x64
    940a:	61fb      	str	r3, [r7, #28]
		GL_Dialog_Progress(gGoalGraphicLibInstance, NULL, "New Software\nReset Done", NULL, &sValue, 1, 101, NULL, GL_BUTTON_NONE, 3*1000);
    940c:	f644 1388 	movw	r3, #18824	; 0x4988
    9410:	f2c0 0302 	movt	r3, #2
    9414:	681b      	ldr	r3, [r3, #0]
    9416:	f107 021c 	add.w	r2, r7, #28
    941a:	9200      	str	r2, [sp, #0]
    941c:	2201      	movs	r2, #1
    941e:	9201      	str	r2, [sp, #4]
    9420:	2265      	movs	r2, #101	; 0x65
    9422:	9202      	str	r2, [sp, #8]
    9424:	2200      	movs	r2, #0
    9426:	9203      	str	r2, [sp, #12]
    9428:	2200      	movs	r2, #0
    942a:	9204      	str	r2, [sp, #16]
    942c:	f640 32b8 	movw	r2, #3000	; 0xbb8
    9430:	9205      	str	r2, [sp, #20]
    9432:	4618      	mov	r0, r3
    9434:	2100      	movs	r1, #0
    9436:	f249 1240 	movw	r2, #37184	; 0x9140
    943a:	f2c0 0201 	movt	r2, #1
    943e:	2300      	movs	r3, #0
    9440:	f00f f8a0 	bl	18584 <GL_Dialog_Progress>
    9444:	e0a8      	b.n	9598 <after_reset+0x324>

	} else {

		iRet = FMG_Init();                                // Initialize File ManaGement
    9446:	f00b f90d 	bl	14664 <FMG_Init>
    944a:	6238      	str	r0, [r7, #32]
		CHECK(iRet==FMG_INIT_OK, lblKO);
    944c:	6a3b      	ldr	r3, [r7, #32]
    944e:	2b1e      	cmp	r3, #30
    9450:	f040 80a2 	bne.w	9598 <after_reset+0x324>

		iRet = appGet(appCmpDat, tcAppDat, lenCmpDat+1);  // Retrieve compiler date/time (See Mapapp.c)
    9454:	f107 0338 	add.w	r3, r7, #56	; 0x38
    9458:	2000      	movs	r0, #0
    945a:	4619      	mov	r1, r3
    945c:	220c      	movs	r2, #12
    945e:	f006 f8bd 	bl	f5dc <appGet>
    9462:	6238      	str	r0, [r7, #32]
		CHECK(iRet>=0, lblKO);
    9464:	6a3b      	ldr	r3, [r7, #32]
    9466:	2b00      	cmp	r3, #0
    9468:	f2c0 8096 	blt.w	9598 <after_reset+0x324>
		iRet = appGet(appCmpTim, tcAppTim, lenCmpTim+1);
    946c:	f107 0324 	add.w	r3, r7, #36	; 0x24
    9470:	2001      	movs	r0, #1
    9472:	4619      	mov	r1, r3
    9474:	2209      	movs	r2, #9
    9476:	f006 f8b1 	bl	f5dc <appGet>
    947a:	6238      	str	r0, [r7, #32]
		CHECK(iRet>=0, lblKO);
    947c:	6a3b      	ldr	r3, [r7, #32]
    947e:	2b00      	cmp	r3, #0
    9480:	f2c0 808a 	blt.w	9598 <after_reset+0x324>
		// Check compiler date/time
		if( (strcmp(tcAppDat, getAppCmpDat()) == 0) && (strcmp(tcAppTim, getAppCmpTim()) == 0)) {
    9484:	f005 ff62 	bl	f34c <getAppCmpDat>
    9488:	4603      	mov	r3, r0
    948a:	f107 0238 	add.w	r2, r7, #56	; 0x38
    948e:	4610      	mov	r0, r2
    9490:	4619      	mov	r1, r3
    9492:	f7ff ebd0 	blx	8c34 <_init+0x164>
    9496:	4603      	mov	r3, r0
    9498:	2b00      	cmp	r3, #0
    949a:	d10b      	bne.n	94b4 <after_reset+0x240>
    949c:	f005 ff72 	bl	f384 <getAppCmpTim>
    94a0:	4603      	mov	r3, r0
    94a2:	f107 0224 	add.w	r2, r7, #36	; 0x24
    94a6:	4610      	mov	r0, r2
    94a8:	4619      	mov	r1, r3
    94aa:	f7ff ebc4 	blx	8c34 <_init+0x164>
    94ae:	4603      	mov	r3, r0
    94b0:	2b00      	cmp	r3, #0
    94b2:	d071      	beq.n	9598 <after_reset+0x324>
			// == Application already upto date ==
		} else {
			// == Application updated ==
			if ((strcmp(tcAppDat, getAppCmpDat()) != 0) || (strcmp(tcAppTim, getAppCmpTim()) != 0)) {
    94b4:	f005 ff4a 	bl	f34c <getAppCmpDat>
    94b8:	4603      	mov	r3, r0
    94ba:	f107 0238 	add.w	r2, r7, #56	; 0x38
    94be:	4610      	mov	r0, r2
    94c0:	4619      	mov	r1, r3
    94c2:	f7ff ebb8 	blx	8c34 <_init+0x164>
    94c6:	4603      	mov	r3, r0
    94c8:	2b00      	cmp	r3, #0
    94ca:	d10b      	bne.n	94e4 <after_reset+0x270>
    94cc:	f005 ff5a 	bl	f384 <getAppCmpTim>
    94d0:	4603      	mov	r3, r0
    94d2:	f107 0224 	add.w	r2, r7, #36	; 0x24
    94d6:	4610      	mov	r0, r2
    94d8:	4619      	mov	r1, r3
    94da:	f7ff ebac 	blx	8c34 <_init+0x164>
    94de:	4603      	mov	r3, r0
    94e0:	2b00      	cmp	r3, #0
    94e2:	d005      	beq.n	94f0 <after_reset+0x27c>
				iRet = appReset();                        // Reset application parameters (Flash)
    94e4:	f005 ff6a 	bl	f3bc <appReset>
    94e8:	6238      	str	r0, [r7, #32]
				CHECK(iRet>=0, lblKO);
    94ea:	6a3b      	ldr	r3, [r7, #32]
    94ec:	2b00      	cmp	r3, #0
    94ee:	db53      	blt.n	9598 <after_reset+0x324>

			}

			iRet = appPut(appCmpDat, (char*)getAppCmpDat(), lenCmpDat); // Store compiler date/time (See Mapapp.c)
    94f0:	f005 ff2c 	bl	f34c <getAppCmpDat>
    94f4:	4603      	mov	r3, r0
    94f6:	2000      	movs	r0, #0
    94f8:	4619      	mov	r1, r3
    94fa:	220b      	movs	r2, #11
    94fc:	f006 f808 	bl	f510 <appPut>
    9500:	6238      	str	r0, [r7, #32]
			CHECK(iRet>=0, lblKO);
    9502:	6a3b      	ldr	r3, [r7, #32]
    9504:	2b00      	cmp	r3, #0
    9506:	db47      	blt.n	9598 <after_reset+0x324>
			iRet = appPut(appCmpTim, (char*)getAppCmpTim(), lenCmpTim);
    9508:	f005 ff3c 	bl	f384 <getAppCmpTim>
    950c:	4603      	mov	r3, r0
    950e:	2001      	movs	r0, #1
    9510:	4619      	mov	r1, r3
    9512:	2208      	movs	r2, #8
    9514:	f005 fffc 	bl	f510 <appPut>
    9518:	6238      	str	r0, [r7, #32]
			CHECK(iRet>=0, lblKO);
    951a:	6a3b      	ldr	r3, [r7, #32]
    951c:	2b00      	cmp	r3, #0
    951e:	db3b      	blt.n	9598 <after_reset+0x324>

			GL_Dialog_Progress(gGoalGraphicLibInstance, NULL, "Update Software\nUpdate In Progress",
    9520:	f644 1388 	movw	r3, #18824	; 0x4988
    9524:	f2c0 0302 	movt	r3, #2
    9528:	681a      	ldr	r2, [r3, #0]
    952a:	2300      	movs	r3, #0
    952c:	9300      	str	r3, [sp, #0]
    952e:	2300      	movs	r3, #0
    9530:	9301      	str	r3, [sp, #4]
    9532:	2364      	movs	r3, #100	; 0x64
    9534:	9302      	str	r3, [sp, #8]
    9536:	f249 13c9 	movw	r3, #37321	; 0x91c9
    953a:	f2c0 0300 	movt	r3, #0
    953e:	9303      	str	r3, [sp, #12]
    9540:	2300      	movs	r3, #0
    9542:	9304      	str	r3, [sp, #16]
    9544:	f04f 33ff 	mov.w	r3, #4294967295
    9548:	9305      	str	r3, [sp, #20]
    954a:	4610      	mov	r0, r2
    954c:	2100      	movs	r1, #0
    954e:	f249 1258 	movw	r2, #37208	; 0x9158
    9552:	f2c0 0201 	movt	r2, #1
    9556:	2300      	movs	r3, #0
    9558:	f00f f814 	bl	18584 <GL_Dialog_Progress>
					NULL, NULL, 0, 100, Progress, GL_BUTTON_NONE, GL_TIME_INFINITE);
			sValue = 100;
    955c:	2364      	movs	r3, #100	; 0x64
    955e:	61fb      	str	r3, [r7, #28]
			GL_Dialog_Progress(gGoalGraphicLibInstance, NULL, "Update Software\nUpdate Done", NULL, &sValue, 1, 101, NULL, GL_BUTTON_NONE, 3*1000);
    9560:	f644 1388 	movw	r3, #18824	; 0x4988
    9564:	f2c0 0302 	movt	r3, #2
    9568:	681b      	ldr	r3, [r3, #0]
    956a:	f107 021c 	add.w	r2, r7, #28
    956e:	9200      	str	r2, [sp, #0]
    9570:	2201      	movs	r2, #1
    9572:	9201      	str	r2, [sp, #4]
    9574:	2265      	movs	r2, #101	; 0x65
    9576:	9202      	str	r2, [sp, #8]
    9578:	2200      	movs	r2, #0
    957a:	9203      	str	r2, [sp, #12]
    957c:	2200      	movs	r2, #0
    957e:	9204      	str	r2, [sp, #16]
    9580:	f640 32b8 	movw	r2, #3000	; 0xbb8
    9584:	9205      	str	r2, [sp, #20]
    9586:	4618      	mov	r0, r3
    9588:	2100      	movs	r1, #0
    958a:	f249 127c 	movw	r2, #37244	; 0x917c
    958e:	f2c0 0201 	movt	r2, #1
    9592:	2300      	movs	r3, #0
    9594:	f00e fff6 	bl	18584 <GL_Dialog_Progress>

		}
	}

	lblKO:
    return FCT_OK;
    9598:	2300      	movs	r3, #0
}
    959a:	4618      	mov	r0, r3
    959c:	f644 1380 	movw	r3, #18816	; 0x4980
    95a0:	f2c0 0302 	movt	r3, #2
    95a4:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
    95a8:	681b      	ldr	r3, [r3, #0]
    95aa:	429a      	cmp	r2, r3
    95ac:	d001      	beq.n	95b2 <after_reset+0x33e>
    95ae:	f7ff fc9f 	bl	8ef0 <__stack_chk_fail>
    95b2:	f107 07b8 	add.w	r7, r7, #184	; 0xb8
    95b6:	46bd      	mov	sp, r7
    95b8:	bd80      	pop	{r7, pc}
    95ba:	bf00      	nop

000095bc <is_name>:
 * \return FCT_OK
 *
 * \see sdk_tplus.h
 */
int is_name(NO_SEGMENT no, void *p1, S_ETATOUT *param_out)
{
    95bc:	b580      	push	{r7, lr}
    95be:	b086      	sub	sp, #24
    95c0:	af00      	add	r7, sp, #0
    95c2:	4603      	mov	r3, r0
    95c4:	60b9      	str	r1, [r7, #8]
    95c6:	607a      	str	r2, [r7, #4]
    95c8:	73fb      	strb	r3, [r7, #15]
    95ca:	f644 1380 	movw	r3, #18816	; 0x4980
    95ce:	f2c0 0302 	movt	r3, #2
    95d2:	681b      	ldr	r3, [r3, #0]
    95d4:	617b      	str	r3, [r7, #20]
  // Report application name to Manager cannot return the family name
  // because the T_APPNAME type used in the "is_name" function is too short to store
  // the FAMILY NAME (T_APPNAME length = 12+1 FAMILY NAME length =15+1)
  // we use the binary name instead (without extension, and whose length is 11+1)
  memset(param_out->returned_state[param_out->response_number].appname,0, sizeof(param_out->returned_state[param_out->response_number].appname));
    95d6:	687b      	ldr	r3, [r7, #4]
    95d8:	781b      	ldrb	r3, [r3, #0]
    95da:	461a      	mov	r2, r3
    95dc:	4613      	mov	r3, r2
    95de:	009b      	lsls	r3, r3, #2
    95e0:	189b      	adds	r3, r3, r2
    95e2:	009b      	lsls	r3, r3, #2
    95e4:	687a      	ldr	r2, [r7, #4]
    95e6:	18d3      	adds	r3, r2, r3
    95e8:	3304      	adds	r3, #4
    95ea:	4618      	mov	r0, r3
    95ec:	2100      	movs	r1, #0
    95ee:	220d      	movs	r2, #13
    95f0:	f7ff ea9c 	blx	8b2c <_init+0x5c>
  strncpy(param_out->returned_state[param_out->response_number].appname, fileName, sizeof(param_out->returned_state[param_out->response_number].appname) - 1);
    95f4:	687b      	ldr	r3, [r7, #4]
    95f6:	781b      	ldrb	r3, [r3, #0]
    95f8:	461a      	mov	r2, r3
    95fa:	4613      	mov	r3, r2
    95fc:	009b      	lsls	r3, r3, #2
    95fe:	189b      	adds	r3, r3, r2
    9600:	009b      	lsls	r3, r3, #2
    9602:	687a      	ldr	r2, [r7, #4]
    9604:	18d3      	adds	r3, r2, r3
    9606:	3304      	adds	r3, #4
    9608:	4618      	mov	r0, r3
    960a:	f644 11c8 	movw	r1, #18888	; 0x49c8
    960e:	f2c0 0102 	movt	r1, #2
    9612:	220c      	movs	r2, #12
    9614:	f7ff eb14 	blx	8c40 <_init+0x170>
  param_out->returned_state[param_out->response_number].no_appli = no;
    9618:	687b      	ldr	r3, [r7, #4]
    961a:	781b      	ldrb	r3, [r3, #0]
    961c:	461a      	mov	r2, r3
    961e:	6879      	ldr	r1, [r7, #4]
    9620:	4613      	mov	r3, r2
    9622:	009b      	lsls	r3, r3, #2
    9624:	189b      	adds	r3, r3, r2
    9626:	009b      	lsls	r3, r3, #2
    9628:	18cb      	adds	r3, r1, r3
    962a:	3308      	adds	r3, #8
    962c:	7bfa      	ldrb	r2, [r7, #15]
    962e:	725a      	strb	r2, [r3, #9]
  param_out->response_number++;
    9630:	687b      	ldr	r3, [r7, #4]
    9632:	781b      	ldrb	r3, [r3, #0]
    9634:	3301      	adds	r3, #1
    9636:	b2da      	uxtb	r2, r3
    9638:	687b      	ldr	r3, [r7, #4]
    963a:	701a      	strb	r2, [r3, #0]

  return (FCT_OK);
    963c:	2300      	movs	r3, #0
}
    963e:	4618      	mov	r0, r3
    9640:	f644 1380 	movw	r3, #18816	; 0x4980
    9644:	f2c0 0302 	movt	r3, #2
    9648:	697a      	ldr	r2, [r7, #20]
    964a:	681b      	ldr	r3, [r3, #0]
    964c:	429a      	cmp	r2, r3
    964e:	d001      	beq.n	9654 <is_name+0x98>
    9650:	f7ff fc4e 	bl	8ef0 <__stack_chk_fail>
    9654:	f107 0718 	add.w	r7, r7, #24
    9658:	46bd      	mov	sp, r7
    965a:	bd80      	pop	{r7, pc}

0000965c <is_state>:
 * \return FCT_OK
 *
 * \see sdk_tplus.h
 */
int is_state(NO_SEGMENT no, void *p1, S_ETATOUT *param_out)
{
    965c:	b580      	push	{r7, lr}
    965e:	b086      	sub	sp, #24
    9660:	af00      	add	r7, sp, #0
    9662:	4603      	mov	r3, r0
    9664:	60b9      	str	r1, [r7, #8]
    9666:	607a      	str	r2, [r7, #4]
    9668:	73fb      	strb	r3, [r7, #15]
    966a:	f644 1380 	movw	r3, #18816	; 0x4980
    966e:	f2c0 0302 	movt	r3, #2
    9672:	681b      	ldr	r3, [r3, #0]
    9674:	617b      	str	r3, [r7, #20]
    int ret;

    // Return application state
    param_out->returned_state[param_out->response_number].state.response = REP_OK;
    9676:	687b      	ldr	r3, [r7, #4]
    9678:	781b      	ldrb	r3, [r3, #0]
    967a:	461a      	mov	r2, r3
    967c:	6879      	ldr	r1, [r7, #4]
    967e:	4613      	mov	r3, r2
    9680:	009b      	lsls	r3, r3, #2
    9682:	189b      	adds	r3, r3, r2
    9684:	009b      	lsls	r3, r3, #2
    9686:	18cb      	adds	r3, r1, r3
    9688:	3310      	adds	r3, #16
    968a:	2200      	movs	r2, #0
    968c:	711a      	strb	r2, [r3, #4]
    ret = is_name(no, PT_NULL, param_out);
    968e:	7bfb      	ldrb	r3, [r7, #15]
    9690:	4618      	mov	r0, r3
    9692:	2100      	movs	r1, #0
    9694:	687a      	ldr	r2, [r7, #4]
    9696:	f7ff ff91 	bl	95bc <is_name>
    969a:	6138      	str	r0, [r7, #16]

    return (ret);
    969c:	693b      	ldr	r3, [r7, #16]
}
    969e:	4618      	mov	r0, r3
    96a0:	f644 1380 	movw	r3, #18816	; 0x4980
    96a4:	f2c0 0302 	movt	r3, #2
    96a8:	697a      	ldr	r2, [r7, #20]
    96aa:	681b      	ldr	r3, [r3, #0]
    96ac:	429a      	cmp	r2, r3
    96ae:	d001      	beq.n	96b4 <is_state+0x58>
    96b0:	f7ff fc1e 	bl	8ef0 <__stack_chk_fail>
    96b4:	f107 0718 	add.w	r7, r7, #24
    96b8:	46bd      	mov	sp, r7
    96ba:	bd80      	pop	{r7, pc}

000096bc <idle_message>:
 * \return FCT_OK
 *
 * \see sdk_tplus.h
 */
int idle_message(NO_SEGMENT no, void *p1, void *p2)
{
    96bc:	b580      	push	{r7, lr}
    96be:	b08a      	sub	sp, #40	; 0x28
    96c0:	af00      	add	r7, sp, #0
    96c2:	4603      	mov	r3, r0
    96c4:	60b9      	str	r1, [r7, #8]
    96c6:	607a      	str	r2, [r7, #4]
    96c8:	73fb      	strb	r3, [r7, #15]
    96ca:	f644 1380 	movw	r3, #18816	; 0x4980
    96ce:	f2c0 0302 	movt	r3, #2
    96d2:	681b      	ldr	r3, [r3, #0]
    96d4:	627b      	str	r3, [r7, #36]	; 0x24
       int x = 0;   // time value, it can be customized by developer according to the use case
    96d6:	2300      	movs	r3, #0
    96d8:	613b      	str	r3, [r7, #16]
       int y = 10;  // time value, it can be customized by developer according to the use case
    96da:	230a      	movs	r3, #10
    96dc:	617b      	str	r3, [r7, #20]
       Telium_File_t *hDsp;

       T_GL_HWIDGET GM_Tab_Gw;
       T_GL_HWIDGET label;

       hDsp = Telium_Fopen("DISPLAY", "w*");
    96de:	f249 1098 	movw	r0, #37272	; 0x9198
    96e2:	f2c0 0001 	movt	r0, #1
    96e6:	f249 11a0 	movw	r1, #37280	; 0x91a0
    96ea:	f2c0 0101 	movt	r1, #1
    96ee:	f00d fee9 	bl	174c4 <Telium_Fopen>
    96f2:	61b8      	str	r0, [r7, #24]

       GM_Tab_Gw = GL_Window_Create(gGoalGraphicLibInstance);
    96f4:	f644 1388 	movw	r3, #18824	; 0x4988
    96f8:	f2c0 0302 	movt	r3, #2
    96fc:	681b      	ldr	r3, [r3, #0]
    96fe:	4618      	mov	r0, r3
    9700:	f00f fb94 	bl	18e2c <GL_Window_Create>
    9704:	61f8      	str	r0, [r7, #28]
       label     = GL_Label_Create(GM_Tab_Gw);
    9706:	69f8      	ldr	r0, [r7, #28]
    9708:	f00f f8c0 	bl	1888c <GL_Label_Create>
    970c:	6238      	str	r0, [r7, #32]

       GL_Widget_SetText(label, idleMsg);
    970e:	6a38      	ldr	r0, [r7, #32]
    9710:	f249 01d0 	movw	r1, #37072	; 0x90d0
    9714:	f2c0 0101 	movt	r1, #1
    9718:	f00f fb0a 	bl	18d30 <GL_Widget_SetText>
       GL_Widget_SetBackAlign(label, GL_ALIGN_CENTER);
    971c:	6a38      	ldr	r0, [r7, #32]
    971e:	2100      	movs	r1, #0
    9720:	f00f f9c2 	bl	18aa8 <GL_Widget_SetBackAlign>
       GL_Widget_SetFontScale(label, GL_SCALE_MEDIUM);
    9724:	6a38      	ldr	r0, [r7, #32]
    9726:	f643 71f3 	movw	r1, #16371	; 0x3ff3
    972a:	f00f fa29 	bl	18b80 <GL_Widget_SetFontScale>
    972e:	e000      	b.n	9732 <idle_message+0x76>
          if (Telium_Ttestall(TIMER, y) == TIMER)
          {
                break; // TIMER event has been received from the Telium Manager
          }
       }
       while(1);
    9730:	bf00      	nop
       GL_Widget_SetBackAlign(label, GL_ALIGN_CENTER);
       GL_Widget_SetFontScale(label, GL_SCALE_MEDIUM);

       do
       {
          GL_Window_Dispatch(GM_Tab_Gw, x); // display the message
    9732:	693b      	ldr	r3, [r7, #16]
    9734:	69f8      	ldr	r0, [r7, #28]
    9736:	4619      	mov	r1, r3
    9738:	f00f fb8a 	bl	18e50 <GL_Window_Dispatch>

          if (Telium_Ttestall(TIMER, y) == TIMER)
    973c:	697b      	ldr	r3, [r7, #20]
    973e:	f44f 6080 	mov.w	r0, #1024	; 0x400
    9742:	4619      	mov	r1, r3
    9744:	f00d ffb4 	bl	176b0 <Telium_Ttestall>
    9748:	4603      	mov	r3, r0
    974a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
    974e:	d1ef      	bne.n	9730 <idle_message+0x74>
          {
                break; // TIMER event has been received from the Telium Manager
    9750:	bf00      	nop
          }
       }
       while(1);

       GL_Widget_Destroy(GM_Tab_Gw);
    9752:	69f8      	ldr	r0, [r7, #28]
    9754:	f00f f960 	bl	18a18 <GL_Widget_Destroy>

       Telium_Fclose(hDsp);
    9758:	69b8      	ldr	r0, [r7, #24]
    975a:	f00d fe81 	bl	17460 <Telium_Fclose>

       return FCT_OK;
    975e:	2300      	movs	r3, #0
}
    9760:	4618      	mov	r0, r3
    9762:	f644 1380 	movw	r3, #18816	; 0x4980
    9766:	f2c0 0302 	movt	r3, #2
    976a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    976c:	681b      	ldr	r3, [r3, #0]
    976e:	429a      	cmp	r2, r3
    9770:	d001      	beq.n	9776 <idle_message+0xba>
    9772:	f7ff fbbd 	bl	8ef0 <__stack_chk_fail>
    9776:	f107 0728 	add.w	r7, r7, #40	; 0x28
    977a:	46bd      	mov	sp, r7
    977c:	bd80      	pop	{r7, pc}
    977e:	bf00      	nop

00009780 <more_function>:
 *       This other prototype is used if the application manages more than one application name.
 *       The 'S_ETATOUT' structure allows to know the name selected by the user after pressing the "F" key.
 *       This new prototype can be used with SDK version >= 6.5.
 */
int more_function(NO_SEGMENT no, void *p1, void *p2)
{
    9780:	b580      	push	{r7, lr}
    9782:	b086      	sub	sp, #24
    9784:	af00      	add	r7, sp, #0
    9786:	4603      	mov	r3, r0
    9788:	60b9      	str	r1, [r7, #8]
    978a:	607a      	str	r2, [r7, #4]
    978c:	73fb      	strb	r3, [r7, #15]
    978e:	f644 1380 	movw	r3, #18816	; 0x4980
    9792:	f2c0 0302 	movt	r3, #2
    9796:	681b      	ldr	r3, [r3, #0]
    9798:	617b      	str	r3, [r7, #20]
    menuGoalDisplay();
    979a:	f000 fec7 	bl	a52c <menuGoalDisplay>

    return FCT_OK;
    979e:	2300      	movs	r3, #0
}
    97a0:	4618      	mov	r0, r3
    97a2:	f644 1380 	movw	r3, #18816	; 0x4980
    97a6:	f2c0 0302 	movt	r3, #2
    97aa:	697a      	ldr	r2, [r7, #20]
    97ac:	681b      	ldr	r3, [r3, #0]
    97ae:	429a      	cmp	r2, r3
    97b0:	d001      	beq.n	97b6 <more_function+0x36>
    97b2:	f7ff fb9d 	bl	8ef0 <__stack_chk_fail>
    97b6:	f107 0718 	add.w	r7, r7, #24
    97ba:	46bd      	mov	sp, r7
    97bc:	bd80      	pop	{r7, pc}
    97be:	bf00      	nop

000097c0 <keyboard_event>:
 * \return FCT_OK
 *
 * \see sdk_tplus.h
 */
int keyboard_event(NO_SEGMENT noappli, S_KEY *key_in, S_KEY *key_out)
{
    97c0:	b580      	push	{r7, lr}
    97c2:	b086      	sub	sp, #24
    97c4:	af00      	add	r7, sp, #0
    97c6:	4603      	mov	r3, r0
    97c8:	60b9      	str	r1, [r7, #8]
    97ca:	607a      	str	r2, [r7, #4]
    97cc:	73fb      	strb	r3, [r7, #15]
    97ce:	f644 1380 	movw	r3, #18816	; 0x4980
    97d2:	f2c0 0302 	movt	r3, #2
    97d6:	681b      	ldr	r3, [r3, #0]
    97d8:	617b      	str	r3, [r7, #20]
    // Keyboard management
    switch (key_in->keycode)
    97da:	68bb      	ldr	r3, [r7, #8]
    97dc:	681b      	ldr	r3, [r3, #0]
    97de:	3b16      	subs	r3, #22
    97e0:	2b23      	cmp	r3, #35	; 0x23
    97e2:	d854      	bhi.n	988e <keyboard_event+0xce>
    97e4:	a201      	add	r2, pc, #4	; (adr r2, 97ec <keyboard_event+0x2c>)
    97e6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    97ea:	bf00      	nop
    97ec:	0000987d 	.word	0x0000987d
    97f0:	00009885 	.word	0x00009885
    97f4:	00009885 	.word	0x00009885
    97f8:	00009885 	.word	0x00009885
    97fc:	0000988f 	.word	0x0000988f
    9800:	0000988f 	.word	0x0000988f
    9804:	0000988f 	.word	0x0000988f
    9808:	0000988f 	.word	0x0000988f
    980c:	0000988f 	.word	0x0000988f
    9810:	0000988f 	.word	0x0000988f
    9814:	00009885 	.word	0x00009885
    9818:	00009885 	.word	0x00009885
    981c:	00009885 	.word	0x00009885
    9820:	00009885 	.word	0x00009885
    9824:	00009885 	.word	0x00009885
    9828:	00009885 	.word	0x00009885
    982c:	00009885 	.word	0x00009885
    9830:	0000988f 	.word	0x0000988f
    9834:	00009885 	.word	0x00009885
    9838:	0000988f 	.word	0x0000988f
    983c:	0000988f 	.word	0x0000988f
    9840:	0000988f 	.word	0x0000988f
    9844:	0000988f 	.word	0x0000988f
    9848:	0000988f 	.word	0x0000988f
    984c:	0000987d 	.word	0x0000987d
    9850:	0000988f 	.word	0x0000988f
    9854:	0000987d 	.word	0x0000987d
    9858:	0000987d 	.word	0x0000987d
    985c:	0000987d 	.word	0x0000987d
    9860:	0000987d 	.word	0x0000987d
    9864:	0000987d 	.word	0x0000987d
    9868:	0000987d 	.word	0x0000987d
    986c:	0000987d 	.word	0x0000987d
    9870:	0000987d 	.word	0x0000987d
    9874:	0000987d 	.word	0x0000987d
    9878:	0000987d 	.word	0x0000987d
    case N7:
    case N8:
    case N9:
    case T_VAL:
    case T_POINT:
        key_out->keycode = 0; // Inhibit these keys to Manager for International domain
    987c:	687b      	ldr	r3, [r7, #4]
    987e:	2200      	movs	r2, #0
    9880:	601a      	str	r2, [r3, #0]
        break;
    9882:	e009      	b.n	9898 <keyboard_event+0xd8>
    case NAVI_CLEAR:
    case NAVI_OK:
    case UP:
    case DOWN:
    case T_F:                               // do not filter F key and return the same key !
        key_out->keycode=key_in->keycode;   // Return the same key value for keys above !
    9884:	68bb      	ldr	r3, [r7, #8]
    9886:	681a      	ldr	r2, [r3, #0]
    9888:	687b      	ldr	r3, [r7, #4]
    988a:	601a      	str	r2, [r3, #0]
        break;
    988c:	e004      	b.n	9898 <keyboard_event+0xd8>
    default:
        key_out->keycode=key_in->keycode;
    988e:	68bb      	ldr	r3, [r7, #8]
    9890:	681a      	ldr	r2, [r3, #0]
    9892:	687b      	ldr	r3, [r7, #4]
    9894:	601a      	str	r2, [r3, #0]
        break;
    9896:	bf00      	nop
    }

    return (FCT_OK);
    9898:	2300      	movs	r3, #0
}
    989a:	4618      	mov	r0, r3
    989c:	f644 1380 	movw	r3, #18816	; 0x4980
    98a0:	f2c0 0302 	movt	r3, #2
    98a4:	697a      	ldr	r2, [r7, #20]
    98a6:	681b      	ldr	r3, [r3, #0]
    98a8:	429a      	cmp	r2, r3
    98aa:	d001      	beq.n	98b0 <keyboard_event+0xf0>
    98ac:	f7ff fb20 	bl	8ef0 <__stack_chk_fail>
    98b0:	f107 0718 	add.w	r7, r7, #24
    98b4:	46bd      	mov	sp, r7
    98b6:	bd80      	pop	{r7, pc}

000098b8 <state>:
 * \return FCT_OK
 *
 * \see sdk_tplus.h
 */
int state(NO_SEGMENT no, void *p1, void *p2)
{
    98b8:	b580      	push	{r7, lr}
    98ba:	b09a      	sub	sp, #104	; 0x68
    98bc:	af02      	add	r7, sp, #8
    98be:	4603      	mov	r3, r0
    98c0:	60b9      	str	r1, [r7, #8]
    98c2:	607a      	str	r2, [r7, #4]
    98c4:	73fb      	strb	r3, [r7, #15]
    98c6:	f644 1380 	movw	r3, #18816	; 0x4980
    98ca:	f2c0 0302 	movt	r3, #2
    98ce:	681b      	ldr	r3, [r3, #0]
    98d0:	65fb      	str	r3, [r7, #92]	; 0x5c
    Telium_Date_t date;
    object_info_t infos;
    Telium_File_t *hPrinter;

    // Print application info
    ObjectGetInfo(OBJECT_TYPE_APPLI, no, &infos); // Retrieve application info
    98d2:	7bfa      	ldrb	r2, [r7, #15]
    98d4:	f107 0324 	add.w	r3, r7, #36	; 0x24
    98d8:	2001      	movs	r0, #1
    98da:	4611      	mov	r1, r2
    98dc:	461a      	mov	r2, r3
    98de:	f00e fab9 	bl	17e54 <ObjectGetInfo>

    hPrinter = Telium_Fopen("PRINTER", "w-*"); // Open printer driver
    98e2:	f249 10a4 	movw	r0, #37284	; 0x91a4
    98e6:	f2c0 0001 	movt	r0, #1
    98ea:	f249 11ac 	movw	r1, #37292	; 0x91ac
    98ee:	f2c0 0101 	movt	r1, #1
    98f2:	f00d fde7 	bl	174c4 <Telium_Fopen>
    98f6:	6178      	str	r0, [r7, #20]
    if (hPrinter != NULL)
    98f8:	697b      	ldr	r3, [r7, #20]
    98fa:	2b00      	cmp	r3, #0
    98fc:	d044      	beq.n	9988 <state+0xd0>
    {
        Telium_Pprintf("\x1b""E%s\n""\x1b""F", appName); // Print application name
    98fe:	f249 10b0 	movw	r0, #37296	; 0x91b0
    9902:	f2c0 0001 	movt	r0, #1
    9906:	f644 11b0 	movw	r1, #18864	; 0x49b0
    990a:	f2c0 0102 	movt	r1, #2
    990e:	f00d ffe5 	bl	178dc <Telium_Pprintf>
        Telium_Pprintf("         STATE         \n"
    9912:	f249 10b8 	movw	r0, #37304	; 0x91b8
    9916:	f2c0 0001 	movt	r0, #1
    991a:	f00d ffdf 	bl	178dc <Telium_Pprintf>
                "Application used as\n"
                "IngeDev Template\n\n");
        Telium_Read_date(&date); // Print date and time
    991e:	f107 0318 	add.w	r3, r7, #24
    9922:	4618      	mov	r0, r3
    9924:	f00d ff20 	bl	17768 <Telium_Read_date>
        Telium_Pprintf(szDate, date.day, date.month, date.year, date.hour, date.minute);
    9928:	f107 0118 	add.w	r1, r7, #24
    992c:	f107 0318 	add.w	r3, r7, #24
    9930:	1c9a      	adds	r2, r3, #2
    9932:	f107 0318 	add.w	r3, r7, #24
    9936:	3304      	adds	r3, #4
    9938:	f107 0018 	add.w	r0, r7, #24
    993c:	3006      	adds	r0, #6
    993e:	9000      	str	r0, [sp, #0]
    9940:	f107 0018 	add.w	r0, r7, #24
    9944:	3008      	adds	r0, #8
    9946:	9001      	str	r0, [sp, #4]
    9948:	f249 00f0 	movw	r0, #37104	; 0x90f0
    994c:	f2c0 0001 	movt	r0, #1
    9950:	f00d ffc4 	bl	178dc <Telium_Pprintf>
        Telium_Pprintf("File    : %s\n", infos.file_name); // Print application file name
    9954:	f107 0324 	add.w	r3, r7, #36	; 0x24
    9958:	3314      	adds	r3, #20
    995a:	f249 10f8 	movw	r0, #37368	; 0x91f8
    995e:	f2c0 0001 	movt	r0, #1
    9962:	4619      	mov	r1, r3
    9964:	f00d ffba 	bl	178dc <Telium_Pprintf>
        Telium_Pprintf("CRC     : %04x\n", infos.crc); // Print application CRC
    9968:	f8b7 3052 	ldrh.w	r3, [r7, #82]	; 0x52
    996c:	f249 2008 	movw	r0, #37384	; 0x9208
    9970:	f2c0 0001 	movt	r0, #1
    9974:	4619      	mov	r1, r3
    9976:	f00d ffb1 	bl	178dc <Telium_Pprintf>
        Telium_Ttestall(PRINTER, 0);
    997a:	2002      	movs	r0, #2
    997c:	2100      	movs	r1, #0
    997e:	f00d fe97 	bl	176b0 <Telium_Ttestall>

        Telium_Fclose(hPrinter); // Close printer driver
    9982:	6978      	ldr	r0, [r7, #20]
    9984:	f00d fd6c 	bl	17460 <Telium_Fclose>
    }

    return FCT_OK;
    9988:	2300      	movs	r3, #0
}
    998a:	4618      	mov	r0, r3
    998c:	f644 1380 	movw	r3, #18816	; 0x4980
    9990:	f2c0 0302 	movt	r3, #2
    9994:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
    9996:	681b      	ldr	r3, [r3, #0]
    9998:	429a      	cmp	r2, r3
    999a:	d001      	beq.n	99a0 <state+0xe8>
    999c:	f7ff faa8 	bl	8ef0 <__stack_chk_fail>
    99a0:	f107 0760 	add.w	r7, r7, #96	; 0x60
    99a4:	46bd      	mov	sp, r7
    99a6:	bd80      	pop	{r7, pc}

000099a8 <consult>:
 * \return FCT_OK
 *
 * \see sdk_tplus.h
 */
int consult(NO_SEGMENT no, void *p1, void *p2)
{
    99a8:	b580      	push	{r7, lr}
    99aa:	b08c      	sub	sp, #48	; 0x30
    99ac:	af02      	add	r7, sp, #8
    99ae:	4603      	mov	r3, r0
    99b0:	60b9      	str	r1, [r7, #8]
    99b2:	607a      	str	r2, [r7, #4]
    99b4:	73fb      	strb	r3, [r7, #15]
    99b6:	f644 1380 	movw	r3, #18816	; 0x4980
    99ba:	f2c0 0302 	movt	r3, #2
    99be:	681b      	ldr	r3, [r3, #0]
    99c0:	627b      	str	r3, [r7, #36]	; 0x24
    Telium_Date_t date;
    Telium_File_t *hPrinter;

    // Print daily totals
    hPrinter = Telium_Fopen("PRINTER", "w-*"); // Open printer driver
    99c2:	f249 10a4 	movw	r0, #37284	; 0x91a4
    99c6:	f2c0 0001 	movt	r0, #1
    99ca:	f249 11ac 	movw	r1, #37292	; 0x91ac
    99ce:	f2c0 0101 	movt	r1, #1
    99d2:	f00d fd77 	bl	174c4 <Telium_Fopen>
    99d6:	6178      	str	r0, [r7, #20]
    if (hPrinter != NULL)
    99d8:	697b      	ldr	r3, [r7, #20]
    99da:	2b00      	cmp	r3, #0
    99dc:	d032      	beq.n	9a44 <consult+0x9c>
    {
        Telium_Pprintf("\x1b""E%s\n""\x1b""F", appName); // Print application name
    99de:	f249 10b0 	movw	r0, #37296	; 0x91b0
    99e2:	f2c0 0001 	movt	r0, #1
    99e6:	f644 11b0 	movw	r1, #18864	; 0x49b0
    99ea:	f2c0 0102 	movt	r1, #2
    99ee:	f00d ff75 	bl	178dc <Telium_Pprintf>
        Telium_Pprintf("        CONSULT        \n"
    99f2:	f249 2018 	movw	r0, #37400	; 0x9218
    99f6:	f2c0 0001 	movt	r0, #1
    99fa:	f00d ff6f 	bl	178dc <Telium_Pprintf>
                "Print daily totals here\n"
                "Number of Debit/Credit \n"
                "Totals of Debit/Credit \n"
                "Number of Cancel\n\n");
        Telium_Read_date(&date); // Print date and time
    99fe:	f107 0318 	add.w	r3, r7, #24
    9a02:	4618      	mov	r0, r3
    9a04:	f00d feb0 	bl	17768 <Telium_Read_date>
        Telium_Pprintf(szDate, date.day, date.month, date.year, date.hour, date.minute);
    9a08:	f107 0118 	add.w	r1, r7, #24
    9a0c:	f107 0318 	add.w	r3, r7, #24
    9a10:	1c9a      	adds	r2, r3, #2
    9a12:	f107 0318 	add.w	r3, r7, #24
    9a16:	3304      	adds	r3, #4
    9a18:	f107 0018 	add.w	r0, r7, #24
    9a1c:	3006      	adds	r0, #6
    9a1e:	9000      	str	r0, [sp, #0]
    9a20:	f107 0018 	add.w	r0, r7, #24
    9a24:	3008      	adds	r0, #8
    9a26:	9001      	str	r0, [sp, #4]
    9a28:	f249 00f0 	movw	r0, #37104	; 0x90f0
    9a2c:	f2c0 0001 	movt	r0, #1
    9a30:	f00d ff54 	bl	178dc <Telium_Pprintf>

        Telium_Ttestall(PRINTER, 3*100);
    9a34:	2002      	movs	r0, #2
    9a36:	f44f 7196 	mov.w	r1, #300	; 0x12c
    9a3a:	f00d fe39 	bl	176b0 <Telium_Ttestall>
        Telium_Fclose(hPrinter); // Close printer driver
    9a3e:	6978      	ldr	r0, [r7, #20]
    9a40:	f00d fd0e 	bl	17460 <Telium_Fclose>
    }

    return FCT_OK;
    9a44:	2300      	movs	r3, #0
}
    9a46:	4618      	mov	r0, r3
    9a48:	f644 1380 	movw	r3, #18816	; 0x4980
    9a4c:	f2c0 0302 	movt	r3, #2
    9a50:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    9a52:	681b      	ldr	r3, [r3, #0]
    9a54:	429a      	cmp	r2, r3
    9a56:	d001      	beq.n	9a5c <consult+0xb4>
    9a58:	f7ff fa4a 	bl	8ef0 <__stack_chk_fail>
    9a5c:	f107 0728 	add.w	r7, r7, #40	; 0x28
    9a60:	46bd      	mov	sp, r7
    9a62:	bd80      	pop	{r7, pc}

00009a64 <mcall>:
 * \return FCT_OK
 *
 * \see sdk_tplus.h
 */
int mcall(NO_SEGMENT no, void *p1, void *p2)
{
    9a64:	b580      	push	{r7, lr}
    9a66:	b08c      	sub	sp, #48	; 0x30
    9a68:	af02      	add	r7, sp, #8
    9a6a:	4603      	mov	r3, r0
    9a6c:	60b9      	str	r1, [r7, #8]
    9a6e:	607a      	str	r2, [r7, #4]
    9a70:	73fb      	strb	r3, [r7, #15]
    9a72:	f644 1380 	movw	r3, #18816	; 0x4980
    9a76:	f2c0 0302 	movt	r3, #2
    9a7a:	681b      	ldr	r3, [r3, #0]
    9a7c:	627b      	str	r3, [r7, #36]	; 0x24
    Telium_Date_t date;
    Telium_File_t *hPrinter;

    // Print call schedule
    hPrinter = Telium_Fopen("PRINTER", "w-*"); // Open printer driver
    9a7e:	f249 10a4 	movw	r0, #37284	; 0x91a4
    9a82:	f2c0 0001 	movt	r0, #1
    9a86:	f249 11ac 	movw	r1, #37292	; 0x91ac
    9a8a:	f2c0 0101 	movt	r1, #1
    9a8e:	f00d fd19 	bl	174c4 <Telium_Fopen>
    9a92:	6178      	str	r0, [r7, #20]
    if (hPrinter != NULL)
    9a94:	697b      	ldr	r3, [r7, #20]
    9a96:	2b00      	cmp	r3, #0
    9a98:	d032      	beq.n	9b00 <mcall+0x9c>
    {
        Telium_Pprintf("\x1b""E%s\n""\x1b""F", appName); // Print application name
    9a9a:	f249 10b0 	movw	r0, #37296	; 0x91b0
    9a9e:	f2c0 0001 	movt	r0, #1
    9aa2:	f644 11b0 	movw	r1, #18864	; 0x49b0
    9aa6:	f2c0 0102 	movt	r1, #2
    9aaa:	f00d ff17 	bl	178dc <Telium_Pprintf>
        Telium_Pprintf("         MCALL         \n"
    9aae:	f249 208c 	movw	r0, #37516	; 0x928c
    9ab2:	f2c0 0001 	movt	r0, #1
    9ab6:	f00d ff11 	bl	178dc <Telium_Pprintf>
                "Planning of call here  \n"
                "Time release batch     \n"
                "Time loading parameters\n"
                "Time loading hotlist\n\n");
        Telium_Read_date(&date); // Print date and time
    9aba:	f107 0318 	add.w	r3, r7, #24
    9abe:	4618      	mov	r0, r3
    9ac0:	f00d fe52 	bl	17768 <Telium_Read_date>
        Telium_Pprintf(szDate, date.day, date.month, date.year, date.hour, date.minute);
    9ac4:	f107 0118 	add.w	r1, r7, #24
    9ac8:	f107 0318 	add.w	r3, r7, #24
    9acc:	1c9a      	adds	r2, r3, #2
    9ace:	f107 0318 	add.w	r3, r7, #24
    9ad2:	3304      	adds	r3, #4
    9ad4:	f107 0018 	add.w	r0, r7, #24
    9ad8:	3006      	adds	r0, #6
    9ada:	9000      	str	r0, [sp, #0]
    9adc:	f107 0018 	add.w	r0, r7, #24
    9ae0:	3008      	adds	r0, #8
    9ae2:	9001      	str	r0, [sp, #4]
    9ae4:	f249 00f0 	movw	r0, #37104	; 0x90f0
    9ae8:	f2c0 0001 	movt	r0, #1
    9aec:	f00d fef6 	bl	178dc <Telium_Pprintf>

        Telium_Ttestall(PRINTER, 3*100);
    9af0:	2002      	movs	r0, #2
    9af2:	f44f 7196 	mov.w	r1, #300	; 0x12c
    9af6:	f00d fddb 	bl	176b0 <Telium_Ttestall>
        Telium_Fclose(hPrinter); // Close printer driver
    9afa:	6978      	ldr	r0, [r7, #20]
    9afc:	f00d fcb0 	bl	17460 <Telium_Fclose>
    }

    return FCT_OK;
    9b00:	2300      	movs	r3, #0
}
    9b02:	4618      	mov	r0, r3
    9b04:	f644 1380 	movw	r3, #18816	; 0x4980
    9b08:	f2c0 0302 	movt	r3, #2
    9b0c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    9b0e:	681b      	ldr	r3, [r3, #0]
    9b10:	429a      	cmp	r2, r3
    9b12:	d001      	beq.n	9b18 <mcall+0xb4>
    9b14:	f7ff f9ec 	bl	8ef0 <__stack_chk_fail>
    9b18:	f107 0728 	add.w	r7, r7, #40	; 0x28
    9b1c:	46bd      	mov	sp, r7
    9b1e:	bd80      	pop	{r7, pc}

00009b20 <is_time_function>:
 * \return is_name result
 *
 * \see sdk_tplus.h
 */
int is_time_function(NO_SEGMENT no, void *p1, S_ETATOUT *param_out)
{
    9b20:	b580      	push	{r7, lr}
    9b22:	b086      	sub	sp, #24
    9b24:	af00      	add	r7, sp, #0
    9b26:	4603      	mov	r3, r0
    9b28:	60b9      	str	r1, [r7, #8]
    9b2a:	607a      	str	r2, [r7, #4]
    9b2c:	73fb      	strb	r3, [r7, #15]
    9b2e:	f644 1380 	movw	r3, #18816	; 0x4980
    9b32:	f2c0 0302 	movt	r3, #2
    9b36:	681b      	ldr	r3, [r3, #0]
    9b38:	617b      	str	r3, [r7, #20]
    int iRet;

    // Peripherals needed?
    param_out->returned_state[param_out->response_number].state.response = REP_OK;
    9b3a:	687b      	ldr	r3, [r7, #4]
    9b3c:	781b      	ldrb	r3, [r3, #0]
    9b3e:	461a      	mov	r2, r3
    9b40:	6879      	ldr	r1, [r7, #4]
    9b42:	4613      	mov	r3, r2
    9b44:	009b      	lsls	r3, r3, #2
    9b46:	189b      	adds	r3, r3, r2
    9b48:	009b      	lsls	r3, r3, #2
    9b4a:	18cb      	adds	r3, r1, r3
    9b4c:	3310      	adds	r3, #16
    9b4e:	2200      	movs	r2, #0
    9b50:	711a      	strb	r2, [r3, #4]
    iRet = is_name(no, PT_NULL, param_out);
    9b52:	7bfb      	ldrb	r3, [r7, #15]
    9b54:	4618      	mov	r0, r3
    9b56:	2100      	movs	r1, #0
    9b58:	687a      	ldr	r2, [r7, #4]
    9b5a:	f7ff fd2f 	bl	95bc <is_name>
    9b5e:	6138      	str	r0, [r7, #16]

    return iRet;
    9b60:	693b      	ldr	r3, [r7, #16]
}
    9b62:	4618      	mov	r0, r3
    9b64:	f644 1380 	movw	r3, #18816	; 0x4980
    9b68:	f2c0 0302 	movt	r3, #2
    9b6c:	697a      	ldr	r2, [r7, #20]
    9b6e:	681b      	ldr	r3, [r3, #0]
    9b70:	429a      	cmp	r2, r3
    9b72:	d001      	beq.n	9b78 <is_time_function+0x58>
    9b74:	f7ff f9bc 	bl	8ef0 <__stack_chk_fail>
    9b78:	f107 0718 	add.w	r7, r7, #24
    9b7c:	46bd      	mov	sp, r7
    9b7e:	bd80      	pop	{r7, pc}

00009b80 <time_function>:
 * \return FCT_OK
 *
 * \see sdk_tplus.h
 */
int time_function(NO_SEGMENT no, void *p1, void *p2)
{
    9b80:	b580      	push	{r7, lr}
    9b82:	b088      	sub	sp, #32
    9b84:	af02      	add	r7, sp, #8
    9b86:	4603      	mov	r3, r0
    9b88:	60b9      	str	r1, [r7, #8]
    9b8a:	607a      	str	r2, [r7, #4]
    9b8c:	73fb      	strb	r3, [r7, #15]
    9b8e:	f644 1380 	movw	r3, #18816	; 0x4980
    9b92:	f2c0 0302 	movt	r3, #2
    9b96:	681b      	ldr	r3, [r3, #0]
    9b98:	617b      	str	r3, [r7, #20]
    // Periodical function in progress
    GL_Dialog_Message(gGoalGraphicLibInstance, appName, timeToCall,
    9b9a:	f644 1388 	movw	r3, #18824	; 0x4988
    9b9e:	f2c0 0302 	movt	r3, #2
    9ba2:	681b      	ldr	r3, [r3, #0]
    9ba4:	2201      	movs	r2, #1
    9ba6:	9200      	str	r2, [sp, #0]
    9ba8:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
    9bac:	9201      	str	r2, [sp, #4]
    9bae:	4618      	mov	r0, r3
    9bb0:	f644 11b0 	movw	r1, #18864	; 0x49b0
    9bb4:	f2c0 0102 	movt	r1, #2
    9bb8:	f249 02bc 	movw	r2, #37052	; 0x90bc
    9bbc:	f2c0 0201 	movt	r2, #1
    9bc0:	2300      	movs	r3, #0
    9bc2:	f00e fcbb 	bl	1853c <GL_Dialog_Message>
        GL_ICON_NONE, GL_BUTTON_VALID, 2 * GL_TIME_SECOND);

    return (FCT_OK);
    9bc6:	2300      	movs	r3, #0
}
    9bc8:	4618      	mov	r0, r3
    9bca:	f644 1380 	movw	r3, #18816	; 0x4980
    9bce:	f2c0 0302 	movt	r3, #2
    9bd2:	697a      	ldr	r2, [r7, #20]
    9bd4:	681b      	ldr	r3, [r3, #0]
    9bd6:	429a      	cmp	r2, r3
    9bd8:	d001      	beq.n	9bde <time_function+0x5e>
    9bda:	f7ff f989 	bl	8ef0 <__stack_chk_fail>
    9bde:	f107 0718 	add.w	r7, r7, #24
    9be2:	46bd      	mov	sp, r7
    9be4:	bd80      	pop	{r7, pc}
    9be6:	bf00      	nop

00009be8 <is_change_init>:
 * \return is_name result
 *
 * \see sdk_tplus.h
 */
int is_change_init(NO_SEGMENT no, void *p1, S_ETATOUT *param_out)
{
    9be8:	b590      	push	{r4, r7, lr}
    9bea:	b0d3      	sub	sp, #332	; 0x14c
    9bec:	af00      	add	r7, sp, #0
    9bee:	f107 0308 	add.w	r3, r7, #8
    9bf2:	6019      	str	r1, [r3, #0]
    9bf4:	1d3b      	adds	r3, r7, #4
    9bf6:	601a      	str	r2, [r3, #0]
    9bf8:	f107 030f 	add.w	r3, r7, #15
    9bfc:	4602      	mov	r2, r0
    9bfe:	701a      	strb	r2, [r3, #0]
    9c00:	f644 1380 	movw	r3, #18816	; 0x4980
    9c04:	f2c0 0302 	movt	r3, #2
    9c08:	681b      	ldr	r3, [r3, #0]
    9c0a:	f8c7 3144 	str.w	r3, [r7, #324]	; 0x144
    S_ETATOUT etatout;
    int iRet;
    memcpy(&etatout, param_out, sizeof(etatout));
    9c0e:	f107 0214 	add.w	r2, r7, #20
    9c12:	1d3b      	adds	r3, r7, #4
    9c14:	4610      	mov	r0, r2
    9c16:	6819      	ldr	r1, [r3, #0]
    9c18:	f44f 7298 	mov.w	r2, #304	; 0x130
    9c1c:	f7fe efd8 	blx	8bd0 <_init+0x100>

    // accept all
    etatout.returned_state[etatout.response_number].state.mask = 0;
    9c20:	f107 0314 	add.w	r3, r7, #20
    9c24:	781b      	ldrb	r3, [r3, #0]
    9c26:	461a      	mov	r2, r3
    9c28:	f107 0114 	add.w	r1, r7, #20
    9c2c:	4613      	mov	r3, r2
    9c2e:	009b      	lsls	r3, r3, #2
    9c30:	189b      	adds	r3, r3, r2
    9c32:	009b      	lsls	r3, r3, #2
    9c34:	18cb      	adds	r3, r1, r3
    9c36:	3314      	adds	r3, #20
    9c38:	2200      	movs	r2, #0
    9c3a:	601a      	str	r2, [r3, #0]
    memcpy(param_out, &etatout, sizeof(etatout));
    9c3c:	1d3a      	adds	r2, r7, #4
    9c3e:	f107 0314 	add.w	r3, r7, #20
    9c42:	6810      	ldr	r0, [r2, #0]
    9c44:	4619      	mov	r1, r3
    9c46:	f44f 7298 	mov.w	r2, #304	; 0x130
    9c4a:	f7fe efc2 	blx	8bd0 <_init+0x100>
    iRet = is_name(no, PT_NULL, param_out);
    9c4e:	f107 0410 	add.w	r4, r7, #16
    9c52:	f107 030f 	add.w	r3, r7, #15
    9c56:	781a      	ldrb	r2, [r3, #0]
    9c58:	1d3b      	adds	r3, r7, #4
    9c5a:	4610      	mov	r0, r2
    9c5c:	2100      	movs	r1, #0
    9c5e:	681a      	ldr	r2, [r3, #0]
    9c60:	f7ff fcac 	bl	95bc <is_name>
    9c64:	6020      	str	r0, [r4, #0]

    return iRet;
    9c66:	f107 0310 	add.w	r3, r7, #16
    9c6a:	681b      	ldr	r3, [r3, #0]
}
    9c6c:	4618      	mov	r0, r3
    9c6e:	f644 1380 	movw	r3, #18816	; 0x4980
    9c72:	f2c0 0302 	movt	r3, #2
    9c76:	f8d7 2144 	ldr.w	r2, [r7, #324]	; 0x144
    9c7a:	681b      	ldr	r3, [r3, #0]
    9c7c:	429a      	cmp	r2, r3
    9c7e:	d001      	beq.n	9c84 <is_change_init+0x9c>
    9c80:	f7ff f936 	bl	8ef0 <__stack_chk_fail>
    9c84:	f507 77a6 	add.w	r7, r7, #332	; 0x14c
    9c88:	46bd      	mov	sp, r7
    9c8a:	bd90      	pop	{r4, r7, pc}

00009c8c <modif_param>:
 * \return FCT_OK
 *
 * \see sdk_tplus.h
 */
int modif_param(NO_SEGMENT noappli, S_MODIF_P *param_in, void *p2)
{
    9c8c:	b580      	push	{r7, lr}
    9c8e:	b0d4      	sub	sp, #336	; 0x150
    9c90:	af00      	add	r7, sp, #0
    9c92:	f107 0308 	add.w	r3, r7, #8
    9c96:	6019      	str	r1, [r3, #0]
    9c98:	1d3b      	adds	r3, r7, #4
    9c9a:	601a      	str	r2, [r3, #0]
    9c9c:	f107 030f 	add.w	r3, r7, #15
    9ca0:	4602      	mov	r2, r0
    9ca2:	701a      	strb	r2, [r3, #0]
    9ca4:	f644 1380 	movw	r3, #18816	; 0x4980
    9ca8:	f2c0 0302 	movt	r3, #2
    9cac:	681b      	ldr	r3, [r3, #0]
    9cae:	f8c7 314c 	str.w	r3, [r7, #332]	; 0x14c
    S_MODIF_P param_changed;

    memcpy(&param_changed, param_in, sizeof(param_changed));
    9cb2:	f107 0214 	add.w	r2, r7, #20
    9cb6:	f107 0308 	add.w	r3, r7, #8
    9cba:	4610      	mov	r0, r2
    9cbc:	6819      	ldr	r1, [r3, #0]
    9cbe:	f44f 729c 	mov.w	r2, #312	; 0x138
    9cc2:	f7fe ef86 	blx	8bd0 <_init+0x100>
    Telium_Fopen("DISPLAY", "w");
    9cc6:	f249 1098 	movw	r0, #37272	; 0x9198
    9cca:	f2c0 0001 	movt	r0, #1
    9cce:	f249 3104 	movw	r1, #37636	; 0x9304
    9cd2:	f2c0 0101 	movt	r1, #1
    9cd6:	f00d fbf5 	bl	174c4 <Telium_Fopen>
    Telium_Printf("MODIF_PARAM\n%04x", (int)param_changed.etatout.returned_state[0].state.mask);
    9cda:	f107 0314 	add.w	r3, r7, #20
    9cde:	695b      	ldr	r3, [r3, #20]
    9ce0:	f249 3008 	movw	r0, #37640	; 0x9308
    9ce4:	f2c0 0001 	movt	r0, #1
    9ce8:	4619      	mov	r1, r3
    9cea:	f00d fe0e 	bl	1790a <Telium_Printf>
    Telium_Ttestall(0, 200);
    9cee:	2000      	movs	r0, #0
    9cf0:	21c8      	movs	r1, #200	; 0xc8
    9cf2:	f00d fcdd 	bl	176b0 <Telium_Ttestall>
    Telium_Fclose(Telium_Stdout());
    9cf6:	f00d fc77 	bl	175e8 <Telium_Stdout>
    9cfa:	4603      	mov	r3, r0
    9cfc:	4618      	mov	r0, r3
    9cfe:	f00d fbaf 	bl	17460 <Telium_Fclose>

    return (FCT_OK);
    9d02:	2300      	movs	r3, #0
}
    9d04:	4618      	mov	r0, r3
    9d06:	f644 1380 	movw	r3, #18816	; 0x4980
    9d0a:	f2c0 0302 	movt	r3, #2
    9d0e:	f8d7 214c 	ldr.w	r2, [r7, #332]	; 0x14c
    9d12:	681b      	ldr	r3, [r3, #0]
    9d14:	429a      	cmp	r2, r3
    9d16:	d001      	beq.n	9d1c <modif_param+0x90>
    9d18:	f7ff f8ea 	bl	8ef0 <__stack_chk_fail>
    9d1c:	f507 77a8 	add.w	r7, r7, #336	; 0x150
    9d20:	46bd      	mov	sp, r7
    9d22:	bd80      	pop	{r7, pc}

00009d24 <is_evol_pg>:
 * \return is_name result
 *
 * \see sdk_tplus.h
 */
int is_evol_pg(NO_SEGMENT no, void *p1, S_ETATOUT *param_out)
{
    9d24:	b580      	push	{r7, lr}
    9d26:	b086      	sub	sp, #24
    9d28:	af00      	add	r7, sp, #0
    9d2a:	4603      	mov	r3, r0
    9d2c:	60b9      	str	r1, [r7, #8]
    9d2e:	607a      	str	r2, [r7, #4]
    9d30:	73fb      	strb	r3, [r7, #15]
    9d32:	f644 1380 	movw	r3, #18816	; 0x4980
    9d36:	f2c0 0302 	movt	r3, #2
    9d3a:	681b      	ldr	r3, [r3, #0]
    9d3c:	617b      	str	r3, [r7, #20]
    int iRet;

    // Downloading process allowed?
    param_out->returned_state[param_out->response_number].state.response = REP_OK;
    9d3e:	687b      	ldr	r3, [r7, #4]
    9d40:	781b      	ldrb	r3, [r3, #0]
    9d42:	461a      	mov	r2, r3
    9d44:	6879      	ldr	r1, [r7, #4]
    9d46:	4613      	mov	r3, r2
    9d48:	009b      	lsls	r3, r3, #2
    9d4a:	189b      	adds	r3, r3, r2
    9d4c:	009b      	lsls	r3, r3, #2
    9d4e:	18cb      	adds	r3, r1, r3
    9d50:	3310      	adds	r3, #16
    9d52:	2200      	movs	r2, #0
    9d54:	711a      	strb	r2, [r3, #4]
    iRet = is_name(no, PT_NULL, param_out);
    9d56:	7bfb      	ldrb	r3, [r7, #15]
    9d58:	4618      	mov	r0, r3
    9d5a:	2100      	movs	r1, #0
    9d5c:	687a      	ldr	r2, [r7, #4]
    9d5e:	f7ff fc2d 	bl	95bc <is_name>
    9d62:	6138      	str	r0, [r7, #16]

    return iRet;
    9d64:	693b      	ldr	r3, [r7, #16]
}
    9d66:	4618      	mov	r0, r3
    9d68:	f644 1380 	movw	r3, #18816	; 0x4980
    9d6c:	f2c0 0302 	movt	r3, #2
    9d70:	697a      	ldr	r2, [r7, #20]
    9d72:	681b      	ldr	r3, [r3, #0]
    9d74:	429a      	cmp	r2, r3
    9d76:	d001      	beq.n	9d7c <is_evol_pg+0x58>
    9d78:	f7ff f8ba 	bl	8ef0 <__stack_chk_fail>
    9d7c:	f107 0718 	add.w	r7, r7, #24
    9d80:	46bd      	mov	sp, r7
    9d82:	bd80      	pop	{r7, pc}

00009d84 <is_delete>:
 * \return FCT_OK
 *
 * \see sdk_tplus.h
 */
int is_delete(NO_SEGMENT no, void *p1, S_DELETE *param_out)
{
    9d84:	b580      	push	{r7, lr}
    9d86:	b086      	sub	sp, #24
    9d88:	af00      	add	r7, sp, #0
    9d8a:	4603      	mov	r3, r0
    9d8c:	60b9      	str	r1, [r7, #8]
    9d8e:	607a      	str	r2, [r7, #4]
    9d90:	73fb      	strb	r3, [r7, #15]
    9d92:	f644 1380 	movw	r3, #18816	; 0x4980
    9d96:	f2c0 0302 	movt	r3, #2
    9d9a:	681b      	ldr	r3, [r3, #0]
    9d9c:	617b      	str	r3, [r7, #20]
    // Deletion process allowed?
    param_out->deleting = DEL_YES;
    9d9e:	687b      	ldr	r3, [r7, #4]
    9da0:	2201      	movs	r2, #1
    9da2:	701a      	strb	r2, [r3, #0]

    return (FCT_OK);
    9da4:	2300      	movs	r3, #0
}
    9da6:	4618      	mov	r0, r3
    9da8:	f644 1380 	movw	r3, #18816	; 0x4980
    9dac:	f2c0 0302 	movt	r3, #2
    9db0:	697a      	ldr	r2, [r7, #20]
    9db2:	681b      	ldr	r3, [r3, #0]
    9db4:	429a      	cmp	r2, r3
    9db6:	d001      	beq.n	9dbc <is_delete+0x38>
    9db8:	f7ff f89a 	bl	8ef0 <__stack_chk_fail>
    9dbc:	f107 0718 	add.w	r7, r7, #24
    9dc0:	46bd      	mov	sp, r7
    9dc2:	bd80      	pop	{r7, pc}

00009dc4 <file_received>:
 * \return FCT_OK
 *
 * \see sdk_tplus.h
 */
int file_received(NO_SEGMENT no, S_FILE *param_in, void *p2)
{
    9dc4:	b590      	push	{r4, r7, lr}
    9dc6:	b0e1      	sub	sp, #388	; 0x184
    9dc8:	af00      	add	r7, sp, #0
    9dca:	f107 0308 	add.w	r3, r7, #8
    9dce:	6019      	str	r1, [r3, #0]
    9dd0:	1d3b      	adds	r3, r7, #4
    9dd2:	601a      	str	r2, [r3, #0]
    9dd4:	f107 030f 	add.w	r3, r7, #15
    9dd8:	4602      	mov	r2, r0
    9dda:	701a      	strb	r2, [r3, #0]
    9ddc:	f644 1380 	movw	r3, #18816	; 0x4980
    9de0:	f2c0 0302 	movt	r3, #2
    9de4:	681b      	ldr	r3, [r3, #0]
    9de6:	f8c7 317c 	str.w	r3, [r7, #380]	; 0x17c
    int len;
    char rsp[256];
    S_FS_FILE *pFile;

    // Print parameter file received
    prt = Telium_Fopen("PRINTER", "w-"); // Open printer driver
    9dea:	f107 0418 	add.w	r4, r7, #24
    9dee:	f249 10a4 	movw	r0, #37284	; 0x91a4
    9df2:	f2c0 0001 	movt	r0, #1
    9df6:	f249 311c 	movw	r1, #37660	; 0x931c
    9dfa:	f2c0 0101 	movt	r1, #1
    9dfe:	f00d fb61 	bl	174c4 <Telium_Fopen>
    9e02:	6020      	str	r0, [r4, #0]
    Telium_Pprintf("\x1b""E%s\n""\x1b""F", appName);
    9e04:	f249 10b0 	movw	r0, #37296	; 0x91b0
    9e08:	f2c0 0001 	movt	r0, #1
    9e0c:	f644 11b0 	movw	r1, #18864	; 0x49b0
    9e10:	f2c0 0102 	movt	r1, #2
    9e14:	f00d fd62 	bl	178dc <Telium_Pprintf>
    Telium_Pprintf("File Received :\n/%s/%s\n", param_in->volume_name, param_in->file_name);
    9e18:	f107 0308 	add.w	r3, r7, #8
    9e1c:	681a      	ldr	r2, [r3, #0]
    9e1e:	f107 0308 	add.w	r3, r7, #8
    9e22:	681b      	ldr	r3, [r3, #0]
    9e24:	3310      	adds	r3, #16
    9e26:	f249 3020 	movw	r0, #37664	; 0x9320
    9e2a:	f2c0 0001 	movt	r0, #1
    9e2e:	4611      	mov	r1, r2
    9e30:	461a      	mov	r2, r3
    9e32:	f00d fd53 	bl	178dc <Telium_Pprintf>
    Telium_Ttestall(PRINTER, 0); // Print volume+file_name
    9e36:	2002      	movs	r0, #2
    9e38:	2100      	movs	r1, #0
    9e3a:	f00d fc39 	bl	176b0 <Telium_Ttestall>

    memclr(Dir_File,sizeof(Dir_File));
    9e3e:	f107 0344 	add.w	r3, r7, #68	; 0x44
    9e42:	4618      	mov	r0, r3
    9e44:	2100      	movs	r1, #0
    9e46:	2219      	movs	r2, #25
    9e48:	f7fe ee70 	blx	8b2c <_init+0x5c>
    memclr(Dir_Label,sizeof(Dir_Label));
    9e4c:	f107 0360 	add.w	r3, r7, #96	; 0x60
    9e50:	4618      	mov	r0, r3
    9e52:	2100      	movs	r1, #0
    9e54:	2219      	movs	r2, #25
    9e56:	f7fe ee6a 	blx	8b2c <_init+0x5c>

    Telium_Sprintf(Dir_Label, "/%s", param_in->volume_name);
    9e5a:	f107 0308 	add.w	r3, r7, #8
    9e5e:	681b      	ldr	r3, [r3, #0]
    9e60:	f107 0260 	add.w	r2, r7, #96	; 0x60
    9e64:	4610      	mov	r0, r2
    9e66:	f249 111c 	movw	r1, #37148	; 0x911c
    9e6a:	f2c0 0101 	movt	r1, #1
    9e6e:	461a      	mov	r2, r3
    9e70:	f00d fd6c 	bl	1794c <Telium_Sprintf>
    ParamCreat.Mode = FS_WRITEONCE;
    9e74:	f107 0324 	add.w	r3, r7, #36	; 0x24
    9e78:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    9e7c:	611a      	str	r2, [r3, #16]
    Ret = FS_mount(Dir_Label, &ParamCreat.Mode);
    9e7e:	f107 041c 	add.w	r4, r7, #28
    9e82:	f107 0260 	add.w	r2, r7, #96	; 0x60
    9e86:	f107 0324 	add.w	r3, r7, #36	; 0x24
    9e8a:	3310      	adds	r3, #16
    9e8c:	4610      	mov	r0, r2
    9e8e:	4619      	mov	r1, r3
    9e90:	f00d fe56 	bl	17b40 <FS_mount>
    9e94:	6020      	str	r0, [r4, #0]
    if (Ret == FS_OK)
    9e96:	f107 031c 	add.w	r3, r7, #28
    9e9a:	681b      	ldr	r3, [r3, #0]
    9e9c:	2b02      	cmp	r3, #2
    9e9e:	d144      	bne.n	9f2a <file_received+0x166>
    {
        Telium_Sprintf(Dir_File, "/%s/%s", param_in->volume_name, param_in->file_name);
    9ea0:	f107 0308 	add.w	r3, r7, #8
    9ea4:	681a      	ldr	r2, [r3, #0]
    9ea6:	f107 0308 	add.w	r3, r7, #8
    9eaa:	681b      	ldr	r3, [r3, #0]
    9eac:	3310      	adds	r3, #16
    9eae:	f107 0144 	add.w	r1, r7, #68	; 0x44
    9eb2:	4608      	mov	r0, r1
    9eb4:	f249 3138 	movw	r1, #37688	; 0x9338
    9eb8:	f2c0 0101 	movt	r1, #1
    9ebc:	f00d fd46 	bl	1794c <Telium_Sprintf>
        pFile = FS_open(Dir_File, "r"); // The file can be open at this stage
    9ec0:	f107 0420 	add.w	r4, r7, #32
    9ec4:	f107 0344 	add.w	r3, r7, #68	; 0x44
    9ec8:	4618      	mov	r0, r3
    9eca:	f249 3140 	movw	r1, #37696	; 0x9340
    9ece:	f2c0 0101 	movt	r1, #1
    9ed2:	f00d fe5f 	bl	17b94 <FS_open>
    9ed6:	6020      	str	r0, [r4, #0]

        // Eventually read the file and get parameters
        len = FS_length(pFile); // File length in bytes
    9ed8:	f107 0414 	add.w	r4, r7, #20
    9edc:	f107 0320 	add.w	r3, r7, #32
    9ee0:	6818      	ldr	r0, [r3, #0]
    9ee2:	f00d fe01 	bl	17ae8 <FS_length>
    9ee6:	6020      	str	r0, [r4, #0]
        if (len > sizeof(rsp))
    9ee8:	f107 0314 	add.w	r3, r7, #20
    9eec:	681b      	ldr	r3, [r3, #0]
    9eee:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
    9ef2:	d904      	bls.n	9efe <file_received+0x13a>
        {
            len = sizeof(rsp);
    9ef4:	f107 0314 	add.w	r3, r7, #20
    9ef8:	f44f 7280 	mov.w	r2, #256	; 0x100
    9efc:	601a      	str	r2, [r3, #0]
        }
        FS_read(rsp, len, 1, pFile); // Read from file
    9efe:	f107 017c 	add.w	r1, r7, #124	; 0x7c
    9f02:	f107 0214 	add.w	r2, r7, #20
    9f06:	f107 0320 	add.w	r3, r7, #32
    9f0a:	4608      	mov	r0, r1
    9f0c:	6811      	ldr	r1, [r2, #0]
    9f0e:	2201      	movs	r2, #1
    9f10:	681b      	ldr	r3, [r3, #0]
    9f12:	f00d fe69 	bl	17be8 <FS_read>

        FS_close(pFile); // Close the file
    9f16:	f107 0320 	add.w	r3, r7, #32
    9f1a:	6818      	ldr	r0, [r3, #0]
    9f1c:	f00d fd5e 	bl	179dc <FS_close>
        FS_unmount(Dir_Label); // Cannot be deleted as it is located in system disk
    9f20:	f107 0360 	add.w	r3, r7, #96	; 0x60
    9f24:	4618      	mov	r0, r3
    9f26:	f00d ff0b 	bl	17d40 <FS_unmount>
    }

    Telium_Pprintf("%s\n", rsp);
    9f2a:	f107 037c 	add.w	r3, r7, #124	; 0x7c
    9f2e:	f249 3044 	movw	r0, #37700	; 0x9344
    9f32:	f2c0 0001 	movt	r0, #1
    9f36:	4619      	mov	r1, r3
    9f38:	f00d fcd0 	bl	178dc <Telium_Pprintf>

    Telium_Fclose(prt); // Close printer driver
    9f3c:	f107 0318 	add.w	r3, r7, #24
    9f40:	6818      	ldr	r0, [r3, #0]
    9f42:	f00d fa8d 	bl	17460 <Telium_Fclose>

    return (FCT_OK);
    9f46:	2300      	movs	r3, #0
}
    9f48:	4618      	mov	r0, r3
    9f4a:	f644 1380 	movw	r3, #18816	; 0x4980
    9f4e:	f2c0 0302 	movt	r3, #2
    9f52:	f8d7 217c 	ldr.w	r2, [r7, #380]	; 0x17c
    9f56:	681b      	ldr	r3, [r3, #0]
    9f58:	429a      	cmp	r2, r3
    9f5a:	d001      	beq.n	9f60 <file_received+0x19c>
    9f5c:	f7fe ffc8 	bl	8ef0 <__stack_chk_fail>
    9f60:	f507 77c2 	add.w	r7, r7, #388	; 0x184
    9f64:	46bd      	mov	sp, r7
    9f66:	bd90      	pop	{r4, r7, pc}

00009f68 <message_received>:
 * \return FCT_OK
 *
 * \see sdk_tplus.h
 */
int message_received(NO_SEGMENT no, S_MESSAGE_IAM *param_in, void *p2)
{
    9f68:	b580      	push	{r7, lr}
    9f6a:	b086      	sub	sp, #24
    9f6c:	af00      	add	r7, sp, #0
    9f6e:	4603      	mov	r3, r0
    9f70:	60b9      	str	r1, [r7, #8]
    9f72:	607a      	str	r2, [r7, #4]
    9f74:	73fb      	strb	r3, [r7, #15]
    9f76:	f644 1380 	movw	r3, #18816	; 0x4980
    9f7a:	f2c0 0302 	movt	r3, #2
    9f7e:	681b      	ldr	r3, [r3, #0]
    9f80:	617b      	str	r3, [r7, #20]
    Telium_File_t *prt;

    // Print message received from application 2
    prt = Telium_Fopen("PRINTER", "w-"); // Open printer driver
    9f82:	f249 10a4 	movw	r0, #37284	; 0x91a4
    9f86:	f2c0 0001 	movt	r0, #1
    9f8a:	f249 311c 	movw	r1, #37660	; 0x931c
    9f8e:	f2c0 0101 	movt	r1, #1
    9f92:	f00d fa97 	bl	174c4 <Telium_Fopen>
    9f96:	6138      	str	r0, [r7, #16]
    Telium_Pprintf("\x1b""E%s\n""\x1b""F", appName);
    9f98:	f249 10b0 	movw	r0, #37296	; 0x91b0
    9f9c:	f2c0 0001 	movt	r0, #1
    9fa0:	f644 11b0 	movw	r1, #18864	; 0x49b0
    9fa4:	f2c0 0102 	movt	r1, #2
    9fa8:	f00d fc98 	bl	178dc <Telium_Pprintf>
    Telium_Pprintf("Message IAM :\n");
    9fac:	f249 3048 	movw	r0, #37704	; 0x9348
    9fb0:	f2c0 0001 	movt	r0, #1
    9fb4:	f00d fc92 	bl	178dc <Telium_Pprintf>
    Telium_Pprintf("S:%04X R:%04X\n", param_in->sender, param_in->receiver); // USER2 to TEMPLATE
    9fb8:	68bb      	ldr	r3, [r7, #8]
    9fba:	881b      	ldrh	r3, [r3, #0]
    9fbc:	461a      	mov	r2, r3
    9fbe:	68bb      	ldr	r3, [r7, #8]
    9fc0:	885b      	ldrh	r3, [r3, #2]
    9fc2:	f249 3058 	movw	r0, #37720	; 0x9358
    9fc6:	f2c0 0001 	movt	r0, #1
    9fca:	4611      	mov	r1, r2
    9fcc:	461a      	mov	r2, r3
    9fce:	f00d fc85 	bl	178dc <Telium_Pprintf>
    Telium_Pprintf("IAM Type : %04X \n\n", param_in->type);
    9fd2:	68bb      	ldr	r3, [r7, #8]
    9fd4:	889b      	ldrh	r3, [r3, #4]
    9fd6:	f249 3068 	movw	r0, #37736	; 0x9368
    9fda:	f2c0 0001 	movt	r0, #1
    9fde:	4619      	mov	r1, r3
    9fe0:	f00d fc7c 	bl	178dc <Telium_Pprintf>

    Telium_Pprintf("%s\n\n\n\n\n\n", param_in->value); // Print the message received
    9fe4:	68bb      	ldr	r3, [r7, #8]
    9fe6:	3308      	adds	r3, #8
    9fe8:	f249 307c 	movw	r0, #37756	; 0x937c
    9fec:	f2c0 0001 	movt	r0, #1
    9ff0:	4619      	mov	r1, r3
    9ff2:	f00d fc73 	bl	178dc <Telium_Pprintf>
    Telium_Ttestall(PRINTER, 2*100);
    9ff6:	2002      	movs	r0, #2
    9ff8:	21c8      	movs	r1, #200	; 0xc8
    9ffa:	f00d fb59 	bl	176b0 <Telium_Ttestall>
    Telium_Fclose(prt); // Close printer driver
    9ffe:	6938      	ldr	r0, [r7, #16]
    a000:	f00d fa2e 	bl	17460 <Telium_Fclose>

    return (FCT_OK);
    a004:	2300      	movs	r3, #0
}
    a006:	4618      	mov	r0, r3
    a008:	f644 1380 	movw	r3, #18816	; 0x4980
    a00c:	f2c0 0302 	movt	r3, #2
    a010:	697a      	ldr	r2, [r7, #20]
    a012:	681b      	ldr	r3, [r3, #0]
    a014:	429a      	cmp	r2, r3
    a016:	d001      	beq.n	a01c <message_received+0xb4>
    a018:	f7fe ff6a 	bl	8ef0 <__stack_chk_fail>
    a01c:	f107 0718 	add.w	r7, r7, #24
    a020:	46bd      	mov	sp, r7
    a022:	bd80      	pop	{r7, pc}

0000a024 <is_card_specific>:
 * \return is_name result
 *
 * \see sdk_tplus.h
 */
int is_card_specific(NO_SEGMENT no, S_TRANSIN *param_in, S_ETATOUT *param_out)
{
    a024:	b580      	push	{r7, lr}
    a026:	b086      	sub	sp, #24
    a028:	af00      	add	r7, sp, #0
    a02a:	4603      	mov	r3, r0
    a02c:	60b9      	str	r1, [r7, #8]
    a02e:	607a      	str	r2, [r7, #4]
    a030:	73fb      	strb	r3, [r7, #15]
    a032:	f644 1380 	movw	r3, #18816	; 0x4980
    a036:	f2c0 0302 	movt	r3, #2
    a03a:	681b      	ldr	r3, [r3, #0]
    a03c:	617b      	str	r3, [r7, #20]
    int iRet;

    // Return application state
    param_out->returned_state[param_out->response_number].state.response = REP_KO;
    a03e:	687b      	ldr	r3, [r7, #4]
    a040:	781b      	ldrb	r3, [r3, #0]
    a042:	461a      	mov	r2, r3
    a044:	6879      	ldr	r1, [r7, #4]
    a046:	4613      	mov	r3, r2
    a048:	009b      	lsls	r3, r3, #2
    a04a:	189b      	adds	r3, r3, r2
    a04c:	009b      	lsls	r3, r3, #2
    a04e:	18cb      	adds	r3, r1, r3
    a050:	3310      	adds	r3, #16
    a052:	2201      	movs	r2, #1
    a054:	711a      	strb	r2, [r3, #4]
    iRet = is_name(no, PT_NULL, param_out);
    a056:	7bfb      	ldrb	r3, [r7, #15]
    a058:	4618      	mov	r0, r3
    a05a:	2100      	movs	r1, #0
    a05c:	687a      	ldr	r2, [r7, #4]
    a05e:	f7ff faad 	bl	95bc <is_name>
    a062:	6138      	str	r0, [r7, #16]

    return iRet;
    a064:	693b      	ldr	r3, [r7, #16]
}
    a066:	4618      	mov	r0, r3
    a068:	f644 1380 	movw	r3, #18816	; 0x4980
    a06c:	f2c0 0302 	movt	r3, #2
    a070:	697a      	ldr	r2, [r7, #20]
    a072:	681b      	ldr	r3, [r3, #0]
    a074:	429a      	cmp	r2, r3
    a076:	d001      	beq.n	a07c <is_card_specific+0x58>
    a078:	f7fe ff3a 	bl	8ef0 <__stack_chk_fail>
    a07c:	f107 0718 	add.w	r7, r7, #24
    a080:	46bd      	mov	sp, r7
    a082:	bd80      	pop	{r7, pc}

0000a084 <card_inside>:
 *         FCT_OK: Card refused and poll the next application.
 *
 * \see sdk_tplus.h
 */
int card_inside(NO_SEGMENT no, S_TRANSIN *param_in, S_TRANSOUT *param_out)
{
    a084:	b580      	push	{r7, lr}
    a086:	b086      	sub	sp, #24
    a088:	af00      	add	r7, sp, #0
    a08a:	4603      	mov	r3, r0
    a08c:	60b9      	str	r1, [r7, #8]
    a08e:	607a      	str	r2, [r7, #4]
    a090:	73fb      	strb	r3, [r7, #15]
    a092:	f644 1380 	movw	r3, #18816	; 0x4980
    a096:	f2c0 0302 	movt	r3, #2
    a09a:	681b      	ldr	r3, [r3, #0]
    a09c:	617b      	str	r3, [r7, #20]
    bool card_accepted = TRUE;
    a09e:	2301      	movs	r3, #1
    a0a0:	74fb      	strb	r3, [r7, #19]

    if (card_accepted)
    a0a2:	7cfb      	ldrb	r3, [r7, #19]
    a0a4:	2b00      	cmp	r3, #0
    a0a6:	d004      	beq.n	a0b2 <card_inside+0x2e>
    {
        // Return transaction status
        param_out->rc_payment = PAY_OK; // Transaction done, polling is stop
    a0a8:	687b      	ldr	r3, [r7, #4]
    a0aa:	2200      	movs	r2, #0
    a0ac:	705a      	strb	r2, [r3, #1]
        return (STOP);
    a0ae:	2301      	movs	r3, #1
    a0b0:	e000      	b.n	a0b4 <card_inside+0x30>
    }
    else
    {
        return (FCT_OK); // Card refused, poll the next application
    a0b2:	2300      	movs	r3, #0
    }
}
    a0b4:	4618      	mov	r0, r3
    a0b6:	f644 1380 	movw	r3, #18816	; 0x4980
    a0ba:	f2c0 0302 	movt	r3, #2
    a0be:	697a      	ldr	r2, [r7, #20]
    a0c0:	681b      	ldr	r3, [r3, #0]
    a0c2:	429a      	cmp	r2, r3
    a0c4:	d001      	beq.n	a0ca <card_inside+0x46>
    a0c6:	f7fe ff13 	bl	8ef0 <__stack_chk_fail>
    a0ca:	f107 0718 	add.w	r7, r7, #24
    a0ce:	46bd      	mov	sp, r7
    a0d0:	bd80      	pop	{r7, pc}
    a0d2:	bf00      	nop

0000a0d4 <is_for_you_after>:
 * \return FCT_OK
 *
 * \see sdk_tplus.h
 */
int is_for_you_after(NO_SEGMENT no, S_TRANSIN *param_in, S_CARDOUT *param_out)
{
    a0d4:	b580      	push	{r7, lr}
    a0d6:	b086      	sub	sp, #24
    a0d8:	af00      	add	r7, sp, #0
    a0da:	4603      	mov	r3, r0
    a0dc:	60b9      	str	r1, [r7, #8]
    a0de:	607a      	str	r2, [r7, #4]
    a0e0:	73fb      	strb	r3, [r7, #15]
    a0e2:	f644 1380 	movw	r3, #18816	; 0x4980
    a0e6:	f2c0 0302 	movt	r3, #2
    a0ea:	681b      	ldr	r3, [r3, #0]
    a0ec:	617b      	str	r3, [r7, #20]

    // case of chip card
    if (param_in->support == CHIP_SUPPORT)
    a0ee:	68bb      	ldr	r3, [r7, #8]
    a0f0:	f503 5354 	add.w	r3, r3, #13568	; 0x3500
    a0f4:	3328      	adds	r3, #40	; 0x28
    a0f6:	681b      	ldr	r3, [r3, #0]
    a0f8:	2b03      	cmp	r3, #3
    a0fa:	d12e      	bne.n	a15a <is_for_you_after+0x86>
    {
        if(param_in->power_on_result == 0)
    a0fc:	68bb      	ldr	r3, [r7, #8]
    a0fe:	f503 5355 	add.w	r3, r3, #13632	; 0x3540
    a102:	3320      	adds	r3, #32
    a104:	781b      	ldrb	r3, [r3, #0]
    a106:	2b00      	cmp	r3, #0
    a108:	d11a      	bne.n	a140 <is_for_you_after+0x6c>
        {
            // accept this card
            param_out->returned_state[param_out->response_number].cardappnumber = 1;
    a10a:	687b      	ldr	r3, [r7, #4]
    a10c:	781b      	ldrb	r3, [r3, #0]
    a10e:	461a      	mov	r2, r3
    a110:	6879      	ldr	r1, [r7, #4]
    a112:	4613      	mov	r3, r2
    a114:	00db      	lsls	r3, r3, #3
    a116:	189b      	adds	r3, r3, r2
    a118:	00db      	lsls	r3, r3, #3
    a11a:	1a9b      	subs	r3, r3, r2
    a11c:	18cb      	adds	r3, r1, r3
    a11e:	330f      	adds	r3, #15
    a120:	2201      	movs	r2, #1
    a122:	701a      	strb	r2, [r3, #0]
            param_out->returned_state[param_out->response_number].cardapp[0].priority = CARD_PROCESSED;
    a124:	687b      	ldr	r3, [r7, #4]
    a126:	781b      	ldrb	r3, [r3, #0]
    a128:	461a      	mov	r2, r3
    a12a:	6879      	ldr	r1, [r7, #4]
    a12c:	4613      	mov	r3, r2
    a12e:	00db      	lsls	r3, r3, #3
    a130:	189b      	adds	r3, r3, r2
    a132:	00db      	lsls	r3, r3, #3
    a134:	1a9b      	subs	r3, r3, r2
    a136:	18cb      	adds	r3, r1, r3
    a138:	3310      	adds	r3, #16
    a13a:	2205      	movs	r2, #5
    a13c:	701a      	strb	r2, [r3, #0]
    a13e:	e00c      	b.n	a15a <is_for_you_after+0x86>
        }
        else
        {
            // reject the card
            param_out->returned_state[param_out->response_number].cardappnumber = 0;
    a140:	687b      	ldr	r3, [r7, #4]
    a142:	781b      	ldrb	r3, [r3, #0]
    a144:	461a      	mov	r2, r3
    a146:	6879      	ldr	r1, [r7, #4]
    a148:	4613      	mov	r3, r2
    a14a:	00db      	lsls	r3, r3, #3
    a14c:	189b      	adds	r3, r3, r2
    a14e:	00db      	lsls	r3, r3, #3
    a150:	1a9b      	subs	r3, r3, r2
    a152:	18cb      	adds	r3, r1, r3
    a154:	330f      	adds	r3, #15
    a156:	2200      	movs	r2, #0
    a158:	701a      	strb	r2, [r3, #0]
        }
    }

    // case of stripe 2 card
    if (param_in->support == TRACK2_SUPPORT)
    a15a:	68bb      	ldr	r3, [r7, #8]
    a15c:	f503 5354 	add.w	r3, r3, #13568	; 0x3500
    a160:	3328      	adds	r3, #40	; 0x28
    a162:	681b      	ldr	r3, [r3, #0]
    a164:	2b00      	cmp	r3, #0
    a166:	d119      	bne.n	a19c <is_for_you_after+0xc8>
    {
        // accept this card
        param_out->returned_state[param_out->response_number].cardappnumber = 1;
    a168:	687b      	ldr	r3, [r7, #4]
    a16a:	781b      	ldrb	r3, [r3, #0]
    a16c:	461a      	mov	r2, r3
    a16e:	6879      	ldr	r1, [r7, #4]
    a170:	4613      	mov	r3, r2
    a172:	00db      	lsls	r3, r3, #3
    a174:	189b      	adds	r3, r3, r2
    a176:	00db      	lsls	r3, r3, #3
    a178:	1a9b      	subs	r3, r3, r2
    a17a:	18cb      	adds	r3, r1, r3
    a17c:	330f      	adds	r3, #15
    a17e:	2201      	movs	r2, #1
    a180:	701a      	strb	r2, [r3, #0]
        param_out->returned_state[param_out->response_number].cardapp[0].priority = CARD_PRIORITY;
    a182:	687b      	ldr	r3, [r7, #4]
    a184:	781b      	ldrb	r3, [r3, #0]
    a186:	461a      	mov	r2, r3
    a188:	6879      	ldr	r1, [r7, #4]
    a18a:	4613      	mov	r3, r2
    a18c:	00db      	lsls	r3, r3, #3
    a18e:	189b      	adds	r3, r3, r2
    a190:	00db      	lsls	r3, r3, #3
    a192:	1a9b      	subs	r3, r3, r2
    a194:	18cb      	adds	r3, r1, r3
    a196:	3310      	adds	r3, #16
    a198:	220f      	movs	r2, #15
    a19a:	701a      	strb	r2, [r3, #0]
    }

    // case of Card Number Manual entry
    if (param_in->support == OPERATOR_SUPPORT)
    a19c:	68bb      	ldr	r3, [r7, #8]
    a19e:	f503 5354 	add.w	r3, r3, #13568	; 0x3500
    a1a2:	3328      	adds	r3, #40	; 0x28
    a1a4:	681b      	ldr	r3, [r3, #0]
    a1a6:	2b04      	cmp	r3, #4
    a1a8:	d119      	bne.n	a1de <is_for_you_after+0x10a>
    {
        // accept this card
        param_out->returned_state[param_out->response_number].cardappnumber = 1;
    a1aa:	687b      	ldr	r3, [r7, #4]
    a1ac:	781b      	ldrb	r3, [r3, #0]
    a1ae:	461a      	mov	r2, r3
    a1b0:	6879      	ldr	r1, [r7, #4]
    a1b2:	4613      	mov	r3, r2
    a1b4:	00db      	lsls	r3, r3, #3
    a1b6:	189b      	adds	r3, r3, r2
    a1b8:	00db      	lsls	r3, r3, #3
    a1ba:	1a9b      	subs	r3, r3, r2
    a1bc:	18cb      	adds	r3, r1, r3
    a1be:	330f      	adds	r3, #15
    a1c0:	2201      	movs	r2, #1
    a1c2:	701a      	strb	r2, [r3, #0]
        param_out->returned_state[param_out->response_number].cardapp[0].priority = CARD_PRIORITY;
    a1c4:	687b      	ldr	r3, [r7, #4]
    a1c6:	781b      	ldrb	r3, [r3, #0]
    a1c8:	461a      	mov	r2, r3
    a1ca:	6879      	ldr	r1, [r7, #4]
    a1cc:	4613      	mov	r3, r2
    a1ce:	00db      	lsls	r3, r3, #3
    a1d0:	189b      	adds	r3, r3, r2
    a1d2:	00db      	lsls	r3, r3, #3
    a1d4:	1a9b      	subs	r3, r3, r2
    a1d6:	18cb      	adds	r3, r1, r3
    a1d8:	3310      	adds	r3, #16
    a1da:	220f      	movs	r2, #15
    a1dc:	701a      	strb	r2, [r3, #0]
    }

    // give my application name
    strcpy(param_out->returned_state[param_out->response_number].appname, appName);
    a1de:	687b      	ldr	r3, [r7, #4]
    a1e0:	781b      	ldrb	r3, [r3, #0]
    a1e2:	461a      	mov	r2, r3
    a1e4:	4613      	mov	r3, r2
    a1e6:	00db      	lsls	r3, r3, #3
    a1e8:	189b      	adds	r3, r3, r2
    a1ea:	00db      	lsls	r3, r3, #3
    a1ec:	1a9b      	subs	r3, r3, r2
    a1ee:	687a      	ldr	r2, [r7, #4]
    a1f0:	18d3      	adds	r3, r2, r3
    a1f2:	3301      	adds	r3, #1
    a1f4:	4618      	mov	r0, r3
    a1f6:	f644 11b0 	movw	r1, #18864	; 0x49b0
    a1fa:	f2c0 0102 	movt	r1, #2
    a1fe:	f7fe ecc2 	blx	8b84 <_init+0xb4>
    // give my application number
    param_out->returned_state[param_out->response_number].no_appli = no;
    a202:	687b      	ldr	r3, [r7, #4]
    a204:	781b      	ldrb	r3, [r3, #0]
    a206:	461a      	mov	r2, r3
    a208:	6879      	ldr	r1, [r7, #4]
    a20a:	4613      	mov	r3, r2
    a20c:	00db      	lsls	r3, r3, #3
    a20e:	189b      	adds	r3, r3, r2
    a210:	00db      	lsls	r3, r3, #3
    a212:	1a9b      	subs	r3, r3, r2
    a214:	18cb      	adds	r3, r1, r3
    a216:	330e      	adds	r3, #14
    a218:	7bfa      	ldrb	r2, [r7, #15]
    a21a:	701a      	strb	r2, [r3, #0]
    // give my card name
    strcpy(param_out->returned_state[param_out->response_number].cardapp[0].cardappname, "Template");
    a21c:	687b      	ldr	r3, [r7, #4]
    a21e:	781b      	ldrb	r3, [r3, #0]
    a220:	461a      	mov	r2, r3
    a222:	4613      	mov	r3, r2
    a224:	00db      	lsls	r3, r3, #3
    a226:	189b      	adds	r3, r3, r2
    a228:	00db      	lsls	r3, r3, #3
    a22a:	1a9b      	subs	r3, r3, r2
    a22c:	3308      	adds	r3, #8
    a22e:	687a      	ldr	r2, [r7, #4]
    a230:	18d3      	adds	r3, r2, r3
    a232:	f103 0209 	add.w	r2, r3, #9
    a236:	f249 3388 	movw	r3, #37768	; 0x9388
    a23a:	f2c0 0301 	movt	r3, #1
    a23e:	cb03      	ldmia	r3!, {r0, r1}
    a240:	6010      	str	r0, [r2, #0]
    a242:	6051      	str	r1, [r2, #4]
    a244:	781b      	ldrb	r3, [r3, #0]
    a246:	7213      	strb	r3, [r2, #8]
    // increment the response number
    param_out->response_number++;
    a248:	687b      	ldr	r3, [r7, #4]
    a24a:	781b      	ldrb	r3, [r3, #0]
    a24c:	3301      	adds	r3, #1
    a24e:	b2da      	uxtb	r2, r3
    a250:	687b      	ldr	r3, [r7, #4]
    a252:	701a      	strb	r2, [r3, #0]

    return (FCT_OK);
    a254:	2300      	movs	r3, #0
}
    a256:	4618      	mov	r0, r3
    a258:	f644 1380 	movw	r3, #18816	; 0x4980
    a25c:	f2c0 0302 	movt	r3, #2
    a260:	697a      	ldr	r2, [r7, #20]
    a262:	681b      	ldr	r3, [r3, #0]
    a264:	429a      	cmp	r2, r3
    a266:	d001      	beq.n	a26c <is_for_you_after+0x198>
    a268:	f7fe fe42 	bl	8ef0 <__stack_chk_fail>
    a26c:	f107 0718 	add.w	r7, r7, #24
    a270:	46bd      	mov	sp, r7
    a272:	bd80      	pop	{r7, pc}

0000a274 <debit_non_emv>:
 * \return FCT_OK
 *
 * \see sdk_tplus.h
 */
int debit_non_emv(NO_SEGMENT no, S_TRANSIN * param_in, S_TRANSOUT * param_out)
{
    a274:	b580      	push	{r7, lr}
    a276:	b088      	sub	sp, #32
    a278:	af00      	add	r7, sp, #0
    a27a:	4603      	mov	r3, r0
    a27c:	60b9      	str	r1, [r7, #8]
    a27e:	607a      	str	r2, [r7, #4]
    a280:	73fb      	strb	r3, [r7, #15]
    a282:	f644 1380 	movw	r3, #18816	; 0x4980
    a286:	f2c0 0302 	movt	r3, #2
    a28a:	681b      	ldr	r3, [r3, #0]
    a28c:	61fb      	str	r3, [r7, #28]
    Telium_File_t *prt;
    int i;

    prt = Telium_Fopen("PRINTER", "w-");
    a28e:	f249 10a4 	movw	r0, #37284	; 0x91a4
    a292:	f2c0 0001 	movt	r0, #1
    a296:	f249 311c 	movw	r1, #37660	; 0x931c
    a29a:	f2c0 0101 	movt	r1, #1
    a29e:	f00d f911 	bl	174c4 <Telium_Fopen>
    a2a2:	61b8      	str	r0, [r7, #24]

    // case of chip card
    if (param_in->support == CHIP_SUPPORT)
    a2a4:	68bb      	ldr	r3, [r7, #8]
    a2a6:	f503 5354 	add.w	r3, r3, #13568	; 0x3500
    a2aa:	3328      	adds	r3, #40	; 0x28
    a2ac:	681b      	ldr	r3, [r3, #0]
    a2ae:	2b03      	cmp	r3, #3
    a2b0:	d146      	bne.n	a340 <debit_non_emv+0xcc>
    {
        Telium_Pprintf("\x1b""E%s\n""\x1b""F", appName);
    a2b2:	f249 10b0 	movw	r0, #37296	; 0x91b0
    a2b6:	f2c0 0001 	movt	r0, #1
    a2ba:	f644 11b0 	movw	r1, #18864	; 0x49b0
    a2be:	f2c0 0102 	movt	r1, #2
    a2c2:	f00d fb0b 	bl	178dc <Telium_Pprintf>
        if (param_in->historical_bytes.length != 0)
    a2c6:	68bb      	ldr	r3, [r7, #8]
    a2c8:	f503 5356 	add.w	r3, r3, #13696	; 0x3580
    a2cc:	3328      	adds	r3, #40	; 0x28
    a2ce:	781b      	ldrb	r3, [r3, #0]
    a2d0:	2b00      	cmp	r3, #0
    a2d2:	d023      	beq.n	a31c <debit_non_emv+0xa8>
        {
            Telium_Pprintf("Atr:\n");
    a2d4:	f249 3094 	movw	r0, #37780	; 0x9394
    a2d8:	f2c0 0001 	movt	r0, #1
    a2dc:	f00d fafe 	bl	178dc <Telium_Pprintf>
            for (i=0; i<param_in->historical_bytes.length; i++)
    a2e0:	2300      	movs	r3, #0
    a2e2:	617b      	str	r3, [r7, #20]
    a2e4:	e010      	b.n	a308 <debit_non_emv+0x94>
            {
                Telium_Pprintf("%02X ", param_in->historical_bytes.historic[i]);
    a2e6:	68ba      	ldr	r2, [r7, #8]
    a2e8:	697b      	ldr	r3, [r7, #20]
    a2ea:	18d3      	adds	r3, r2, r3
    a2ec:	f503 5356 	add.w	r3, r3, #13696	; 0x3580
    a2f0:	3328      	adds	r3, #40	; 0x28
    a2f2:	785b      	ldrb	r3, [r3, #1]
    a2f4:	f249 309c 	movw	r0, #37788	; 0x939c
    a2f8:	f2c0 0001 	movt	r0, #1
    a2fc:	4619      	mov	r1, r3
    a2fe:	f00d faed 	bl	178dc <Telium_Pprintf>
    {
        Telium_Pprintf("\x1b""E%s\n""\x1b""F", appName);
        if (param_in->historical_bytes.length != 0)
        {
            Telium_Pprintf("Atr:\n");
            for (i=0; i<param_in->historical_bytes.length; i++)
    a302:	697b      	ldr	r3, [r7, #20]
    a304:	3301      	adds	r3, #1
    a306:	617b      	str	r3, [r7, #20]
    a308:	68bb      	ldr	r3, [r7, #8]
    a30a:	f503 5356 	add.w	r3, r3, #13696	; 0x3580
    a30e:	3328      	adds	r3, #40	; 0x28
    a310:	781b      	ldrb	r3, [r3, #0]
    a312:	461a      	mov	r2, r3
    a314:	697b      	ldr	r3, [r7, #20]
    a316:	429a      	cmp	r2, r3
    a318:	dce5      	bgt.n	a2e6 <debit_non_emv+0x72>
    a31a:	e00b      	b.n	a334 <debit_non_emv+0xc0>
                Telium_Pprintf("%02X ", param_in->historical_bytes.historic[i]);
            }
        }
        else
        {
            Telium_Pprintf("Synchronous card\n");
    a31c:	f249 30a4 	movw	r0, #37796	; 0x93a4
    a320:	f2c0 0001 	movt	r0, #1
    a324:	f00d fada 	bl	178dc <Telium_Pprintf>
            Telium_Pprintf("or Chip mute\n");
    a328:	f249 30b8 	movw	r0, #37816	; 0x93b8
    a32c:	f2c0 0001 	movt	r0, #1
    a330:	f00d fad4 	bl	178dc <Telium_Pprintf>
        }
        Telium_Pprintf("\n\n\n\n\n\n");
    a334:	f249 30c8 	movw	r0, #37832	; 0x93c8
    a338:	f2c0 0001 	movt	r0, #1
    a33c:	f00d face 	bl	178dc <Telium_Pprintf>
    }

    // case of stripe 2 card
    if (param_in->support == TRACK2_SUPPORT)
    a340:	68bb      	ldr	r3, [r7, #8]
    a342:	f503 5354 	add.w	r3, r3, #13568	; 0x3500
    a346:	3328      	adds	r3, #40	; 0x28
    a348:	681b      	ldr	r3, [r3, #0]
    a34a:	2b00      	cmp	r3, #0
    a34c:	d114      	bne.n	a378 <debit_non_emv+0x104>
    {
        Telium_Pprintf("\x1b""E%s\n""\x1b""F", appName);
    a34e:	f249 10b0 	movw	r0, #37296	; 0x91b0
    a352:	f2c0 0001 	movt	r0, #1
    a356:	f644 11b0 	movw	r1, #18864	; 0x49b0
    a35a:	f2c0 0102 	movt	r1, #2
    a35e:	f00d fabd 	bl	178dc <Telium_Pprintf>
        Telium_Pprintf("Track2:\n%s\n\n\n\n\n\n", param_in->track2);
    a362:	68bb      	ldr	r3, [r7, #8]
    a364:	f503 5358 	add.w	r3, r3, #13824	; 0x3600
    a368:	3307      	adds	r3, #7
    a36a:	f249 30d0 	movw	r0, #37840	; 0x93d0
    a36e:	f2c0 0001 	movt	r0, #1
    a372:	4619      	mov	r1, r3
    a374:	f00d fab2 	bl	178dc <Telium_Pprintf>
    }

    // case of Card Number Manual entry
    if (param_in->support == OPERATOR_SUPPORT)
    a378:	68bb      	ldr	r3, [r7, #8]
    a37a:	f503 5354 	add.w	r3, r3, #13568	; 0x3500
    a37e:	3328      	adds	r3, #40	; 0x28
    a380:	681b      	ldr	r3, [r3, #0]
    a382:	2b04      	cmp	r3, #4
    a384:	d114      	bne.n	a3b0 <debit_non_emv+0x13c>
    {
        Telium_Pprintf("\x1b""E%s\n""\x1b""F", appName);
    a386:	f249 10b0 	movw	r0, #37296	; 0x91b0
    a38a:	f2c0 0001 	movt	r0, #1
    a38e:	f644 11b0 	movw	r1, #18864	; 0x49b0
    a392:	f2c0 0102 	movt	r1, #2
    a396:	f00d faa1 	bl	178dc <Telium_Pprintf>
        Telium_Pprintf("Manual Entry:\n%s\n\n\n\n\n\n", param_in->track2);
    a39a:	68bb      	ldr	r3, [r7, #8]
    a39c:	f503 5358 	add.w	r3, r3, #13824	; 0x3600
    a3a0:	3307      	adds	r3, #7
    a3a2:	f249 30e4 	movw	r0, #37860	; 0x93e4
    a3a6:	f2c0 0001 	movt	r0, #1
    a3aa:	4619      	mov	r1, r3
    a3ac:	f00d fa96 	bl	178dc <Telium_Pprintf>
    }

    Telium_Ttestall(PRINTER, 2*100);
    a3b0:	2002      	movs	r0, #2
    a3b2:	21c8      	movs	r1, #200	; 0xc8
    a3b4:	f00d f97c 	bl	176b0 <Telium_Ttestall>
    Telium_Fclose(prt);
    a3b8:	69b8      	ldr	r0, [r7, #24]
    a3ba:	f00d f851 	bl	17460 <Telium_Fclose>

    param_out->noappli = no; // Return application number
    a3be:	687b      	ldr	r3, [r7, #4]
    a3c0:	7bfa      	ldrb	r2, [r7, #15]
    a3c2:	701a      	strb	r2, [r3, #0]
    param_out->rc_payment = PAY_OK; // Transaction done
    a3c4:	687b      	ldr	r3, [r7, #4]
    a3c6:	2200      	movs	r2, #0
    a3c8:	705a      	strb	r2, [r3, #1]

    return (FCT_OK);
    a3ca:	2300      	movs	r3, #0
}
    a3cc:	4618      	mov	r0, r3
    a3ce:	f644 1380 	movw	r3, #18816	; 0x4980
    a3d2:	f2c0 0302 	movt	r3, #2
    a3d6:	69fa      	ldr	r2, [r7, #28]
    a3d8:	681b      	ldr	r3, [r3, #0]
    a3da:	429a      	cmp	r2, r3
    a3dc:	d001      	beq.n	a3e2 <debit_non_emv+0x16e>
    a3de:	f7fe fd87 	bl	8ef0 <__stack_chk_fail>
    a3e2:	f107 0720 	add.w	r7, r7, #32
    a3e6:	46bd      	mov	sp, r7
    a3e8:	bd80      	pop	{r7, pc}
    a3ea:	bf00      	nop

0000a3ec <give_interface>:
 * \return FCT_OK
 *
 * \see sdk_tplus.h
 */
int give_interface(unsigned short AppliNum, void *p1, void *p2)
{
    a3ec:	b580      	push	{r7, lr}
    a3ee:	b086      	sub	sp, #24
    a3f0:	af00      	add	r7, sp, #0
    a3f2:	4603      	mov	r3, r0
    a3f4:	60b9      	str	r1, [r7, #8]
    a3f6:	607a      	str	r2, [r7, #4]
    a3f8:	81fb      	strh	r3, [r7, #14]
    a3fa:	f644 1380 	movw	r3, #18816	; 0x4980
    a3fe:	f2c0 0302 	movt	r3, #2
    a402:	681b      	ldr	r3, [r3, #0]
    a404:	617b      	str	r3, [r7, #20]
    int i;

    for(i = 0; i < (int)(sizeof(Services) / sizeof(Services[0])); i++)
    a406:	2300      	movs	r3, #0
    a408:	613b      	str	r3, [r7, #16]
    a40a:	e00e      	b.n	a42a <give_interface+0x3e>
        Services[i].appli_id = AppliNum;
    a40c:	f244 2208 	movw	r2, #16904	; 0x4208
    a410:	f2c0 0202 	movt	r2, #2
    a414:	6939      	ldr	r1, [r7, #16]
    a416:	460b      	mov	r3, r1
    a418:	005b      	lsls	r3, r3, #1
    a41a:	185b      	adds	r3, r3, r1
    a41c:	009b      	lsls	r3, r3, #2
    a41e:	18d3      	adds	r3, r2, r3
    a420:	89fa      	ldrh	r2, [r7, #14]
    a422:	801a      	strh	r2, [r3, #0]
 */
int give_interface(unsigned short AppliNum, void *p1, void *p2)
{
    int i;

    for(i = 0; i < (int)(sizeof(Services) / sizeof(Services[0])); i++)
    a424:	693b      	ldr	r3, [r7, #16]
    a426:	3301      	adds	r3, #1
    a428:	613b      	str	r3, [r7, #16]
    a42a:	693b      	ldr	r3, [r7, #16]
    a42c:	2b15      	cmp	r3, #21
    a42e:	dded      	ble.n	a40c <give_interface+0x20>
        Services[i].appli_id = AppliNum;

    Telium_ServiceRegister((sizeof(Services) / sizeof(Services[0])), Services);
    a430:	2016      	movs	r0, #22
    a432:	f244 2108 	movw	r1, #16904	; 0x4208
    a436:	f2c0 0102 	movt	r1, #2
    a43a:	f00d fa29 	bl	17890 <Telium_ServiceRegister>

    return FCT_OK;
    a43e:	2300      	movs	r3, #0
}
    a440:	4618      	mov	r0, r3
    a442:	f644 1380 	movw	r3, #18816	; 0x4980
    a446:	f2c0 0302 	movt	r3, #2
    a44a:	697a      	ldr	r2, [r7, #20]
    a44c:	681b      	ldr	r3, [r3, #0]
    a44e:	429a      	cmp	r2, r3
    a450:	d001      	beq.n	a456 <give_interface+0x6a>
    a452:	f7fe fd4d 	bl	8ef0 <__stack_chk_fail>
    a456:	f107 0718 	add.w	r7, r7, #24
    a45a:	46bd      	mov	sp, r7
    a45c:	bd80      	pop	{r7, pc}
    a45e:	bf00      	nop

0000a460 <entry>:
 * The RegisteryPowerFailure() can also be moved to entry().
 *
 * \see sdk_tplus.h
 */
void entry(void)
{
    a460:	b5b0      	push	{r4, r5, r7, lr}
    a462:	b090      	sub	sp, #64	; 0x40
    a464:	af00      	add	r7, sp, #0
    a466:	f644 1380 	movw	r3, #18816	; 0x4980
    a46a:	f2c0 0302 	movt	r3, #2
    a46e:	681b      	ldr	r3, [r3, #0]
    a470:	63fb      	str	r3, [r7, #60]	; 0x3c
  object_info_t info;
  char * indexExt;

  // Recording services
  ObjectGetInfo(OBJECT_TYPE_APPLI, ApplicationGetCurrent(), &info);
    a472:	f00d fa87 	bl	17984 <ApplicationGetCurrent>
    a476:	4603      	mov	r3, r0
    a478:	461a      	mov	r2, r3
    a47a:	1d3b      	adds	r3, r7, #4
    a47c:	2001      	movs	r0, #1
    a47e:	4611      	mov	r1, r2
    a480:	461a      	mov	r2, r3
    a482:	f00d fce7 	bl	17e54 <ObjectGetInfo>
  give_interface(info.application_type, NULL, NULL);
    a486:	8e3b      	ldrh	r3, [r7, #48]	; 0x30
    a488:	4618      	mov	r0, r3
    a48a:	2100      	movs	r1, #0
    a48c:	2200      	movs	r2, #0
    a48e:	f7ff ffad 	bl	a3ec <give_interface>

  // Creates an instance of the graphics library.
  // This creation takes some time. To be quicker it can also be instantiated only once in application's life
  if(gGoalGraphicLibInstance == NULL) {
    a492:	f644 1388 	movw	r3, #18824	; 0x4988
    a496:	f2c0 0302 	movt	r3, #2
    a49a:	681b      	ldr	r3, [r3, #0]
    a49c:	2b00      	cmp	r3, #0
    a49e:	d107      	bne.n	a4b0 <entry+0x50>
	    gGoalGraphicLibInstance = GL_GraphicLib_Create();
    a4a0:	f00e f978 	bl	18794 <GL_GraphicLib_Create>
    a4a4:	4602      	mov	r2, r0
    a4a6:	f644 1388 	movw	r3, #18824	; 0x4988
    a4aa:	f2c0 0302 	movt	r3, #2
    a4ae:	601a      	str	r2, [r3, #0]
  }

  memcpy(appName, info.name, OBJECT_NAME_LEN);
    a4b0:	f644 13b0 	movw	r3, #18864	; 0x49b0
    a4b4:	f2c0 0302 	movt	r3, #2
    a4b8:	461c      	mov	r4, r3
    a4ba:	1d3d      	adds	r5, r7, #4
    a4bc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    a4be:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    a4c0:	682b      	ldr	r3, [r5, #0]
    a4c2:	6023      	str	r3, [r4, #0]
  memcpy(fileName, info.file_name, OBJECT_FILE_NAME_LEN);
    a4c4:	f644 13c8 	movw	r3, #18888	; 0x49c8
    a4c8:	f2c0 0302 	movt	r3, #2
    a4cc:	461c      	mov	r4, r3
    a4ce:	f107 0518 	add.w	r5, r7, #24
    a4d2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    a4d4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    a4d6:	682b      	ldr	r3, [r5, #0]
    a4d8:	6023      	str	r3, [r4, #0]
  fileName[OBJECT_FILE_NAME_LEN] = '\0';
    a4da:	f644 13c8 	movw	r3, #18888	; 0x49c8
    a4de:	f2c0 0302 	movt	r3, #2
    a4e2:	2200      	movs	r2, #0
    a4e4:	751a      	strb	r2, [r3, #20]
  appName[OBJECT_NAME_LEN] = '\0';
    a4e6:	f644 13b0 	movw	r3, #18864	; 0x49b0
    a4ea:	f2c0 0302 	movt	r3, #2
    a4ee:	2200      	movs	r2, #0
    a4f0:	751a      	strb	r2, [r3, #20]

  // Manager looks for application icon whose name must be the same as the string given to the "is_name" function
  // FAMILY NAME cannot be used because the T_APPNAME type used in is_name function is too short to store FAMILY NAME (T_APPNAME length = 12+1 FAMILY NAME length =15+1)
  // Binary name is used instead. "info.file_name" contains the binary name with the file extension
  // (e.g. ABCDEFG.AGN). Extension must be removed in the name returned by the 'is_name' function.
  indexExt = strstr(fileName, ".");
    a4f2:	f644 10c8 	movw	r0, #18888	; 0x49c8
    a4f6:	f2c0 0002 	movt	r0, #2
    a4fa:	212e      	movs	r1, #46	; 0x2e
    a4fc:	f7fe ebca 	blx	8c94 <_init+0x1c4>
    a500:	6038      	str	r0, [r7, #0]
  if(indexExt != NULL) {
    a502:	683b      	ldr	r3, [r7, #0]
    a504:	2b00      	cmp	r3, #0
    a506:	d002      	beq.n	a50e <entry+0xae>
    *indexExt = '\0';
    a508:	683b      	ldr	r3, [r7, #0]
    a50a:	2200      	movs	r2, #0
    a50c:	701a      	strb	r2, [r3, #0]
  }
}
    a50e:	f644 1380 	movw	r3, #18816	; 0x4980
    a512:	f2c0 0302 	movt	r3, #2
    a516:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    a518:	681b      	ldr	r3, [r3, #0]
    a51a:	429a      	cmp	r2, r3
    a51c:	d001      	beq.n	a522 <entry+0xc2>
    a51e:	f7fe fce7 	bl	8ef0 <__stack_chk_fail>
    a522:	f107 0740 	add.w	r7, r7, #64	; 0x40
    a526:	46bd      	mov	sp, r7
    a528:	bdb0      	pop	{r4, r5, r7, pc}
    a52a:	bf00      	nop

0000a52c <menuGoalDisplay>:
/**
 * Main menu
 *
 */
void menuGoalDisplay(void)
{
    a52c:	b5b0      	push	{r4, r5, r7, lr}
    a52e:	b08e      	sub	sp, #56	; 0x38
    a530:	af04      	add	r7, sp, #16
    a532:	f644 1380 	movw	r3, #18816	; 0x4980
    a536:	f2c0 0302 	movt	r3, #2
    a53a:	681b      	ldr	r3, [r3, #0]
    a53c:	627b      	str	r3, [r7, #36]	; 0x24
	char choice = 0;
    a53e:	2300      	movs	r3, #0
    a540:	71fb      	strb	r3, [r7, #7]

	const char *MenuUser[] =
    a542:	f249 43e4 	movw	r3, #38116	; 0x94e4
    a546:	f2c0 0301 	movt	r3, #1
    a54a:	f107 0408 	add.w	r4, r7, #8
    a54e:	461d      	mov	r5, r3
    a550:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    a552:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    a554:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    a558:	e884 0007 	stmia.w	r4, {r0, r1, r2}
	{ "Send GPRS message", "Configure GPRS", "Function 3", "Function 4", "Function 5", "Exit", 0 };

	initUIContext(_OFF_);
    a55c:	2000      	movs	r0, #0
    a55e:	f000 f89f 	bl	a6a0 <initUIContext>

	do
	{
		//Display the menu using GOAL
		choice = GL_Dialog_Menu(gGoalGraphicLibInstance, "Select", MenuUser, choice, GL_BUTTON_NONE , GL_KEY_0, GL_TIME_INFINITE);
    a562:	f644 1388 	movw	r3, #18824	; 0x4988
    a566:	f2c0 0302 	movt	r3, #2
    a56a:	6819      	ldr	r1, [r3, #0]
    a56c:	79fb      	ldrb	r3, [r7, #7]
    a56e:	f107 0208 	add.w	r2, r7, #8
    a572:	2000      	movs	r0, #0
    a574:	9000      	str	r0, [sp, #0]
    a576:	2030      	movs	r0, #48	; 0x30
    a578:	9001      	str	r0, [sp, #4]
    a57a:	f04f 30ff 	mov.w	r0, #4294967295
    a57e:	9002      	str	r0, [sp, #8]
    a580:	4608      	mov	r0, r1
    a582:	f249 31fc 	movw	r1, #37884	; 0x93fc
    a586:	f2c0 0101 	movt	r1, #1
    a58a:	f00d ffc5 	bl	18518 <GL_Dialog_Menu>
    a58e:	4603      	mov	r3, r0
    a590:	71fb      	strb	r3, [r7, #7]

		switch (choice)
    a592:	79fb      	ldrb	r3, [r7, #7]
    a594:	2b04      	cmp	r3, #4
    a596:	d86e      	bhi.n	a676 <menuGoalDisplay+0x14a>
    a598:	a201      	add	r2, pc, #4	; (adr r2, a5a0 <menuGoalDisplay+0x74>)
    a59a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    a59e:	bf00      	nop
    a5a0:	0000a5b5 	.word	0x0000a5b5
    a5a4:	0000a5bb 	.word	0x0000a5bb
    a5a8:	0000a5ed 	.word	0x0000a5ed
    a5ac:	0000a61b 	.word	0x0000a61b
    a5b0:	0000a649 	.word	0x0000a649
		{
		case 0:
			// Send sample message
			ComGPRS();
    a5b4:	f001 feca 	bl	c34c <ComGPRS>
			break;
    a5b8:	e05e      	b.n	a678 <menuGoalDisplay+0x14c>
		case 1:
			// Configure GPRS
			PromptGPRS();
    a5ba:	f001 fb21 	bl	bc00 <PromptGPRS>

			GL_Dialog_Message(gGoalGraphicLibInstance, "Function1",
    a5be:	f644 1388 	movw	r3, #18824	; 0x4988
    a5c2:	f2c0 0302 	movt	r3, #2
    a5c6:	681b      	ldr	r3, [r3, #0]
    a5c8:	2201      	movs	r2, #1
    a5ca:	9200      	str	r2, [sp, #0]
    a5cc:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
    a5d0:	9201      	str	r2, [sp, #4]
    a5d2:	4618      	mov	r0, r3
    a5d4:	f249 4104 	movw	r1, #37892	; 0x9404
    a5d8:	f2c0 0101 	movt	r1, #1
    a5dc:	f249 4210 	movw	r2, #37904	; 0x9410
    a5e0:	f2c0 0201 	movt	r2, #1
    a5e4:	2302      	movs	r3, #2
    a5e6:	f00d ffa9 	bl	1853c <GL_Dialog_Message>
					"Configuration\nDONE...", GL_ICON_INFORMATION, GL_BUTTON_VALID,
					2 * GL_TIME_SECOND);
			break;
    a5ea:	e045      	b.n	a678 <menuGoalDisplay+0x14c>
		case 2:
			// Displays a GOAL dialog during 2s
			GL_Dialog_Message(gGoalGraphicLibInstance, "Function3",
    a5ec:	f644 1388 	movw	r3, #18824	; 0x4988
    a5f0:	f2c0 0302 	movt	r3, #2
    a5f4:	681b      	ldr	r3, [r3, #0]
    a5f6:	2201      	movs	r2, #1
    a5f8:	9200      	str	r2, [sp, #0]
    a5fa:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
    a5fe:	9201      	str	r2, [sp, #4]
    a600:	4618      	mov	r0, r3
    a602:	f249 4128 	movw	r1, #37928	; 0x9428
    a606:	f2c0 0101 	movt	r1, #1
    a60a:	f249 4234 	movw	r2, #37940	; 0x9434
    a60e:	f2c0 0201 	movt	r2, #1
    a612:	2302      	movs	r3, #2
    a614:	f00d ff92 	bl	1853c <GL_Dialog_Message>
					"Function3\nRunning...", GL_ICON_INFORMATION, GL_BUTTON_VALID,
					2 * GL_TIME_SECOND);
			break;
    a618:	e02e      	b.n	a678 <menuGoalDisplay+0x14c>
		case 3:
			// Displays a GOAL dialog during 2s
			GL_Dialog_Message(gGoalGraphicLibInstance, "Function4",
    a61a:	f644 1388 	movw	r3, #18824	; 0x4988
    a61e:	f2c0 0302 	movt	r3, #2
    a622:	681b      	ldr	r3, [r3, #0]
    a624:	2201      	movs	r2, #1
    a626:	9200      	str	r2, [sp, #0]
    a628:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
    a62c:	9201      	str	r2, [sp, #4]
    a62e:	4618      	mov	r0, r3
    a630:	f249 414c 	movw	r1, #37964	; 0x944c
    a634:	f2c0 0101 	movt	r1, #1
    a638:	f249 4258 	movw	r2, #37976	; 0x9458
    a63c:	f2c0 0201 	movt	r2, #1
    a640:	2302      	movs	r3, #2
    a642:	f00d ff7b 	bl	1853c <GL_Dialog_Message>
					"Function4\nRunning...", GL_ICON_INFORMATION, GL_BUTTON_VALID,
					2 * GL_TIME_SECOND);
			break;
    a646:	e017      	b.n	a678 <menuGoalDisplay+0x14c>
		case 4:
			// Displays a GOAL dialog during 2s
			GL_Dialog_Message(gGoalGraphicLibInstance, "Function5",
    a648:	f644 1388 	movw	r3, #18824	; 0x4988
    a64c:	f2c0 0302 	movt	r3, #2
    a650:	681b      	ldr	r3, [r3, #0]
    a652:	2201      	movs	r2, #1
    a654:	9200      	str	r2, [sp, #0]
    a656:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
    a65a:	9201      	str	r2, [sp, #4]
    a65c:	4618      	mov	r0, r3
    a65e:	f249 4170 	movw	r1, #38000	; 0x9470
    a662:	f2c0 0101 	movt	r1, #1
    a666:	f249 427c 	movw	r2, #38012	; 0x947c
    a66a:	f2c0 0201 	movt	r2, #1
    a66e:	2302      	movs	r3, #2
    a670:	f00d ff64 	bl	1853c <GL_Dialog_Message>
					"Function5\nRunning...", GL_ICON_INFORMATION, GL_BUTTON_VALID,
					2 * GL_TIME_SECOND);
			break;
    a674:	e000      	b.n	a678 <menuGoalDisplay+0x14c>
		default:
			//exit
			break;
    a676:	bf00      	nop
		}
	} while (choice != 5);
    a678:	79fb      	ldrb	r3, [r7, #7]
    a67a:	2b05      	cmp	r3, #5
    a67c:	f47f af71 	bne.w	a562 <menuGoalDisplay+0x36>

	releaseUIContext();
    a680:	f000 f89c 	bl	a7bc <releaseUIContext>

	return;
}
    a684:	f644 1380 	movw	r3, #18816	; 0x4980
    a688:	f2c0 0302 	movt	r3, #2
    a68c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    a68e:	681b      	ldr	r3, [r3, #0]
    a690:	429a      	cmp	r2, r3
    a692:	d001      	beq.n	a698 <menuGoalDisplay+0x16c>
    a694:	f7fe fc2c 	bl	8ef0 <__stack_chk_fail>
    a698:	f107 0728 	add.w	r7, r7, #40	; 0x28
    a69c:	46bd      	mov	sp, r7
    a69e:	bdb0      	pop	{r4, r5, r7, pc}

0000a6a0 <initUIContext>:

/**
 * Initialize the display context to maximize the canvas on user area
 */
void initUIContext(int displayHeaderFooterLeds)
{
    a6a0:	b580      	push	{r7, lr}
    a6a2:	b084      	sub	sp, #16
    a6a4:	af00      	add	r7, sp, #0
    a6a6:	6078      	str	r0, [r7, #4]
    a6a8:	f644 1380 	movw	r3, #18816	; 0x4980
    a6ac:	f2c0 0302 	movt	r3, #2
    a6b0:	681b      	ldr	r3, [r3, #0]
    a6b2:	60fb      	str	r3, [r7, #12]
	if(displayHeaderFooterLeds != _OFF_ && displayHeaderFooterLeds != _ON_) {
    a6b4:	687b      	ldr	r3, [r7, #4]
    a6b6:	2b00      	cmp	r3, #0
    a6b8:	d004      	beq.n	a6c4 <initUIContext+0x24>
    a6ba:	687b      	ldr	r3, [r7, #4]
    a6bc:	2b01      	cmp	r3, #1
    a6be:	d001      	beq.n	a6c4 <initUIContext+0x24>
		displayHeaderFooterLeds = _OFF_;
    a6c0:	2300      	movs	r3, #0
    a6c2:	607b      	str	r3, [r7, #4]
	}
	sSavedStatusHeader=DisplayHeader(displayHeaderFooterLeds);
    a6c4:	6878      	ldr	r0, [r7, #4]
    a6c6:	f00d fcd3 	bl	18070 <DisplayHeader>
    a6ca:	4602      	mov	r2, r0
    a6cc:	f644 23ac 	movw	r3, #19116	; 0x4aac
    a6d0:	f2c0 0302 	movt	r3, #2
    a6d4:	601a      	str	r2, [r3, #0]
	sSavedStatusLeds=DisplayLeds(displayHeaderFooterLeds);
    a6d6:	6878      	ldr	r0, [r7, #4]
    a6d8:	f00d fcf8 	bl	180cc <DisplayLeds>
    a6dc:	4602      	mov	r2, r0
    a6de:	f644 23b0 	movw	r3, #19120	; 0x4ab0
    a6e2:	f2c0 0302 	movt	r3, #2
    a6e6:	601a      	str	r2, [r3, #0]
	sSavedStatusFooter=DisplayFooter(displayHeaderFooterLeds);
    a6e8:	6878      	ldr	r0, [r7, #4]
    a6ea:	f00d fc91 	bl	18010 <DisplayFooter>
    a6ee:	4602      	mov	r2, r0
    a6f0:	f644 23b4 	movw	r3, #19124	; 0x4ab4
    a6f4:	f2c0 0302 	movt	r3, #2
    a6f8:	601a      	str	r2, [r3, #0]

	// Open display
	sDisplay = Telium_Fopen("DISPLAY", "w*");
    a6fa:	f249 5000 	movw	r0, #38144	; 0x9500
    a6fe:	f2c0 0001 	movt	r0, #1
    a702:	f249 5108 	movw	r1, #38152	; 0x9508
    a706:	f2c0 0101 	movt	r1, #1
    a70a:	f00c fedb 	bl	174c4 <Telium_Fopen>
    a70e:	4602      	mov	r2, r0
    a710:	f644 13ec 	movw	r3, #18924	; 0x49ec
    a714:	f2c0 0302 	movt	r3, #2
    a718:	601a      	str	r2, [r3, #0]
	// Open keyboard
	sKeyboard = Telium_Fopen("KEYBOARD", "r*");
    a71a:	f249 500c 	movw	r0, #38156	; 0x950c
    a71e:	f2c0 0001 	movt	r0, #1
    a722:	f249 5118 	movw	r1, #38168	; 0x9518
    a726:	f2c0 0101 	movt	r1, #1
    a72a:	f00c fecb 	bl	174c4 <Telium_Fopen>
    a72e:	4602      	mov	r2, r0
    a730:	f644 13e8 	movw	r3, #18920	; 0x49e8
    a734:	f2c0 0302 	movt	r3, #2
    a738:	601a      	str	r2, [r3, #0]
		CHECK(hPrn!=NULL, lblKO1);
	}
	lblKO1:;
#endif

	if(GL_GraphicLib_IsTouchPresent(gGoalGraphicLibInstance)) { // Check if it is a touch screen
    a73a:	f644 1388 	movw	r3, #18824	; 0x4988
    a73e:	f2c0 0302 	movt	r3, #2
    a742:	681b      	ldr	r3, [r3, #0]
    a744:	4618      	mov	r0, r3
    a746:	f00e f86b 	bl	18820 <GL_GraphicLib_IsTouchPresent>
    a74a:	4603      	mov	r3, r0
    a74c:	2b00      	cmp	r3, #0
    a74e:	d026      	beq.n	a79e <initUIContext+0xfe>
		DisplayFooter(_OFF_);                 // Remove footer otherwise touch does not work
    a750:	2000      	movs	r0, #0
    a752:	f00d fc5d 	bl	18010 <DisplayFooter>
		hTsc = Telium_Stdperif("TSCREEN", NULL);             // Check "TSCREEN" peripheral opened?
    a756:	f249 501c 	movw	r0, #38172	; 0x951c
    a75a:	f2c0 0001 	movt	r0, #1
    a75e:	2100      	movs	r1, #0
    a760:	f00c ff74 	bl	1764c <Telium_Stdperif>
    a764:	4602      	mov	r2, r0
    a766:	f644 13e0 	movw	r3, #18912	; 0x49e0
    a76a:	f2c0 0302 	movt	r3, #2
    a76e:	601a      	str	r2, [r3, #0]
		if(hTsc == NULL){
    a770:	f644 13e0 	movw	r3, #18912	; 0x49e0
    a774:	f2c0 0302 	movt	r3, #2
    a778:	681b      	ldr	r3, [r3, #0]
    a77a:	2b00      	cmp	r3, #0
    a77c:	d10f      	bne.n	a79e <initUIContext+0xfe>
			hTsc = Telium_Fopen("TSCREEN", "r*"); // Open "touch" peripheral
    a77e:	f249 501c 	movw	r0, #38172	; 0x951c
    a782:	f2c0 0001 	movt	r0, #1
    a786:	f249 5118 	movw	r1, #38168	; 0x9518
    a78a:	f2c0 0101 	movt	r1, #1
    a78e:	f00c fe99 	bl	174c4 <Telium_Fopen>
    a792:	4602      	mov	r2, r0
    a794:	f644 13e0 	movw	r3, #18912	; 0x49e0
    a798:	f2c0 0302 	movt	r3, #2
    a79c:	601a      	str	r2, [r3, #0]
			CHECK(hTsc!=NULL, lblKO);
		}
		lblKO:;
	}

	return;
    a79e:	bf00      	nop
}
    a7a0:	f644 1380 	movw	r3, #18816	; 0x4980
    a7a4:	f2c0 0302 	movt	r3, #2
    a7a8:	68fa      	ldr	r2, [r7, #12]
    a7aa:	681b      	ldr	r3, [r3, #0]
    a7ac:	429a      	cmp	r2, r3
    a7ae:	d001      	beq.n	a7b4 <initUIContext+0x114>
    a7b0:	f7fe fb9e 	bl	8ef0 <__stack_chk_fail>
    a7b4:	f107 0710 	add.w	r7, r7, #16
    a7b8:	46bd      	mov	sp, r7
    a7ba:	bd80      	pop	{r7, pc}

0000a7bc <releaseUIContext>:

/**
 * Restore display context
 */
void releaseUIContext(void)
{
    a7bc:	b580      	push	{r7, lr}
    a7be:	b082      	sub	sp, #8
    a7c0:	af00      	add	r7, sp, #0
    a7c2:	f644 1380 	movw	r3, #18816	; 0x4980
    a7c6:	f2c0 0302 	movt	r3, #2
    a7ca:	681b      	ldr	r3, [r3, #0]
    a7cc:	607b      	str	r3, [r7, #4]
	// close keyboard
	if (sKeyboard)
    a7ce:	f644 13e8 	movw	r3, #18920	; 0x49e8
    a7d2:	f2c0 0302 	movt	r3, #2
    a7d6:	681b      	ldr	r3, [r3, #0]
    a7d8:	2b00      	cmp	r3, #0
    a7da:	d00d      	beq.n	a7f8 <releaseUIContext+0x3c>
	{
		Telium_Fclose(sKeyboard);
    a7dc:	f644 13e8 	movw	r3, #18920	; 0x49e8
    a7e0:	f2c0 0302 	movt	r3, #2
    a7e4:	681b      	ldr	r3, [r3, #0]
    a7e6:	4618      	mov	r0, r3
    a7e8:	f00c fe3a 	bl	17460 <Telium_Fclose>
		sKeyboard = NULL;
    a7ec:	f644 13e8 	movw	r3, #18920	; 0x49e8
    a7f0:	f2c0 0302 	movt	r3, #2
    a7f4:	2200      	movs	r2, #0
    a7f6:	601a      	str	r2, [r3, #0]
	}
	// close display
	if (sDisplay)
    a7f8:	f644 13ec 	movw	r3, #18924	; 0x49ec
    a7fc:	f2c0 0302 	movt	r3, #2
    a800:	681b      	ldr	r3, [r3, #0]
    a802:	2b00      	cmp	r3, #0
    a804:	d00d      	beq.n	a822 <releaseUIContext+0x66>
	{
		Telium_Fclose(sDisplay);
    a806:	f644 13ec 	movw	r3, #18924	; 0x49ec
    a80a:	f2c0 0302 	movt	r3, #2
    a80e:	681b      	ldr	r3, [r3, #0]
    a810:	4618      	mov	r0, r3
    a812:	f00c fe25 	bl	17460 <Telium_Fclose>
		sDisplay = NULL;
    a816:	f644 13ec 	movw	r3, #18924	; 0x49ec
    a81a:	f2c0 0302 	movt	r3, #2
    a81e:	2200      	movs	r2, #0
    a820:	601a      	str	r2, [r3, #0]
	}

	// Close peripherals
	// *****************
	if(hTsc) {
    a822:	f644 13e0 	movw	r3, #18912	; 0x49e0
    a826:	f2c0 0302 	movt	r3, #2
    a82a:	681b      	ldr	r3, [r3, #0]
    a82c:	2b00      	cmp	r3, #0
    a82e:	d00d      	beq.n	a84c <releaseUIContext+0x90>
		Telium_Fclose(hTsc); // Close "touch" peripheral
    a830:	f644 13e0 	movw	r3, #18912	; 0x49e0
    a834:	f2c0 0302 	movt	r3, #2
    a838:	681b      	ldr	r3, [r3, #0]
    a83a:	4618      	mov	r0, r3
    a83c:	f00c fe10 	bl	17460 <Telium_Fclose>
		hTsc=NULL;
    a840:	f644 13e0 	movw	r3, #18912	; 0x49e0
    a844:	f2c0 0302 	movt	r3, #2
    a848:	2200      	movs	r2, #0
    a84a:	601a      	str	r2, [r3, #0]
	}

	if(hPrn) {
    a84c:	f644 13e4 	movw	r3, #18916	; 0x49e4
    a850:	f2c0 0302 	movt	r3, #2
    a854:	681b      	ldr	r3, [r3, #0]
    a856:	2b00      	cmp	r3, #0
    a858:	d00d      	beq.n	a876 <releaseUIContext+0xba>
		Telium_Fclose(hPrn); // Close "printer" peripheral
    a85a:	f644 13e4 	movw	r3, #18916	; 0x49e4
    a85e:	f2c0 0302 	movt	r3, #2
    a862:	681b      	ldr	r3, [r3, #0]
    a864:	4618      	mov	r0, r3
    a866:	f00c fdfb 	bl	17460 <Telium_Fclose>
		hPrn=NULL;
    a86a:	f644 13e4 	movw	r3, #18916	; 0x49e4
    a86e:	f2c0 0302 	movt	r3, #2
    a872:	2200      	movs	r2, #0
    a874:	601a      	str	r2, [r3, #0]
	}

	// Restore display context
	DisplayHeader(sSavedStatusHeader);
    a876:	f644 23ac 	movw	r3, #19116	; 0x4aac
    a87a:	f2c0 0302 	movt	r3, #2
    a87e:	681b      	ldr	r3, [r3, #0]
    a880:	4618      	mov	r0, r3
    a882:	f00d fbf5 	bl	18070 <DisplayHeader>
	DisplayLeds(sSavedStatusLeds);
    a886:	f644 23b0 	movw	r3, #19120	; 0x4ab0
    a88a:	f2c0 0302 	movt	r3, #2
    a88e:	681b      	ldr	r3, [r3, #0]
    a890:	4618      	mov	r0, r3
    a892:	f00d fc1b 	bl	180cc <DisplayLeds>
	DisplayFooter(sSavedStatusFooter);
    a896:	f644 23b4 	movw	r3, #19124	; 0x4ab4
    a89a:	f2c0 0302 	movt	r3, #2
    a89e:	681b      	ldr	r3, [r3, #0]
    a8a0:	4618      	mov	r0, r3
    a8a2:	f00d fbb5 	bl	18010 <DisplayFooter>

	return;
    a8a6:	bf00      	nop
}
    a8a8:	f644 1380 	movw	r3, #18816	; 0x4980
    a8ac:	f2c0 0302 	movt	r3, #2
    a8b0:	687a      	ldr	r2, [r7, #4]
    a8b2:	681b      	ldr	r3, [r3, #0]
    a8b4:	429a      	cmp	r2, r3
    a8b6:	d001      	beq.n	a8bc <releaseUIContext+0x100>
    a8b8:	f7fe fb1a 	bl	8ef0 <__stack_chk_fail>
    a8bc:	f107 0708 	add.w	r7, r7, #8
    a8c0:	46bd      	mov	sp, r7
    a8c2:	bd80      	pop	{r7, pc}

0000a8c4 <ResetPeripherals>:


//****************************************************************************
// To reset standard peripherals
//****************************************************************************
void ResetPeripherals(unsigned int uiEvents) {
    a8c4:	b580      	push	{r7, lr}
    a8c6:	b084      	sub	sp, #16
    a8c8:	af00      	add	r7, sp, #0
    a8ca:	6078      	str	r0, [r7, #4]
    a8cc:	f644 1380 	movw	r3, #18816	; 0x4980
    a8d0:	f2c0 0302 	movt	r3, #2
    a8d4:	681b      	ldr	r3, [r3, #0]
    a8d6:	60fb      	str	r3, [r7, #12]
	// ***************
	// Empty

	// Reset FIFO buffers
	// ******************
	if(((uiEvents & KEYBOARD) == KEYBOARD) && sKeyboard) // FIFO keyboard
    a8d8:	687b      	ldr	r3, [r7, #4]
    a8da:	f003 0301 	and.w	r3, r3, #1
    a8de:	2b00      	cmp	r3, #0
    a8e0:	d00f      	beq.n	a902 <ResetPeripherals+0x3e>
    a8e2:	f644 13e8 	movw	r3, #18920	; 0x49e8
    a8e6:	f2c0 0302 	movt	r3, #2
    a8ea:	681b      	ldr	r3, [r3, #0]
    a8ec:	2b00      	cmp	r3, #0
    a8ee:	d008      	beq.n	a902 <ResetPeripherals+0x3e>
		Telium_Reset_buf(sKeyboard, _receive_id);
    a8f0:	f644 13e8 	movw	r3, #18920	; 0x49e8
    a8f4:	f2c0 0302 	movt	r3, #2
    a8f8:	681b      	ldr	r3, [r3, #0]
    a8fa:	4618      	mov	r0, r3
    a8fc:	2101      	movs	r1, #1
    a8fe:	f00c fe15 	bl	1752c <Telium_Reset_buf>

	if(((uiEvents & TSCREEN) == TSCREEN) && hTsc)   // FIFO touch screen
    a902:	687b      	ldr	r3, [r7, #4]
    a904:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
    a908:	2b00      	cmp	r3, #0
    a90a:	d00f      	beq.n	a92c <ResetPeripherals+0x68>
    a90c:	f644 13e0 	movw	r3, #18912	; 0x49e0
    a910:	f2c0 0302 	movt	r3, #2
    a914:	681b      	ldr	r3, [r3, #0]
    a916:	2b00      	cmp	r3, #0
    a918:	d008      	beq.n	a92c <ResetPeripherals+0x68>
		Telium_Reset_buf(hTsc, _receive_id);
    a91a:	f644 13e0 	movw	r3, #18912	; 0x49e0
    a91e:	f2c0 0302 	movt	r3, #2
    a922:	681b      	ldr	r3, [r3, #0]
    a924:	4618      	mov	r0, r3
    a926:	2101      	movs	r1, #1
    a928:	f00c fe00 	bl	1752c <Telium_Reset_buf>

	if(((uiEvents & PRINTER) == PRINTER) && hPrn)   // FIFO printer
    a92c:	687b      	ldr	r3, [r7, #4]
    a92e:	f003 0302 	and.w	r3, r3, #2
    a932:	2b00      	cmp	r3, #0
    a934:	d00f      	beq.n	a956 <ResetPeripherals+0x92>
    a936:	f644 13e4 	movw	r3, #18916	; 0x49e4
    a93a:	f2c0 0302 	movt	r3, #2
    a93e:	681b      	ldr	r3, [r3, #0]
    a940:	2b00      	cmp	r3, #0
    a942:	d008      	beq.n	a956 <ResetPeripherals+0x92>
		Telium_Reset_buf(hPrn, _receive_id);
    a944:	f644 13e4 	movw	r3, #18916	; 0x49e4
    a948:	f2c0 0302 	movt	r3, #2
    a94c:	681b      	ldr	r3, [r3, #0]
    a94e:	4618      	mov	r0, r3
    a950:	2101      	movs	r1, #1
    a952:	f00c fdeb 	bl	1752c <Telium_Reset_buf>
}
    a956:	f644 1380 	movw	r3, #18816	; 0x4980
    a95a:	f2c0 0302 	movt	r3, #2
    a95e:	68fa      	ldr	r2, [r7, #12]
    a960:	681b      	ldr	r3, [r3, #0]
    a962:	429a      	cmp	r2, r3
    a964:	d001      	beq.n	a96a <ResetPeripherals+0xa6>
    a966:	f7fe fac3 	bl	8ef0 <__stack_chk_fail>
    a96a:	f107 0710 	add.w	r7, r7, #16
    a96e:	46bd      	mov	sp, r7
    a970:	bd80      	pop	{r7, pc}
    a972:	bf00      	nop

0000a974 <GprsReport>:
//    >=0 : Report done
//     <0 : Report failed
//****************************************************************************

static int GprsReport(T_GL_HWIDGET hScreen, char *pcApn, char *pcUsername)
{
    a974:	b5b0      	push	{r4, r5, r7, lr}
    a976:	f5ad 7d52 	sub.w	sp, sp, #840	; 0x348
    a97a:	af04      	add	r7, sp, #16
    a97c:	f107 030c 	add.w	r3, r7, #12
    a980:	6018      	str	r0, [r3, #0]
    a982:	f107 0308 	add.w	r3, r7, #8
    a986:	6019      	str	r1, [r3, #0]
    a988:	1d3b      	adds	r3, r7, #4
    a98a:	601a      	str	r2, [r3, #0]
    a98c:	f644 1380 	movw	r3, #18816	; 0x4980
    a990:	f2c0 0302 	movt	r3, #2
    a994:	681b      	ldr	r3, [r3, #0]
    a996:	f8c7 3334 	str.w	r3, [r7, #820]	; 0x334
	// Local variables
	// ***************
	Telium_File_t *hGprs = NULL;
    a99a:	f107 031c 	add.w	r3, r7, #28
    a99e:	2200      	movs	r2, #0
    a9a0:	601a      	str	r2, [r3, #0]
#ifndef __TELIUM3__
	hGprs = Telium_Stdperif((char*)"DGPRS", NULL);
	//CHECK(hGprs!=NULL, lblKO);
#endif

	iRet = appGet(appGprsRequirePin, tcRequirePin, lenGprsRequirePin+1);
    a9a2:	f107 0418 	add.w	r4, r7, #24
    a9a6:	f507 73ea 	add.w	r3, r7, #468	; 0x1d4
    a9aa:	200c      	movs	r0, #12
    a9ac:	4619      	mov	r1, r3
    a9ae:	2202      	movs	r2, #2
    a9b0:	f004 fe14 	bl	f5dc <appGet>
    a9b4:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    a9b6:	f107 0318 	add.w	r3, r7, #24
    a9ba:	681b      	ldr	r3, [r3, #0]
    a9bc:	2b00      	cmp	r3, #0
    a9be:	f2c0 8567 	blt.w	b490 <GprsReport+0xb1c>

	iRequirePin=atoi(tcRequirePin); // False => 0 (pin required), True => 1 (pin saved)
    a9c2:	f107 0420 	add.w	r4, r7, #32
    a9c6:	f507 73ea 	add.w	r3, r7, #468	; 0x1d4
    a9ca:	4618      	mov	r0, r3
    a9cc:	f7fe e8a2 	blx	8b14 <_init+0x44>
    a9d0:	6020      	str	r0, [r4, #0]
	iRet = gprs_SetPinModeFree(hGprs,iRequirePin);
    a9d2:	f107 0320 	add.w	r3, r7, #32
    a9d6:	681b      	ldr	r3, [r3, #0]
    a9d8:	f107 0418 	add.w	r4, r7, #24
    a9dc:	f107 021c 	add.w	r2, r7, #28
    a9e0:	6810      	ldr	r0, [r2, #0]
    a9e2:	4619      	mov	r1, r3
    a9e4:	f00c fae7 	bl	16fb6 <gprs_SetPinModeFree>
    a9e8:	6020      	str	r0, [r4, #0]
	CHECK(iRet==0, lblKO);
    a9ea:	f107 0318 	add.w	r3, r7, #24
    a9ee:	681b      	ldr	r3, [r3, #0]
    a9f0:	2b00      	cmp	r3, #0
    a9f2:	f040 854d 	bne.w	b490 <GprsReport+0xb1c>

	iRet = gprs_GetInformation(hGprs,&xInfo,sizeof(xInfo));
    a9f6:	f107 0418 	add.w	r4, r7, #24
    a9fa:	f107 021c 	add.w	r2, r7, #28
    a9fe:	f107 0324 	add.w	r3, r7, #36	; 0x24
    aa02:	6810      	ldr	r0, [r2, #0]
    aa04:	4619      	mov	r1, r3
    aa06:	f44f 72d8 	mov.w	r2, #432	; 0x1b0
    aa0a:	f00c fac2 	bl	16f92 <gprs_GetInformation>
    aa0e:	6020      	str	r0, [r4, #0]
	CHECK(iRet==0, lblKO);
    aa10:	f107 0318 	add.w	r3, r7, #24
    aa14:	681b      	ldr	r3, [r3, #0]
    aa16:	2b00      	cmp	r3, #0
    aa18:	f040 853a 	bne.w	b490 <GprsReport+0xb1c>

	// GPRS start report
	// =================
	switch (xInfo.start_report)
    aa1c:	f107 0324 	add.w	r3, r7, #36	; 0x24
    aa20:	681b      	ldr	r3, [r3, #0]
    aa22:	3301      	adds	r3, #1
    aa24:	2b05      	cmp	r3, #5
    aa26:	d867      	bhi.n	aaf8 <GprsReport+0x184>
    aa28:	a201      	add	r2, pc, #4	; (adr r2, aa30 <GprsReport+0xbc>)
    aa2a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    aa2e:	bf00      	nop
    aa30:	0000aa49 	.word	0x0000aa49
    aa34:	0000aa69 	.word	0x0000aa69
    aa38:	0000aa83 	.word	0x0000aa83
    aa3c:	0000aa9d 	.word	0x0000aa9d
    aa40:	0000aabd 	.word	0x0000aabd
    aa44:	0000aadf 	.word	0x0000aadf
	{
	case EGPRS_REPORT_NOT_RECEIVED_YET: strcpy(tcReport, "Rpt: NOT_RECEIVED_YET"); break;
    aa48:	f507 72fe 	add.w	r2, r7, #508	; 0x1fc
    aa4c:	f649 03d8 	movw	r3, #39128	; 0x98d8
    aa50:	f2c0 0301 	movt	r3, #1
    aa54:	4614      	mov	r4, r2
    aa56:	461d      	mov	r5, r3
    aa58:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    aa5a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    aa5c:	e895 0003 	ldmia.w	r5, {r0, r1}
    aa60:	6020      	str	r0, [r4, #0]
    aa62:	3404      	adds	r4, #4
    aa64:	8021      	strh	r1, [r4, #0]
    aa66:	e058      	b.n	ab1a <GprsReport+0x1a6>
	case EGPRS_REPORT_READY:            strcpy(tcReport, "Rpt: READY");            break;
    aa68:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
    aa6c:	f649 02f0 	movw	r2, #39152	; 0x98f0
    aa70:	f2c0 0201 	movt	r2, #1
    aa74:	ca07      	ldmia	r2, {r0, r1, r2}
    aa76:	c303      	stmia	r3!, {r0, r1}
    aa78:	801a      	strh	r2, [r3, #0]
    aa7a:	3302      	adds	r3, #2
    aa7c:	0c12      	lsrs	r2, r2, #16
    aa7e:	701a      	strb	r2, [r3, #0]
    aa80:	e04b      	b.n	ab1a <GprsReport+0x1a6>
	case EGPRS_REPORT_WAITING_CODE:     strcpy(tcReport, "Rpt: WAITING_CODE");     break;
    aa82:	f507 72fe 	add.w	r2, r7, #508	; 0x1fc
    aa86:	f649 03fc 	movw	r3, #39164	; 0x98fc
    aa8a:	f2c0 0301 	movt	r3, #1
    aa8e:	4614      	mov	r4, r2
    aa90:	461d      	mov	r5, r3
    aa92:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    aa94:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    aa96:	682b      	ldr	r3, [r5, #0]
    aa98:	8023      	strh	r3, [r4, #0]
    aa9a:	e03e      	b.n	ab1a <GprsReport+0x1a6>
	case EGPRS_REPORT_SIM_NOT_PRESENT:  strcpy(tcReport, "Rpt: SIM_NOT_PRESENT");  break;
    aa9c:	f507 72fe 	add.w	r2, r7, #508	; 0x1fc
    aaa0:	f649 1310 	movw	r3, #39184	; 0x9910
    aaa4:	f2c0 0301 	movt	r3, #1
    aaa8:	4614      	mov	r4, r2
    aaaa:	461d      	mov	r5, r3
    aaac:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    aaae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    aab0:	e895 0003 	ldmia.w	r5, {r0, r1}
    aab4:	6020      	str	r0, [r4, #0]
    aab6:	3404      	adds	r4, #4
    aab8:	7021      	strb	r1, [r4, #0]
    aaba:	e02e      	b.n	ab1a <GprsReport+0x1a6>
	case EGPRS_REPORT_SIMLOCK_STATE:    strcpy(tcReport, "Rpt: SIMLOCK_STATE");    break;
    aabc:	f507 72fe 	add.w	r2, r7, #508	; 0x1fc
    aac0:	f649 1328 	movw	r3, #39208	; 0x9928
    aac4:	f2c0 0301 	movt	r3, #1
    aac8:	4614      	mov	r4, r2
    aaca:	461d      	mov	r5, r3
    aacc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    aace:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    aad0:	682b      	ldr	r3, [r5, #0]
    aad2:	461a      	mov	r2, r3
    aad4:	8022      	strh	r2, [r4, #0]
    aad6:	3402      	adds	r4, #2
    aad8:	0c1b      	lsrs	r3, r3, #16
    aada:	7023      	strb	r3, [r4, #0]
    aadc:	e01d      	b.n	ab1a <GprsReport+0x1a6>
	case EGPRS_REPORT_FATAL_ERROR:      strcpy(tcReport, "Rpt: FATAL_ERROR");      break;
    aade:	f507 72fe 	add.w	r2, r7, #508	; 0x1fc
    aae2:	f649 133c 	movw	r3, #39228	; 0x993c
    aae6:	f2c0 0301 	movt	r3, #1
    aaea:	4614      	mov	r4, r2
    aaec:	461d      	mov	r5, r3
    aaee:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    aaf0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    aaf2:	682b      	ldr	r3, [r5, #0]
    aaf4:	7023      	strb	r3, [r4, #0]
    aaf6:	e010      	b.n	ab1a <GprsReport+0x1a6>
	default:                            strcpy(tcReport, "Rpt: UNKNOWN_ERROR");    break;
    aaf8:	f507 72fe 	add.w	r2, r7, #508	; 0x1fc
    aafc:	f649 1350 	movw	r3, #39248	; 0x9950
    ab00:	f2c0 0301 	movt	r3, #1
    ab04:	4614      	mov	r4, r2
    ab06:	461d      	mov	r5, r3
    ab08:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    ab0a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    ab0c:	682b      	ldr	r3, [r5, #0]
    ab0e:	461a      	mov	r2, r3
    ab10:	8022      	strh	r2, [r4, #0]
    ab12:	3402      	adds	r4, #2
    ab14:	0c1b      	lsrs	r3, r3, #16
    ab16:	7023      	strb	r3, [r4, #0]
    ab18:	bf00      	nop
	}

	// GPRS sim status
	// ===============
	switch (xInfo.sim_status)
    ab1a:	f107 0324 	add.w	r3, r7, #36	; 0x24
    ab1e:	685b      	ldr	r3, [r3, #4]
    ab20:	3301      	adds	r3, #1
    ab22:	2b0a      	cmp	r3, #10
    ab24:	f200 8472 	bhi.w	b40c <GprsReport+0xa98>
    ab28:	a201      	add	r2, pc, #4	; (adr r2, ab30 <GprsReport+0x1bc>)
    ab2a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    ab2e:	bf00      	nop
    ab30:	0000ab5d 	.word	0x0000ab5d
    ab34:	0000b40d 	.word	0x0000b40d
    ab38:	0000ab97 	.word	0x0000ab97
    ab3c:	0000abff 	.word	0x0000abff
    ab40:	0000ac19 	.word	0x0000ac19
    ab44:	0000ae11 	.word	0x0000ae11
    ab48:	0000ae33 	.word	0x0000ae33
    ab4c:	0000b029 	.word	0x0000b029
    ab50:	0000b049 	.word	0x0000b049
    ab54:	0000b3c9 	.word	0x0000b3c9
    ab58:	0000b3eb 	.word	0x0000b3eb
	{
	case EGPRS_SIM_NOT_RECEIVED_YET:
		strcpy(tcStatus, "Sta: NOT_RECEIVED_YET");
    ab5c:	f507 7206 	add.w	r2, r7, #536	; 0x218
    ab60:	f649 1364 	movw	r3, #39268	; 0x9964
    ab64:	f2c0 0301 	movt	r3, #1
    ab68:	4614      	mov	r4, r2
    ab6a:	461d      	mov	r5, r3
    ab6c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    ab6e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    ab70:	e895 0003 	ldmia.w	r5, {r0, r1}
    ab74:	6020      	str	r0, [r4, #0]
    ab76:	3404      	adds	r4, #4
    ab78:	8021      	strh	r1, [r4, #0]

		// *** Start GSM session ***
		iRet = LL_GSM_Start(NULL);
    ab7a:	f107 0418 	add.w	r4, r7, #24
    ab7e:	2000      	movs	r0, #0
    ab80:	f00c fb21 	bl	171c6 <LL_GSM_Start>
    ab84:	6020      	str	r0, [r4, #0]
		CHECK(iRet==LL_ERROR_OK, lblKO);
    ab86:	f107 0318 	add.w	r3, r7, #24
    ab8a:	681b      	ldr	r3, [r3, #0]
    ab8c:	2b00      	cmp	r3, #0
    ab8e:	f040 847f 	bne.w	b490 <GprsReport+0xb1c>

		break;
    ab92:	f000 bc4c 	b.w	b42e <GprsReport+0xaba>
	case EGPRS_SIM_OK:                                         // Sim ready, pin already checked
		strcpy(tcStatus, "Sta: SIM_OK");
    ab96:	f507 7206 	add.w	r2, r7, #536	; 0x218
    ab9a:	f649 137c 	movw	r3, #39292	; 0x997c
    ab9e:	f2c0 0301 	movt	r3, #1
    aba2:	4614      	mov	r4, r2
    aba4:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
    aba8:	e884 0007 	stmia.w	r4, {r0, r1, r2}

		// *** Start GPRS session ***
		iRet = LL_GPRS_Start(NULL, pcApn);
    abac:	f107 0418 	add.w	r4, r7, #24
    abb0:	f107 0308 	add.w	r3, r7, #8
    abb4:	2000      	movs	r0, #0
    abb6:	6819      	ldr	r1, [r3, #0]
    abb8:	f00c faf3 	bl	171a2 <LL_GPRS_Start>
    abbc:	6020      	str	r0, [r4, #0]
		CHECK(iRet==LL_ERROR_OK, lblKO);
    abbe:	f107 0318 	add.w	r3, r7, #24
    abc2:	681b      	ldr	r3, [r3, #0]
    abc4:	2b00      	cmp	r3, #0
    abc6:	f040 8463 	bne.w	b490 <GprsReport+0xb1c>

		iRet = GoalDspLine(hScreen, 4, "CONNECT. IN PROGRESS", &txGPRS[4], 0, true);
    abca:	f107 0418 	add.w	r4, r7, #24
    abce:	f107 030c 	add.w	r3, r7, #12
    abd2:	2200      	movs	r2, #0
    abd4:	9200      	str	r2, [sp, #0]
    abd6:	2201      	movs	r2, #1
    abd8:	9201      	str	r2, [sp, #4]
    abda:	6818      	ldr	r0, [r3, #0]
    abdc:	2104      	movs	r1, #4
    abde:	f649 1288 	movw	r2, #39304	; 0x9988
    abe2:	f2c0 0201 	movt	r2, #1
    abe6:	4ba1      	ldr	r3, [pc, #644]	; (ae6c <GprsReport+0x4f8>)
    abe8:	f002 fcca 	bl	d580 <GoalDspLine>
    abec:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblKO);
    abee:	f107 0318 	add.w	r3, r7, #24
    abf2:	681b      	ldr	r3, [r3, #0]
    abf4:	2b00      	cmp	r3, #0
    abf6:	f2c0 844b 	blt.w	b490 <GprsReport+0xb1c>
		break;
    abfa:	f000 bc18 	b.w	b42e <GprsReport+0xaba>
	case EGPRS_SIM_KO:                  strcpy(tcStatus, "Sta: SIM_KO"); break;
    abfe:	f507 7206 	add.w	r2, r7, #536	; 0x218
    ac02:	f649 13a0 	movw	r3, #39328	; 0x99a0
    ac06:	f2c0 0301 	movt	r3, #1
    ac0a:	4614      	mov	r4, r2
    ac0c:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
    ac10:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    ac14:	f000 bc0b 	b.w	b42e <GprsReport+0xaba>
	case EGPRS_SIM_PIN_REQUIRED:                              // Pin required, enter it
		strcpy(tcStatus, "Sta: PIN_REQUIRED");
    ac18:	f507 7206 	add.w	r2, r7, #536	; 0x218
    ac1c:	f649 13ac 	movw	r3, #39340	; 0x99ac
    ac20:	f2c0 0301 	movt	r3, #1
    ac24:	4614      	mov	r4, r2
    ac26:	461d      	mov	r5, r3
    ac28:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    ac2a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    ac2c:	682b      	ldr	r3, [r5, #0]
    ac2e:	8023      	strh	r3, [r4, #0]

		// *** Enter Pin code ***
		memset(tcMask, 0, sizeof(tcMask));
    ac30:	f507 730d 	add.w	r3, r7, #564	; 0x234
    ac34:	4618      	mov	r0, r3
    ac36:	2100      	movs	r1, #0
    ac38:	f44f 7280 	mov.w	r2, #256	; 0x100
    ac3c:	f7fd ef76 	blx	8b2c <_init+0x5c>
		for (i=0; i<lenGprsPin; i++)
    ac40:	f107 0314 	add.w	r3, r7, #20
    ac44:	2200      	movs	r2, #0
    ac46:	601a      	str	r2, [r3, #0]
    ac48:	e017      	b.n	ac7a <GprsReport+0x306>
			strcat(tcMask, "/d");                             // Accept only decimal character
    ac4a:	f507 730d 	add.w	r3, r7, #564	; 0x234
    ac4e:	4618      	mov	r0, r3
    ac50:	f7fd efc4 	blx	8bdc <_init+0x10c>
    ac54:	4603      	mov	r3, r0
    ac56:	f507 720d 	add.w	r2, r7, #564	; 0x234
    ac5a:	18d2      	adds	r2, r2, r3
    ac5c:	f649 13c0 	movw	r3, #39360	; 0x99c0
    ac60:	f2c0 0301 	movt	r3, #1
    ac64:	8819      	ldrh	r1, [r3, #0]
    ac66:	789b      	ldrb	r3, [r3, #2]
    ac68:	8011      	strh	r1, [r2, #0]
    ac6a:	7093      	strb	r3, [r2, #2]
	case EGPRS_SIM_PIN_REQUIRED:                              // Pin required, enter it
		strcpy(tcStatus, "Sta: PIN_REQUIRED");

		// *** Enter Pin code ***
		memset(tcMask, 0, sizeof(tcMask));
		for (i=0; i<lenGprsPin; i++)
    ac6c:	f107 0314 	add.w	r3, r7, #20
    ac70:	f107 0214 	add.w	r2, r7, #20
    ac74:	6812      	ldr	r2, [r2, #0]
    ac76:	3201      	adds	r2, #1
    ac78:	601a      	str	r2, [r3, #0]
    ac7a:	f107 0314 	add.w	r3, r7, #20
    ac7e:	681b      	ldr	r3, [r3, #0]
    ac80:	2b07      	cmp	r3, #7
    ac82:	dde2      	ble.n	ac4a <GprsReport+0x2d6>
			strcat(tcMask, "/d");                             // Accept only decimal character
		memset (tcPin, 0, sizeof(tcPin));
    ac84:	f507 73ec 	add.w	r3, r7, #472	; 0x1d8
    ac88:	4618      	mov	r0, r3
    ac8a:	2100      	movs	r1, #0
    ac8c:	2209      	movs	r2, #9
    ac8e:	f7fd ef4e 	blx	8b2c <_init+0x5c>
		iRet = GL_Dialog_Password(gGoalGraphicLibInstance, "Pin Code", "Enter Pin :", tcMask, tcPin, sizeof(tcPin), GL_TIME_MINUTE);
    ac92:	f644 1388 	movw	r3, #18824	; 0x4988
    ac96:	f2c0 0302 	movt	r3, #2
    ac9a:	681a      	ldr	r2, [r3, #0]
    ac9c:	f507 730d 	add.w	r3, r7, #564	; 0x234
    aca0:	f507 71ec 	add.w	r1, r7, #472	; 0x1d8
    aca4:	9100      	str	r1, [sp, #0]
    aca6:	2109      	movs	r1, #9
    aca8:	9101      	str	r1, [sp, #4]
    acaa:	f64e 2160 	movw	r1, #60000	; 0xea60
    acae:	9102      	str	r1, [sp, #8]
    acb0:	4610      	mov	r0, r2
    acb2:	f649 11c4 	movw	r1, #39364	; 0x99c4
    acb6:	f2c0 0101 	movt	r1, #1
    acba:	f649 12d0 	movw	r2, #39376	; 0x99d0
    acbe:	f2c0 0201 	movt	r2, #1
    acc2:	f00d fc4d 	bl	18560 <GL_Dialog_Password>
    acc6:	4602      	mov	r2, r0
    acc8:	f107 0318 	add.w	r3, r7, #24
    accc:	601a      	str	r2, [r3, #0]
		if ((iRet==GL_KEY_CANCEL) || (iRet==GL_RESULT_INACTIVITY))
    acce:	f107 0318 	add.w	r3, r7, #24
    acd2:	681a      	ldr	r2, [r3, #0]
    acd4:	f64f 0351 	movw	r3, #63569	; 0xf851
    acd8:	429a      	cmp	r2, r3
    acda:	d006      	beq.n	acea <GprsReport+0x376>
    acdc:	f107 0318 	add.w	r3, r7, #24
    ace0:	681a      	ldr	r2, [r3, #0]
    ace2:	f64f 0380 	movw	r3, #63616	; 0xf880
    ace6:	429a      	cmp	r2, r3
    ace8:	d103      	bne.n	acf2 <GprsReport+0x37e>
			iRet=0;                                           // Exit on cancel/timeout
    acea:	f107 0318 	add.w	r3, r7, #24
    acee:	2200      	movs	r2, #0
    acf0:	601a      	str	r2, [r3, #0]
		CHECK(iRet!=0, lblEnd);
    acf2:	f107 0318 	add.w	r3, r7, #24
    acf6:	681b      	ldr	r3, [r3, #0]
    acf8:	2b00      	cmp	r3, #0
    acfa:	f000 83cf 	beq.w	b49c <GprsReport+0xb28>

		// *** Start GSM session ***
		iRet = LL_GSM_Start(tcPin[0] ? tcPin : NULL);
    acfe:	f507 73ec 	add.w	r3, r7, #472	; 0x1d8
    ad02:	781b      	ldrb	r3, [r3, #0]
    ad04:	2b00      	cmp	r3, #0
    ad06:	d002      	beq.n	ad0e <GprsReport+0x39a>
    ad08:	f507 73ec 	add.w	r3, r7, #472	; 0x1d8
    ad0c:	e000      	b.n	ad10 <GprsReport+0x39c>
    ad0e:	2300      	movs	r3, #0
    ad10:	f107 0418 	add.w	r4, r7, #24
    ad14:	4618      	mov	r0, r3
    ad16:	f00c fa56 	bl	171c6 <LL_GSM_Start>
    ad1a:	6020      	str	r0, [r4, #0]
		CHECK(iRet==LL_ERROR_OK, lblKO);
    ad1c:	f107 0318 	add.w	r3, r7, #24
    ad20:	681b      	ldr	r3, [r3, #0]
    ad22:	2b00      	cmp	r3, #0
    ad24:	f040 83b4 	bne.w	b490 <GprsReport+0xb1c>

		// *** Start GPRS session ***
		iRet = LL_GPRS_Start(tcPin[0] ? tcPin : NULL, pcApn);
    ad28:	f507 73ec 	add.w	r3, r7, #472	; 0x1d8
    ad2c:	781b      	ldrb	r3, [r3, #0]
    ad2e:	2b00      	cmp	r3, #0
    ad30:	d002      	beq.n	ad38 <GprsReport+0x3c4>
    ad32:	f507 73ec 	add.w	r3, r7, #472	; 0x1d8
    ad36:	e000      	b.n	ad3a <GprsReport+0x3c6>
    ad38:	2300      	movs	r3, #0
    ad3a:	f107 0418 	add.w	r4, r7, #24
    ad3e:	f107 0208 	add.w	r2, r7, #8
    ad42:	4618      	mov	r0, r3
    ad44:	6811      	ldr	r1, [r2, #0]
    ad46:	f00c fa2c 	bl	171a2 <LL_GPRS_Start>
    ad4a:	6020      	str	r0, [r4, #0]
		CHECK(iRet==LL_ERROR_OK, lblKO);
    ad4c:	f107 0318 	add.w	r3, r7, #24
    ad50:	681b      	ldr	r3, [r3, #0]
    ad52:	2b00      	cmp	r3, #0
    ad54:	f040 839c 	bne.w	b490 <GprsReport+0xb1c>

		iRet = GoalClrScreen(hScreen, GL_COLOR_BLACK, KEY_CANCEL, false); // Clear screen
    ad58:	f107 0418 	add.w	r4, r7, #24
    ad5c:	f107 030c 	add.w	r3, r7, #12
    ad60:	6818      	ldr	r0, [r3, #0]
    ad62:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    ad66:	2202      	movs	r2, #2
    ad68:	2300      	movs	r3, #0
    ad6a:	f002 faef 	bl	d34c <GoalClrScreen>
    ad6e:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblKO);
    ad70:	f107 0318 	add.w	r3, r7, #24
    ad74:	681b      	ldr	r3, [r3, #0]
    ad76:	2b00      	cmp	r3, #0
    ad78:	f2c0 838a 	blt.w	b490 <GprsReport+0xb1c>
		iRet = GoalDspLine(hScreen, 0, "1-comStart...", &txGPRS[0], 0, false);
    ad7c:	f107 0418 	add.w	r4, r7, #24
    ad80:	f107 030c 	add.w	r3, r7, #12
    ad84:	2200      	movs	r2, #0
    ad86:	9200      	str	r2, [sp, #0]
    ad88:	2200      	movs	r2, #0
    ad8a:	9201      	str	r2, [sp, #4]
    ad8c:	6818      	ldr	r0, [r3, #0]
    ad8e:	2100      	movs	r1, #0
    ad90:	f649 12dc 	movw	r2, #39388	; 0x99dc
    ad94:	f2c0 0201 	movt	r2, #1
    ad98:	f249 5324 	movw	r3, #38180	; 0x9524
    ad9c:	f2c0 0301 	movt	r3, #1
    ada0:	f002 fbee 	bl	d580 <GoalDspLine>
    ada4:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblKO);
    ada6:	f107 0318 	add.w	r3, r7, #24
    adaa:	681b      	ldr	r3, [r3, #0]
    adac:	2b00      	cmp	r3, #0
    adae:	f2c0 836f 	blt.w	b490 <GprsReport+0xb1c>
		iRet = GoalDspLine(hScreen, 1, pcUsername, &txGPRS[1], 0, false); // Show user name
    adb2:	f107 0418 	add.w	r4, r7, #24
    adb6:	f107 020c 	add.w	r2, r7, #12
    adba:	1d3b      	adds	r3, r7, #4
    adbc:	2100      	movs	r1, #0
    adbe:	9100      	str	r1, [sp, #0]
    adc0:	2100      	movs	r1, #0
    adc2:	9101      	str	r1, [sp, #4]
    adc4:	6810      	ldr	r0, [r2, #0]
    adc6:	2101      	movs	r1, #1
    adc8:	681a      	ldr	r2, [r3, #0]
    adca:	4b29      	ldr	r3, [pc, #164]	; (ae70 <GprsReport+0x4fc>)
    adcc:	f002 fbd8 	bl	d580 <GoalDspLine>
    add0:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblKO);
    add2:	f107 0318 	add.w	r3, r7, #24
    add6:	681b      	ldr	r3, [r3, #0]
    add8:	2b00      	cmp	r3, #0
    adda:	f2c0 8359 	blt.w	b490 <GprsReport+0xb1c>
		iRet = GoalDspLine(hScreen, 4, "CONNECT. IN PROGRESS", &txGPRS[4], 0, true);
    adde:	f107 0418 	add.w	r4, r7, #24
    ade2:	f107 030c 	add.w	r3, r7, #12
    ade6:	2200      	movs	r2, #0
    ade8:	9200      	str	r2, [sp, #0]
    adea:	2201      	movs	r2, #1
    adec:	9201      	str	r2, [sp, #4]
    adee:	6818      	ldr	r0, [r3, #0]
    adf0:	2104      	movs	r1, #4
    adf2:	f649 1288 	movw	r2, #39304	; 0x9988
    adf6:	f2c0 0201 	movt	r2, #1
    adfa:	4b1c      	ldr	r3, [pc, #112]	; (ae6c <GprsReport+0x4f8>)
    adfc:	f002 fbc0 	bl	d580 <GoalDspLine>
    ae00:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblKO);
    ae02:	f107 0318 	add.w	r3, r7, #24
    ae06:	681b      	ldr	r3, [r3, #0]
    ae08:	2b00      	cmp	r3, #0
    ae0a:	f2c0 8341 	blt.w	b490 <GprsReport+0xb1c>
		break;
    ae0e:	e30e      	b.n	b42e <GprsReport+0xaba>
	case EGPRS_SIM_PIN2_REQUIRED:       strcpy(tcStatus, "Sta: PIN2 REQUIRED"); break;
    ae10:	f507 7206 	add.w	r2, r7, #536	; 0x218
    ae14:	f649 13ec 	movw	r3, #39404	; 0x99ec
    ae18:	f2c0 0301 	movt	r3, #1
    ae1c:	4614      	mov	r4, r2
    ae1e:	461d      	mov	r5, r3
    ae20:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    ae22:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    ae24:	682b      	ldr	r3, [r5, #0]
    ae26:	461a      	mov	r2, r3
    ae28:	8022      	strh	r2, [r4, #0]
    ae2a:	3402      	adds	r4, #2
    ae2c:	0c1b      	lsrs	r3, r3, #16
    ae2e:	7023      	strb	r3, [r4, #0]
    ae30:	e2fd      	b.n	b42e <GprsReport+0xaba>
	case EGPRS_SIM_PIN_ERRONEOUS:                             // Wrong Pin, enter it
		strcpy(tcStatus, "Sta: PIN ERRONEOUS   ");
    ae32:	f507 7206 	add.w	r2, r7, #536	; 0x218
    ae36:	f649 2300 	movw	r3, #39424	; 0x9a00
    ae3a:	f2c0 0301 	movt	r3, #1
    ae3e:	4614      	mov	r4, r2
    ae40:	461d      	mov	r5, r3
    ae42:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    ae44:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    ae46:	e895 0003 	ldmia.w	r5, {r0, r1}
    ae4a:	6020      	str	r0, [r4, #0]
    ae4c:	3404      	adds	r4, #4
    ae4e:	8021      	strh	r1, [r4, #0]

		// *** Enter Pin code ***
		memset(tcMask, 0, sizeof(tcMask));
    ae50:	f507 730d 	add.w	r3, r7, #564	; 0x234
    ae54:	4618      	mov	r0, r3
    ae56:	2100      	movs	r1, #0
    ae58:	f44f 7280 	mov.w	r2, #256	; 0x100
    ae5c:	f7fd ee66 	blx	8b2c <_init+0x5c>
		for (i=0; i<lenGprsPin; i++)
    ae60:	f107 0314 	add.w	r3, r7, #20
    ae64:	2200      	movs	r2, #0
    ae66:	601a      	str	r2, [r3, #0]
    ae68:	e01c      	b.n	aea4 <GprsReport+0x530>
    ae6a:	bf00      	nop
    ae6c:	000197d4 	.word	0x000197d4
    ae70:	000195d0 	.word	0x000195d0
			strcat(tcMask, "/d");                             // Accept only decimal character
    ae74:	f507 730d 	add.w	r3, r7, #564	; 0x234
    ae78:	4618      	mov	r0, r3
    ae7a:	f7fd eeb0 	blx	8bdc <_init+0x10c>
    ae7e:	4603      	mov	r3, r0
    ae80:	f507 720d 	add.w	r2, r7, #564	; 0x234
    ae84:	18d2      	adds	r2, r2, r3
    ae86:	f649 13c0 	movw	r3, #39360	; 0x99c0
    ae8a:	f2c0 0301 	movt	r3, #1
    ae8e:	8819      	ldrh	r1, [r3, #0]
    ae90:	789b      	ldrb	r3, [r3, #2]
    ae92:	8011      	strh	r1, [r2, #0]
    ae94:	7093      	strb	r3, [r2, #2]
	case EGPRS_SIM_PIN_ERRONEOUS:                             // Wrong Pin, enter it
		strcpy(tcStatus, "Sta: PIN ERRONEOUS   ");

		// *** Enter Pin code ***
		memset(tcMask, 0, sizeof(tcMask));
		for (i=0; i<lenGprsPin; i++)
    ae96:	f107 0314 	add.w	r3, r7, #20
    ae9a:	f107 0214 	add.w	r2, r7, #20
    ae9e:	6812      	ldr	r2, [r2, #0]
    aea0:	3201      	adds	r2, #1
    aea2:	601a      	str	r2, [r3, #0]
    aea4:	f107 0314 	add.w	r3, r7, #20
    aea8:	681b      	ldr	r3, [r3, #0]
    aeaa:	2b07      	cmp	r3, #7
    aeac:	dde2      	ble.n	ae74 <GprsReport+0x500>
			strcat(tcMask, "/d");                             // Accept only decimal character
		memset (tcPin, 0, sizeof(tcPin));
    aeae:	f507 73ec 	add.w	r3, r7, #472	; 0x1d8
    aeb2:	4618      	mov	r0, r3
    aeb4:	2100      	movs	r1, #0
    aeb6:	2209      	movs	r2, #9
    aeb8:	f7fd ee38 	blx	8b2c <_init+0x5c>
		iRet = GL_Dialog_Password(gGoalGraphicLibInstance, "Pin Code", "Enter Pin :", tcMask, tcPin, sizeof(tcPin), GL_TIME_MINUTE);
    aebc:	f644 1388 	movw	r3, #18824	; 0x4988
    aec0:	f2c0 0302 	movt	r3, #2
    aec4:	681a      	ldr	r2, [r3, #0]
    aec6:	f507 730d 	add.w	r3, r7, #564	; 0x234
    aeca:	f507 71ec 	add.w	r1, r7, #472	; 0x1d8
    aece:	9100      	str	r1, [sp, #0]
    aed0:	2109      	movs	r1, #9
    aed2:	9101      	str	r1, [sp, #4]
    aed4:	f64e 2160 	movw	r1, #60000	; 0xea60
    aed8:	9102      	str	r1, [sp, #8]
    aeda:	4610      	mov	r0, r2
    aedc:	f649 11c4 	movw	r1, #39364	; 0x99c4
    aee0:	f2c0 0101 	movt	r1, #1
    aee4:	f649 12d0 	movw	r2, #39376	; 0x99d0
    aee8:	f2c0 0201 	movt	r2, #1
    aeec:	f00d fb38 	bl	18560 <GL_Dialog_Password>
    aef0:	4602      	mov	r2, r0
    aef2:	f107 0318 	add.w	r3, r7, #24
    aef6:	601a      	str	r2, [r3, #0]
		if ((iRet==GL_KEY_CANCEL) || (iRet==GL_RESULT_INACTIVITY))
    aef8:	f107 0318 	add.w	r3, r7, #24
    aefc:	681a      	ldr	r2, [r3, #0]
    aefe:	f64f 0351 	movw	r3, #63569	; 0xf851
    af02:	429a      	cmp	r2, r3
    af04:	d006      	beq.n	af14 <GprsReport+0x5a0>
    af06:	f107 0318 	add.w	r3, r7, #24
    af0a:	681a      	ldr	r2, [r3, #0]
    af0c:	f64f 0380 	movw	r3, #63616	; 0xf880
    af10:	429a      	cmp	r2, r3
    af12:	d103      	bne.n	af1c <GprsReport+0x5a8>
			iRet=0;                                           // Exit on cancel/timeout
    af14:	f107 0318 	add.w	r3, r7, #24
    af18:	2200      	movs	r2, #0
    af1a:	601a      	str	r2, [r3, #0]
		CHECK(iRet!=0, lblEnd);
    af1c:	f107 0318 	add.w	r3, r7, #24
    af20:	681b      	ldr	r3, [r3, #0]
    af22:	2b00      	cmp	r3, #0
    af24:	f000 82ba 	beq.w	b49c <GprsReport+0xb28>

		// *** Start GSM session ***
		LL_GSM_Start(tcPin[0] ? tcPin : NULL);
    af28:	f507 73ec 	add.w	r3, r7, #472	; 0x1d8
    af2c:	781b      	ldrb	r3, [r3, #0]
    af2e:	2b00      	cmp	r3, #0
    af30:	d002      	beq.n	af38 <GprsReport+0x5c4>
    af32:	f507 73ec 	add.w	r3, r7, #472	; 0x1d8
    af36:	e000      	b.n	af3a <GprsReport+0x5c6>
    af38:	2300      	movs	r3, #0
    af3a:	4618      	mov	r0, r3
    af3c:	f00c f943 	bl	171c6 <LL_GSM_Start>

		// *** Start GPRS session ***
		iRet = LL_GPRS_Start(tcPin[0] ? tcPin : NULL, pcApn);
    af40:	f507 73ec 	add.w	r3, r7, #472	; 0x1d8
    af44:	781b      	ldrb	r3, [r3, #0]
    af46:	2b00      	cmp	r3, #0
    af48:	d002      	beq.n	af50 <GprsReport+0x5dc>
    af4a:	f507 73ec 	add.w	r3, r7, #472	; 0x1d8
    af4e:	e000      	b.n	af52 <GprsReport+0x5de>
    af50:	2300      	movs	r3, #0
    af52:	f107 0418 	add.w	r4, r7, #24
    af56:	f107 0208 	add.w	r2, r7, #8
    af5a:	4618      	mov	r0, r3
    af5c:	6811      	ldr	r1, [r2, #0]
    af5e:	f00c f920 	bl	171a2 <LL_GPRS_Start>
    af62:	6020      	str	r0, [r4, #0]
		CHECK(iRet==LL_ERROR_OK, lblKO);
    af64:	f107 0318 	add.w	r3, r7, #24
    af68:	681b      	ldr	r3, [r3, #0]
    af6a:	2b00      	cmp	r3, #0
    af6c:	f040 8290 	bne.w	b490 <GprsReport+0xb1c>

		iRet = GoalClrScreen(hScreen, GL_COLOR_BLACK, KEY_CANCEL, false); // Clear screen
    af70:	f107 0418 	add.w	r4, r7, #24
    af74:	f107 030c 	add.w	r3, r7, #12
    af78:	6818      	ldr	r0, [r3, #0]
    af7a:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    af7e:	2202      	movs	r2, #2
    af80:	2300      	movs	r3, #0
    af82:	f002 f9e3 	bl	d34c <GoalClrScreen>
    af86:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblKO);
    af88:	f107 0318 	add.w	r3, r7, #24
    af8c:	681b      	ldr	r3, [r3, #0]
    af8e:	2b00      	cmp	r3, #0
    af90:	f2c0 827e 	blt.w	b490 <GprsReport+0xb1c>
		iRet = GoalDspLine(hScreen, 0, "1-comStart...", &txGPRS[0], 0, false);
    af94:	f107 0418 	add.w	r4, r7, #24
    af98:	f107 030c 	add.w	r3, r7, #12
    af9c:	2200      	movs	r2, #0
    af9e:	9200      	str	r2, [sp, #0]
    afa0:	2200      	movs	r2, #0
    afa2:	9201      	str	r2, [sp, #4]
    afa4:	6818      	ldr	r0, [r3, #0]
    afa6:	2100      	movs	r1, #0
    afa8:	f649 12dc 	movw	r2, #39388	; 0x99dc
    afac:	f2c0 0201 	movt	r2, #1
    afb0:	f249 5324 	movw	r3, #38180	; 0x9524
    afb4:	f2c0 0301 	movt	r3, #1
    afb8:	f002 fae2 	bl	d580 <GoalDspLine>
    afbc:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblKO);
    afbe:	f107 0318 	add.w	r3, r7, #24
    afc2:	681b      	ldr	r3, [r3, #0]
    afc4:	2b00      	cmp	r3, #0
    afc6:	f2c0 8263 	blt.w	b490 <GprsReport+0xb1c>
		iRet = GoalDspLine(hScreen, 1, pcUsername, &txGPRS[1], 0, false); // Show user name
    afca:	f107 0418 	add.w	r4, r7, #24
    afce:	f107 020c 	add.w	r2, r7, #12
    afd2:	1d3b      	adds	r3, r7, #4
    afd4:	2100      	movs	r1, #0
    afd6:	9100      	str	r1, [sp, #0]
    afd8:	2100      	movs	r1, #0
    afda:	9101      	str	r1, [sp, #4]
    afdc:	6810      	ldr	r0, [r2, #0]
    afde:	2101      	movs	r1, #1
    afe0:	681a      	ldr	r2, [r3, #0]
    afe2:	4bc2      	ldr	r3, [pc, #776]	; (b2ec <GprsReport+0x978>)
    afe4:	f002 facc 	bl	d580 <GoalDspLine>
    afe8:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblKO);
    afea:	f107 0318 	add.w	r3, r7, #24
    afee:	681b      	ldr	r3, [r3, #0]
    aff0:	2b00      	cmp	r3, #0
    aff2:	f2c0 824d 	blt.w	b490 <GprsReport+0xb1c>
		iRet = GoalDspLine(hScreen, 4, "CONNECT. IN PROGRESS", &txGPRS[4], 0, true);
    aff6:	f107 0418 	add.w	r4, r7, #24
    affa:	f107 030c 	add.w	r3, r7, #12
    affe:	2200      	movs	r2, #0
    b000:	9200      	str	r2, [sp, #0]
    b002:	2201      	movs	r2, #1
    b004:	9201      	str	r2, [sp, #4]
    b006:	6818      	ldr	r0, [r3, #0]
    b008:	2104      	movs	r1, #4
    b00a:	f649 1288 	movw	r2, #39304	; 0x9988
    b00e:	f2c0 0201 	movt	r2, #1
    b012:	4bb7      	ldr	r3, [pc, #732]	; (b2f0 <GprsReport+0x97c>)
    b014:	f002 fab4 	bl	d580 <GoalDspLine>
    b018:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblKO);
    b01a:	f107 0318 	add.w	r3, r7, #24
    b01e:	681b      	ldr	r3, [r3, #0]
    b020:	2b00      	cmp	r3, #0
    b022:	f2c0 8235 	blt.w	b490 <GprsReport+0xb1c>
		break;
    b026:	e202      	b.n	b42e <GprsReport+0xaba>
	case EGPRS_SIM_NOT_INSERTED:        strcpy(tcStatus, "Sta: SIM_NOT_INSERTED"); break;
    b028:	f507 7206 	add.w	r2, r7, #536	; 0x218
    b02c:	f649 2318 	movw	r3, #39448	; 0x9a18
    b030:	f2c0 0301 	movt	r3, #1
    b034:	4614      	mov	r4, r2
    b036:	461d      	mov	r5, r3
    b038:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    b03a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    b03c:	e895 0003 	ldmia.w	r5, {r0, r1}
    b040:	6020      	str	r0, [r4, #0]
    b042:	3404      	adds	r4, #4
    b044:	8021      	strh	r1, [r4, #0]
    b046:	e1f2      	b.n	b42e <GprsReport+0xaba>
	case EGPRS_SIM_PUK_REQUIRED:                               // Puk required, enter it
		strcpy(tcStatus, "Sta: PUK_REQUIRED    ");
    b048:	f507 7206 	add.w	r2, r7, #536	; 0x218
    b04c:	f649 2330 	movw	r3, #39472	; 0x9a30
    b050:	f2c0 0301 	movt	r3, #1
    b054:	4614      	mov	r4, r2
    b056:	461d      	mov	r5, r3
    b058:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    b05a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    b05c:	e895 0003 	ldmia.w	r5, {r0, r1}
    b060:	6020      	str	r0, [r4, #0]
    b062:	3404      	adds	r4, #4
    b064:	8021      	strh	r1, [r4, #0]

		// *** Enter Puk code ***
		memset(tcMask, 0, sizeof(tcMask));
    b066:	f507 730d 	add.w	r3, r7, #564	; 0x234
    b06a:	4618      	mov	r0, r3
    b06c:	2100      	movs	r1, #0
    b06e:	f44f 7280 	mov.w	r2, #256	; 0x100
    b072:	f7fd ed5c 	blx	8b2c <_init+0x5c>
		for (i=0; i<lenGprsPuk; i++)
    b076:	f107 0314 	add.w	r3, r7, #20
    b07a:	2200      	movs	r2, #0
    b07c:	601a      	str	r2, [r3, #0]
    b07e:	e017      	b.n	b0b0 <GprsReport+0x73c>
			strcat(tcMask, "/d");                              // Accept only decimal character
    b080:	f507 730d 	add.w	r3, r7, #564	; 0x234
    b084:	4618      	mov	r0, r3
    b086:	f7fd edaa 	blx	8bdc <_init+0x10c>
    b08a:	4603      	mov	r3, r0
    b08c:	f507 720d 	add.w	r2, r7, #564	; 0x234
    b090:	18d2      	adds	r2, r2, r3
    b092:	f649 13c0 	movw	r3, #39360	; 0x99c0
    b096:	f2c0 0301 	movt	r3, #1
    b09a:	8819      	ldrh	r1, [r3, #0]
    b09c:	789b      	ldrb	r3, [r3, #2]
    b09e:	8011      	strh	r1, [r2, #0]
    b0a0:	7093      	strb	r3, [r2, #2]
	case EGPRS_SIM_PUK_REQUIRED:                               // Puk required, enter it
		strcpy(tcStatus, "Sta: PUK_REQUIRED    ");

		// *** Enter Puk code ***
		memset(tcMask, 0, sizeof(tcMask));
		for (i=0; i<lenGprsPuk; i++)
    b0a2:	f107 0314 	add.w	r3, r7, #20
    b0a6:	f107 0214 	add.w	r2, r7, #20
    b0aa:	6812      	ldr	r2, [r2, #0]
    b0ac:	3201      	adds	r2, #1
    b0ae:	601a      	str	r2, [r3, #0]
    b0b0:	f107 0314 	add.w	r3, r7, #20
    b0b4:	681b      	ldr	r3, [r3, #0]
    b0b6:	2b07      	cmp	r3, #7
    b0b8:	dde2      	ble.n	b080 <GprsReport+0x70c>
			strcat(tcMask, "/d");                              // Accept only decimal character
		memset (tcPuk, 0, sizeof(tcPuk));
    b0ba:	f507 73f8 	add.w	r3, r7, #496	; 0x1f0
    b0be:	4618      	mov	r0, r3
    b0c0:	2100      	movs	r1, #0
    b0c2:	2209      	movs	r2, #9
    b0c4:	f7fd ed32 	blx	8b2c <_init+0x5c>
		iRet = GL_Dialog_Password(gGoalGraphicLibInstance, "Puk Code", "Enter Puk :", tcMask, tcPuk, sizeof(tcPuk), GL_TIME_MINUTE);
    b0c8:	f644 1388 	movw	r3, #18824	; 0x4988
    b0cc:	f2c0 0302 	movt	r3, #2
    b0d0:	681a      	ldr	r2, [r3, #0]
    b0d2:	f507 730d 	add.w	r3, r7, #564	; 0x234
    b0d6:	f507 71f8 	add.w	r1, r7, #496	; 0x1f0
    b0da:	9100      	str	r1, [sp, #0]
    b0dc:	2109      	movs	r1, #9
    b0de:	9101      	str	r1, [sp, #4]
    b0e0:	f64e 2160 	movw	r1, #60000	; 0xea60
    b0e4:	9102      	str	r1, [sp, #8]
    b0e6:	4610      	mov	r0, r2
    b0e8:	f649 2148 	movw	r1, #39496	; 0x9a48
    b0ec:	f2c0 0101 	movt	r1, #1
    b0f0:	f649 2254 	movw	r2, #39508	; 0x9a54
    b0f4:	f2c0 0201 	movt	r2, #1
    b0f8:	f00d fa32 	bl	18560 <GL_Dialog_Password>
    b0fc:	4602      	mov	r2, r0
    b0fe:	f107 0318 	add.w	r3, r7, #24
    b102:	601a      	str	r2, [r3, #0]
		if ((iRet==GL_KEY_CANCEL) || (iRet==GL_RESULT_INACTIVITY))
    b104:	f107 0318 	add.w	r3, r7, #24
    b108:	681a      	ldr	r2, [r3, #0]
    b10a:	f64f 0351 	movw	r3, #63569	; 0xf851
    b10e:	429a      	cmp	r2, r3
    b110:	d006      	beq.n	b120 <GprsReport+0x7ac>
    b112:	f107 0318 	add.w	r3, r7, #24
    b116:	681a      	ldr	r2, [r3, #0]
    b118:	f64f 0380 	movw	r3, #63616	; 0xf880
    b11c:	429a      	cmp	r2, r3
    b11e:	d103      	bne.n	b128 <GprsReport+0x7b4>
			iRet=0;                                            // Exit on cancel/timeout
    b120:	f107 0318 	add.w	r3, r7, #24
    b124:	2200      	movs	r2, #0
    b126:	601a      	str	r2, [r3, #0]
		CHECK(iRet!=0, lblEnd);
    b128:	f107 0318 	add.w	r3, r7, #24
    b12c:	681b      	ldr	r3, [r3, #0]
    b12e:	2b00      	cmp	r3, #0
    b130:	f000 81b4 	beq.w	b49c <GprsReport+0xb28>

		// *** Enter new Pin code and confirm ***
		do
		{
			// *** Enter new Pin code ***
			memset(tcMask, 0, sizeof(tcMask));
    b134:	f507 730d 	add.w	r3, r7, #564	; 0x234
    b138:	4618      	mov	r0, r3
    b13a:	2100      	movs	r1, #0
    b13c:	f44f 7280 	mov.w	r2, #256	; 0x100
    b140:	f7fd ecf4 	blx	8b2c <_init+0x5c>
			for (i=0; i<lenGprsPin; i++)
    b144:	f107 0314 	add.w	r3, r7, #20
    b148:	2200      	movs	r2, #0
    b14a:	601a      	str	r2, [r3, #0]
    b14c:	e017      	b.n	b17e <GprsReport+0x80a>
				strcat(tcMask, "/d");                          // Accept only decimal character
    b14e:	f507 730d 	add.w	r3, r7, #564	; 0x234
    b152:	4618      	mov	r0, r3
    b154:	f7fd ed42 	blx	8bdc <_init+0x10c>
    b158:	4603      	mov	r3, r0
    b15a:	f507 720d 	add.w	r2, r7, #564	; 0x234
    b15e:	18d2      	adds	r2, r2, r3
    b160:	f649 13c0 	movw	r3, #39360	; 0x99c0
    b164:	f2c0 0301 	movt	r3, #1
    b168:	8819      	ldrh	r1, [r3, #0]
    b16a:	789b      	ldrb	r3, [r3, #2]
    b16c:	8011      	strh	r1, [r2, #0]
    b16e:	7093      	strb	r3, [r2, #2]
		// *** Enter new Pin code and confirm ***
		do
		{
			// *** Enter new Pin code ***
			memset(tcMask, 0, sizeof(tcMask));
			for (i=0; i<lenGprsPin; i++)
    b170:	f107 0314 	add.w	r3, r7, #20
    b174:	f107 0214 	add.w	r2, r7, #20
    b178:	6812      	ldr	r2, [r2, #0]
    b17a:	3201      	adds	r2, #1
    b17c:	601a      	str	r2, [r3, #0]
    b17e:	f107 0314 	add.w	r3, r7, #20
    b182:	681b      	ldr	r3, [r3, #0]
    b184:	2b07      	cmp	r3, #7
    b186:	dde2      	ble.n	b14e <GprsReport+0x7da>
				strcat(tcMask, "/d");                          // Accept only decimal character
			memset (tcPin1, 0, sizeof(tcPin1));                // Enter new Pin
    b188:	f507 73f2 	add.w	r3, r7, #484	; 0x1e4
    b18c:	4618      	mov	r0, r3
    b18e:	2100      	movs	r1, #0
    b190:	2209      	movs	r2, #9
    b192:	f7fd eccc 	blx	8b2c <_init+0x5c>
			iRet = GL_Dialog_Password(gGoalGraphicLibInstance, "New Pin Code", "Enter New Pin :", tcMask, tcPin1, sizeof(tcPin1), GL_TIME_MINUTE);
    b196:	f644 1388 	movw	r3, #18824	; 0x4988
    b19a:	f2c0 0302 	movt	r3, #2
    b19e:	681a      	ldr	r2, [r3, #0]
    b1a0:	f507 730d 	add.w	r3, r7, #564	; 0x234
    b1a4:	f507 71f2 	add.w	r1, r7, #484	; 0x1e4
    b1a8:	9100      	str	r1, [sp, #0]
    b1aa:	2109      	movs	r1, #9
    b1ac:	9101      	str	r1, [sp, #4]
    b1ae:	f64e 2160 	movw	r1, #60000	; 0xea60
    b1b2:	9102      	str	r1, [sp, #8]
    b1b4:	4610      	mov	r0, r2
    b1b6:	f649 2160 	movw	r1, #39520	; 0x9a60
    b1ba:	f2c0 0101 	movt	r1, #1
    b1be:	f649 2270 	movw	r2, #39536	; 0x9a70
    b1c2:	f2c0 0201 	movt	r2, #1
    b1c6:	f00d f9cb 	bl	18560 <GL_Dialog_Password>
    b1ca:	4602      	mov	r2, r0
    b1cc:	f107 0318 	add.w	r3, r7, #24
    b1d0:	601a      	str	r2, [r3, #0]
			if ((iRet==GL_KEY_CANCEL) || (iRet==GL_RESULT_INACTIVITY))
    b1d2:	f107 0318 	add.w	r3, r7, #24
    b1d6:	681a      	ldr	r2, [r3, #0]
    b1d8:	f64f 0351 	movw	r3, #63569	; 0xf851
    b1dc:	429a      	cmp	r2, r3
    b1de:	d006      	beq.n	b1ee <GprsReport+0x87a>
    b1e0:	f107 0318 	add.w	r3, r7, #24
    b1e4:	681a      	ldr	r2, [r3, #0]
    b1e6:	f64f 0380 	movw	r3, #63616	; 0xf880
    b1ea:	429a      	cmp	r2, r3
    b1ec:	d103      	bne.n	b1f6 <GprsReport+0x882>
				iRet=0;                                        // Exit on cancel/timeout
    b1ee:	f107 0318 	add.w	r3, r7, #24
    b1f2:	2200      	movs	r2, #0
    b1f4:	601a      	str	r2, [r3, #0]
			CHECK(iRet!=0, lblEnd);
    b1f6:	f107 0318 	add.w	r3, r7, #24
    b1fa:	681b      	ldr	r3, [r3, #0]
    b1fc:	2b00      	cmp	r3, #0
    b1fe:	f000 814d 	beq.w	b49c <GprsReport+0xb28>
			// *** Confirm new Pin code ***
			memset (tcPin, 0, sizeof(tcPin));                  // Confirm new Pin
    b202:	f507 73ec 	add.w	r3, r7, #472	; 0x1d8
    b206:	4618      	mov	r0, r3
    b208:	2100      	movs	r1, #0
    b20a:	2209      	movs	r2, #9
    b20c:	f7fd ec8e 	blx	8b2c <_init+0x5c>
			iRet = GL_Dialog_Password(gGoalGraphicLibInstance, "New Pin Code", "Confirm New Pin :", tcMask, tcPin, sizeof(tcPin), GL_TIME_MINUTE);
    b210:	f644 1388 	movw	r3, #18824	; 0x4988
    b214:	f2c0 0302 	movt	r3, #2
    b218:	681a      	ldr	r2, [r3, #0]
    b21a:	f507 730d 	add.w	r3, r7, #564	; 0x234
    b21e:	f507 71ec 	add.w	r1, r7, #472	; 0x1d8
    b222:	9100      	str	r1, [sp, #0]
    b224:	2109      	movs	r1, #9
    b226:	9101      	str	r1, [sp, #4]
    b228:	f64e 2160 	movw	r1, #60000	; 0xea60
    b22c:	9102      	str	r1, [sp, #8]
    b22e:	4610      	mov	r0, r2
    b230:	f649 2160 	movw	r1, #39520	; 0x9a60
    b234:	f2c0 0101 	movt	r1, #1
    b238:	f649 2280 	movw	r2, #39552	; 0x9a80
    b23c:	f2c0 0201 	movt	r2, #1
    b240:	f00d f98e 	bl	18560 <GL_Dialog_Password>
    b244:	4602      	mov	r2, r0
    b246:	f107 0318 	add.w	r3, r7, #24
    b24a:	601a      	str	r2, [r3, #0]
			if ((iRet==GL_KEY_CANCEL) || (iRet==GL_RESULT_INACTIVITY))
    b24c:	f107 0318 	add.w	r3, r7, #24
    b250:	681a      	ldr	r2, [r3, #0]
    b252:	f64f 0351 	movw	r3, #63569	; 0xf851
    b256:	429a      	cmp	r2, r3
    b258:	d006      	beq.n	b268 <GprsReport+0x8f4>
    b25a:	f107 0318 	add.w	r3, r7, #24
    b25e:	681a      	ldr	r2, [r3, #0]
    b260:	f64f 0380 	movw	r3, #63616	; 0xf880
    b264:	429a      	cmp	r2, r3
    b266:	d103      	bne.n	b270 <GprsReport+0x8fc>
				iRet=0;                                        // Exit on cancel/timeout
    b268:	f107 0318 	add.w	r3, r7, #24
    b26c:	2200      	movs	r2, #0
    b26e:	601a      	str	r2, [r3, #0]
			CHECK(iRet!=0, lblEnd);
    b270:	f107 0318 	add.w	r3, r7, #24
    b274:	681b      	ldr	r3, [r3, #0]
    b276:	2b00      	cmp	r3, #0
    b278:	f000 8110 	beq.w	b49c <GprsReport+0xb28>
		} while (memcmp(tcPin1, tcPin, lenGprsPin) != 0);
    b27c:	f507 72f2 	add.w	r2, r7, #484	; 0x1e4
    b280:	f507 73ec 	add.w	r3, r7, #472	; 0x1d8
    b284:	4610      	mov	r0, r2
    b286:	4619      	mov	r1, r3
    b288:	2208      	movs	r2, #8
    b28a:	f7fd ece0 	blx	8c4c <_init+0x17c>
    b28e:	4603      	mov	r3, r0
    b290:	2b00      	cmp	r3, #0
    b292:	f47f af4f 	bne.w	b134 <GprsReport+0x7c0>

		iRet = gprs_SubmitPuk(hGprs, tcPuk, tcPin);
    b296:	f107 0418 	add.w	r4, r7, #24
    b29a:	f107 011c 	add.w	r1, r7, #28
    b29e:	f507 72f8 	add.w	r2, r7, #496	; 0x1f0
    b2a2:	f507 73ec 	add.w	r3, r7, #472	; 0x1d8
    b2a6:	6808      	ldr	r0, [r1, #0]
    b2a8:	4611      	mov	r1, r2
    b2aa:	461a      	mov	r2, r3
    b2ac:	f00b fe95 	bl	16fda <gprs_SubmitPuk>
    b2b0:	6020      	str	r0, [r4, #0]
		if (iRet == 0){                                         // Puk code OK
    b2b2:	f107 0318 	add.w	r3, r7, #24
    b2b6:	681b      	ldr	r3, [r3, #0]
    b2b8:	2b00      	cmp	r3, #0
    b2ba:	d12b      	bne.n	b314 <GprsReport+0x9a0>
			Telium_Ttestall(0, 1*100);                         // Wait a little bit before restarting a session
    b2bc:	2000      	movs	r0, #0
    b2be:	2164      	movs	r1, #100	; 0x64
    b2c0:	f00c f9f6 	bl	176b0 <Telium_Ttestall>
			// Wait a little bit before restarting a session

			// *** Start GSM session ***
			LL_GSM_Start(tcPin[0] ? tcPin : NULL);
    b2c4:	f507 73ec 	add.w	r3, r7, #472	; 0x1d8
    b2c8:	781b      	ldrb	r3, [r3, #0]
    b2ca:	2b00      	cmp	r3, #0
    b2cc:	d002      	beq.n	b2d4 <GprsReport+0x960>
    b2ce:	f507 73ec 	add.w	r3, r7, #472	; 0x1d8
    b2d2:	e000      	b.n	b2d6 <GprsReport+0x962>
    b2d4:	2300      	movs	r3, #0
    b2d6:	4618      	mov	r0, r3
    b2d8:	f00b ff75 	bl	171c6 <LL_GSM_Start>

			// *** Start GPRS session ***
			iRet = LL_GPRS_Start(tcPin[0] ? tcPin : NULL, pcApn);
    b2dc:	f507 73ec 	add.w	r3, r7, #472	; 0x1d8
    b2e0:	781b      	ldrb	r3, [r3, #0]
    b2e2:	2b00      	cmp	r3, #0
    b2e4:	d006      	beq.n	b2f4 <GprsReport+0x980>
    b2e6:	f507 73ec 	add.w	r3, r7, #472	; 0x1d8
    b2ea:	e004      	b.n	b2f6 <GprsReport+0x982>
    b2ec:	000195d0 	.word	0x000195d0
    b2f0:	000197d4 	.word	0x000197d4
    b2f4:	2300      	movs	r3, #0
    b2f6:	f107 0418 	add.w	r4, r7, #24
    b2fa:	f107 0208 	add.w	r2, r7, #8
    b2fe:	4618      	mov	r0, r3
    b300:	6811      	ldr	r1, [r2, #0]
    b302:	f00b ff4e 	bl	171a2 <LL_GPRS_Start>
    b306:	6020      	str	r0, [r4, #0]
			CHECK(iRet==LL_ERROR_OK, lblKO);
    b308:	f107 0318 	add.w	r3, r7, #24
    b30c:	681b      	ldr	r3, [r3, #0]
    b30e:	2b00      	cmp	r3, #0
    b310:	f040 80be 	bne.w	b490 <GprsReport+0xb1c>
		}

		iRet = GoalClrScreen(hScreen, GL_COLOR_BLACK, KEY_CANCEL, false); // Clear screen
    b314:	f107 0418 	add.w	r4, r7, #24
    b318:	f107 030c 	add.w	r3, r7, #12
    b31c:	6818      	ldr	r0, [r3, #0]
    b31e:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    b322:	2202      	movs	r2, #2
    b324:	2300      	movs	r3, #0
    b326:	f002 f811 	bl	d34c <GoalClrScreen>
    b32a:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblKO);
    b32c:	f107 0318 	add.w	r3, r7, #24
    b330:	681b      	ldr	r3, [r3, #0]
    b332:	2b00      	cmp	r3, #0
    b334:	f2c0 80ac 	blt.w	b490 <GprsReport+0xb1c>
		iRet = GoalDspLine(hScreen, 0, "1-comStart...", &txGPRS[0], 0, false);
    b338:	f107 0418 	add.w	r4, r7, #24
    b33c:	f107 030c 	add.w	r3, r7, #12
    b340:	2200      	movs	r2, #0
    b342:	9200      	str	r2, [sp, #0]
    b344:	2200      	movs	r2, #0
    b346:	9201      	str	r2, [sp, #4]
    b348:	6818      	ldr	r0, [r3, #0]
    b34a:	2100      	movs	r1, #0
    b34c:	f649 12dc 	movw	r2, #39388	; 0x99dc
    b350:	f2c0 0201 	movt	r2, #1
    b354:	f249 5324 	movw	r3, #38180	; 0x9524
    b358:	f2c0 0301 	movt	r3, #1
    b35c:	f002 f910 	bl	d580 <GoalDspLine>
    b360:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblKO);
    b362:	f107 0318 	add.w	r3, r7, #24
    b366:	681b      	ldr	r3, [r3, #0]
    b368:	2b00      	cmp	r3, #0
    b36a:	f2c0 8091 	blt.w	b490 <GprsReport+0xb1c>
		iRet = GoalDspLine(hScreen, 1, pcUsername, &txGPRS[1], 0, false); // Show user name
    b36e:	f107 0418 	add.w	r4, r7, #24
    b372:	f107 020c 	add.w	r2, r7, #12
    b376:	1d3b      	adds	r3, r7, #4
    b378:	2100      	movs	r1, #0
    b37a:	9100      	str	r1, [sp, #0]
    b37c:	2100      	movs	r1, #0
    b37e:	9101      	str	r1, [sp, #4]
    b380:	6810      	ldr	r0, [r2, #0]
    b382:	2101      	movs	r1, #1
    b384:	681a      	ldr	r2, [r3, #0]
    b386:	4b4f      	ldr	r3, [pc, #316]	; (b4c4 <GprsReport+0xb50>)
    b388:	f002 f8fa 	bl	d580 <GoalDspLine>
    b38c:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblKO);
    b38e:	f107 0318 	add.w	r3, r7, #24
    b392:	681b      	ldr	r3, [r3, #0]
    b394:	2b00      	cmp	r3, #0
    b396:	db7b      	blt.n	b490 <GprsReport+0xb1c>
		iRet = GoalDspLine(hScreen, 4, "CONNECT. IN PROGRESS", &txGPRS[4], 0, true);
    b398:	f107 0418 	add.w	r4, r7, #24
    b39c:	f107 030c 	add.w	r3, r7, #12
    b3a0:	2200      	movs	r2, #0
    b3a2:	9200      	str	r2, [sp, #0]
    b3a4:	2201      	movs	r2, #1
    b3a6:	9201      	str	r2, [sp, #4]
    b3a8:	6818      	ldr	r0, [r3, #0]
    b3aa:	2104      	movs	r1, #4
    b3ac:	f649 1288 	movw	r2, #39304	; 0x9988
    b3b0:	f2c0 0201 	movt	r2, #1
    b3b4:	4b44      	ldr	r3, [pc, #272]	; (b4c8 <GprsReport+0xb54>)
    b3b6:	f002 f8e3 	bl	d580 <GoalDspLine>
    b3ba:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblKO);
    b3bc:	f107 0318 	add.w	r3, r7, #24
    b3c0:	681b      	ldr	r3, [r3, #0]
    b3c2:	2b00      	cmp	r3, #0
    b3c4:	db64      	blt.n	b490 <GprsReport+0xb1c>
		break;
    b3c6:	e032      	b.n	b42e <GprsReport+0xaba>
	case EGPRS_SIM_PUK2_REQUIRED: 		strcpy(tcStatus, "Sta: PUK2_REQUIRED"); break;
    b3c8:	f507 7206 	add.w	r2, r7, #536	; 0x218
    b3cc:	f649 2394 	movw	r3, #39572	; 0x9a94
    b3d0:	f2c0 0301 	movt	r3, #1
    b3d4:	4614      	mov	r4, r2
    b3d6:	461d      	mov	r5, r3
    b3d8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    b3da:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    b3dc:	682b      	ldr	r3, [r5, #0]
    b3de:	461a      	mov	r2, r3
    b3e0:	8022      	strh	r2, [r4, #0]
    b3e2:	3402      	adds	r4, #2
    b3e4:	0c1b      	lsrs	r3, r3, #16
    b3e6:	7023      	strb	r3, [r4, #0]
    b3e8:	e021      	b.n	b42e <GprsReport+0xaba>
	case EGPRS_SIM_PIN_PRESENTED:       strcpy(tcStatus, "Sta: PIN_PRESENTED"); break;
    b3ea:	f507 7206 	add.w	r2, r7, #536	; 0x218
    b3ee:	f649 23a8 	movw	r3, #39592	; 0x9aa8
    b3f2:	f2c0 0301 	movt	r3, #1
    b3f6:	4614      	mov	r4, r2
    b3f8:	461d      	mov	r5, r3
    b3fa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    b3fc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    b3fe:	682b      	ldr	r3, [r5, #0]
    b400:	461a      	mov	r2, r3
    b402:	8022      	strh	r2, [r4, #0]
    b404:	3402      	adds	r4, #2
    b406:	0c1b      	lsrs	r3, r3, #16
    b408:	7023      	strb	r3, [r4, #0]
    b40a:	e010      	b.n	b42e <GprsReport+0xaba>
	default:                            strcpy(tcStatus, "Sta: UNKNOWN_ERROR"); break;
    b40c:	f507 7206 	add.w	r2, r7, #536	; 0x218
    b410:	f649 23bc 	movw	r3, #39612	; 0x9abc
    b414:	f2c0 0301 	movt	r3, #1
    b418:	4614      	mov	r4, r2
    b41a:	461d      	mov	r5, r3
    b41c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    b41e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    b420:	682b      	ldr	r3, [r5, #0]
    b422:	461a      	mov	r2, r3
    b424:	8022      	strh	r2, [r4, #0]
    b426:	3402      	adds	r4, #2
    b428:	0c1b      	lsrs	r3, r3, #16
    b42a:	7023      	strb	r3, [r4, #0]
    b42c:	bf00      	nop
	}

	iRet = GoalDspLine(hScreen, 2, tcReport, &txGPRS[2], 0, true); // Show start report
    b42e:	f107 0418 	add.w	r4, r7, #24
    b432:	f107 020c 	add.w	r2, r7, #12
    b436:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
    b43a:	2100      	movs	r1, #0
    b43c:	9100      	str	r1, [sp, #0]
    b43e:	2101      	movs	r1, #1
    b440:	9101      	str	r1, [sp, #4]
    b442:	6810      	ldr	r0, [r2, #0]
    b444:	2102      	movs	r1, #2
    b446:	461a      	mov	r2, r3
    b448:	4b20      	ldr	r3, [pc, #128]	; (b4cc <GprsReport+0xb58>)
    b44a:	f002 f899 	bl	d580 <GoalDspLine>
    b44e:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    b450:	f107 0318 	add.w	r3, r7, #24
    b454:	681b      	ldr	r3, [r3, #0]
    b456:	2b00      	cmp	r3, #0
    b458:	db1a      	blt.n	b490 <GprsReport+0xb1c>
	iRet = GoalDspLine(hScreen, 3, tcStatus, &txGPRS[3], 0, true); // Show sim status
    b45a:	f107 0418 	add.w	r4, r7, #24
    b45e:	f107 020c 	add.w	r2, r7, #12
    b462:	f507 7306 	add.w	r3, r7, #536	; 0x218
    b466:	2100      	movs	r1, #0
    b468:	9100      	str	r1, [sp, #0]
    b46a:	2101      	movs	r1, #1
    b46c:	9101      	str	r1, [sp, #4]
    b46e:	6810      	ldr	r0, [r2, #0]
    b470:	2103      	movs	r1, #3
    b472:	461a      	mov	r2, r3
    b474:	4b16      	ldr	r3, [pc, #88]	; (b4d0 <GprsReport+0xb5c>)
    b476:	f002 f883 	bl	d580 <GoalDspLine>
    b47a:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    b47c:	f107 0318 	add.w	r3, r7, #24
    b480:	681b      	ldr	r3, [r3, #0]
    b482:	2b00      	cmp	r3, #0
    b484:	db04      	blt.n	b490 <GprsReport+0xb1c>

	iRet=1;
    b486:	f107 0318 	add.w	r3, r7, #24
    b48a:	2201      	movs	r2, #1
    b48c:	601a      	str	r2, [r3, #0]
	goto lblEnd;
    b48e:	e005      	b.n	b49c <GprsReport+0xb28>

	// Errors treatment
	// ****************
	lblKO:
	iRet=-1;
    b490:	f107 0318 	add.w	r3, r7, #24
    b494:	f04f 32ff 	mov.w	r2, #4294967295
    b498:	601a      	str	r2, [r3, #0]
	goto lblEnd;
    b49a:	bf00      	nop
	lblEnd:
	return iRet;
    b49c:	f107 0318 	add.w	r3, r7, #24
    b4a0:	681b      	ldr	r3, [r3, #0]
}
    b4a2:	4618      	mov	r0, r3
    b4a4:	f644 1380 	movw	r3, #18816	; 0x4980
    b4a8:	f2c0 0302 	movt	r3, #2
    b4ac:	f8d7 2334 	ldr.w	r2, [r7, #820]	; 0x334
    b4b0:	681b      	ldr	r3, [r3, #0]
    b4b2:	429a      	cmp	r2, r3
    b4b4:	d001      	beq.n	b4ba <GprsReport+0xb46>
    b4b6:	f7fd fd1b 	bl	8ef0 <__stack_chk_fail>
    b4ba:	f507 774e 	add.w	r7, r7, #824	; 0x338
    b4be:	46bd      	mov	sp, r7
    b4c0:	bdb0      	pop	{r4, r5, r7, pc}
    b4c2:	bf00      	nop
    b4c4:	000195d0 	.word	0x000195d0
    b4c8:	000197d4 	.word	0x000197d4
    b4cc:	0001967c 	.word	0x0001967c
    b4d0:	00019728 	.word	0x00019728

0000b4d4 <StartGPRS>:
//    >=0 : Attachment done
//     <0 : Attachment failed
//****************************************************************************

static int StartGPRS(T_GL_HWIDGET hScreen, const char *pcInit)
{
    b4d4:	b580      	push	{r7, lr}
    b4d6:	b0a2      	sub	sp, #136	; 0x88
    b4d8:	af02      	add	r7, sp, #8
    b4da:	6078      	str	r0, [r7, #4]
    b4dc:	6039      	str	r1, [r7, #0]
    b4de:	f644 1380 	movw	r3, #18816	; 0x4980
    b4e2:	f2c0 0302 	movt	r3, #2
    b4e6:	681b      	ldr	r3, [r3, #0]
    b4e8:	67fb      	str	r3, [r7, #124]	; 0x7c
	// ***************
	char tcApn[lenGprsApn+1];       // Apn
	char tcUsername[lenGprsUser+1]; // Login
	char tcPassword[lenGprsPass+1]; // Password
	int iKey;
	word usTimeOut=0;
    b4ea:	2300      	movs	r3, #0
    b4ec:	81fb      	strh	r3, [r7, #14]
	bool bExit=TRUE;
    b4ee:	2301      	movs	r3, #1
    b4f0:	737b      	strb	r3, [r7, #13]
	int iStatus, iRet;

	// Network GPRS parameters
	// ************************
	CHECK(pcInit!=NULL, lblKOConfigure);                            // Configuration error
    b4f2:	683b      	ldr	r3, [r7, #0]
    b4f4:	2b00      	cmp	r3, #0
    b4f6:	f000 8120 	beq.w	b73a <StartGPRS+0x266>
	memset(tcApn, 0, sizeof(tcApn));
    b4fa:	f107 031c 	add.w	r3, r7, #28
    b4fe:	4618      	mov	r0, r3
    b500:	2100      	movs	r1, #0
    b502:	221f      	movs	r2, #31
    b504:	f7fd eb12 	blx	8b2c <_init+0x5c>
	pcInit = parseStr('|', tcApn, pcInit, sizeof(tcApn));           // Extract apn
    b508:	f107 031c 	add.w	r3, r7, #28
    b50c:	207c      	movs	r0, #124	; 0x7c
    b50e:	4619      	mov	r1, r3
    b510:	683a      	ldr	r2, [r7, #0]
    b512:	231f      	movs	r3, #31
    b514:	f005 fd96 	bl	11044 <parseStr>
    b518:	6038      	str	r0, [r7, #0]
	CHECK(pcInit!=NULL, lblKOConfigure);
    b51a:	683b      	ldr	r3, [r7, #0]
    b51c:	2b00      	cmp	r3, #0
    b51e:	f000 810c 	beq.w	b73a <StartGPRS+0x266>

	memset(tcUsername, 0, sizeof(tcUsername));
    b522:	f107 033c 	add.w	r3, r7, #60	; 0x3c
    b526:	4618      	mov	r0, r3
    b528:	2100      	movs	r1, #0
    b52a:	221f      	movs	r2, #31
    b52c:	f7fd eafe 	blx	8b2c <_init+0x5c>
	pcInit = parseStr('|', tcUsername, pcInit, sizeof(tcUsername)); // Extract username
    b530:	f107 033c 	add.w	r3, r7, #60	; 0x3c
    b534:	207c      	movs	r0, #124	; 0x7c
    b536:	4619      	mov	r1, r3
    b538:	683a      	ldr	r2, [r7, #0]
    b53a:	231f      	movs	r3, #31
    b53c:	f005 fd82 	bl	11044 <parseStr>
    b540:	6038      	str	r0, [r7, #0]
	CHECK(pcInit!=NULL, lblKOConfigure);
    b542:	683b      	ldr	r3, [r7, #0]
    b544:	2b00      	cmp	r3, #0
    b546:	f000 80f8 	beq.w	b73a <StartGPRS+0x266>

	memset(tcPassword, 0, sizeof(tcPassword));
    b54a:	f107 035c 	add.w	r3, r7, #92	; 0x5c
    b54e:	4618      	mov	r0, r3
    b550:	2100      	movs	r1, #0
    b552:	221f      	movs	r2, #31
    b554:	f7fd eaea 	blx	8b2c <_init+0x5c>
	pcInit = parseStr('|', tcPassword, pcInit, sizeof(tcPassword)); // Extract password
    b558:	f107 035c 	add.w	r3, r7, #92	; 0x5c
    b55c:	207c      	movs	r0, #124	; 0x7c
    b55e:	4619      	mov	r1, r3
    b560:	683a      	ldr	r2, [r7, #0]
    b562:	231f      	movs	r3, #31
    b564:	f005 fd6e 	bl	11044 <parseStr>
    b568:	6038      	str	r0, [r7, #0]
	CHECK(pcInit!=NULL, lblKOConfigure);
    b56a:	683b      	ldr	r3, [r7, #0]
    b56c:	2b00      	cmp	r3, #0
    b56e:	f000 80e4 	beq.w	b73a <StartGPRS+0x266>

	// Connect the GPRS network
	// ************************
	ResetPeripherals(KEYBOARD | TSCREEN);           // Reset peripherals FIFO
    b572:	2001      	movs	r0, #1
    b574:	f6c0 0000 	movt	r0, #2048	; 0x800
    b578:	f7ff f9a4 	bl	a8c4 <ResetPeripherals>
	do
	{
		iRet = GprsReport(hScreen, tcApn, tcUsername);
    b57c:	f107 021c 	add.w	r2, r7, #28
    b580:	f107 033c 	add.w	r3, r7, #60	; 0x3c
    b584:	6878      	ldr	r0, [r7, #4]
    b586:	4611      	mov	r1, r2
    b588:	461a      	mov	r2, r3
    b58a:	f7ff f9f3 	bl	a974 <GprsReport>
    b58e:	61b8      	str	r0, [r7, #24]
		CHECK(iRet>=0, lblKOConfigure);
    b590:	69bb      	ldr	r3, [r7, #24]
    b592:	2b00      	cmp	r3, #0
    b594:	f2c0 80d1 	blt.w	b73a <StartGPRS+0x266>
		CHECK(iRet!=0, lblEnd);                     // Exit on cancel/timeout
    b598:	69bb      	ldr	r3, [r7, #24]
    b59a:	2b00      	cmp	r3, #0
    b59c:	f000 80d2 	beq.w	b744 <StartGPRS+0x270>

		iRet = LL_GPRS_Connect(tcApn, tcUsername, tcPassword, 10*100);
    b5a0:	f107 011c 	add.w	r1, r7, #28
    b5a4:	f107 023c 	add.w	r2, r7, #60	; 0x3c
    b5a8:	f107 035c 	add.w	r3, r7, #92	; 0x5c
    b5ac:	4608      	mov	r0, r1
    b5ae:	4611      	mov	r1, r2
    b5b0:	461a      	mov	r2, r3
    b5b2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    b5b6:	f00b fde2 	bl	1717e <LL_GPRS_Connect>
    b5ba:	61b8      	str	r0, [r7, #24]
		switch (iRet)
    b5bc:	69bb      	ldr	r3, [r7, #24]
    b5be:	f46f 727d 	mvn.w	r2, #1012	; 0x3f4
    b5c2:	4293      	cmp	r3, r2
    b5c4:	d02c      	beq.n	b620 <StartGPRS+0x14c>
    b5c6:	f46f 727d 	mvn.w	r2, #1012	; 0x3f4
    b5ca:	4293      	cmp	r3, r2
    b5cc:	dc06      	bgt.n	b5dc <StartGPRS+0x108>
    b5ce:	f64f 4206 	movw	r2, #64518	; 0xfc06
    b5d2:	f6cf 72ff 	movt	r2, #65535	; 0xffff
    b5d6:	4293      	cmp	r3, r2
    b5d8:	d022      	beq.n	b620 <StartGPRS+0x14c>
    b5da:	e024      	b.n	b626 <StartGPRS+0x152>
    b5dc:	f64f 4211 	movw	r2, #64529	; 0xfc11
    b5e0:	f6cf 72ff 	movt	r2, #65535	; 0xffff
    b5e4:	4293      	cmp	r3, r2
    b5e6:	d001      	beq.n	b5ec <StartGPRS+0x118>
    b5e8:	2b00      	cmp	r3, #0
    b5ea:	d11c      	bne.n	b626 <StartGPRS+0x152>
		//case LL_ERROR_NETWORK_NOT_READY:
		//	bExit = FALSE;
		//	break;
		case LL_ERROR_ALREADY_CONNECTED:
		case LL_ERROR_OK:
			iRet = GoalDspLine(hScreen, 4, "GPRS CONNECTED!!!", &txGPRS[4], 0, true);
    b5ec:	2300      	movs	r3, #0
    b5ee:	9300      	str	r3, [sp, #0]
    b5f0:	2301      	movs	r3, #1
    b5f2:	9301      	str	r3, [sp, #4]
    b5f4:	6878      	ldr	r0, [r7, #4]
    b5f6:	2104      	movs	r1, #4
    b5f8:	f649 22d0 	movw	r2, #39632	; 0x9ad0
    b5fc:	f2c0 0201 	movt	r2, #1
    b600:	4b58      	ldr	r3, [pc, #352]	; (b764 <StartGPRS+0x290>)
    b602:	f001 ffbd 	bl	d580 <GoalDspLine>
    b606:	61b8      	str	r0, [r7, #24]
			CHECK(iRet>=0, lblKOConfigure);        // Show Gprs connected
    b608:	69bb      	ldr	r3, [r7, #24]
    b60a:	2b00      	cmp	r3, #0
    b60c:	f2c0 8095 	blt.w	b73a <StartGPRS+0x266>
			buzzer(10);
    b610:	200a      	movs	r0, #10
    b612:	f00c f87b 	bl	1770c <buzzer>
			iRet = 1;
    b616:	2301      	movs	r3, #1
    b618:	61bb      	str	r3, [r7, #24]
			bExit=TRUE;
    b61a:	2301      	movs	r3, #1
    b61c:	737b      	strb	r3, [r7, #13]
			break;
    b61e:	e056      	b.n	b6ce <StartGPRS+0x1fa>
		case LL_ERROR_NETWORK_NOT_SUPPORTED:
		case LL_ERROR_SERVICE_CALL_FAILURE:
			bExit = TRUE;
    b620:	2301      	movs	r3, #1
    b622:	737b      	strb	r3, [r7, #13]
			break;
    b624:	e053      	b.n	b6ce <StartGPRS+0x1fa>
		default:                                   // LL_ERROR_NETWORK_NOT_READY or LL_ERROR_NETWORK_ERROR
			iRet = LL_Network_GetStatus(LL_PHYSICAL_V_GPRS, &iStatus);
    b626:	f107 0310 	add.w	r3, r7, #16
    b62a:	2029      	movs	r0, #41	; 0x29
    b62c:	4619      	mov	r1, r3
    b62e:	f00b fddc 	bl	171ea <LL_Network_GetStatus>
    b632:	61b8      	str	r0, [r7, #24]
			switch (iStatus)                       // Check network status
    b634:	693b      	ldr	r3, [r7, #16]
    b636:	f240 5203 	movw	r2, #1283	; 0x503
    b63a:	f2c0 2200 	movt	r2, #512	; 0x200
    b63e:	4293      	cmp	r3, r2
    b640:	dc18      	bgt.n	b674 <StartGPRS+0x1a0>
    b642:	f240 5201 	movw	r2, #1281	; 0x501
    b646:	f2c0 2200 	movt	r2, #512	; 0x200
    b64a:	4293      	cmp	r3, r2
    b64c:	da1f      	bge.n	b68e <StartGPRS+0x1ba>
    b64e:	f44f 62a0 	mov.w	r2, #1280	; 0x500
    b652:	f2c0 1200 	movt	r2, #256	; 0x100
    b656:	4293      	cmp	r3, r2
    b658:	d019      	beq.n	b68e <StartGPRS+0x1ba>
    b65a:	f44f 62a0 	mov.w	r2, #1280	; 0x500
    b65e:	f2c0 1200 	movt	r2, #256	; 0x100
    b662:	4293      	cmp	r3, r2
    b664:	db2f      	blt.n	b6c6 <StartGPRS+0x1f2>
    b666:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
    b66a:	f2a3 5302 	subw	r3, r3, #1282	; 0x502
    b66e:	2b02      	cmp	r3, #2
    b670:	d829      	bhi.n	b6c6 <StartGPRS+0x1f2>
    b672:	e00c      	b.n	b68e <StartGPRS+0x1ba>
    b674:	f44f 62c0 	mov.w	r2, #1536	; 0x600
    b678:	f2c0 2200 	movt	r2, #512	; 0x200
    b67c:	4293      	cmp	r3, r2
    b67e:	d006      	beq.n	b68e <StartGPRS+0x1ba>
    b680:	f44f 62a0 	mov.w	r2, #1280	; 0x500
    b684:	f2c0 3200 	movt	r2, #768	; 0x300
    b688:	4293      	cmp	r3, r2
    b68a:	d003      	beq.n	b694 <StartGPRS+0x1c0>
    b68c:	e01b      	b.n	b6c6 <StartGPRS+0x1f2>
			case LL_STATUS_GPRS_CONNECTING:        // Connection to GPRS Network in progress
			case LL_STATUS_GPRS_AVAILABLE:         // GPRS Network is available
			case LL_STATUS_GPRS_CONNECTING_PPP:    // PPP connection is in progress with the GPRS provider
			case LL_STATUS_GPRS_DISCONNECTED:      // Disconnection to GPRS Network, let's retry a connection
			case 0x2000600:                        // Wait until network ready
				bExit = FALSE;
    b68e:	2300      	movs	r3, #0
    b690:	737b      	strb	r3, [r7, #13]
				break;
    b692:	e01b      	b.n	b6cc <StartGPRS+0x1f8>
			case LL_STATUS_GPRS_CONNECTED:
				iRet = GoalDspLine(hScreen, 4, "GPRS CONNECTED!!!", &txGPRS[4], 0, true);
    b694:	2300      	movs	r3, #0
    b696:	9300      	str	r3, [sp, #0]
    b698:	2301      	movs	r3, #1
    b69a:	9301      	str	r3, [sp, #4]
    b69c:	6878      	ldr	r0, [r7, #4]
    b69e:	2104      	movs	r1, #4
    b6a0:	f649 22d0 	movw	r2, #39632	; 0x9ad0
    b6a4:	f2c0 0201 	movt	r2, #1
    b6a8:	4b2e      	ldr	r3, [pc, #184]	; (b764 <StartGPRS+0x290>)
    b6aa:	f001 ff69 	bl	d580 <GoalDspLine>
    b6ae:	61b8      	str	r0, [r7, #24]
				CHECK(iRet>=0, lblKOConfigure);    // Show Gprs connected
    b6b0:	69bb      	ldr	r3, [r7, #24]
    b6b2:	2b00      	cmp	r3, #0
    b6b4:	db41      	blt.n	b73a <StartGPRS+0x266>
				buzzer(10);
    b6b6:	200a      	movs	r0, #10
    b6b8:	f00c f828 	bl	1770c <buzzer>
				iRet = 1;
    b6bc:	2301      	movs	r3, #1
    b6be:	61bb      	str	r3, [r7, #24]
				bExit=TRUE;
    b6c0:	2301      	movs	r3, #1
    b6c2:	737b      	strb	r3, [r7, #13]
				break;
    b6c4:	e002      	b.n	b6cc <StartGPRS+0x1f8>
			case LL_STATUS_GPRS_ERROR_NO_SIM:      // No SIM card is inserted into the terminal
			case LL_STATUS_GPRS_ERROR_PPP:         // Error occurred during the PPP link establishment.
			case LL_STATUS_GPRS_ERROR_UNKNOWN:     // Error status unknown
			default:
				bExit = TRUE;
    b6c6:	2301      	movs	r3, #1
    b6c8:	737b      	strb	r3, [r7, #13]
				break;
    b6ca:	bf00      	nop
			}
			break;
    b6cc:	bf00      	nop
		}

		if (!bExit)                                // Keyboard and timeout management
    b6ce:	7b7b      	ldrb	r3, [r7, #13]
    b6d0:	f083 0301 	eor.w	r3, r3, #1
    b6d4:	b2db      	uxtb	r3, r3
    b6d6:	2b00      	cmp	r3, #0
    b6d8:	d011      	beq.n	b6fe <StartGPRS+0x22a>
		{
			iKey = GoalGetKey(hScreen, gGoalGraphicLibInstance, true, 1*1000, false); // Get key pressed/touched (shortcut)
    b6da:	f644 1388 	movw	r3, #18824	; 0x4988
    b6de:	f2c0 0302 	movt	r3, #2
    b6e2:	681b      	ldr	r3, [r3, #0]
    b6e4:	2200      	movs	r2, #0
    b6e6:	9200      	str	r2, [sp, #0]
    b6e8:	6878      	ldr	r0, [r7, #4]
    b6ea:	4619      	mov	r1, r3
    b6ec:	2201      	movs	r2, #1
    b6ee:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    b6f2:	f002 fa7b 	bl	dbec <GoalGetKey>
    b6f6:	6178      	str	r0, [r7, #20]
			usTimeOut += 1*100;                    // Increment timeout
    b6f8:	89fb      	ldrh	r3, [r7, #14]
    b6fa:	3364      	adds	r3, #100	; 0x64
    b6fc:	81fb      	strh	r3, [r7, #14]
		}
	} while (!bExit && (usTimeOut < GPRS_TIMEOUT) && (iKey!=GL_KEY_CANCEL));
    b6fe:	7b7b      	ldrb	r3, [r7, #13]
    b700:	f083 0301 	eor.w	r3, r3, #1
    b704:	b2db      	uxtb	r3, r3
    b706:	2b00      	cmp	r3, #0
    b708:	d00a      	beq.n	b720 <StartGPRS+0x24c>
    b70a:	89fa      	ldrh	r2, [r7, #14]
    b70c:	f241 736f 	movw	r3, #5999	; 0x176f
    b710:	429a      	cmp	r2, r3
    b712:	d805      	bhi.n	b720 <StartGPRS+0x24c>
    b714:	697a      	ldr	r2, [r7, #20]
    b716:	f64f 0351 	movw	r3, #63569	; 0xf851
    b71a:	429a      	cmp	r2, r3
    b71c:	f47f af2e 	bne.w	b57c <StartGPRS+0xa8>

	if ((usTimeOut==GPRS_TIMEOUT) || (iKey==GL_KEY_CANCEL))         // Exit on timeout/cancel
    b720:	89fa      	ldrh	r2, [r7, #14]
    b722:	f241 7370 	movw	r3, #6000	; 0x1770
    b726:	429a      	cmp	r2, r3
    b728:	d004      	beq.n	b734 <StartGPRS+0x260>
    b72a:	697a      	ldr	r2, [r7, #20]
    b72c:	f64f 0351 	movw	r3, #63569	; 0xf851
    b730:	429a      	cmp	r2, r3
    b732:	d106      	bne.n	b742 <StartGPRS+0x26e>
		iRet=0;
    b734:	2300      	movs	r3, #0
    b736:	61bb      	str	r3, [r7, #24]

	goto lblEnd;
    b738:	e003      	b.n	b742 <StartGPRS+0x26e>

	// Errors treatment
	// ****************
	lblKOConfigure:
	iRet=LL_ERROR_INVALID_PARAMETER;
    b73a:	f46f 737b 	mvn.w	r3, #1004	; 0x3ec
    b73e:	61bb      	str	r3, [r7, #24]
	goto lblEnd;
    b740:	e000      	b.n	b744 <StartGPRS+0x270>
	} while (!bExit && (usTimeOut < GPRS_TIMEOUT) && (iKey!=GL_KEY_CANCEL));

	if ((usTimeOut==GPRS_TIMEOUT) || (iKey==GL_KEY_CANCEL))         // Exit on timeout/cancel
		iRet=0;

	goto lblEnd;
    b742:	bf00      	nop
	// ****************
	lblKOConfigure:
	iRet=LL_ERROR_INVALID_PARAMETER;
	goto lblEnd;
	lblEnd:
	return iRet;
    b744:	69bb      	ldr	r3, [r7, #24]
}
    b746:	4618      	mov	r0, r3
    b748:	f644 1380 	movw	r3, #18816	; 0x4980
    b74c:	f2c0 0302 	movt	r3, #2
    b750:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
    b752:	681b      	ldr	r3, [r3, #0]
    b754:	429a      	cmp	r2, r3
    b756:	d001      	beq.n	b75c <StartGPRS+0x288>
    b758:	f7fd fbca 	bl	8ef0 <__stack_chk_fail>
    b75c:	f107 0780 	add.w	r7, r7, #128	; 0x80
    b760:	46bd      	mov	sp, r7
    b762:	bd80      	pop	{r7, pc}
    b764:	000197d4 	.word	0x000197d4

0000b768 <OpenGPRS>:
//           Ex: "192.168.1.3|2000
//  This function has no return value
//****************************************************************************

static LL_HANDLE OpenGPRS(const char *pcServer)
{
    b768:	b590      	push	{r4, r7, lr}
    b76a:	f2ad 4d3c 	subw	sp, sp, #1084	; 0x43c
    b76e:	af00      	add	r7, sp, #0
    b770:	1d3b      	adds	r3, r7, #4
    b772:	6018      	str	r0, [r3, #0]
    b774:	f644 1380 	movw	r3, #18816	; 0x4980
    b778:	f2c0 0302 	movt	r3, #2
    b77c:	681b      	ldr	r3, [r3, #0]
    b77e:	f8c7 3434 	str.w	r3, [r7, #1076]	; 0x434
	// Local variables
	// ***************
	// Tlv tree nodes
	// ==============
	TLV_TREE_NODE piConfig=NULL;
    b782:	f107 0310 	add.w	r3, r7, #16
    b786:	2200      	movs	r2, #0
    b788:	601a      	str	r2, [r3, #0]
	TLV_TREE_NODE piPhysicalConfig=NULL;
    b78a:	f107 0314 	add.w	r3, r7, #20
    b78e:	2200      	movs	r2, #0
    b790:	601a      	str	r2, [r3, #0]
	TLV_TREE_NODE piTransportConfig=NULL;
    b792:	f107 0318 	add.w	r3, r7, #24
    b796:	2200      	movs	r2, #0
    b798:	601a      	str	r2, [r3, #0]
	char tcAddr[lenGprsIpRemote+1];
	char tcPort[lenGprsPort+1];
	doubleword uiTimeout, uiRemotePort;
	LL_HANDLE hSession = NULL;
    b79a:	f107 030c 	add.w	r3, r7, #12
    b79e:	2200      	movs	r2, #0
    b7a0:	601a      	str	r2, [r3, #0]
	int iRet;

	// Create the LinkLayer configuration parameters tree
	// **************************************************
	CHECK(pcServer!=NULL, lblKOConfigure);                              // Configuration failed
    b7a2:	1d3b      	adds	r3, r7, #4
    b7a4:	681b      	ldr	r3, [r3, #0]
    b7a6:	2b00      	cmp	r3, #0
    b7a8:	f000 80af 	beq.w	b90a <OpenGPRS+0x1a2>

	// Create parameters tree
	// ======================
	piConfig = TlvTree_New(LL_TAG_LINK_LAYER_CONFIG);                   // LinkLayer parameters Root tag of the configuration tree
    b7ac:	f107 0410 	add.w	r4, r7, #16
    b7b0:	f249 5003 	movw	r0, #38147	; 0x9503
    b7b4:	f2c0 00bf 	movt	r0, #191	; 0xbf
    b7b8:	f00b fdd7 	bl	1736a <TlvTree_New>
    b7bc:	6020      	str	r0, [r4, #0]
	CHECK(piConfig!=NULL, lblKOConfigure);
    b7be:	f107 0310 	add.w	r3, r7, #16
    b7c2:	681b      	ldr	r3, [r3, #0]
    b7c4:	2b00      	cmp	r3, #0
    b7c6:	f000 80a0 	beq.w	b90a <OpenGPRS+0x1a2>

	// Physical layer parameters
	// =========================
	piPhysicalConfig = TlvTree_AddChild(piConfig,
    b7ca:	f107 0414 	add.w	r4, r7, #20
    b7ce:	f107 0310 	add.w	r3, r7, #16
    b7d2:	6818      	ldr	r0, [r3, #0]
    b7d4:	f648 0110 	movw	r1, #34832	; 0x8810
    b7d8:	f2c0 019f 	movt	r1, #159	; 0x9f
    b7dc:	2200      	movs	r2, #0
    b7de:	2300      	movs	r3, #0
    b7e0:	f00b fd8d 	bl	172fe <TlvTree_AddChild>
    b7e4:	6020      	str	r0, [r4, #0]
			LL_TAG_PHYSICAL_LAYER_CONFIG,   // TAG Physical layer parameters
			NULL,                           // VALUE (Null)
			0);                             // LENGTH 0
	CHECK(piPhysicalConfig!=NULL, lblKOConfigure);
    b7e6:	f107 0314 	add.w	r3, r7, #20
    b7ea:	681b      	ldr	r3, [r3, #0]
    b7ec:	2b00      	cmp	r3, #0
    b7ee:	f000 808c 	beq.w	b90a <OpenGPRS+0x1a2>

	// GPRS
	// ----
	TlvTree_AddChildInteger(piPhysicalConfig,
    b7f2:	f107 0314 	add.w	r3, r7, #20
    b7f6:	6818      	ldr	r0, [r3, #0]
    b7f8:	2101      	movs	r1, #1
    b7fa:	2229      	movs	r2, #41	; 0x29
    b7fc:	2301      	movs	r3, #1
    b7fe:	f00b fd90 	bl	17322 <TlvTree_AddChildInteger>
			LL_PHYSICAL_V_GPRS,                         // VALUE
			LL_PHYSICAL_L_LINK);                        // LENGTH 1

	// Transport and network layer parameters
	// ======================================
	piTransportConfig = TlvTree_AddChild(piConfig,
    b802:	f107 0418 	add.w	r4, r7, #24
    b806:	f107 0310 	add.w	r3, r7, #16
    b80a:	6818      	ldr	r0, [r3, #0]
    b80c:	f648 0111 	movw	r1, #34833	; 0x8811
    b810:	f2c0 019f 	movt	r1, #159	; 0x9f
    b814:	2200      	movs	r2, #0
    b816:	2300      	movs	r3, #0
    b818:	f00b fd71 	bl	172fe <TlvTree_AddChild>
    b81c:	6020      	str	r0, [r4, #0]
			LL_TAG_TRANSPORT_LAYER_CONFIG, // TAG Transport layer parameters
			NULL,                          // VALUE (Null)
			0);                            // LENGTH 0
	CHECK(piTransportConfig!=NULL, lblKOConfigure);
    b81e:	f107 0318 	add.w	r3, r7, #24
    b822:	681b      	ldr	r3, [r3, #0]
    b824:	2b00      	cmp	r3, #0
    b826:	d070      	beq.n	b90a <OpenGPRS+0x1a2>

	memset(tcAddr, 0, sizeof(tcAddr));
    b828:	f107 0330 	add.w	r3, r7, #48	; 0x30
    b82c:	4618      	mov	r0, r3
    b82e:	2100      	movs	r1, #0
    b830:	f240 4201 	movw	r2, #1025	; 0x401
    b834:	f7fd e97a 	blx	8b2c <_init+0x5c>
	pcServer = parseStr('|', tcAddr, pcServer, sizeof(tcAddr));         // Parse Tcp/Ip address
    b838:	1d3c      	adds	r4, r7, #4
    b83a:	f107 0230 	add.w	r2, r7, #48	; 0x30
    b83e:	1d3b      	adds	r3, r7, #4
    b840:	207c      	movs	r0, #124	; 0x7c
    b842:	4611      	mov	r1, r2
    b844:	681a      	ldr	r2, [r3, #0]
    b846:	f240 4301 	movw	r3, #1025	; 0x401
    b84a:	f005 fbfb 	bl	11044 <parseStr>
    b84e:	6020      	str	r0, [r4, #0]
	CHECK(pcServer!=NULL, lblKOConfigure);
    b850:	1d3b      	adds	r3, r7, #4
    b852:	681b      	ldr	r3, [r3, #0]
    b854:	2b00      	cmp	r3, #0
    b856:	d058      	beq.n	b90a <OpenGPRS+0x1a2>

	memset(tcPort, 0, sizeof(tcPort));
    b858:	f107 0328 	add.w	r3, r7, #40	; 0x28
    b85c:	4618      	mov	r0, r3
    b85e:	2100      	movs	r1, #0
    b860:	2206      	movs	r2, #6
    b862:	f7fd e964 	blx	8b2c <_init+0x5c>
	pcServer = parseStr('|', tcPort, pcServer, sizeof(tcPort));         // Parse Tcp/Ip port
    b866:	1d3c      	adds	r4, r7, #4
    b868:	f107 0228 	add.w	r2, r7, #40	; 0x28
    b86c:	1d3b      	adds	r3, r7, #4
    b86e:	207c      	movs	r0, #124	; 0x7c
    b870:	4611      	mov	r1, r2
    b872:	681a      	ldr	r2, [r3, #0]
    b874:	2306      	movs	r3, #6
    b876:	f005 fbe5 	bl	11044 <parseStr>
    b87a:	6020      	str	r0, [r4, #0]
	CHECK(pcServer!=NULL, lblKOConfigure);
    b87c:	1d3b      	adds	r3, r7, #4
    b87e:	681b      	ldr	r3, [r3, #0]
    b880:	2b00      	cmp	r3, #0
    b882:	d042      	beq.n	b90a <OpenGPRS+0x1a2>

	// TCP/IP
	// ------
	TlvTree_AddChildInteger(piTransportConfig,
    b884:	f107 0318 	add.w	r3, r7, #24
    b888:	6818      	ldr	r0, [r3, #0]
    b88a:	2101      	movs	r1, #1
    b88c:	2201      	movs	r2, #1
    b88e:	2301      	movs	r3, #1
    b890:	f00b fd47 	bl	17322 <TlvTree_AddChildInteger>
			LL_TRANSPORT_V_TCPIP,                       // VALUE
			LL_TRANSPORT_L_PROTOCOL);                   // LENGTH 1 byte

	// Host Name
	// ---------
	TlvTree_AddChildString(piTransportConfig,
    b894:	f107 0218 	add.w	r2, r7, #24
			LL_TCPIP_T_HOST_NAME,                        // TAG
			tcAddr);                                     // VALUE
    b898:	f107 0330 	add.w	r3, r7, #48	; 0x30
			LL_TRANSPORT_V_TCPIP,                       // VALUE
			LL_TRANSPORT_L_PROTOCOL);                   // LENGTH 1 byte

	// Host Name
	// ---------
	TlvTree_AddChildString(piTransportConfig,
    b89c:	6810      	ldr	r0, [r2, #0]
    b89e:	2110      	movs	r1, #16
    b8a0:	461a      	mov	r2, r3
    b8a2:	f00b fd50 	bl	17346 <TlvTree_AddChildString>
			tcAddr);                                     // VALUE
	// LENGTH (strlen addr)

	// Port
	// ----
	uiRemotePort = atoi (tcPort);
    b8a6:	f107 0328 	add.w	r3, r7, #40	; 0x28
    b8aa:	4618      	mov	r0, r3
    b8ac:	f7fd e932 	blx	8b14 <_init+0x44>
    b8b0:	4602      	mov	r2, r0
    b8b2:	f107 031c 	add.w	r3, r7, #28
    b8b6:	601a      	str	r2, [r3, #0]
	TlvTree_AddChildInteger(piTransportConfig,
    b8b8:	f107 0218 	add.w	r2, r7, #24
    b8bc:	f107 031c 	add.w	r3, r7, #28
    b8c0:	6810      	ldr	r0, [r2, #0]
    b8c2:	2111      	movs	r1, #17
    b8c4:	681a      	ldr	r2, [r3, #0]
    b8c6:	2304      	movs	r3, #4
    b8c8:	f00b fd2b 	bl	17322 <TlvTree_AddChildInteger>



	// Connection timeout
	// ------------------
	uiTimeout = TCPIP_TIMEOUT;
    b8cc:	f107 0320 	add.w	r3, r7, #32
    b8d0:	f640 32b8 	movw	r2, #3000	; 0xbb8
    b8d4:	601a      	str	r2, [r3, #0]
	TlvTree_AddChildInteger(piTransportConfig,
    b8d6:	f107 0218 	add.w	r2, r7, #24
    b8da:	f107 0320 	add.w	r3, r7, #32
    b8de:	6810      	ldr	r0, [r2, #0]
    b8e0:	2112      	movs	r1, #18
    b8e2:	681a      	ldr	r2, [r3, #0]
    b8e4:	2304      	movs	r3, #4
    b8e6:	f00b fd1c 	bl	17322 <TlvTree_AddChildInteger>
			uiTimeout,                                  // Value (Integer)
			LL_TCPIP_L_CONNECT_TIMEOUT);                // LENGTH 4 bytes

	// Link Layer configuration
	// ************************
	iRet = LL_Configure(&hSession, piConfig);                           // Initialize the handle of the session
    b8ea:	f107 0424 	add.w	r4, r7, #36	; 0x24
    b8ee:	f107 020c 	add.w	r2, r7, #12
    b8f2:	f107 0310 	add.w	r3, r7, #16
    b8f6:	4610      	mov	r0, r2
    b8f8:	6819      	ldr	r1, [r3, #0]
    b8fa:	f00b fbf8 	bl	170ee <LL_Configure>
    b8fe:	6020      	str	r0, [r4, #0]
	CHECK(iRet==LL_ERROR_OK, lblKOConfigure);
    b900:	f107 0324 	add.w	r3, r7, #36	; 0x24
    b904:	681b      	ldr	r3, [r3, #0]
    b906:	2b00      	cmp	r3, #0
    b908:	d004      	beq.n	b914 <OpenGPRS+0x1ac>
	goto lblEnd;

	// Errors treatment
	// ****************
	lblKOConfigure:                                                         // Configuration failed
	hSession=NULL;
    b90a:	f107 030c 	add.w	r3, r7, #12
    b90e:	2200      	movs	r2, #0
    b910:	601a      	str	r2, [r3, #0]
	goto lblEnd;
    b912:	e000      	b.n	b916 <OpenGPRS+0x1ae>
	// Link Layer configuration
	// ************************
	iRet = LL_Configure(&hSession, piConfig);                           // Initialize the handle of the session
	CHECK(iRet==LL_ERROR_OK, lblKOConfigure);

	goto lblEnd;
    b914:	bf00      	nop
	// ****************
	lblKOConfigure:                                                         // Configuration failed
	hSession=NULL;
	goto lblEnd;
	lblEnd:
	if (piConfig)
    b916:	f107 0310 	add.w	r3, r7, #16
    b91a:	681b      	ldr	r3, [r3, #0]
    b91c:	2b00      	cmp	r3, #0
    b91e:	d004      	beq.n	b92a <OpenGPRS+0x1c2>
		TlvTree_Release(piConfig);                                      // Release tree to avoid memory leak
    b920:	f107 0310 	add.w	r3, r7, #16
    b924:	6818      	ldr	r0, [r3, #0]
    b926:	f00b fd32 	bl	1738e <TlvTree_Release>
	return hSession;                                                    // Return the handle of the session
    b92a:	f107 030c 	add.w	r3, r7, #12
    b92e:	681b      	ldr	r3, [r3, #0]
}
    b930:	4618      	mov	r0, r3
    b932:	f644 1380 	movw	r3, #18816	; 0x4980
    b936:	f2c0 0302 	movt	r3, #2
    b93a:	f8d7 2434 	ldr.w	r2, [r7, #1076]	; 0x434
    b93e:	681b      	ldr	r3, [r3, #0]
    b940:	429a      	cmp	r2, r3
    b942:	d001      	beq.n	b948 <OpenGPRS+0x1e0>
    b944:	f7fd fad4 	bl	8ef0 <__stack_chk_fail>
    b948:	f107 073c 	add.w	r7, r7, #60	; 0x3c
    b94c:	f507 6780 	add.w	r7, r7, #1024	; 0x400
    b950:	46bd      	mov	sp, r7
    b952:	bd90      	pop	{r4, r7, pc}

0000b954 <ConnectGPRS>:
//    >=0 : Connect done
//     <0 : Connect failed
//****************************************************************************

static int ConnectGPRS(LL_HANDLE hSession)
{
    b954:	b580      	push	{r7, lr}
    b956:	b084      	sub	sp, #16
    b958:	af00      	add	r7, sp, #0
    b95a:	6078      	str	r0, [r7, #4]
    b95c:	f644 1380 	movw	r3, #18816	; 0x4980
    b960:	f2c0 0302 	movt	r3, #2
    b964:	681b      	ldr	r3, [r3, #0]
    b966:	60fb      	str	r3, [r7, #12]
	// ***************
	int iRet;

	// Link Layer connection
	// *********************
	iRet = LL_Connect(hSession);
    b968:	6878      	ldr	r0, [r7, #4]
    b96a:	f00b fbd2 	bl	17112 <LL_Connect>
    b96e:	60b8      	str	r0, [r7, #8]

	return iRet;
    b970:	68bb      	ldr	r3, [r7, #8]
}
    b972:	4618      	mov	r0, r3
    b974:	f644 1380 	movw	r3, #18816	; 0x4980
    b978:	f2c0 0302 	movt	r3, #2
    b97c:	68fa      	ldr	r2, [r7, #12]
    b97e:	681b      	ldr	r3, [r3, #0]
    b980:	429a      	cmp	r2, r3
    b982:	d001      	beq.n	b988 <ConnectGPRS+0x34>
    b984:	f7fd fab4 	bl	8ef0 <__stack_chk_fail>
    b988:	f107 0710 	add.w	r7, r7, #16
    b98c:	46bd      	mov	sp, r7
    b98e:	bd80      	pop	{r7, pc}

0000b990 <SendGPRS>:
//    >=0 : Number of bytes sent
//     <0 : Transmission failed
//****************************************************************************

static int SendGPRS(LL_HANDLE hSession, const char *pcMsg, word usLen)
{
    b990:	b580      	push	{r7, lr}
    b992:	b086      	sub	sp, #24
    b994:	af00      	add	r7, sp, #0
    b996:	60f8      	str	r0, [r7, #12]
    b998:	60b9      	str	r1, [r7, #8]
    b99a:	4613      	mov	r3, r2
    b99c:	80fb      	strh	r3, [r7, #6]
    b99e:	f644 1380 	movw	r3, #18816	; 0x4980
    b9a2:	f2c0 0302 	movt	r3, #2
    b9a6:	681b      	ldr	r3, [r3, #0]
    b9a8:	617b      	str	r3, [r7, #20]
	// ***************
	int iRet;

	// Send data
	// *********
	iRet = LL_Send(hSession, usLen, (byte*)pcMsg, LL_INFINITE);
    b9aa:	88fb      	ldrh	r3, [r7, #6]
    b9ac:	68f8      	ldr	r0, [r7, #12]
    b9ae:	4619      	mov	r1, r3
    b9b0:	68ba      	ldr	r2, [r7, #8]
    b9b2:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
    b9b6:	f00b fc3c 	bl	17232 <LL_Send>
    b9ba:	6138      	str	r0, [r7, #16]
	if(iRet != usLen)
    b9bc:	88fa      	ldrh	r2, [r7, #6]
    b9be:	693b      	ldr	r3, [r7, #16]
    b9c0:	429a      	cmp	r2, r3
    b9c2:	d003      	beq.n	b9cc <SendGPRS+0x3c>
		iRet = LL_GetLastError(hSession);
    b9c4:	68f8      	ldr	r0, [r7, #12]
    b9c6:	f00b fbc8 	bl	1715a <LL_GetLastError>
    b9ca:	6138      	str	r0, [r7, #16]

	return iRet;
    b9cc:	693b      	ldr	r3, [r7, #16]
}
    b9ce:	4618      	mov	r0, r3
    b9d0:	f644 1380 	movw	r3, #18816	; 0x4980
    b9d4:	f2c0 0302 	movt	r3, #2
    b9d8:	697a      	ldr	r2, [r7, #20]
    b9da:	681b      	ldr	r3, [r3, #0]
    b9dc:	429a      	cmp	r2, r3
    b9de:	d001      	beq.n	b9e4 <SendGPRS+0x54>
    b9e0:	f7fd fa86 	bl	8ef0 <__stack_chk_fail>
    b9e4:	f107 0718 	add.w	r7, r7, #24
    b9e8:	46bd      	mov	sp, r7
    b9ea:	bd80      	pop	{r7, pc}

0000b9ec <ReceiveGPRS>:
//    >=0 : Number of bytes received
//     <0 : Reception failed
//****************************************************************************

static int ReceiveGPRS(LL_HANDLE hSession, T_GL_HWIDGET hScreen, char *pcMsg, word usLen, byte ucDly)
{
    b9ec:	b580      	push	{r7, lr}
    b9ee:	b08e      	sub	sp, #56	; 0x38
    b9f0:	af02      	add	r7, sp, #8
    b9f2:	60f8      	str	r0, [r7, #12]
    b9f4:	60b9      	str	r1, [r7, #8]
    b9f6:	607a      	str	r2, [r7, #4]
    b9f8:	807b      	strh	r3, [r7, #2]
    b9fa:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
    b9fe:	707b      	strb	r3, [r7, #1]
    ba00:	f644 1380 	movw	r3, #18816	; 0x4980
    ba04:	f2c0 0302 	movt	r3, #2
    ba08:	681b      	ldr	r3, [r3, #0]
    ba0a:	62fb      	str	r3, [r7, #44]	; 0x2c
	// Local variables
	// ***************
	int iKey;
	long lSec, lTimeOut=LL_INFINITE;
    ba0c:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
    ba10:	61bb      	str	r3, [r7, #24]
	int iRet, iLength=0, iNbrBytes;
    ba12:	2300      	movs	r3, #0
    ba14:	623b      	str	r3, [r7, #32]

	// Timeout setting
	// ***************
	if(ucDly != 0xFF)
    ba16:	787b      	ldrb	r3, [r7, #1]
    ba18:	2bff      	cmp	r3, #255	; 0xff
    ba1a:	d006      	beq.n	ba2a <ReceiveGPRS+0x3e>
		lSec = ucDly*1000;
    ba1c:	787b      	ldrb	r3, [r7, #1]
    ba1e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    ba22:	fb02 f303 	mul.w	r3, r2, r3
    ba26:	617b      	str	r3, [r7, #20]
    ba28:	e002      	b.n	ba30 <ReceiveGPRS+0x44>
	else
		lSec = LL_INFINITE;
    ba2a:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
    ba2e:	617b      	str	r3, [r7, #20]

	// Receiving first block
	// *********************
	ResetPeripherals(KEYBOARD | TSCREEN);                                  // Reset peripherals FIFO
    ba30:	2001      	movs	r0, #1
    ba32:	f6c0 0000 	movt	r0, #2048	; 0x800
    ba36:	f7fe ff45 	bl	a8c4 <ResetPeripherals>
	iRet = TimerStart(0, lSec);                                            // Timer0 starts
    ba3a:	2000      	movs	r0, #0
    ba3c:	6979      	ldr	r1, [r7, #20]
    ba3e:	f005 fc75 	bl	1132c <TimerStart>
    ba42:	61f8      	str	r0, [r7, #28]
	CHECK(iRet>=0, lblTimeOut);
    ba44:	69fb      	ldr	r3, [r7, #28]
    ba46:	2b00      	cmp	r3, #0
    ba48:	db67      	blt.n	bb1a <ReceiveGPRS+0x12e>
	do
	{
		iNbrBytes = LL_Receive(hSession, usLen, pcMsg+iLength, 1*100);     // Check reception
    ba4a:	887a      	ldrh	r2, [r7, #2]
    ba4c:	6a3b      	ldr	r3, [r7, #32]
    ba4e:	6879      	ldr	r1, [r7, #4]
    ba50:	18cb      	adds	r3, r1, r3
    ba52:	68f8      	ldr	r0, [r7, #12]
    ba54:	4611      	mov	r1, r2
    ba56:	461a      	mov	r2, r3
    ba58:	2364      	movs	r3, #100	; 0x64
    ba5a:	f00b fbd8 	bl	1720e <LL_Receive>
    ba5e:	6278      	str	r0, [r7, #36]	; 0x24
		if (iNbrBytes != 0)
    ba60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    ba62:	2b00      	cmp	r3, #0
    ba64:	d11f      	bne.n	baa6 <ReceiveGPRS+0xba>
			break;                                                         // Bytes received
		iKey = GoalGetKey(hScreen, gGoalGraphicLibInstance, true, 0, false);                 // Get key pressed/touched (shortcut)
    ba66:	f644 1388 	movw	r3, #18824	; 0x4988
    ba6a:	f2c0 0302 	movt	r3, #2
    ba6e:	681b      	ldr	r3, [r3, #0]
    ba70:	2200      	movs	r2, #0
    ba72:	9200      	str	r2, [sp, #0]
    ba74:	68b8      	ldr	r0, [r7, #8]
    ba76:	4619      	mov	r1, r3
    ba78:	2201      	movs	r2, #1
    ba7a:	2300      	movs	r3, #0
    ba7c:	f002 f8b6 	bl	dbec <GoalGetKey>
    ba80:	62b8      	str	r0, [r7, #40]	; 0x28
		CHECK(iKey!=GL_KEY_CANCEL, lblTimeOut);                            // Exit on cancel key
    ba82:	6aba      	ldr	r2, [r7, #40]	; 0x28
    ba84:	f64f 0351 	movw	r3, #63569	; 0xf851
    ba88:	429a      	cmp	r2, r3
    ba8a:	d046      	beq.n	bb1a <ReceiveGPRS+0x12e>
		if (lSec != LL_INFINITE)
    ba8c:	697a      	ldr	r2, [r7, #20]
    ba8e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
    ba92:	429a      	cmp	r2, r3
    ba94:	d003      	beq.n	ba9e <ReceiveGPRS+0xb2>
			lTimeOut = TimerGet(0);                                        // Retrieve timer value
    ba96:	2000      	movs	r0, #0
    ba98:	f005 fc98 	bl	113cc <TimerGet>
    ba9c:	61b8      	str	r0, [r7, #24]
	} while (lTimeOut>0);
    ba9e:	69bb      	ldr	r3, [r7, #24]
    baa0:	2b00      	cmp	r3, #0
    baa2:	dcd2      	bgt.n	ba4a <ReceiveGPRS+0x5e>
    baa4:	e000      	b.n	baa8 <ReceiveGPRS+0xbc>
	CHECK(iRet>=0, lblTimeOut);
	do
	{
		iNbrBytes = LL_Receive(hSession, usLen, pcMsg+iLength, 1*100);     // Check reception
		if (iNbrBytes != 0)
			break;                                                         // Bytes received
    baa6:	bf00      	nop
		CHECK(iKey!=GL_KEY_CANCEL, lblTimeOut);                            // Exit on cancel key
		if (lSec != LL_INFINITE)
			lTimeOut = TimerGet(0);                                        // Retrieve timer value
	} while (lTimeOut>0);

	CHECK(lTimeOut!=0, lblTimeOut);                                        // Exit on timeout
    baa8:	69bb      	ldr	r3, [r7, #24]
    baaa:	2b00      	cmp	r3, #0
    baac:	d035      	beq.n	bb1a <ReceiveGPRS+0x12e>

	iLength += iNbrBytes;
    baae:	6a3a      	ldr	r2, [r7, #32]
    bab0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    bab2:	18d3      	adds	r3, r2, r3
    bab4:	623b      	str	r3, [r7, #32]
	iRet = LL_GetLastError(hSession);
    bab6:	68f8      	ldr	r0, [r7, #12]
    bab8:	f00b fb4f 	bl	1715a <LL_GetLastError>
    babc:	61f8      	str	r0, [r7, #28]
	CHECK (iRet==LL_ERROR_OK, lblEnd);
    babe:	69fb      	ldr	r3, [r7, #28]
    bac0:	2b00      	cmp	r3, #0
    bac2:	d130      	bne.n	bb26 <ReceiveGPRS+0x13a>
	if (iNbrBytes != 0)
    bac4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    bac6:	2b00      	cmp	r3, #0
    bac8:	d024      	beq.n	bb14 <ReceiveGPRS+0x128>
    baca:	e000      	b.n	bace <ReceiveGPRS+0xe2>
			iLength += iNbrBytes;
			iRet = LL_GetLastError(hSession);
			CHECK ((iRet==LL_ERROR_OK) || (iRet==LL_ERROR_TIMEOUT), lblEnd);
			if ((iRet==LL_ERROR_TIMEOUT) || (iNbrBytes==0))
				break;
		}
    bacc:	bf00      	nop
	{
		// Receiving next block until timeout (Inter block 2s)
		// ===================================================
		while(1)
		{
			iNbrBytes = LL_Receive(hSession, usLen-iLength, pcMsg+iLength, 2*100);
    bace:	887a      	ldrh	r2, [r7, #2]
    bad0:	6a3b      	ldr	r3, [r7, #32]
    bad2:	1ad2      	subs	r2, r2, r3
    bad4:	6a3b      	ldr	r3, [r7, #32]
    bad6:	6879      	ldr	r1, [r7, #4]
    bad8:	18cb      	adds	r3, r1, r3
    bada:	68f8      	ldr	r0, [r7, #12]
    badc:	4611      	mov	r1, r2
    bade:	461a      	mov	r2, r3
    bae0:	23c8      	movs	r3, #200	; 0xc8
    bae2:	f00b fb94 	bl	1720e <LL_Receive>
    bae6:	6278      	str	r0, [r7, #36]	; 0x24
			iLength += iNbrBytes;
    bae8:	6a3a      	ldr	r2, [r7, #32]
    baea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    baec:	18d3      	adds	r3, r2, r3
    baee:	623b      	str	r3, [r7, #32]
			iRet = LL_GetLastError(hSession);
    baf0:	68f8      	ldr	r0, [r7, #12]
    baf2:	f00b fb32 	bl	1715a <LL_GetLastError>
    baf6:	61f8      	str	r0, [r7, #28]
			CHECK ((iRet==LL_ERROR_OK) || (iRet==LL_ERROR_TIMEOUT), lblEnd);
    baf8:	69fb      	ldr	r3, [r7, #28]
    bafa:	2b00      	cmp	r3, #0
    bafc:	d003      	beq.n	bb06 <ReceiveGPRS+0x11a>
    bafe:	69fb      	ldr	r3, [r7, #28]
    bb00:	f513 7f7b 	cmn.w	r3, #1004	; 0x3ec
    bb04:	d10f      	bne.n	bb26 <ReceiveGPRS+0x13a>
			if ((iRet==LL_ERROR_TIMEOUT) || (iNbrBytes==0))
    bb06:	69fb      	ldr	r3, [r7, #28]
    bb08:	f513 7f7b 	cmn.w	r3, #1004	; 0x3ec
    bb0c:	d002      	beq.n	bb14 <ReceiveGPRS+0x128>
    bb0e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    bb10:	2b00      	cmp	r3, #0
    bb12:	d1db      	bne.n	bacc <ReceiveGPRS+0xe0>
				break;
		}
	}

	iRet = iLength;
    bb14:	6a3b      	ldr	r3, [r7, #32]
    bb16:	61fb      	str	r3, [r7, #28]
	goto lblEnd;
    bb18:	e005      	b.n	bb26 <ReceiveGPRS+0x13a>

	// Errors treatment
	// ****************
	lblTimeOut:                                                                // Timeout expired
	iRet = LL_ERROR_TIMEOUT;
    bb1a:	f64f 4314 	movw	r3, #64532	; 0xfc14
    bb1e:	f6cf 73ff 	movt	r3, #65535	; 0xffff
    bb22:	61fb      	str	r3, [r7, #28]
	goto lblEnd;
    bb24:	bf00      	nop
	lblEnd:
	TimerStop(0);
    bb26:	2000      	movs	r0, #0
    bb28:	f005 fc94 	bl	11454 <TimerStop>
	return iRet;
    bb2c:	69fb      	ldr	r3, [r7, #28]
}
    bb2e:	4618      	mov	r0, r3
    bb30:	f644 1380 	movw	r3, #18816	; 0x4980
    bb34:	f2c0 0302 	movt	r3, #2
    bb38:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    bb3a:	681b      	ldr	r3, [r3, #0]
    bb3c:	429a      	cmp	r2, r3
    bb3e:	d001      	beq.n	bb44 <ReceiveGPRS+0x158>
    bb40:	f7fd f9d6 	bl	8ef0 <__stack_chk_fail>
    bb44:	f107 0730 	add.w	r7, r7, #48	; 0x30
    bb48:	46bd      	mov	sp, r7
    bb4a:	bd80      	pop	{r7, pc}

0000bb4c <DisconnectGPRS>:
//    >=0 : Disconnect done
//     <0 : Disconnect failed
//****************************************************************************

static int DisconnectGPRS(LL_HANDLE hSession)
{
    bb4c:	b580      	push	{r7, lr}
    bb4e:	b084      	sub	sp, #16
    bb50:	af00      	add	r7, sp, #0
    bb52:	6078      	str	r0, [r7, #4]
    bb54:	f644 1380 	movw	r3, #18816	; 0x4980
    bb58:	f2c0 0302 	movt	r3, #2
    bb5c:	681b      	ldr	r3, [r3, #0]
    bb5e:	60fb      	str	r3, [r7, #12]
	// ***************
	int iRet;

	// Link Layer disconnection
	// ************************
	iRet = LL_Disconnect(hSession);
    bb60:	6878      	ldr	r0, [r7, #4]
    bb62:	f00b fae8 	bl	17136 <LL_Disconnect>
    bb66:	60b8      	str	r0, [r7, #8]

	return iRet;
    bb68:	68bb      	ldr	r3, [r7, #8]
}
    bb6a:	4618      	mov	r0, r3
    bb6c:	f644 1380 	movw	r3, #18816	; 0x4980
    bb70:	f2c0 0302 	movt	r3, #2
    bb74:	68fa      	ldr	r2, [r7, #12]
    bb76:	681b      	ldr	r3, [r3, #0]
    bb78:	429a      	cmp	r2, r3
    bb7a:	d001      	beq.n	bb80 <DisconnectGPRS+0x34>
    bb7c:	f7fd f9b8 	bl	8ef0 <__stack_chk_fail>
    bb80:	f107 0710 	add.w	r7, r7, #16
    bb84:	46bd      	mov	sp, r7
    bb86:	bd80      	pop	{r7, pc}

0000bb88 <CloseGPRS>:
//    >=0 : Configuration deleted
//     <0 : Processing failed
//****************************************************************************

static int CloseGPRS(LL_HANDLE hSession)
{
    bb88:	b580      	push	{r7, lr}
    bb8a:	b084      	sub	sp, #16
    bb8c:	af00      	add	r7, sp, #0
    bb8e:	6078      	str	r0, [r7, #4]
    bb90:	f644 1380 	movw	r3, #18816	; 0x4980
    bb94:	f2c0 0302 	movt	r3, #2
    bb98:	681b      	ldr	r3, [r3, #0]
    bb9a:	60fb      	str	r3, [r7, #12]
	// ***************
	int iRet;

	// Delete the configuration
	// ************************
	iRet = LL_Configure(&hSession, NULL);
    bb9c:	1d3b      	adds	r3, r7, #4
    bb9e:	4618      	mov	r0, r3
    bba0:	2100      	movs	r1, #0
    bba2:	f00b faa4 	bl	170ee <LL_Configure>
    bba6:	60b8      	str	r0, [r7, #8]

	return iRet;
    bba8:	68bb      	ldr	r3, [r7, #8]
}
    bbaa:	4618      	mov	r0, r3
    bbac:	f644 1380 	movw	r3, #18816	; 0x4980
    bbb0:	f2c0 0302 	movt	r3, #2
    bbb4:	68fa      	ldr	r2, [r7, #12]
    bbb6:	681b      	ldr	r3, [r3, #0]
    bbb8:	429a      	cmp	r2, r3
    bbba:	d001      	beq.n	bbc0 <CloseGPRS+0x38>
    bbbc:	f7fd f998 	bl	8ef0 <__stack_chk_fail>
    bbc0:	f107 0710 	add.w	r7, r7, #16
    bbc4:	46bd      	mov	sp, r7
    bbc6:	bd80      	pop	{r7, pc}

0000bbc8 <StopGPRS>:
//    >=0 : Break attachment done
//     <0 : Break attachment failed
//****************************************************************************

static int StopGPRS(void)
{
    bbc8:	b580      	push	{r7, lr}
    bbca:	b082      	sub	sp, #8
    bbcc:	af00      	add	r7, sp, #0
    bbce:	f644 1380 	movw	r3, #18816	; 0x4980
    bbd2:	f2c0 0302 	movt	r3, #2
    bbd6:	681b      	ldr	r3, [r3, #0]
    bbd8:	607b      	str	r3, [r7, #4]
	// Local variables
	// ***************
	int iRet = 1;
    bbda:	2301      	movs	r3, #1
    bbdc:	603b      	str	r3, [r7, #0]

	// GPRS disconnection
	// ******************
	// iRet = LL_GPRS_Stop();

	return iRet;
    bbde:	683b      	ldr	r3, [r7, #0]
}
    bbe0:	4618      	mov	r0, r3
    bbe2:	f644 1380 	movw	r3, #18816	; 0x4980
    bbe6:	f2c0 0302 	movt	r3, #2
    bbea:	687a      	ldr	r2, [r7, #4]
    bbec:	681b      	ldr	r3, [r3, #0]
    bbee:	429a      	cmp	r2, r3
    bbf0:	d001      	beq.n	bbf6 <StopGPRS+0x2e>
    bbf2:	f7fd f97d 	bl	8ef0 <__stack_chk_fail>
    bbf6:	f107 0708 	add.w	r7, r7, #8
    bbfa:	46bd      	mov	sp, r7
    bbfc:	bd80      	pop	{r7, pc}
    bbfe:	bf00      	nop

0000bc00 <PromptGPRS>:
//  This function has no parameters.
//  This function has no return value
//****************************************************************************

void PromptGPRS(void)
{
    bc00:	b590      	push	{r4, r7, lr}
    bc02:	f6ad 0d44 	subw	sp, sp, #2116	; 0x844
    bc06:	af04      	add	r7, sp, #16
    bc08:	f644 1380 	movw	r3, #18816	; 0x4980
    bc0c:	f2c0 0302 	movt	r3, #2
    bc10:	681b      	ldr	r3, [r3, #0]
    bc12:	f8c7 382c 	str.w	r3, [r7, #2092]	; 0x82c
	int iHeader, iFooter;
	int i, iDefItemP, iDefItemN, iRet;

	// Pin Required ?
	// **************
	iRet = appGet(appGprsRequirePin, tcRequirePin, lenGprsRequirePin+1);
    bc16:	f107 0408 	add.w	r4, r7, #8
    bc1a:	f107 031c 	add.w	r3, r7, #28
    bc1e:	200c      	movs	r0, #12
    bc20:	4619      	mov	r1, r3
    bc22:	2202      	movs	r2, #2
    bc24:	f003 fcda 	bl	f5dc <appGet>
    bc28:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblDbaErr);
    bc2a:	f107 0308 	add.w	r3, r7, #8
    bc2e:	681b      	ldr	r3, [r3, #0]
    bc30:	2b00      	cmp	r3, #0
    bc32:	f2c0 8350 	blt.w	c2d6 <PromptGPRS+0x6d6>
	iDefItemP = atoi(tcRequirePin);
    bc36:	f107 040c 	add.w	r4, r7, #12
    bc3a:	f107 031c 	add.w	r3, r7, #28
    bc3e:	4618      	mov	r0, r3
    bc40:	f7fc ef68 	blx	8b14 <_init+0x44>
    bc44:	6020      	str	r0, [r4, #0]
	iDefItemN = GL_Dialog_Choice(gGoalGraphicLibInstance, "Pin Required?", tzRequirePin, iDefItemP, GL_BUTTON_DEFAULT, GL_KEY_0, GL_TIME_MINUTE);
    bc46:	f644 1388 	movw	r3, #18824	; 0x4988
    bc4a:	f2c0 0302 	movt	r3, #2
    bc4e:	681a      	ldr	r2, [r3, #0]
    bc50:	f107 030c 	add.w	r3, r7, #12
    bc54:	f64f 71ff 	movw	r1, #65535	; 0xffff
    bc58:	9100      	str	r1, [sp, #0]
    bc5a:	2130      	movs	r1, #48	; 0x30
    bc5c:	9101      	str	r1, [sp, #4]
    bc5e:	f64e 2160 	movw	r1, #60000	; 0xea60
    bc62:	9102      	str	r1, [sp, #8]
    bc64:	4610      	mov	r0, r2
    bc66:	f649 21e4 	movw	r1, #39652	; 0x9ae4
    bc6a:	f2c0 0101 	movt	r1, #1
    bc6e:	f244 3210 	movw	r2, #17168	; 0x4310
    bc72:	f2c0 0202 	movt	r2, #2
    bc76:	681b      	ldr	r3, [r3, #0]
    bc78:	f00c fc3c 	bl	184f4 <GL_Dialog_Choice>
    bc7c:	4602      	mov	r2, r0
    bc7e:	f107 0310 	add.w	r3, r7, #16
    bc82:	601a      	str	r2, [r3, #0]
	CHECK((iDefItemN!=GL_KEY_CANCEL) && (iDefItemN!=GL_RESULT_INACTIVITY), lblEnd); // Exit cancel/timeout
    bc84:	f107 0310 	add.w	r3, r7, #16
    bc88:	681a      	ldr	r2, [r3, #0]
    bc8a:	f64f 0351 	movw	r3, #63569	; 0xf851
    bc8e:	429a      	cmp	r2, r3
    bc90:	f000 834a 	beq.w	c328 <PromptGPRS+0x728>
    bc94:	f107 0310 	add.w	r3, r7, #16
    bc98:	681a      	ldr	r2, [r3, #0]
    bc9a:	f64f 0380 	movw	r3, #63616	; 0xf880
    bc9e:	429a      	cmp	r2, r3
    bca0:	f000 8342 	beq.w	c328 <PromptGPRS+0x728>
	if (iDefItemN != iDefItemP)
    bca4:	f107 0210 	add.w	r2, r7, #16
    bca8:	f107 030c 	add.w	r3, r7, #12
    bcac:	6812      	ldr	r2, [r2, #0]
    bcae:	681b      	ldr	r3, [r3, #0]
    bcb0:	429a      	cmp	r2, r3
    bcb2:	d018      	beq.n	bce6 <PromptGPRS+0xe6>
	{
		tcRequirePin[0] = iDefItemN + 0x30;
    bcb4:	f107 0310 	add.w	r3, r7, #16
    bcb8:	681b      	ldr	r3, [r3, #0]
    bcba:	b2db      	uxtb	r3, r3
    bcbc:	3330      	adds	r3, #48	; 0x30
    bcbe:	b2da      	uxtb	r2, r3
    bcc0:	f107 031c 	add.w	r3, r7, #28
    bcc4:	701a      	strb	r2, [r3, #0]
		iRet = appPut(appGprsRequirePin, tcRequirePin, lenGprsRequirePin); // Save pin required
    bcc6:	f107 0408 	add.w	r4, r7, #8
    bcca:	f107 031c 	add.w	r3, r7, #28
    bcce:	200c      	movs	r0, #12
    bcd0:	4619      	mov	r1, r3
    bcd2:	2201      	movs	r2, #1
    bcd4:	f003 fc1c 	bl	f510 <appPut>
    bcd8:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblDbaErr);
    bcda:	f107 0308 	add.w	r3, r7, #8
    bcde:	681b      	ldr	r3, [r3, #0]
    bce0:	2b00      	cmp	r3, #0
    bce2:	f2c0 82f8 	blt.w	c2d6 <PromptGPRS+0x6d6>
	}

	// Enter APN
	// *********
	iHeader = IsHeader();                                                  // Save header state
    bce6:	f107 0414 	add.w	r4, r7, #20
    bcea:	f00c fa4f 	bl	1818c <IsHeader>
    bcee:	6020      	str	r0, [r4, #0]
	iFooter = IsFooter();                                                  // Save footer state
    bcf0:	f107 0418 	add.w	r4, r7, #24
    bcf4:	f00c fa18 	bl	18128 <IsFooter>
    bcf8:	6020      	str	r0, [r4, #0]

	memset(tcMask, 0, sizeof(tcMask));
    bcfa:	f507 7392 	add.w	r3, r7, #292	; 0x124
    bcfe:	4618      	mov	r0, r3
    bd00:	2100      	movs	r1, #0
    bd02:	f44f 7280 	mov.w	r2, #256	; 0x100
    bd06:	f7fc ef12 	blx	8b2c <_init+0x5c>
	for (i=0; i<lenGprsApn; i++)
    bd0a:	1d3b      	adds	r3, r7, #4
    bd0c:	2200      	movs	r2, #0
    bd0e:	601a      	str	r2, [r3, #0]
    bd10:	e015      	b.n	bd3e <PromptGPRS+0x13e>
		strcat(tcMask, "/c");                                              // Accept any character
    bd12:	f507 7392 	add.w	r3, r7, #292	; 0x124
    bd16:	4618      	mov	r0, r3
    bd18:	f7fc ef60 	blx	8bdc <_init+0x10c>
    bd1c:	4603      	mov	r3, r0
    bd1e:	f507 7292 	add.w	r2, r7, #292	; 0x124
    bd22:	18d2      	adds	r2, r2, r3
    bd24:	f649 23f4 	movw	r3, #39668	; 0x9af4
    bd28:	f2c0 0301 	movt	r3, #1
    bd2c:	8819      	ldrh	r1, [r3, #0]
    bd2e:	789b      	ldrb	r3, [r3, #2]
    bd30:	8011      	strh	r1, [r2, #0]
    bd32:	7093      	strb	r3, [r2, #2]
	// *********
	iHeader = IsHeader();                                                  // Save header state
	iFooter = IsFooter();                                                  // Save footer state

	memset(tcMask, 0, sizeof(tcMask));
	for (i=0; i<lenGprsApn; i++)
    bd34:	1d3b      	adds	r3, r7, #4
    bd36:	1d3a      	adds	r2, r7, #4
    bd38:	6812      	ldr	r2, [r2, #0]
    bd3a:	3201      	adds	r2, #1
    bd3c:	601a      	str	r2, [r3, #0]
    bd3e:	1d3b      	adds	r3, r7, #4
    bd40:	681b      	ldr	r3, [r3, #0]
    bd42:	2b1d      	cmp	r3, #29
    bd44:	dde5      	ble.n	bd12 <PromptGPRS+0x112>
		strcat(tcMask, "/c");                                              // Accept any character
	iRet = appGet(appGprsApn, tcApnP, lenGprsApn+1);
    bd46:	f107 0408 	add.w	r4, r7, #8
    bd4a:	f107 0350 	add.w	r3, r7, #80	; 0x50
    bd4e:	200d      	movs	r0, #13
    bd50:	4619      	mov	r1, r3
    bd52:	221f      	movs	r2, #31
    bd54:	f003 fc42 	bl	f5dc <appGet>
    bd58:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblDbaErr);
    bd5a:	f107 0308 	add.w	r3, r7, #8
    bd5e:	681b      	ldr	r3, [r3, #0]
    bd60:	2b00      	cmp	r3, #0
    bd62:	f2c0 82b8 	blt.w	c2d6 <PromptGPRS+0x6d6>
	strcpy(tcApnN, tcApnP);
    bd66:	f107 0230 	add.w	r2, r7, #48	; 0x30
    bd6a:	f107 0350 	add.w	r3, r7, #80	; 0x50
    bd6e:	4610      	mov	r0, r2
    bd70:	4619      	mov	r1, r3
    bd72:	f7fc ef08 	blx	8b84 <_init+0xb4>

	DisplayLeds(_OFF_);                                                    // Disable Leds
    bd76:	2000      	movs	r0, #0
    bd78:	f00c f9a8 	bl	180cc <DisplayLeds>
	DisplayHeader(_OFF_);                                                  // Disable Header
    bd7c:	2000      	movs	r0, #0
    bd7e:	f00c f977 	bl	18070 <DisplayHeader>
	DisplayFooter(_OFF_);                                                  // Disable Footer
    bd82:	2000      	movs	r0, #0
    bd84:	f00c f944 	bl	18010 <DisplayFooter>

	iRet = GL_Dialog_VirtualKeyboard(gGoalGraphicLibInstance, NULL, "Enter Apn :", tcMask, tcApnN, sizeof(tcApnN), GL_TIME_MINUTE);
    bd88:	f644 1388 	movw	r3, #18824	; 0x4988
    bd8c:	f2c0 0302 	movt	r3, #2
    bd90:	681a      	ldr	r2, [r3, #0]
    bd92:	f507 7392 	add.w	r3, r7, #292	; 0x124
    bd96:	f107 0130 	add.w	r1, r7, #48	; 0x30
    bd9a:	9100      	str	r1, [sp, #0]
    bd9c:	211f      	movs	r1, #31
    bd9e:	9101      	str	r1, [sp, #4]
    bda0:	f64e 2160 	movw	r1, #60000	; 0xea60
    bda4:	9102      	str	r1, [sp, #8]
    bda6:	4610      	mov	r0, r2
    bda8:	2100      	movs	r1, #0
    bdaa:	f649 22f8 	movw	r2, #39672	; 0x9af8
    bdae:	f2c0 0201 	movt	r2, #1
    bdb2:	f00c fc0b 	bl	185cc <GL_Dialog_VirtualKeyboard>
    bdb6:	4602      	mov	r2, r0
    bdb8:	f107 0308 	add.w	r3, r7, #8
    bdbc:	601a      	str	r2, [r3, #0]

	if (IsColorDisplay())                                                  // Color terminal?
    bdbe:	f00b fd01 	bl	177c4 <IsColorDisplay>
    bdc2:	4603      	mov	r3, r0
    bdc4:	2b00      	cmp	r3, #0
    bdc6:	d01a      	beq.n	bdfe <PromptGPRS+0x1fe>
	{                                                                      // Yes
		DisplayLeds(_ON_);                                                 // Enable Leds
    bdc8:	2001      	movs	r0, #1
    bdca:	f00c f97f 	bl	180cc <DisplayLeds>
		DisplayHeader(iHeader);                                            // Enable Header
    bdce:	f107 0314 	add.w	r3, r7, #20
    bdd2:	6818      	ldr	r0, [r3, #0]
    bdd4:	f00c f94c 	bl	18070 <DisplayHeader>
		if(!GL_GraphicLib_IsTouchPresent(gGoalGraphicLibInstance))                           // Check if it is a touch screen
    bdd8:	f644 1388 	movw	r3, #18824	; 0x4988
    bddc:	f2c0 0302 	movt	r3, #2
    bde0:	681b      	ldr	r3, [r3, #0]
    bde2:	4618      	mov	r0, r3
    bde4:	f00c fd1c 	bl	18820 <GL_GraphicLib_IsTouchPresent>
    bde8:	4603      	mov	r3, r0
    bdea:	f083 0301 	eor.w	r3, r3, #1
    bdee:	b2db      	uxtb	r3, r3
    bdf0:	2b00      	cmp	r3, #0
    bdf2:	d004      	beq.n	bdfe <PromptGPRS+0x1fe>
			DisplayFooter(iFooter);                                        // No, restore Footer
    bdf4:	f107 0318 	add.w	r3, r7, #24
    bdf8:	6818      	ldr	r0, [r3, #0]
    bdfa:	f00c f909 	bl	18010 <DisplayFooter>
	}

	CHECK((iRet!=GL_KEY_CANCEL) && (iRet!=GL_RESULT_INACTIVITY), lblEnd);  // Exit on cancel/timeout
    bdfe:	f107 0308 	add.w	r3, r7, #8
    be02:	681a      	ldr	r2, [r3, #0]
    be04:	f64f 0351 	movw	r3, #63569	; 0xf851
    be08:	429a      	cmp	r2, r3
    be0a:	f000 828d 	beq.w	c328 <PromptGPRS+0x728>
    be0e:	f107 0308 	add.w	r3, r7, #8
    be12:	681a      	ldr	r2, [r3, #0]
    be14:	f64f 0380 	movw	r3, #63616	; 0xf880
    be18:	429a      	cmp	r2, r3
    be1a:	f000 8285 	beq.w	c328 <PromptGPRS+0x728>
	if (strcmp(tcApnN, tcApnP) != 0)
    be1e:	f107 0230 	add.w	r2, r7, #48	; 0x30
    be22:	f107 0350 	add.w	r3, r7, #80	; 0x50
    be26:	4610      	mov	r0, r2
    be28:	4619      	mov	r1, r3
    be2a:	f7fc ef04 	blx	8c34 <_init+0x164>
    be2e:	4603      	mov	r3, r0
    be30:	2b00      	cmp	r3, #0
    be32:	d00f      	beq.n	be54 <PromptGPRS+0x254>
	{
		iRet = appPut(appGprsApn, tcApnN, lenGprsApn);                     // Save new apn
    be34:	f107 0408 	add.w	r4, r7, #8
    be38:	f107 0330 	add.w	r3, r7, #48	; 0x30
    be3c:	200d      	movs	r0, #13
    be3e:	4619      	mov	r1, r3
    be40:	221e      	movs	r2, #30
    be42:	f003 fb65 	bl	f510 <appPut>
    be46:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblDbaErr);
    be48:	f107 0308 	add.w	r3, r7, #8
    be4c:	681b      	ldr	r3, [r3, #0]
    be4e:	2b00      	cmp	r3, #0
    be50:	f2c0 8241 	blt.w	c2d6 <PromptGPRS+0x6d6>
	}

	// Enter User Name
	// ***************
	memset(tcMask, 0, sizeof(tcMask));
    be54:	f507 7392 	add.w	r3, r7, #292	; 0x124
    be58:	4618      	mov	r0, r3
    be5a:	2100      	movs	r1, #0
    be5c:	f44f 7280 	mov.w	r2, #256	; 0x100
    be60:	f7fc ee64 	blx	8b2c <_init+0x5c>
	for (i=0; i<lenGprsUser; i++)
    be64:	1d3b      	adds	r3, r7, #4
    be66:	2200      	movs	r2, #0
    be68:	601a      	str	r2, [r3, #0]
    be6a:	e015      	b.n	be98 <PromptGPRS+0x298>
		strcat(tcMask, "/c");                                              // Accept any character
    be6c:	f507 7392 	add.w	r3, r7, #292	; 0x124
    be70:	4618      	mov	r0, r3
    be72:	f7fc eeb4 	blx	8bdc <_init+0x10c>
    be76:	4603      	mov	r3, r0
    be78:	f507 7292 	add.w	r2, r7, #292	; 0x124
    be7c:	18d2      	adds	r2, r2, r3
    be7e:	f649 23f4 	movw	r3, #39668	; 0x9af4
    be82:	f2c0 0301 	movt	r3, #1
    be86:	8819      	ldrh	r1, [r3, #0]
    be88:	789b      	ldrb	r3, [r3, #2]
    be8a:	8011      	strh	r1, [r2, #0]
    be8c:	7093      	strb	r3, [r2, #2]
	}

	// Enter User Name
	// ***************
	memset(tcMask, 0, sizeof(tcMask));
	for (i=0; i<lenGprsUser; i++)
    be8e:	1d3b      	adds	r3, r7, #4
    be90:	1d3a      	adds	r2, r7, #4
    be92:	6812      	ldr	r2, [r2, #0]
    be94:	3201      	adds	r2, #1
    be96:	601a      	str	r2, [r3, #0]
    be98:	1d3b      	adds	r3, r7, #4
    be9a:	681b      	ldr	r3, [r3, #0]
    be9c:	2b1d      	cmp	r3, #29
    be9e:	dde5      	ble.n	be6c <PromptGPRS+0x26c>
		strcat(tcMask, "/c");                                              // Accept any character
	iRet = appGet(appGprsUser, tcUserP, lenGprsUser+1);
    bea0:	f107 0408 	add.w	r4, r7, #8
    bea4:	f107 0390 	add.w	r3, r7, #144	; 0x90
    bea8:	200e      	movs	r0, #14
    beaa:	4619      	mov	r1, r3
    beac:	221f      	movs	r2, #31
    beae:	f003 fb95 	bl	f5dc <appGet>
    beb2:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblDbaErr);
    beb4:	f107 0308 	add.w	r3, r7, #8
    beb8:	681b      	ldr	r3, [r3, #0]
    beba:	2b00      	cmp	r3, #0
    bebc:	f2c0 820b 	blt.w	c2d6 <PromptGPRS+0x6d6>
	strcpy(tcUserN, tcUserP);
    bec0:	f107 0270 	add.w	r2, r7, #112	; 0x70
    bec4:	f107 0390 	add.w	r3, r7, #144	; 0x90
    bec8:	4610      	mov	r0, r2
    beca:	4619      	mov	r1, r3
    becc:	f7fc ee5a 	blx	8b84 <_init+0xb4>
	iRet = GL_Dialog_Text(gGoalGraphicLibInstance, "User Name", "Enter User Name :", tcMask, tcUserN, sizeof(tcUserN), GL_TIME_MINUTE);
    bed0:	f644 1388 	movw	r3, #18824	; 0x4988
    bed4:	f2c0 0302 	movt	r3, #2
    bed8:	681a      	ldr	r2, [r3, #0]
    beda:	f507 7392 	add.w	r3, r7, #292	; 0x124
    bede:	f107 0170 	add.w	r1, r7, #112	; 0x70
    bee2:	9100      	str	r1, [sp, #0]
    bee4:	211f      	movs	r1, #31
    bee6:	9101      	str	r1, [sp, #4]
    bee8:	f64e 2160 	movw	r1, #60000	; 0xea60
    beec:	9102      	str	r1, [sp, #8]
    beee:	4610      	mov	r0, r2
    bef0:	f649 3104 	movw	r1, #39684	; 0x9b04
    bef4:	f2c0 0101 	movt	r1, #1
    bef8:	f649 3210 	movw	r2, #39696	; 0x9b10
    befc:	f2c0 0201 	movt	r2, #1
    bf00:	f00c fb52 	bl	185a8 <GL_Dialog_Text>
    bf04:	4602      	mov	r2, r0
    bf06:	f107 0308 	add.w	r3, r7, #8
    bf0a:	601a      	str	r2, [r3, #0]
	CHECK((iRet!=GL_KEY_CANCEL) && (iRet!=GL_RESULT_INACTIVITY), lblEnd);  // Exit on cancel/timeout
    bf0c:	f107 0308 	add.w	r3, r7, #8
    bf10:	681a      	ldr	r2, [r3, #0]
    bf12:	f64f 0351 	movw	r3, #63569	; 0xf851
    bf16:	429a      	cmp	r2, r3
    bf18:	f000 8206 	beq.w	c328 <PromptGPRS+0x728>
    bf1c:	f107 0308 	add.w	r3, r7, #8
    bf20:	681a      	ldr	r2, [r3, #0]
    bf22:	f64f 0380 	movw	r3, #63616	; 0xf880
    bf26:	429a      	cmp	r2, r3
    bf28:	f000 81fe 	beq.w	c328 <PromptGPRS+0x728>
	if (strcmp(tcUserN, tcUserP) != 0)
    bf2c:	f107 0270 	add.w	r2, r7, #112	; 0x70
    bf30:	f107 0390 	add.w	r3, r7, #144	; 0x90
    bf34:	4610      	mov	r0, r2
    bf36:	4619      	mov	r1, r3
    bf38:	f7fc ee7c 	blx	8c34 <_init+0x164>
    bf3c:	4603      	mov	r3, r0
    bf3e:	2b00      	cmp	r3, #0
    bf40:	d00f      	beq.n	bf62 <PromptGPRS+0x362>
	{
		iRet = appPut(appGprsUser, tcUserN, lenGprsUser);                  // Save new user name
    bf42:	f107 0408 	add.w	r4, r7, #8
    bf46:	f107 0370 	add.w	r3, r7, #112	; 0x70
    bf4a:	200e      	movs	r0, #14
    bf4c:	4619      	mov	r1, r3
    bf4e:	221e      	movs	r2, #30
    bf50:	f003 fade 	bl	f510 <appPut>
    bf54:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblDbaErr);
    bf56:	f107 0308 	add.w	r3, r7, #8
    bf5a:	681b      	ldr	r3, [r3, #0]
    bf5c:	2b00      	cmp	r3, #0
    bf5e:	f2c0 81ba 	blt.w	c2d6 <PromptGPRS+0x6d6>
	}

	// Enter Password
	// **************
	memset(tcMask, 0, sizeof(tcMask));
    bf62:	f507 7392 	add.w	r3, r7, #292	; 0x124
    bf66:	4618      	mov	r0, r3
    bf68:	2100      	movs	r1, #0
    bf6a:	f44f 7280 	mov.w	r2, #256	; 0x100
    bf6e:	f7fc edde 	blx	8b2c <_init+0x5c>
	for (i=0; i<lenGprsPass; i++)
    bf72:	1d3b      	adds	r3, r7, #4
    bf74:	2200      	movs	r2, #0
    bf76:	601a      	str	r2, [r3, #0]
    bf78:	e015      	b.n	bfa6 <PromptGPRS+0x3a6>
		strcat(tcMask, "/c");                                              // Accept any character
    bf7a:	f507 7392 	add.w	r3, r7, #292	; 0x124
    bf7e:	4618      	mov	r0, r3
    bf80:	f7fc ee2c 	blx	8bdc <_init+0x10c>
    bf84:	4603      	mov	r3, r0
    bf86:	f507 7292 	add.w	r2, r7, #292	; 0x124
    bf8a:	18d2      	adds	r2, r2, r3
    bf8c:	f649 23f4 	movw	r3, #39668	; 0x9af4
    bf90:	f2c0 0301 	movt	r3, #1
    bf94:	8819      	ldrh	r1, [r3, #0]
    bf96:	789b      	ldrb	r3, [r3, #2]
    bf98:	8011      	strh	r1, [r2, #0]
    bf9a:	7093      	strb	r3, [r2, #2]
	}

	// Enter Password
	// **************
	memset(tcMask, 0, sizeof(tcMask));
	for (i=0; i<lenGprsPass; i++)
    bf9c:	1d3b      	adds	r3, r7, #4
    bf9e:	1d3a      	adds	r2, r7, #4
    bfa0:	6812      	ldr	r2, [r2, #0]
    bfa2:	3201      	adds	r2, #1
    bfa4:	601a      	str	r2, [r3, #0]
    bfa6:	1d3b      	adds	r3, r7, #4
    bfa8:	681b      	ldr	r3, [r3, #0]
    bfaa:	2b1d      	cmp	r3, #29
    bfac:	dde5      	ble.n	bf7a <PromptGPRS+0x37a>
		strcat(tcMask, "/c");                                              // Accept any character
	iRet = appGet(appGprsPass, tcPassP, lenGprsPass+1);
    bfae:	f107 0408 	add.w	r4, r7, #8
    bfb2:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
    bfb6:	200f      	movs	r0, #15
    bfb8:	4619      	mov	r1, r3
    bfba:	221f      	movs	r2, #31
    bfbc:	f003 fb0e 	bl	f5dc <appGet>
    bfc0:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblDbaErr);
    bfc2:	f107 0308 	add.w	r3, r7, #8
    bfc6:	681b      	ldr	r3, [r3, #0]
    bfc8:	2b00      	cmp	r3, #0
    bfca:	f2c0 8184 	blt.w	c2d6 <PromptGPRS+0x6d6>
	strcpy(tcPassN, tcPassP);
    bfce:	f107 02b0 	add.w	r2, r7, #176	; 0xb0
    bfd2:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
    bfd6:	4610      	mov	r0, r2
    bfd8:	4619      	mov	r1, r3
    bfda:	f7fc edd4 	blx	8b84 <_init+0xb4>
	iRet = GL_Dialog_Password(gGoalGraphicLibInstance, "Password", "Enter Password :", tcMask, tcPassN, sizeof(tcPassN), GL_TIME_MINUTE);
    bfde:	f644 1388 	movw	r3, #18824	; 0x4988
    bfe2:	f2c0 0302 	movt	r3, #2
    bfe6:	681a      	ldr	r2, [r3, #0]
    bfe8:	f507 7392 	add.w	r3, r7, #292	; 0x124
    bfec:	f107 01b0 	add.w	r1, r7, #176	; 0xb0
    bff0:	9100      	str	r1, [sp, #0]
    bff2:	211f      	movs	r1, #31
    bff4:	9101      	str	r1, [sp, #4]
    bff6:	f64e 2160 	movw	r1, #60000	; 0xea60
    bffa:	9102      	str	r1, [sp, #8]
    bffc:	4610      	mov	r0, r2
    bffe:	f649 3124 	movw	r1, #39716	; 0x9b24
    c002:	f2c0 0101 	movt	r1, #1
    c006:	f649 3230 	movw	r2, #39728	; 0x9b30
    c00a:	f2c0 0201 	movt	r2, #1
    c00e:	f00c faa7 	bl	18560 <GL_Dialog_Password>
    c012:	4602      	mov	r2, r0
    c014:	f107 0308 	add.w	r3, r7, #8
    c018:	601a      	str	r2, [r3, #0]
	CHECK((iRet!=GL_KEY_CANCEL) && (iRet!=GL_RESULT_INACTIVITY), lblEnd);  // Exit on cancel/timeout
    c01a:	f107 0308 	add.w	r3, r7, #8
    c01e:	681a      	ldr	r2, [r3, #0]
    c020:	f64f 0351 	movw	r3, #63569	; 0xf851
    c024:	429a      	cmp	r2, r3
    c026:	f000 817f 	beq.w	c328 <PromptGPRS+0x728>
    c02a:	f107 0308 	add.w	r3, r7, #8
    c02e:	681a      	ldr	r2, [r3, #0]
    c030:	f64f 0380 	movw	r3, #63616	; 0xf880
    c034:	429a      	cmp	r2, r3
    c036:	f000 8177 	beq.w	c328 <PromptGPRS+0x728>
	if (strcmp(tcPassN, tcPassP) != 0)
    c03a:	f107 02b0 	add.w	r2, r7, #176	; 0xb0
    c03e:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
    c042:	4610      	mov	r0, r2
    c044:	4619      	mov	r1, r3
    c046:	f7fc edf6 	blx	8c34 <_init+0x164>
    c04a:	4603      	mov	r3, r0
    c04c:	2b00      	cmp	r3, #0
    c04e:	d00f      	beq.n	c070 <PromptGPRS+0x470>
	{
		iRet = appPut(appGprsPass, tcPassN, lenGprsPass);                  // Save new password
    c050:	f107 0408 	add.w	r4, r7, #8
    c054:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
    c058:	200f      	movs	r0, #15
    c05a:	4619      	mov	r1, r3
    c05c:	221e      	movs	r2, #30
    c05e:	f003 fa57 	bl	f510 <appPut>
    c062:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblDbaErr);
    c064:	f107 0308 	add.w	r3, r7, #8
    c068:	681b      	ldr	r3, [r3, #0]
    c06a:	2b00      	cmp	r3, #0
    c06c:	f2c0 8133 	blt.w	c2d6 <PromptGPRS+0x6d6>
	}

	// Enter Remote IP address
	// ***********************
	iRet = appGet(appGprsIpRemote, tcIpAddressP, lenGprsIpRemote+1);
    c070:	f107 0408 	add.w	r4, r7, #8
    c074:	f507 6385 	add.w	r3, r7, #1064	; 0x428
    c078:	2010      	movs	r0, #16
    c07a:	4619      	mov	r1, r3
    c07c:	f240 4201 	movw	r2, #1025	; 0x401
    c080:	f003 faac 	bl	f5dc <appGet>
    c084:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblDbaErr);
    c086:	f107 0308 	add.w	r3, r7, #8
    c08a:	681b      	ldr	r3, [r3, #0]
    c08c:	2b00      	cmp	r3, #0
    c08e:	f2c0 8122 	blt.w	c2d6 <PromptGPRS+0x6d6>
		strcpy(tcIpAddressN, tcIpAddressP);
    c092:	f507 7209 	add.w	r2, r7, #548	; 0x224
    c096:	f507 6385 	add.w	r3, r7, #1064	; 0x428
    c09a:	4610      	mov	r0, r2
    c09c:	4619      	mov	r1, r3
    c09e:	f7fc ed72 	blx	8b84 <_init+0xb4>
	//	CHECK(uiIp>=0, lblKO);
	//	iRet = GL_Dialog_Ip(gGoalGraphicLibInstance, "Remote Ip Address", "Enter Ip Address :", (T_GL_HIP)&uiIp, GL_TIME_MINUTE);
	//	CHECK((iRet!=GL_KEY_CANCEL) && (iRet!=GL_RESULT_INACTIVITY), lblEnd);  // Exit on cancel/timeout
	//	strcpy(tcIpAddressN, UintToIp(uiIp));

	memset(tcMask, 0, sizeof(tcMask));
    c0a2:	f507 7392 	add.w	r3, r7, #292	; 0x124
    c0a6:	4618      	mov	r0, r3
    c0a8:	2100      	movs	r1, #0
    c0aa:	f44f 7280 	mov.w	r2, #256	; 0x100
    c0ae:	f7fc ed3e 	blx	8b2c <_init+0x5c>
	for (i=0; i<100; i++)
    c0b2:	1d3b      	adds	r3, r7, #4
    c0b4:	2200      	movs	r2, #0
    c0b6:	601a      	str	r2, [r3, #0]
    c0b8:	e015      	b.n	c0e6 <PromptGPRS+0x4e6>
		strcat(tcMask, "/c");
    c0ba:	f507 7392 	add.w	r3, r7, #292	; 0x124
    c0be:	4618      	mov	r0, r3
    c0c0:	f7fc ed8c 	blx	8bdc <_init+0x10c>
    c0c4:	4603      	mov	r3, r0
    c0c6:	f507 7292 	add.w	r2, r7, #292	; 0x124
    c0ca:	18d2      	adds	r2, r2, r3
    c0cc:	f649 23f4 	movw	r3, #39668	; 0x9af4
    c0d0:	f2c0 0301 	movt	r3, #1
    c0d4:	8819      	ldrh	r1, [r3, #0]
    c0d6:	789b      	ldrb	r3, [r3, #2]
    c0d8:	8011      	strh	r1, [r2, #0]
    c0da:	7093      	strb	r3, [r2, #2]
	//	iRet = GL_Dialog_Ip(gGoalGraphicLibInstance, "Remote Ip Address", "Enter Ip Address :", (T_GL_HIP)&uiIp, GL_TIME_MINUTE);
	//	CHECK((iRet!=GL_KEY_CANCEL) && (iRet!=GL_RESULT_INACTIVITY), lblEnd);  // Exit on cancel/timeout
	//	strcpy(tcIpAddressN, UintToIp(uiIp));

	memset(tcMask, 0, sizeof(tcMask));
	for (i=0; i<100; i++)
    c0dc:	1d3b      	adds	r3, r7, #4
    c0de:	1d3a      	adds	r2, r7, #4
    c0e0:	6812      	ldr	r2, [r2, #0]
    c0e2:	3201      	adds	r2, #1
    c0e4:	601a      	str	r2, [r3, #0]
    c0e6:	1d3b      	adds	r3, r7, #4
    c0e8:	681b      	ldr	r3, [r3, #0]
    c0ea:	2b63      	cmp	r3, #99	; 0x63
    c0ec:	dde5      	ble.n	c0ba <PromptGPRS+0x4ba>
		strcat(tcMask, "/c");

	iRet = GL_Dialog_VirtualKeyboard(gGoalGraphicLibInstance, "Remote Address", "Enter Ip/domain Address :", tcMask, tcIpAddressN, sizeof(tcIpAddressN),  GL_TIME_MINUTE);
    c0ee:	f644 1388 	movw	r3, #18824	; 0x4988
    c0f2:	f2c0 0302 	movt	r3, #2
    c0f6:	681a      	ldr	r2, [r3, #0]
    c0f8:	f507 7392 	add.w	r3, r7, #292	; 0x124
    c0fc:	f507 7109 	add.w	r1, r7, #548	; 0x224
    c100:	9100      	str	r1, [sp, #0]
    c102:	f240 2101 	movw	r1, #513	; 0x201
    c106:	9101      	str	r1, [sp, #4]
    c108:	f64e 2160 	movw	r1, #60000	; 0xea60
    c10c:	9102      	str	r1, [sp, #8]
    c10e:	4610      	mov	r0, r2
    c110:	f649 3144 	movw	r1, #39748	; 0x9b44
    c114:	f2c0 0101 	movt	r1, #1
    c118:	f649 3254 	movw	r2, #39764	; 0x9b54
    c11c:	f2c0 0201 	movt	r2, #1
    c120:	f00c fa54 	bl	185cc <GL_Dialog_VirtualKeyboard>
    c124:	4602      	mov	r2, r0
    c126:	f107 0308 	add.w	r3, r7, #8
    c12a:	601a      	str	r2, [r3, #0]
	if (IsColorDisplay())                                                  // Color terminal?
    c12c:	f00b fb4a 	bl	177c4 <IsColorDisplay>
    c130:	4603      	mov	r3, r0
    c132:	2b00      	cmp	r3, #0
    c134:	d01a      	beq.n	c16c <PromptGPRS+0x56c>
		{                                                                      // Yes
			DisplayLeds(_ON_);                                                 // Enable Leds
    c136:	2001      	movs	r0, #1
    c138:	f00b ffc8 	bl	180cc <DisplayLeds>
			DisplayHeader(iHeader);                                            // Enable Header
    c13c:	f107 0314 	add.w	r3, r7, #20
    c140:	6818      	ldr	r0, [r3, #0]
    c142:	f00b ff95 	bl	18070 <DisplayHeader>
			if(!GL_GraphicLib_IsTouchPresent(gGoalGraphicLibInstance))                           // Check if it is a touch screen
    c146:	f644 1388 	movw	r3, #18824	; 0x4988
    c14a:	f2c0 0302 	movt	r3, #2
    c14e:	681b      	ldr	r3, [r3, #0]
    c150:	4618      	mov	r0, r3
    c152:	f00c fb65 	bl	18820 <GL_GraphicLib_IsTouchPresent>
    c156:	4603      	mov	r3, r0
    c158:	f083 0301 	eor.w	r3, r3, #1
    c15c:	b2db      	uxtb	r3, r3
    c15e:	2b00      	cmp	r3, #0
    c160:	d004      	beq.n	c16c <PromptGPRS+0x56c>
				DisplayFooter(iFooter);                                        // No, restore Footer
    c162:	f107 0318 	add.w	r3, r7, #24
    c166:	6818      	ldr	r0, [r3, #0]
    c168:	f00b ff52 	bl	18010 <DisplayFooter>
		}
	CHECK((iRet!=GL_KEY_CANCEL) && (iRet!=GL_RESULT_INACTIVITY), lblEnd);  // Exit on cancel/timeout
    c16c:	f107 0308 	add.w	r3, r7, #8
    c170:	681a      	ldr	r2, [r3, #0]
    c172:	f64f 0351 	movw	r3, #63569	; 0xf851
    c176:	429a      	cmp	r2, r3
    c178:	f000 80d6 	beq.w	c328 <PromptGPRS+0x728>
    c17c:	f107 0308 	add.w	r3, r7, #8
    c180:	681a      	ldr	r2, [r3, #0]
    c182:	f64f 0380 	movw	r3, #63616	; 0xf880
    c186:	429a      	cmp	r2, r3
    c188:	f000 80ce 	beq.w	c328 <PromptGPRS+0x728>

	if (strcmp(tcIpAddressN, tcIpAddressP) != 0) {
    c18c:	f507 7209 	add.w	r2, r7, #548	; 0x224
    c190:	f507 6385 	add.w	r3, r7, #1064	; 0x428
    c194:	4610      	mov	r0, r2
    c196:	4619      	mov	r1, r3
    c198:	f7fc ed4c 	blx	8c34 <_init+0x164>
    c19c:	4603      	mov	r3, r0
    c19e:	2b00      	cmp	r3, #0
    c1a0:	d016      	beq.n	c1d0 <PromptGPRS+0x5d0>
		iRet = appPut(appGprsIpRemote, tcIpAddressN, strlen(tcIpAddressN));     // Save new Ip address
    c1a2:	f507 7309 	add.w	r3, r7, #548	; 0x224
    c1a6:	4618      	mov	r0, r3
    c1a8:	f7fc ed18 	blx	8bdc <_init+0x10c>
    c1ac:	4603      	mov	r3, r0
    c1ae:	b29b      	uxth	r3, r3
    c1b0:	f107 0408 	add.w	r4, r7, #8
    c1b4:	f507 7209 	add.w	r2, r7, #548	; 0x224
    c1b8:	2010      	movs	r0, #16
    c1ba:	4611      	mov	r1, r2
    c1bc:	461a      	mov	r2, r3
    c1be:	f003 f9a7 	bl	f510 <appPut>
    c1c2:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblDbaErr);
    c1c4:	f107 0308 	add.w	r3, r7, #8
    c1c8:	681b      	ldr	r3, [r3, #0]
    c1ca:	2b00      	cmp	r3, #0
    c1cc:	f2c0 8083 	blt.w	c2d6 <PromptGPRS+0x6d6>
	}

	// Enter Port number
	// *****************
	memset(tcMask, 0, sizeof(tcMask));
    c1d0:	f507 7392 	add.w	r3, r7, #292	; 0x124
    c1d4:	4618      	mov	r0, r3
    c1d6:	2100      	movs	r1, #0
    c1d8:	f44f 7280 	mov.w	r2, #256	; 0x100
    c1dc:	f7fc eca6 	blx	8b2c <_init+0x5c>
	for (i=0; i<lenGprsPort; i++)
    c1e0:	1d3b      	adds	r3, r7, #4
    c1e2:	2200      	movs	r2, #0
    c1e4:	601a      	str	r2, [r3, #0]
    c1e6:	e015      	b.n	c214 <PromptGPRS+0x614>
		strcat(tcMask, "/d");                                              // Accept only decimal character
    c1e8:	f507 7392 	add.w	r3, r7, #292	; 0x124
    c1ec:	4618      	mov	r0, r3
    c1ee:	f7fc ecf6 	blx	8bdc <_init+0x10c>
    c1f2:	4603      	mov	r3, r0
    c1f4:	f507 7292 	add.w	r2, r7, #292	; 0x124
    c1f8:	18d2      	adds	r2, r2, r3
    c1fa:	f649 13c0 	movw	r3, #39360	; 0x99c0
    c1fe:	f2c0 0301 	movt	r3, #1
    c202:	8819      	ldrh	r1, [r3, #0]
    c204:	789b      	ldrb	r3, [r3, #2]
    c206:	8011      	strh	r1, [r2, #0]
    c208:	7093      	strb	r3, [r2, #2]
	}

	// Enter Port number
	// *****************
	memset(tcMask, 0, sizeof(tcMask));
	for (i=0; i<lenGprsPort; i++)
    c20a:	1d3b      	adds	r3, r7, #4
    c20c:	1d3a      	adds	r2, r7, #4
    c20e:	6812      	ldr	r2, [r2, #0]
    c210:	3201      	adds	r2, #1
    c212:	601a      	str	r2, [r3, #0]
    c214:	1d3b      	adds	r3, r7, #4
    c216:	681b      	ldr	r3, [r3, #0]
    c218:	2b04      	cmp	r3, #4
    c21a:	dde5      	ble.n	c1e8 <PromptGPRS+0x5e8>
		strcat(tcMask, "/d");                                              // Accept only decimal character
	iRet = appGet(appGprsPort, tcPortP, lenGprsPort+1);
    c21c:	f107 0408 	add.w	r4, r7, #8
    c220:	f107 0328 	add.w	r3, r7, #40	; 0x28
    c224:	2011      	movs	r0, #17
    c226:	4619      	mov	r1, r3
    c228:	2206      	movs	r2, #6
    c22a:	f003 f9d7 	bl	f5dc <appGet>
    c22e:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblDbaErr);
    c230:	f107 0308 	add.w	r3, r7, #8
    c234:	681b      	ldr	r3, [r3, #0]
    c236:	2b00      	cmp	r3, #0
    c238:	db4d      	blt.n	c2d6 <PromptGPRS+0x6d6>
	strcpy(tcPortN, tcPortP);
    c23a:	f107 0220 	add.w	r2, r7, #32
    c23e:	f107 0328 	add.w	r3, r7, #40	; 0x28
    c242:	4610      	mov	r0, r2
    c244:	4619      	mov	r1, r3
    c246:	f7fc ec9e 	blx	8b84 <_init+0xb4>
	iRet = GL_Dialog_Text(gGoalGraphicLibInstance, "Port Number", "Enter Port# :", tcMask, tcPortN, sizeof(tcPortN), GL_TIME_MINUTE);
    c24a:	f644 1388 	movw	r3, #18824	; 0x4988
    c24e:	f2c0 0302 	movt	r3, #2
    c252:	681a      	ldr	r2, [r3, #0]
    c254:	f507 7392 	add.w	r3, r7, #292	; 0x124
    c258:	f107 0120 	add.w	r1, r7, #32
    c25c:	9100      	str	r1, [sp, #0]
    c25e:	2106      	movs	r1, #6
    c260:	9101      	str	r1, [sp, #4]
    c262:	f64e 2160 	movw	r1, #60000	; 0xea60
    c266:	9102      	str	r1, [sp, #8]
    c268:	4610      	mov	r0, r2
    c26a:	f649 3170 	movw	r1, #39792	; 0x9b70
    c26e:	f2c0 0101 	movt	r1, #1
    c272:	f649 327c 	movw	r2, #39804	; 0x9b7c
    c276:	f2c0 0201 	movt	r2, #1
    c27a:	f00c f995 	bl	185a8 <GL_Dialog_Text>
    c27e:	4602      	mov	r2, r0
    c280:	f107 0308 	add.w	r3, r7, #8
    c284:	601a      	str	r2, [r3, #0]
	CHECK((iRet!=GL_KEY_CANCEL) && (iRet!=GL_RESULT_INACTIVITY), lblEnd);  // Exit on cancel/timeout
    c286:	f107 0308 	add.w	r3, r7, #8
    c28a:	681a      	ldr	r2, [r3, #0]
    c28c:	f64f 0351 	movw	r3, #63569	; 0xf851
    c290:	429a      	cmp	r2, r3
    c292:	d049      	beq.n	c328 <PromptGPRS+0x728>
    c294:	f107 0308 	add.w	r3, r7, #8
    c298:	681a      	ldr	r2, [r3, #0]
    c29a:	f64f 0380 	movw	r3, #63616	; 0xf880
    c29e:	429a      	cmp	r2, r3
    c2a0:	d042      	beq.n	c328 <PromptGPRS+0x728>
	if (strcmp(tcPortN, tcPortP) != 0)
    c2a2:	f107 0220 	add.w	r2, r7, #32
    c2a6:	f107 0328 	add.w	r3, r7, #40	; 0x28
    c2aa:	4610      	mov	r0, r2
    c2ac:	4619      	mov	r1, r3
    c2ae:	f7fc ecc2 	blx	8c34 <_init+0x164>
    c2b2:	4603      	mov	r3, r0
    c2b4:	2b00      	cmp	r3, #0
    c2b6:	d036      	beq.n	c326 <PromptGPRS+0x726>
	{
		iRet = appPut(appGprsPort, tcPortN, lenGprsPort);                  // Save new Port number
    c2b8:	f107 0408 	add.w	r4, r7, #8
    c2bc:	f107 0320 	add.w	r3, r7, #32
    c2c0:	2011      	movs	r0, #17
    c2c2:	4619      	mov	r1, r3
    c2c4:	2205      	movs	r2, #5
    c2c6:	f003 f923 	bl	f510 <appPut>
    c2ca:	6020      	str	r0, [r4, #0]
		CHECK(iRet>=0, lblDbaErr);
    c2cc:	f107 0308 	add.w	r3, r7, #8
    c2d0:	681b      	ldr	r3, [r3, #0]
    c2d2:	2b00      	cmp	r3, #0
    c2d4:	da27      	bge.n	c326 <PromptGPRS+0x726>
	// ****************
//	lblKO:                                                                     // None-classified low level error
//	GL_Dialog_Message(gGoalGraphicLibInstance, NULL, "Processing Error", GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
//	goto lblEnd;
	lblDbaErr:                                                                 // Data base error
	Telium_Sprintf(tcDisplay, "%s\n%s", FMG_ErrorMsg(iRet), "Software Reset Needed");
    c2d6:	f107 0308 	add.w	r3, r7, #8
    c2da:	6818      	ldr	r0, [r3, #0]
    c2dc:	f003 ff16 	bl	1010c <FMG_ErrorMsg>
    c2e0:	4603      	mov	r3, r0
    c2e2:	f107 02f0 	add.w	r2, r7, #240	; 0xf0
    c2e6:	4610      	mov	r0, r2
    c2e8:	f649 318c 	movw	r1, #39820	; 0x9b8c
    c2ec:	f2c0 0101 	movt	r1, #1
    c2f0:	461a      	mov	r2, r3
    c2f2:	f649 3394 	movw	r3, #39828	; 0x9b94
    c2f6:	f2c0 0301 	movt	r3, #1
    c2fa:	f00b fb27 	bl	1794c <Telium_Sprintf>
	GL_Dialog_Message(gGoalGraphicLibInstance, NULL, tcDisplay, GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
    c2fe:	f644 1388 	movw	r3, #18824	; 0x4988
    c302:	f2c0 0302 	movt	r3, #2
    c306:	681a      	ldr	r2, [r3, #0]
    c308:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
    c30c:	2101      	movs	r1, #1
    c30e:	9100      	str	r1, [sp, #0]
    c310:	f241 3188 	movw	r1, #5000	; 0x1388
    c314:	9101      	str	r1, [sp, #4]
    c316:	4610      	mov	r0, r2
    c318:	2100      	movs	r1, #0
    c31a:	461a      	mov	r2, r3
    c31c:	2304      	movs	r3, #4
    c31e:	f00c f90d 	bl	1853c <GL_Dialog_Message>
	goto lblEnd;
    c322:	bf00      	nop
    c324:	e000      	b.n	c328 <PromptGPRS+0x728>
	{
		iRet = appPut(appGprsPort, tcPortN, lenGprsPort);                  // Save new Port number
		CHECK(iRet>=0, lblDbaErr);
	}

	goto lblEnd;
    c326:	bf00      	nop
	Telium_Sprintf(tcDisplay, "%s\n%s", FMG_ErrorMsg(iRet), "Software Reset Needed");
	GL_Dialog_Message(gGoalGraphicLibInstance, NULL, tcDisplay, GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
	goto lblEnd;
	lblEnd:
	return;
}
    c328:	f644 1380 	movw	r3, #18816	; 0x4980
    c32c:	f2c0 0302 	movt	r3, #2
    c330:	f8d7 282c 	ldr.w	r2, [r7, #2092]	; 0x82c
    c334:	681b      	ldr	r3, [r3, #0]
    c336:	429a      	cmp	r2, r3
    c338:	d001      	beq.n	c33e <PromptGPRS+0x73e>
    c33a:	f7fc fdd9 	bl	8ef0 <__stack_chk_fail>
    c33e:	f107 0734 	add.w	r7, r7, #52	; 0x34
    c342:	f507 6700 	add.w	r7, r7, #2048	; 0x800
    c346:	46bd      	mov	sp, r7
    c348:	bd90      	pop	{r4, r7, pc}
    c34a:	bf00      	nop

0000c34c <ComGPRS>:
//  This function has no parameters.
//  This function has no return value
//****************************************************************************

void ComGPRS(void)
{
    c34c:	b5f0      	push	{r4, r5, r6, r7, lr}
    c34e:	f6ad 1d74 	subw	sp, sp, #2420	; 0x974
    c352:	af04      	add	r7, sp, #16
    c354:	f644 1380 	movw	r3, #18816	; 0x4980
    c358:	f2c0 0302 	movt	r3, #2
    c35c:	681b      	ldr	r3, [r3, #0]
    c35e:	f8c7 395c 	str.w	r3, [r7, #2396]	; 0x95c
	// Local variables
	// ***************
	T_GL_HWIDGET hScreen=NULL;    // Screen handle
    c362:	f107 0308 	add.w	r3, r7, #8
    c366:	2200      	movs	r2, #0
    c368:	601a      	str	r2, [r3, #0]
	T_GL_HWIDGET hDocument=NULL;  // Document handle
    c36a:	f107 030c 	add.w	r3, r7, #12
    c36e:	2200      	movs	r2, #0
    c370:	601a      	str	r2, [r3, #0]
	ST_PRN_LINE xLine;
	LL_HANDLE hGPRS=NULL;
    c372:	f107 0314 	add.w	r3, r7, #20
    c376:	2200      	movs	r2, #0
    c378:	601a      	str	r2, [r3, #0]
	char tcPort[lenGprsPort+1];
	char tcSnd[MAX_SND+1];
	char tcRsp[MAX_RSP+1];
	char tcDisplay[50+1];
	byte p;
	int iRet=0, iStatus=0;
    c37a:	f107 0318 	add.w	r3, r7, #24
    c37e:	2200      	movs	r2, #0
    c380:	601a      	str	r2, [r3, #0]
    c382:	f107 0310 	add.w	r3, r7, #16
    c386:	2200      	movs	r2, #0
    c388:	601a      	str	r2, [r3, #0]

	hScreen = GoalCreateScreen(gGoalGraphicLibInstance, txGPRS, NUMBER_OF_LINES(txGPRS), GL_ENCODING_UTF8);
    c38a:	f644 1388 	movw	r3, #18824	; 0x4988
    c38e:	f2c0 0302 	movt	r3, #2
    c392:	681b      	ldr	r3, [r3, #0]
    c394:	4618      	mov	r0, r3
    c396:	f249 5124 	movw	r1, #38180	; 0x9524
    c39a:	f2c0 0101 	movt	r1, #1
    c39e:	2205      	movs	r2, #5
    c3a0:	2300      	movs	r3, #0
    c3a2:	f000 fe35 	bl	d010 <GoalCreateScreen>
    c3a6:	4602      	mov	r2, r0
    c3a8:	f107 0308 	add.w	r3, r7, #8
    c3ac:	601a      	str	r2, [r3, #0]
	CHECK(hScreen!=NULL, lblKO);                                    // Create screen and clear it
    c3ae:	f107 0308 	add.w	r3, r7, #8
    c3b2:	681b      	ldr	r3, [r3, #0]
    c3b4:	2b00      	cmp	r3, #0
    c3b6:	f000 8473 	beq.w	cca0 <ComGPRS+0x954>
	iRet = GoalClrScreen(hScreen, GL_COLOR_BLACK, KEY_CANCEL, false);
    c3ba:	f107 0308 	add.w	r3, r7, #8
    c3be:	681b      	ldr	r3, [r3, #0]
    c3c0:	f107 0418 	add.w	r4, r7, #24
    c3c4:	4618      	mov	r0, r3
    c3c6:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    c3ca:	2202      	movs	r2, #2
    c3cc:	2300      	movs	r3, #0
    c3ce:	f000 ffbd 	bl	d34c <GoalClrScreen>
    c3d2:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    c3d4:	f107 0318 	add.w	r3, r7, #24
    c3d8:	681b      	ldr	r3, [r3, #0]
    c3da:	2b00      	cmp	r3, #0
    c3dc:	f2c0 8460 	blt.w	cca0 <ComGPRS+0x954>

	// Attachment to the GPRS network in progress
	// ******************************************
	iRet = GoalDspLine(hScreen, 0, "1-comStart...", &txGPRS[0], 0, true);
    c3e0:	f107 0308 	add.w	r3, r7, #8
    c3e4:	681b      	ldr	r3, [r3, #0]
    c3e6:	f107 0418 	add.w	r4, r7, #24
    c3ea:	2200      	movs	r2, #0
    c3ec:	9200      	str	r2, [sp, #0]
    c3ee:	2201      	movs	r2, #1
    c3f0:	9201      	str	r2, [sp, #4]
    c3f2:	4618      	mov	r0, r3
    c3f4:	2100      	movs	r1, #0
    c3f6:	f649 12dc 	movw	r2, #39388	; 0x99dc
    c3fa:	f2c0 0201 	movt	r2, #1
    c3fe:	f249 5324 	movw	r3, #38180	; 0x9524
    c402:	f2c0 0301 	movt	r3, #1
    c406:	f001 f8bb 	bl	d580 <GoalDspLine>
    c40a:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    c40c:	f107 0318 	add.w	r3, r7, #24
    c410:	681b      	ldr	r3, [r3, #0]
    c412:	2b00      	cmp	r3, #0
    c414:	f2c0 8444 	blt.w	cca0 <ComGPRS+0x954>
	pcStr = tcStr;                                                  // Build param string
    c418:	f107 031c 	add.w	r3, r7, #28
    c41c:	f107 02cc 	add.w	r2, r7, #204	; 0xcc
    c420:	601a      	str	r2, [r3, #0]
	iRet = appGet(appGprsApn, pcStr, lenGprsApn+1);                 // Retrieve apn
    c422:	f107 0418 	add.w	r4, r7, #24
    c426:	f107 031c 	add.w	r3, r7, #28
    c42a:	200d      	movs	r0, #13
    c42c:	6819      	ldr	r1, [r3, #0]
    c42e:	221f      	movs	r2, #31
    c430:	f003 f8d4 	bl	f5dc <appGet>
    c434:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblDbaErr);
    c436:	f107 0318 	add.w	r3, r7, #24
    c43a:	681b      	ldr	r3, [r3, #0]
    c43c:	2b00      	cmp	r3, #0
    c43e:	f2c0 84c1 	blt.w	cdc4 <ComGPRS+0xa78>
	pcStr += strlen(pcStr);
    c442:	f107 031c 	add.w	r3, r7, #28
    c446:	6818      	ldr	r0, [r3, #0]
    c448:	f7fc ebc8 	blx	8bdc <_init+0x10c>
    c44c:	4602      	mov	r2, r0
    c44e:	f107 031c 	add.w	r3, r7, #28
    c452:	f107 011c 	add.w	r1, r7, #28
    c456:	6809      	ldr	r1, [r1, #0]
    c458:	188a      	adds	r2, r1, r2
    c45a:	601a      	str	r2, [r3, #0]
	*pcStr = '|'; pcStr++;
    c45c:	f107 031c 	add.w	r3, r7, #28
    c460:	681b      	ldr	r3, [r3, #0]
    c462:	227c      	movs	r2, #124	; 0x7c
    c464:	701a      	strb	r2, [r3, #0]
    c466:	f107 031c 	add.w	r3, r7, #28
    c46a:	f107 021c 	add.w	r2, r7, #28
    c46e:	6812      	ldr	r2, [r2, #0]
    c470:	3201      	adds	r2, #1
    c472:	601a      	str	r2, [r3, #0]
	iRet = appGet(appGprsUser, pcStr, lenGprsUser+1);               // Retrieve username
    c474:	f107 0418 	add.w	r4, r7, #24
    c478:	f107 031c 	add.w	r3, r7, #28
    c47c:	200e      	movs	r0, #14
    c47e:	6819      	ldr	r1, [r3, #0]
    c480:	221f      	movs	r2, #31
    c482:	f003 f8ab 	bl	f5dc <appGet>
    c486:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblDbaErr);
    c488:	f107 0318 	add.w	r3, r7, #24
    c48c:	681b      	ldr	r3, [r3, #0]
    c48e:	2b00      	cmp	r3, #0
    c490:	f2c0 8498 	blt.w	cdc4 <ComGPRS+0xa78>
	pcStr += strlen(pcStr);
    c494:	f107 031c 	add.w	r3, r7, #28
    c498:	6818      	ldr	r0, [r3, #0]
    c49a:	f7fc eba0 	blx	8bdc <_init+0x10c>
    c49e:	4602      	mov	r2, r0
    c4a0:	f107 031c 	add.w	r3, r7, #28
    c4a4:	f107 011c 	add.w	r1, r7, #28
    c4a8:	6809      	ldr	r1, [r1, #0]
    c4aa:	188a      	adds	r2, r1, r2
    c4ac:	601a      	str	r2, [r3, #0]
	*pcStr = '|'; pcStr++;
    c4ae:	f107 031c 	add.w	r3, r7, #28
    c4b2:	681b      	ldr	r3, [r3, #0]
    c4b4:	227c      	movs	r2, #124	; 0x7c
    c4b6:	701a      	strb	r2, [r3, #0]
    c4b8:	f107 031c 	add.w	r3, r7, #28
    c4bc:	f107 021c 	add.w	r2, r7, #28
    c4c0:	6812      	ldr	r2, [r2, #0]
    c4c2:	3201      	adds	r2, #1
    c4c4:	601a      	str	r2, [r3, #0]
	iRet = appGet(appGprsPass, pcStr, lenGprsPass+1);               // Retrieve password
    c4c6:	f107 0418 	add.w	r4, r7, #24
    c4ca:	f107 031c 	add.w	r3, r7, #28
    c4ce:	200f      	movs	r0, #15
    c4d0:	6819      	ldr	r1, [r3, #0]
    c4d2:	221f      	movs	r2, #31
    c4d4:	f003 f882 	bl	f5dc <appGet>
    c4d8:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblDbaErr);
    c4da:	f107 0318 	add.w	r3, r7, #24
    c4de:	681b      	ldr	r3, [r3, #0]
    c4e0:	2b00      	cmp	r3, #0
    c4e2:	f2c0 846f 	blt.w	cdc4 <ComGPRS+0xa78>
	pcStr += strlen(pcStr);
    c4e6:	f107 031c 	add.w	r3, r7, #28
    c4ea:	6818      	ldr	r0, [r3, #0]
    c4ec:	f7fc eb76 	blx	8bdc <_init+0x10c>
    c4f0:	4602      	mov	r2, r0
    c4f2:	f107 031c 	add.w	r3, r7, #28
    c4f6:	f107 011c 	add.w	r1, r7, #28
    c4fa:	6809      	ldr	r1, [r1, #0]
    c4fc:	188a      	adds	r2, r1, r2
    c4fe:	601a      	str	r2, [r3, #0]
	*pcStr = '|';
    c500:	f107 031c 	add.w	r3, r7, #28
    c504:	681b      	ldr	r3, [r3, #0]
    c506:	227c      	movs	r2, #124	; 0x7c
    c508:	701a      	strb	r2, [r3, #0]
	iRet = appGet(appGprsUser, tcUser, lenGprsUser+1);              // Retrieve username to show
    c50a:	f107 0418 	add.w	r4, r7, #24
    c50e:	f107 0378 	add.w	r3, r7, #120	; 0x78
    c512:	200e      	movs	r0, #14
    c514:	4619      	mov	r1, r3
    c516:	221f      	movs	r2, #31
    c518:	f003 f860 	bl	f5dc <appGet>
    c51c:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblDbaErr);
    c51e:	f107 0318 	add.w	r3, r7, #24
    c522:	681b      	ldr	r3, [r3, #0]
    c524:	2b00      	cmp	r3, #0
    c526:	f2c0 844d 	blt.w	cdc4 <ComGPRS+0xa78>
	iRet = GoalDspLine(hScreen, 1, tcUser, &txGPRS[1], 0, true);    // Show username
    c52a:	f107 0308 	add.w	r3, r7, #8
    c52e:	681a      	ldr	r2, [r3, #0]
    c530:	f107 0418 	add.w	r4, r7, #24
    c534:	f107 0378 	add.w	r3, r7, #120	; 0x78
    c538:	2100      	movs	r1, #0
    c53a:	9100      	str	r1, [sp, #0]
    c53c:	2101      	movs	r1, #1
    c53e:	9101      	str	r1, [sp, #4]
    c540:	4610      	mov	r0, r2
    c542:	2101      	movs	r1, #1
    c544:	461a      	mov	r2, r3
    c546:	4bcb      	ldr	r3, [pc, #812]	; (c874 <ComGPRS+0x528>)
    c548:	f001 f81a 	bl	d580 <GoalDspLine>
    c54c:	6020      	str	r0, [r4, #0]
	iRet = StartGPRS(hScreen, tcStr);                               // ** Start **
    c54e:	f107 0308 	add.w	r3, r7, #8
    c552:	681a      	ldr	r2, [r3, #0]
    c554:	f107 0418 	add.w	r4, r7, #24
    c558:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
    c55c:	4610      	mov	r0, r2
    c55e:	4619      	mov	r1, r3
    c560:	f7fe ffb8 	bl	b4d4 <StartGPRS>
    c564:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblComKO);
    c566:	f107 0318 	add.w	r3, r7, #24
    c56a:	681b      	ldr	r3, [r3, #0]
    c56c:	2b00      	cmp	r3, #0
    c56e:	f2c0 83ab 	blt.w	ccc8 <ComGPRS+0x97c>
	CHECK(iRet!=0, lblEnd);                                         // Exit on cancel/timeout
    c572:	f107 0318 	add.w	r3, r7, #24
    c576:	681b      	ldr	r3, [r3, #0]
    c578:	2b00      	cmp	r3, #0
    c57a:	f000 844b 	beq.w	ce14 <ComGPRS+0xac8>
	iRet = GoalDspLine(hScreen, 2, "1-comStart OK", &txGPRS[2], 0, true);
    c57e:	f107 0308 	add.w	r3, r7, #8
    c582:	681b      	ldr	r3, [r3, #0]
    c584:	f107 0418 	add.w	r4, r7, #24
    c588:	2200      	movs	r2, #0
    c58a:	9200      	str	r2, [sp, #0]
    c58c:	2201      	movs	r2, #1
    c58e:	9201      	str	r2, [sp, #4]
    c590:	4618      	mov	r0, r3
    c592:	2102      	movs	r1, #2
    c594:	f649 32ac 	movw	r2, #39852	; 0x9bac
    c598:	f2c0 0201 	movt	r2, #1
    c59c:	4bb6      	ldr	r3, [pc, #728]	; (c878 <ComGPRS+0x52c>)
    c59e:	f000 ffef 	bl	d580 <GoalDspLine>
    c5a2:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    c5a4:	f107 0318 	add.w	r3, r7, #24
    c5a8:	681b      	ldr	r3, [r3, #0]
    c5aa:	2b00      	cmp	r3, #0
    c5ac:	f2c0 8378 	blt.w	cca0 <ComGPRS+0x954>

	// Transmission through GPRS layer in progress
	// *******************************************
	memset(tcSnd, 0, sizeof(tcSnd));
    c5b0:	f507 73a8 	add.w	r3, r7, #336	; 0x150
    c5b4:	4618      	mov	r0, r3
    c5b6:	2100      	movs	r1, #0
    c5b8:	f240 2201 	movw	r2, #513	; 0x201
    c5bc:	f7fc eab6 	blx	8b2c <_init+0x5c>
	memset(tcRsp, 0, sizeof(tcRsp));
    c5c0:	f507 7355 	add.w	r3, r7, #852	; 0x354
    c5c4:	4618      	mov	r0, r3
    c5c6:	2100      	movs	r1, #0
    c5c8:	f240 2201 	movw	r2, #513	; 0x201
    c5cc:	f7fc eaae 	blx	8b2c <_init+0x5c>

	// Open GPRS layer
	// ===============
	iRet = GoalDspLine(hScreen, 3, "2-comOpen...", &txGPRS[3], 0, true);
    c5d0:	f107 0308 	add.w	r3, r7, #8
    c5d4:	681b      	ldr	r3, [r3, #0]
    c5d6:	f107 0418 	add.w	r4, r7, #24
    c5da:	2200      	movs	r2, #0
    c5dc:	9200      	str	r2, [sp, #0]
    c5de:	2201      	movs	r2, #1
    c5e0:	9201      	str	r2, [sp, #4]
    c5e2:	4618      	mov	r0, r3
    c5e4:	2103      	movs	r1, #3
    c5e6:	f649 32bc 	movw	r2, #39868	; 0x9bbc
    c5ea:	f2c0 0201 	movt	r2, #1
    c5ee:	4ba3      	ldr	r3, [pc, #652]	; (c87c <ComGPRS+0x530>)
    c5f0:	f000 ffc6 	bl	d580 <GoalDspLine>
    c5f4:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    c5f6:	f107 0318 	add.w	r3, r7, #24
    c5fa:	681b      	ldr	r3, [r3, #0]
    c5fc:	2b00      	cmp	r3, #0
    c5fe:	f2c0 834f 	blt.w	cca0 <ComGPRS+0x954>
	iRet = appGet(appGprsIpRemote, tcIpAddress, lenGprsIpRemote+1);   // Retrieve remote IP
    c602:	f107 0418 	add.w	r4, r7, #24
    c606:	f507 63ab 	add.w	r3, r7, #1368	; 0x558
    c60a:	2010      	movs	r0, #16
    c60c:	4619      	mov	r1, r3
    c60e:	f240 4201 	movw	r2, #1025	; 0x401
    c612:	f002 ffe3 	bl	f5dc <appGet>
    c616:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblDbaErr);
    c618:	f107 0318 	add.w	r3, r7, #24
    c61c:	681b      	ldr	r3, [r3, #0]
    c61e:	2b00      	cmp	r3, #0
    c620:	f2c0 83d0 	blt.w	cdc4 <ComGPRS+0xa78>
	iRet = GoalDspLine(hScreen, 4, tcIpAddress, &txGPRS[4], 0, true); // Show IP Address
    c624:	f107 0308 	add.w	r3, r7, #8
    c628:	681a      	ldr	r2, [r3, #0]
    c62a:	f107 0418 	add.w	r4, r7, #24
    c62e:	f507 63ab 	add.w	r3, r7, #1368	; 0x558
    c632:	2100      	movs	r1, #0
    c634:	9100      	str	r1, [sp, #0]
    c636:	2101      	movs	r1, #1
    c638:	9101      	str	r1, [sp, #4]
    c63a:	4610      	mov	r0, r2
    c63c:	2104      	movs	r1, #4
    c63e:	461a      	mov	r2, r3
    c640:	4b8f      	ldr	r3, [pc, #572]	; (c880 <ComGPRS+0x534>)
    c642:	f000 ff9d 	bl	d580 <GoalDspLine>
    c646:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    c648:	f107 0318 	add.w	r3, r7, #24
    c64c:	681b      	ldr	r3, [r3, #0]
    c64e:	2b00      	cmp	r3, #0
    c650:	f2c0 8326 	blt.w	cca0 <ComGPRS+0x954>
	iRet = appGet(appGprsPort, tcPort, lenGprsPort+1);                // Retrieve port number
    c654:	f107 0418 	add.w	r4, r7, #24
    c658:	f107 0370 	add.w	r3, r7, #112	; 0x70
    c65c:	2011      	movs	r0, #17
    c65e:	4619      	mov	r1, r3
    c660:	2206      	movs	r2, #6
    c662:	f002 ffbb 	bl	f5dc <appGet>
    c666:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblDbaErr);
    c668:	f107 0318 	add.w	r3, r7, #24
    c66c:	681b      	ldr	r3, [r3, #0]
    c66e:	2b00      	cmp	r3, #0
    c670:	f2c0 83a8 	blt.w	cdc4 <ComGPRS+0xa78>
	iRet = GoalClrScreen(hScreen, GL_COLOR_BLACK, KEY_CANCEL, false); // Clear screen
    c674:	f107 0308 	add.w	r3, r7, #8
    c678:	681b      	ldr	r3, [r3, #0]
    c67a:	f107 0418 	add.w	r4, r7, #24
    c67e:	4618      	mov	r0, r3
    c680:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    c684:	2202      	movs	r2, #2
    c686:	2300      	movs	r3, #0
    c688:	f000 fe60 	bl	d34c <GoalClrScreen>
    c68c:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    c68e:	f107 0318 	add.w	r3, r7, #24
    c692:	681b      	ldr	r3, [r3, #0]
    c694:	2b00      	cmp	r3, #0
    c696:	f2c0 8303 	blt.w	cca0 <ComGPRS+0x954>
	iRet = GoalDspLine(hScreen, 0, tcPort, &txGPRS[0], 0, true);      // Show port number
    c69a:	f107 0308 	add.w	r3, r7, #8
    c69e:	681a      	ldr	r2, [r3, #0]
    c6a0:	f107 0418 	add.w	r4, r7, #24
    c6a4:	f107 0370 	add.w	r3, r7, #112	; 0x70
    c6a8:	2100      	movs	r1, #0
    c6aa:	9100      	str	r1, [sp, #0]
    c6ac:	2101      	movs	r1, #1
    c6ae:	9101      	str	r1, [sp, #4]
    c6b0:	4610      	mov	r0, r2
    c6b2:	2100      	movs	r1, #0
    c6b4:	461a      	mov	r2, r3
    c6b6:	f249 5324 	movw	r3, #38180	; 0x9524
    c6ba:	f2c0 0301 	movt	r3, #1
    c6be:	f000 ff5f 	bl	d580 <GoalDspLine>
    c6c2:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    c6c4:	f107 0318 	add.w	r3, r7, #24
    c6c8:	681b      	ldr	r3, [r3, #0]
    c6ca:	2b00      	cmp	r3, #0
    c6cc:	f2c0 82e8 	blt.w	cca0 <ComGPRS+0x954>
	Telium_Sprintf (tcStr, "%s|%s", tcIpAddress, tcPort);
    c6d0:	f107 01cc 	add.w	r1, r7, #204	; 0xcc
    c6d4:	f507 62ab 	add.w	r2, r7, #1368	; 0x558
    c6d8:	f107 0370 	add.w	r3, r7, #112	; 0x70
    c6dc:	4608      	mov	r0, r1
    c6de:	f649 31cc 	movw	r1, #39884	; 0x9bcc
    c6e2:	f2c0 0101 	movt	r1, #1
    c6e6:	f00b f931 	bl	1794c <Telium_Sprintf>
	hGPRS = OpenGPRS(tcStr);                                          // ** Open **
    c6ea:	f107 0414 	add.w	r4, r7, #20
    c6ee:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
    c6f2:	4618      	mov	r0, r3
    c6f4:	f7ff f838 	bl	b768 <OpenGPRS>
    c6f8:	6020      	str	r0, [r4, #0]
	CHECK(hGPRS!=NULL, lblKO);
    c6fa:	f107 0314 	add.w	r3, r7, #20
    c6fe:	681b      	ldr	r3, [r3, #0]
    c700:	2b00      	cmp	r3, #0
    c702:	f000 82cd 	beq.w	cca0 <ComGPRS+0x954>
	iRet = GoalDspLine(hScreen, 1, "2-comOpen OK", &txGPRS[1], 0, true);
    c706:	f107 0308 	add.w	r3, r7, #8
    c70a:	681b      	ldr	r3, [r3, #0]
    c70c:	f107 0418 	add.w	r4, r7, #24
    c710:	2200      	movs	r2, #0
    c712:	9200      	str	r2, [sp, #0]
    c714:	2201      	movs	r2, #1
    c716:	9201      	str	r2, [sp, #4]
    c718:	4618      	mov	r0, r3
    c71a:	2101      	movs	r1, #1
    c71c:	f649 32d4 	movw	r2, #39892	; 0x9bd4
    c720:	f2c0 0201 	movt	r2, #1
    c724:	4b53      	ldr	r3, [pc, #332]	; (c874 <ComGPRS+0x528>)
    c726:	f000 ff2b 	bl	d580 <GoalDspLine>
    c72a:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    c72c:	f107 0318 	add.w	r3, r7, #24
    c730:	681b      	ldr	r3, [r3, #0]
    c732:	2b00      	cmp	r3, #0
    c734:	f2c0 82b4 	blt.w	cca0 <ComGPRS+0x954>

	// Connect GPRS layer
	// ==================
	iRet = GoalDspLine(hScreen, 2, "3-comConnect...", &txGPRS[2], 0, true);
    c738:	f107 0308 	add.w	r3, r7, #8
    c73c:	681b      	ldr	r3, [r3, #0]
    c73e:	f107 0418 	add.w	r4, r7, #24
    c742:	2200      	movs	r2, #0
    c744:	9200      	str	r2, [sp, #0]
    c746:	2201      	movs	r2, #1
    c748:	9201      	str	r2, [sp, #4]
    c74a:	4618      	mov	r0, r3
    c74c:	2102      	movs	r1, #2
    c74e:	f649 32e4 	movw	r2, #39908	; 0x9be4
    c752:	f2c0 0201 	movt	r2, #1
    c756:	4b48      	ldr	r3, [pc, #288]	; (c878 <ComGPRS+0x52c>)
    c758:	f000 ff12 	bl	d580 <GoalDspLine>
    c75c:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    c75e:	f107 0318 	add.w	r3, r7, #24
    c762:	681b      	ldr	r3, [r3, #0]
    c764:	2b00      	cmp	r3, #0
    c766:	f2c0 829b 	blt.w	cca0 <ComGPRS+0x954>
	iRet = ConnectGPRS(hGPRS);                                        // ** Connect **
    c76a:	f107 0418 	add.w	r4, r7, #24
    c76e:	f107 0314 	add.w	r3, r7, #20
    c772:	6818      	ldr	r0, [r3, #0]
    c774:	f7ff f8ee 	bl	b954 <ConnectGPRS>
    c778:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblComKO);
    c77a:	f107 0318 	add.w	r3, r7, #24
    c77e:	681b      	ldr	r3, [r3, #0]
    c780:	2b00      	cmp	r3, #0
    c782:	f2c0 82a1 	blt.w	ccc8 <ComGPRS+0x97c>
	iRet = GoalDspLine(hScreen, 3, "3-comConnect OK", &txGPRS[3], 0, true);
    c786:	f107 0308 	add.w	r3, r7, #8
    c78a:	681b      	ldr	r3, [r3, #0]
    c78c:	f107 0418 	add.w	r4, r7, #24
    c790:	2200      	movs	r2, #0
    c792:	9200      	str	r2, [sp, #0]
    c794:	2201      	movs	r2, #1
    c796:	9201      	str	r2, [sp, #4]
    c798:	4618      	mov	r0, r3
    c79a:	2103      	movs	r1, #3
    c79c:	f649 32f4 	movw	r2, #39924	; 0x9bf4
    c7a0:	f2c0 0201 	movt	r2, #1
    c7a4:	4b35      	ldr	r3, [pc, #212]	; (c87c <ComGPRS+0x530>)
    c7a6:	f000 feeb 	bl	d580 <GoalDspLine>
    c7aa:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    c7ac:	f107 0318 	add.w	r3, r7, #24
    c7b0:	681b      	ldr	r3, [r3, #0]
    c7b2:	2b00      	cmp	r3, #0
    c7b4:	f2c0 8274 	blt.w	cca0 <ComGPRS+0x954>

	// Clear sending/receiving buffers
	// ===============================
	iRet = LL_ClearSendBuffer(hGPRS);
    c7b8:	f107 0418 	add.w	r4, r7, #24
    c7bc:	f107 0314 	add.w	r3, r7, #20
    c7c0:	6818      	ldr	r0, [r3, #0]
    c7c2:	f00a fc82 	bl	170ca <LL_ClearSendBuffer>
    c7c6:	6020      	str	r0, [r4, #0]
	CHECK(iRet==LL_ERROR_OK, lblComKO);
    c7c8:	f107 0318 	add.w	r3, r7, #24
    c7cc:	681b      	ldr	r3, [r3, #0]
    c7ce:	2b00      	cmp	r3, #0
    c7d0:	f040 827a 	bne.w	ccc8 <ComGPRS+0x97c>
	iRet = LL_ClearReceiveBuffer(hGPRS);
    c7d4:	f107 0418 	add.w	r4, r7, #24
    c7d8:	f107 0314 	add.w	r3, r7, #20
    c7dc:	6818      	ldr	r0, [r3, #0]
    c7de:	f00a fc62 	bl	170a6 <LL_ClearReceiveBuffer>
    c7e2:	6020      	str	r0, [r4, #0]
	CHECK(iRet==LL_ERROR_OK, lblComKO);
    c7e4:	f107 0318 	add.w	r3, r7, #24
    c7e8:	681b      	ldr	r3, [r3, #0]
    c7ea:	2b00      	cmp	r3, #0
    c7ec:	f040 826c 	bne.w	ccc8 <ComGPRS+0x97c>

	// Send data through GPRS layer
	// ============================
	iRet = GoalDspLine(hScreen, 4, "4-comSend...", &txGPRS[4], 0, true);
    c7f0:	f107 0308 	add.w	r3, r7, #8
    c7f4:	681b      	ldr	r3, [r3, #0]
    c7f6:	f107 0418 	add.w	r4, r7, #24
    c7fa:	2200      	movs	r2, #0
    c7fc:	9200      	str	r2, [sp, #0]
    c7fe:	2201      	movs	r2, #1
    c800:	9201      	str	r2, [sp, #4]
    c802:	4618      	mov	r0, r3
    c804:	2104      	movs	r1, #4
    c806:	f649 4204 	movw	r2, #39940	; 0x9c04
    c80a:	f2c0 0201 	movt	r2, #1
    c80e:	4b1c      	ldr	r3, [pc, #112]	; (c880 <ComGPRS+0x534>)
    c810:	f000 feb6 	bl	d580 <GoalDspLine>
    c814:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    c816:	f107 0318 	add.w	r3, r7, #24
    c81a:	681b      	ldr	r3, [r3, #0]
    c81c:	2b00      	cmp	r3, #0
    c81e:	f2c0 823f 	blt.w	cca0 <ComGPRS+0x954>
	strcpy(tcSnd, "Kevin Njenga\n"                          // Data to send
    c822:	f507 72a8 	add.w	r2, r7, #336	; 0x150
    c826:	f649 4314 	movw	r3, #39956	; 0x9c14
    c82a:	f2c0 0301 	movt	r3, #1
    c82e:	4611      	mov	r1, r2
    c830:	461a      	mov	r2, r3
    c832:	236a      	movs	r3, #106	; 0x6a
    c834:	4608      	mov	r0, r1
    c836:	4611      	mov	r1, r2
    c838:	461a      	mov	r2, r3
    c83a:	f7fc e9ca 	blx	8bd0 <_init+0x100>
			"Hello, do you hear me?\n"
			"Hello, do you hear me?\n"
			"Hello, do you hear me?\n"
			"Hello, do you hear me?\n");
	iRet = SendGPRS(hGPRS, tcSnd, (word) strlen(tcSnd));              // ** Send data **
    c83e:	f507 73a8 	add.w	r3, r7, #336	; 0x150
    c842:	4618      	mov	r0, r3
    c844:	f7fc e9ca 	blx	8bdc <_init+0x10c>
    c848:	4603      	mov	r3, r0
    c84a:	b29b      	uxth	r3, r3
    c84c:	f107 0418 	add.w	r4, r7, #24
    c850:	f107 0114 	add.w	r1, r7, #20
    c854:	f507 72a8 	add.w	r2, r7, #336	; 0x150
    c858:	6808      	ldr	r0, [r1, #0]
    c85a:	4611      	mov	r1, r2
    c85c:	461a      	mov	r2, r3
    c85e:	f7ff f897 	bl	b990 <SendGPRS>
    c862:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblComKO);
    c864:	f107 0318 	add.w	r3, r7, #24
    c868:	681b      	ldr	r3, [r3, #0]
    c86a:	2b00      	cmp	r3, #0
    c86c:	f2c0 822c 	blt.w	ccc8 <ComGPRS+0x97c>
    c870:	e008      	b.n	c884 <ComGPRS+0x538>
    c872:	bf00      	nop
    c874:	000195d0 	.word	0x000195d0
    c878:	0001967c 	.word	0x0001967c
    c87c:	00019728 	.word	0x00019728
    c880:	000197d4 	.word	0x000197d4
	iRet = GoalClrScreen(hScreen, GL_COLOR_BLACK, KEY_CANCEL, false); // Clear screen
    c884:	f107 0308 	add.w	r3, r7, #8
    c888:	681b      	ldr	r3, [r3, #0]
    c88a:	f107 0418 	add.w	r4, r7, #24
    c88e:	4618      	mov	r0, r3
    c890:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    c894:	2202      	movs	r2, #2
    c896:	2300      	movs	r3, #0
    c898:	f000 fd58 	bl	d34c <GoalClrScreen>
    c89c:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    c89e:	f107 0318 	add.w	r3, r7, #24
    c8a2:	681b      	ldr	r3, [r3, #0]
    c8a4:	2b00      	cmp	r3, #0
    c8a6:	f2c0 81fb 	blt.w	cca0 <ComGPRS+0x954>
	iRet = GoalDspLine(hScreen, 0, "4-comSend OK", &txGPRS[0], 0, true);
    c8aa:	f107 0308 	add.w	r3, r7, #8
    c8ae:	681b      	ldr	r3, [r3, #0]
    c8b0:	f107 0418 	add.w	r4, r7, #24
    c8b4:	2200      	movs	r2, #0
    c8b6:	9200      	str	r2, [sp, #0]
    c8b8:	2201      	movs	r2, #1
    c8ba:	9201      	str	r2, [sp, #4]
    c8bc:	4618      	mov	r0, r3
    c8be:	2100      	movs	r1, #0
    c8c0:	f649 4280 	movw	r2, #40064	; 0x9c80
    c8c4:	f2c0 0201 	movt	r2, #1
    c8c8:	f249 5324 	movw	r3, #38180	; 0x9524
    c8cc:	f2c0 0301 	movt	r3, #1
    c8d0:	f000 fe56 	bl	d580 <GoalDspLine>
    c8d4:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    c8d6:	f107 0318 	add.w	r3, r7, #24
    c8da:	681b      	ldr	r3, [r3, #0]
    c8dc:	2b00      	cmp	r3, #0
    c8de:	f2c0 81df 	blt.w	cca0 <ComGPRS+0x954>

	// Receive data through GPRS layer
	// ===============================
	iRet = GoalDspLine(hScreen, 1, "5-comRec...", &txGPRS[1], 0, true);
    c8e2:	f107 0308 	add.w	r3, r7, #8
    c8e6:	681b      	ldr	r3, [r3, #0]
    c8e8:	f107 0418 	add.w	r4, r7, #24
    c8ec:	2200      	movs	r2, #0
    c8ee:	9200      	str	r2, [sp, #0]
    c8f0:	2201      	movs	r2, #1
    c8f2:	9201      	str	r2, [sp, #4]
    c8f4:	4618      	mov	r0, r3
    c8f6:	2101      	movs	r1, #1
    c8f8:	f649 4290 	movw	r2, #40080	; 0x9c90
    c8fc:	f2c0 0201 	movt	r2, #1
    c900:	4bb9      	ldr	r3, [pc, #740]	; (cbe8 <ComGPRS+0x89c>)
    c902:	f000 fe3d 	bl	d580 <GoalDspLine>
    c906:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    c908:	f107 0318 	add.w	r3, r7, #24
    c90c:	681b      	ldr	r3, [r3, #0]
    c90e:	2b00      	cmp	r3, #0
    c910:	f2c0 81c6 	blt.w	cca0 <ComGPRS+0x954>
	iRet = ReceiveGPRS(hGPRS, hScreen, tcRsp, sizeof(tcRsp), 30);     // ** Receive data **
    c914:	f107 0308 	add.w	r3, r7, #8
    c918:	681a      	ldr	r2, [r3, #0]
    c91a:	f107 0418 	add.w	r4, r7, #24
    c91e:	f107 0114 	add.w	r1, r7, #20
    c922:	f507 7355 	add.w	r3, r7, #852	; 0x354
    c926:	201e      	movs	r0, #30
    c928:	9000      	str	r0, [sp, #0]
    c92a:	6808      	ldr	r0, [r1, #0]
    c92c:	4611      	mov	r1, r2
    c92e:	461a      	mov	r2, r3
    c930:	f240 2301 	movw	r3, #513	; 0x201
    c934:	f7ff f85a 	bl	b9ec <ReceiveGPRS>
    c938:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblComKO);
    c93a:	f107 0318 	add.w	r3, r7, #24
    c93e:	681b      	ldr	r3, [r3, #0]
    c940:	2b00      	cmp	r3, #0
    c942:	f2c0 81c1 	blt.w	ccc8 <ComGPRS+0x97c>
	if (iRet > MAX_RSP) strcpy (tcRsp, "Buffer overflow Max=512");    // Data overflow
    c946:	f107 0318 	add.w	r3, r7, #24
    c94a:	681b      	ldr	r3, [r3, #0]
    c94c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
    c950:	dd0d      	ble.n	c96e <ComGPRS+0x622>
    c952:	f507 7255 	add.w	r2, r7, #852	; 0x354
    c956:	f649 439c 	movw	r3, #40092	; 0x9c9c
    c95a:	f2c0 0301 	movt	r3, #1
    c95e:	4614      	mov	r4, r2
    c960:	461d      	mov	r5, r3
    c962:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    c964:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    c966:	e895 0003 	ldmia.w	r5, {r0, r1}
    c96a:	e884 0003 	stmia.w	r4, {r0, r1}
	iRet = GoalDspLine(hScreen, 2, "5-comRec OK", &txGPRS[2], 0, true);
    c96e:	f107 0308 	add.w	r3, r7, #8
    c972:	681b      	ldr	r3, [r3, #0]
    c974:	f107 0418 	add.w	r4, r7, #24
    c978:	2200      	movs	r2, #0
    c97a:	9200      	str	r2, [sp, #0]
    c97c:	2201      	movs	r2, #1
    c97e:	9201      	str	r2, [sp, #4]
    c980:	4618      	mov	r0, r3
    c982:	2102      	movs	r1, #2
    c984:	f649 42b4 	movw	r2, #40116	; 0x9cb4
    c988:	f2c0 0201 	movt	r2, #1
    c98c:	4b97      	ldr	r3, [pc, #604]	; (cbec <ComGPRS+0x8a0>)
    c98e:	f000 fdf7 	bl	d580 <GoalDspLine>
    c992:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    c994:	f107 0318 	add.w	r3, r7, #24
    c998:	681b      	ldr	r3, [r3, #0]
    c99a:	2b00      	cmp	r3, #0
    c99c:	f2c0 8180 	blt.w	cca0 <ComGPRS+0x954>

	// Disconnection
	// =============
	iRet = DisconnectGPRS(hGPRS);                                     // ** Disconnect **
    c9a0:	f107 0418 	add.w	r4, r7, #24
    c9a4:	f107 0314 	add.w	r3, r7, #20
    c9a8:	6818      	ldr	r0, [r3, #0]
    c9aa:	f7ff f8cf 	bl	bb4c <DisconnectGPRS>
    c9ae:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblComKO);
    c9b0:	f107 0318 	add.w	r3, r7, #24
    c9b4:	681b      	ldr	r3, [r3, #0]
    c9b6:	2b00      	cmp	r3, #0
    c9b8:	f2c0 8186 	blt.w	ccc8 <ComGPRS+0x97c>
	iRet = GoalDspLine(hScreen, 3, "6-comDisconn OK", &txGPRS[3], 0, true);
    c9bc:	f107 0308 	add.w	r3, r7, #8
    c9c0:	681b      	ldr	r3, [r3, #0]
    c9c2:	f107 0418 	add.w	r4, r7, #24
    c9c6:	2200      	movs	r2, #0
    c9c8:	9200      	str	r2, [sp, #0]
    c9ca:	2201      	movs	r2, #1
    c9cc:	9201      	str	r2, [sp, #4]
    c9ce:	4618      	mov	r0, r3
    c9d0:	2103      	movs	r1, #3
    c9d2:	f649 42c0 	movw	r2, #40128	; 0x9cc0
    c9d6:	f2c0 0201 	movt	r2, #1
    c9da:	4b85      	ldr	r3, [pc, #532]	; (cbf0 <ComGPRS+0x8a4>)
    c9dc:	f000 fdd0 	bl	d580 <GoalDspLine>
    c9e0:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    c9e2:	f107 0318 	add.w	r3, r7, #24
    c9e6:	681b      	ldr	r3, [r3, #0]
    c9e8:	2b00      	cmp	r3, #0
    c9ea:	f2c0 8159 	blt.w	cca0 <ComGPRS+0x954>
	iRet = CloseGPRS(hGPRS);                                          // ** Close **
    c9ee:	f107 0418 	add.w	r4, r7, #24
    c9f2:	f107 0314 	add.w	r3, r7, #20
    c9f6:	6818      	ldr	r0, [r3, #0]
    c9f8:	f7ff f8c6 	bl	bb88 <CloseGPRS>
    c9fc:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblComKO);
    c9fe:	f107 0318 	add.w	r3, r7, #24
    ca02:	681b      	ldr	r3, [r3, #0]
    ca04:	2b00      	cmp	r3, #0
    ca06:	f2c0 815f 	blt.w	ccc8 <ComGPRS+0x97c>

	// Display transmission data
	// =========================
	iRet = GoalClrScreen(hScreen, GL_COLOR_BLACK, KEY_CANCEL | KEY_VALID, false);
    ca0a:	f107 0308 	add.w	r3, r7, #8
    ca0e:	681b      	ldr	r3, [r3, #0]
    ca10:	f107 0418 	add.w	r4, r7, #24
    ca14:	4618      	mov	r0, r3
    ca16:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    ca1a:	2203      	movs	r2, #3
    ca1c:	2300      	movs	r3, #0
    ca1e:	f000 fc95 	bl	d34c <GoalClrScreen>
    ca22:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);                                            // Clear screen
    ca24:	f107 0318 	add.w	r3, r7, #24
    ca28:	681b      	ldr	r3, [r3, #0]
    ca2a:	2b00      	cmp	r3, #0
    ca2c:	f2c0 8138 	blt.w	cca0 <ComGPRS+0x954>
	iRet = GoalDspMultiLine(hScreen, 0, tcRsp, strlen(tcRsp), txGPRS, NUMBER_OF_LINES(txGPRS), 0, true);
    ca30:	f107 0308 	add.w	r3, r7, #8
    ca34:	681e      	ldr	r6, [r3, #0]
    ca36:	f507 7355 	add.w	r3, r7, #852	; 0x354
    ca3a:	4618      	mov	r0, r3
    ca3c:	f7fc e8ce 	blx	8bdc <_init+0x10c>
    ca40:	4603      	mov	r3, r0
    ca42:	461d      	mov	r5, r3
    ca44:	f107 0418 	add.w	r4, r7, #24
    ca48:	f507 7255 	add.w	r2, r7, #852	; 0x354
    ca4c:	f249 5324 	movw	r3, #38180	; 0x9524
    ca50:	f2c0 0301 	movt	r3, #1
    ca54:	9300      	str	r3, [sp, #0]
    ca56:	2305      	movs	r3, #5
    ca58:	9301      	str	r3, [sp, #4]
    ca5a:	2300      	movs	r3, #0
    ca5c:	9302      	str	r3, [sp, #8]
    ca5e:	2301      	movs	r3, #1
    ca60:	9303      	str	r3, [sp, #12]
    ca62:	4630      	mov	r0, r6
    ca64:	2100      	movs	r1, #0
    ca66:	462b      	mov	r3, r5
    ca68:	f000 ff5e 	bl	d928 <GoalDspMultiLine>
    ca6c:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);                                            // Show data to receive
    ca6e:	f107 0318 	add.w	r3, r7, #24
    ca72:	681b      	ldr	r3, [r3, #0]
    ca74:	2b00      	cmp	r3, #0
    ca76:	f2c0 8113 	blt.w	cca0 <ComGPRS+0x954>

	// Print transmission data
	// =======================
	p=0;
    ca7a:	1dfb      	adds	r3, r7, #7
    ca7c:	2200      	movs	r2, #0
    ca7e:	701a      	strb	r2, [r3, #0]
	hDocument = GoalCreateDocument(gGoalGraphicLibInstance, GL_ENCODING_UTF8);          // Create document
    ca80:	f644 1388 	movw	r3, #18824	; 0x4988
    ca84:	f2c0 0302 	movt	r3, #2
    ca88:	681b      	ldr	r3, [r3, #0]
    ca8a:	4618      	mov	r0, r3
    ca8c:	2100      	movs	r1, #0
    ca8e:	f002 f9c3 	bl	ee18 <GoalCreateDocument>
    ca92:	4602      	mov	r2, r0
    ca94:	f107 030c 	add.w	r3, r7, #12
    ca98:	601a      	str	r2, [r3, #0]
	CHECK(hDocument!=NULL, lblKO);
    ca9a:	f107 030c 	add.w	r3, r7, #12
    ca9e:	681b      	ldr	r3, [r3, #0]
    caa0:	2b00      	cmp	r3, #0
    caa2:	f000 80fd 	beq.w	cca0 <ComGPRS+0x954>

	xLine = xPrinter;                                                 // Build document (Demo, Tx/Rx data)
    caa6:	f107 0220 	add.w	r2, r7, #32
    caaa:	f649 0380 	movw	r3, #39040	; 0x9880
    caae:	f2c0 0301 	movt	r3, #1
    cab2:	4611      	mov	r1, r2
    cab4:	461a      	mov	r2, r3
    cab6:	2350      	movs	r3, #80	; 0x50
    cab8:	4608      	mov	r0, r1
    caba:	4611      	mov	r1, r2
    cabc:	461a      	mov	r2, r3
    cabe:	f7fc e888 	blx	8bd0 <_init+0x100>
	xLine.eTextAlign = GL_ALIGN_CENTER;
    cac2:	f107 0320 	add.w	r3, r7, #32
    cac6:	2200      	movs	r2, #0
    cac8:	601a      	str	r2, [r3, #0]
	xLine.bReverse = TRUE;
    caca:	f107 0320 	add.w	r3, r7, #32
    cace:	2201      	movs	r2, #1
    cad0:	721a      	strb	r2, [r3, #8]
	xLine.xMargin.usBottom = PIXEL_BOTTOM;
    cad2:	f107 0320 	add.w	r3, r7, #32
    cad6:	2228      	movs	r2, #40	; 0x28
    cad8:	641a      	str	r2, [r3, #64]	; 0x40
	xLine.xFont.eScale = GL_SCALE_XXLARGE;
    cada:	f107 0320 	add.w	r3, r7, #32
    cade:	f643 72f6 	movw	r2, #16374	; 0x3ff6
    cae2:	64da      	str	r2, [r3, #76]	; 0x4c
	iRet = GoalPrnLine(hDocument, p++, "GPRS Demo", &xLine);
    cae4:	f107 030c 	add.w	r3, r7, #12
    cae8:	6819      	ldr	r1, [r3, #0]
    caea:	1dfb      	adds	r3, r7, #7
    caec:	781b      	ldrb	r3, [r3, #0]
    caee:	b29a      	uxth	r2, r3
    caf0:	1dfb      	adds	r3, r7, #7
    caf2:	1df8      	adds	r0, r7, #7
    caf4:	7800      	ldrb	r0, [r0, #0]
    caf6:	3001      	adds	r0, #1
    caf8:	7018      	strb	r0, [r3, #0]
    cafa:	f107 0418 	add.w	r4, r7, #24
    cafe:	f107 0320 	add.w	r3, r7, #32
    cb02:	4608      	mov	r0, r1
    cb04:	4611      	mov	r1, r2
    cb06:	f649 42d0 	movw	r2, #40144	; 0x9cd0
    cb0a:	f2c0 0201 	movt	r2, #1
    cb0e:	f002 f9bf 	bl	ee90 <GoalPrnLine>
    cb12:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    cb14:	f107 0318 	add.w	r3, r7, #24
    cb18:	681b      	ldr	r3, [r3, #0]
    cb1a:	2b00      	cmp	r3, #0
    cb1c:	f2c0 80c0 	blt.w	cca0 <ComGPRS+0x954>

	xLine = xPrinter;
    cb20:	f107 0220 	add.w	r2, r7, #32
    cb24:	f649 0380 	movw	r3, #39040	; 0x9880
    cb28:	f2c0 0301 	movt	r3, #1
    cb2c:	4611      	mov	r1, r2
    cb2e:	461a      	mov	r2, r3
    cb30:	2350      	movs	r3, #80	; 0x50
    cb32:	4608      	mov	r0, r1
    cb34:	4611      	mov	r1, r2
    cb36:	461a      	mov	r2, r3
    cb38:	f7fc e84a 	blx	8bd0 <_init+0x100>
	iRet = GoalPrnLine(hDocument, p++, "Sending:", &xLine);           // Data to send
    cb3c:	f107 030c 	add.w	r3, r7, #12
    cb40:	6819      	ldr	r1, [r3, #0]
    cb42:	1dfb      	adds	r3, r7, #7
    cb44:	781b      	ldrb	r3, [r3, #0]
    cb46:	b29a      	uxth	r2, r3
    cb48:	1dfb      	adds	r3, r7, #7
    cb4a:	1df8      	adds	r0, r7, #7
    cb4c:	7800      	ldrb	r0, [r0, #0]
    cb4e:	3001      	adds	r0, #1
    cb50:	7018      	strb	r0, [r3, #0]
    cb52:	f107 0418 	add.w	r4, r7, #24
    cb56:	f107 0320 	add.w	r3, r7, #32
    cb5a:	4608      	mov	r0, r1
    cb5c:	4611      	mov	r1, r2
    cb5e:	f649 42dc 	movw	r2, #40156	; 0x9cdc
    cb62:	f2c0 0201 	movt	r2, #1
    cb66:	f002 f993 	bl	ee90 <GoalPrnLine>
    cb6a:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    cb6c:	f107 0318 	add.w	r3, r7, #24
    cb70:	681b      	ldr	r3, [r3, #0]
    cb72:	2b00      	cmp	r3, #0
    cb74:	f2c0 8094 	blt.w	cca0 <ComGPRS+0x954>
	iRet = GoalPrnLine(hDocument, p++, tcSnd, &xLine);
    cb78:	f107 030c 	add.w	r3, r7, #12
    cb7c:	6818      	ldr	r0, [r3, #0]
    cb7e:	1dfb      	adds	r3, r7, #7
    cb80:	781b      	ldrb	r3, [r3, #0]
    cb82:	b299      	uxth	r1, r3
    cb84:	1dfb      	adds	r3, r7, #7
    cb86:	1dfa      	adds	r2, r7, #7
    cb88:	7812      	ldrb	r2, [r2, #0]
    cb8a:	3201      	adds	r2, #1
    cb8c:	701a      	strb	r2, [r3, #0]
    cb8e:	f107 0418 	add.w	r4, r7, #24
    cb92:	f507 72a8 	add.w	r2, r7, #336	; 0x150
    cb96:	f107 0320 	add.w	r3, r7, #32
    cb9a:	f002 f979 	bl	ee90 <GoalPrnLine>
    cb9e:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    cba0:	f107 0318 	add.w	r3, r7, #24
    cba4:	681b      	ldr	r3, [r3, #0]
    cba6:	2b00      	cmp	r3, #0
    cba8:	db7a      	blt.n	cca0 <ComGPRS+0x954>
	iRet = GoalPrnLine(hDocument, p++, "\nReceiving:", &xLine);       // Data to receive
    cbaa:	f107 030c 	add.w	r3, r7, #12
    cbae:	6819      	ldr	r1, [r3, #0]
    cbb0:	1dfb      	adds	r3, r7, #7
    cbb2:	781b      	ldrb	r3, [r3, #0]
    cbb4:	b29a      	uxth	r2, r3
    cbb6:	1dfb      	adds	r3, r7, #7
    cbb8:	1df8      	adds	r0, r7, #7
    cbba:	7800      	ldrb	r0, [r0, #0]
    cbbc:	3001      	adds	r0, #1
    cbbe:	7018      	strb	r0, [r3, #0]
    cbc0:	f107 0418 	add.w	r4, r7, #24
    cbc4:	f107 0320 	add.w	r3, r7, #32
    cbc8:	4608      	mov	r0, r1
    cbca:	4611      	mov	r1, r2
    cbcc:	f649 42e8 	movw	r2, #40168	; 0x9ce8
    cbd0:	f2c0 0201 	movt	r2, #1
    cbd4:	f002 f95c 	bl	ee90 <GoalPrnLine>
    cbd8:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    cbda:	f107 0318 	add.w	r3, r7, #24
    cbde:	681b      	ldr	r3, [r3, #0]
    cbe0:	2b00      	cmp	r3, #0
    cbe2:	db5d      	blt.n	cca0 <ComGPRS+0x954>
    cbe4:	e006      	b.n	cbf4 <ComGPRS+0x8a8>
    cbe6:	bf00      	nop
    cbe8:	000195d0 	.word	0x000195d0
    cbec:	0001967c 	.word	0x0001967c
    cbf0:	00019728 	.word	0x00019728
	iRet = GoalPrnLine(hDocument, p++, tcRsp, &xLine);
    cbf4:	f107 030c 	add.w	r3, r7, #12
    cbf8:	6818      	ldr	r0, [r3, #0]
    cbfa:	1dfb      	adds	r3, r7, #7
    cbfc:	781b      	ldrb	r3, [r3, #0]
    cbfe:	b299      	uxth	r1, r3
    cc00:	1dfb      	adds	r3, r7, #7
    cc02:	1dfa      	adds	r2, r7, #7
    cc04:	7812      	ldrb	r2, [r2, #0]
    cc06:	3201      	adds	r2, #1
    cc08:	701a      	strb	r2, [r3, #0]
    cc0a:	f107 0418 	add.w	r4, r7, #24
    cc0e:	f507 7255 	add.w	r2, r7, #852	; 0x354
    cc12:	f107 0320 	add.w	r3, r7, #32
    cc16:	f002 f93b 	bl	ee90 <GoalPrnLine>
    cc1a:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    cc1c:	f107 0318 	add.w	r3, r7, #24
    cc20:	681b      	ldr	r3, [r3, #0]
    cc22:	2b00      	cmp	r3, #0
    cc24:	db3c      	blt.n	cca0 <ComGPRS+0x954>
	iRet = GoalPrnLine(hDocument, p++, "\n\n\n\n", &xLine);
    cc26:	f107 030c 	add.w	r3, r7, #12
    cc2a:	6819      	ldr	r1, [r3, #0]
    cc2c:	1dfb      	adds	r3, r7, #7
    cc2e:	781b      	ldrb	r3, [r3, #0]
    cc30:	b29a      	uxth	r2, r3
    cc32:	1dfb      	adds	r3, r7, #7
    cc34:	1df8      	adds	r0, r7, #7
    cc36:	7800      	ldrb	r0, [r0, #0]
    cc38:	3001      	adds	r0, #1
    cc3a:	7018      	strb	r0, [r3, #0]
    cc3c:	f107 0418 	add.w	r4, r7, #24
    cc40:	f107 0320 	add.w	r3, r7, #32
    cc44:	4608      	mov	r0, r1
    cc46:	4611      	mov	r1, r2
    cc48:	f649 42f4 	movw	r2, #40180	; 0x9cf4
    cc4c:	f2c0 0201 	movt	r2, #1
    cc50:	f002 f91e 	bl	ee90 <GoalPrnLine>
    cc54:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    cc56:	f107 0318 	add.w	r3, r7, #24
    cc5a:	681b      	ldr	r3, [r3, #0]
    cc5c:	2b00      	cmp	r3, #0
    cc5e:	db1f      	blt.n	cca0 <ComGPRS+0x954>

	iRet = GoalPrnDocument(hDocument);
    cc60:	f107 030c 	add.w	r3, r7, #12
    cc64:	681b      	ldr	r3, [r3, #0]
    cc66:	f107 0418 	add.w	r4, r7, #24
    cc6a:	4618      	mov	r0, r3
    cc6c:	f002 fb22 	bl	f2b4 <GoalPrnDocument>
    cc70:	6020      	str	r0, [r4, #0]
	CHECK(iRet>=0, lblKO);
    cc72:	f107 0318 	add.w	r3, r7, #24
    cc76:	681b      	ldr	r3, [r3, #0]
    cc78:	2b00      	cmp	r3, #0
    cc7a:	db11      	blt.n	cca0 <ComGPRS+0x954>

	GoalGetKey(hScreen, gGoalGraphicLibInstance, true, 30*1000, true);                  // Wait for key pressed/touched (shortcut)
    cc7c:	f107 0308 	add.w	r3, r7, #8
    cc80:	681a      	ldr	r2, [r3, #0]
    cc82:	f644 1388 	movw	r3, #18824	; 0x4988
    cc86:	f2c0 0302 	movt	r3, #2
    cc8a:	681b      	ldr	r3, [r3, #0]
    cc8c:	2101      	movs	r1, #1
    cc8e:	9100      	str	r1, [sp, #0]
    cc90:	4610      	mov	r0, r2
    cc92:	4619      	mov	r1, r3
    cc94:	2201      	movs	r2, #1
    cc96:	f247 5330 	movw	r3, #30000	; 0x7530
    cc9a:	f000 ffa7 	bl	dbec <GoalGetKey>

	goto lblEnd;
    cc9e:	e0b9      	b.n	ce14 <ComGPRS+0xac8>

	// Errors treatment
	// ****************
	lblKO:                                                                // None-classified low level error
	GL_Dialog_Message(gGoalGraphicLibInstance, NULL, "Processing Error", GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
    cca0:	f644 1388 	movw	r3, #18824	; 0x4988
    cca4:	f2c0 0302 	movt	r3, #2
    cca8:	681b      	ldr	r3, [r3, #0]
    ccaa:	2201      	movs	r2, #1
    ccac:	9200      	str	r2, [sp, #0]
    ccae:	f241 3288 	movw	r2, #5000	; 0x1388
    ccb2:	9201      	str	r2, [sp, #4]
    ccb4:	4618      	mov	r0, r3
    ccb6:	2100      	movs	r1, #0
    ccb8:	f649 42fc 	movw	r2, #40188	; 0x9cfc
    ccbc:	f2c0 0201 	movt	r2, #1
    ccc0:	2304      	movs	r3, #4
    ccc2:	f00b fc3b 	bl	1853c <GL_Dialog_Message>
	goto lblEnd;
    ccc6:	e0a5      	b.n	ce14 <ComGPRS+0xac8>
	lblComKO:                                                             // Communication error
	strcpy(tcDisplay, LL_ErrorMsg(iRet));                             // Link Layer error
    ccc8:	f107 0318 	add.w	r3, r7, #24
    cccc:	6818      	ldr	r0, [r3, #0]
    ccce:	f003 fb05 	bl	102dc <LL_ErrorMsg>
    ccd2:	4603      	mov	r3, r0
    ccd4:	f107 0298 	add.w	r2, r7, #152	; 0x98
    ccd8:	4610      	mov	r0, r2
    ccda:	4619      	mov	r1, r3
    ccdc:	f7fb ef52 	blx	8b84 <_init+0xb4>
	if (iRet == LL_Network_GetStatus(LL_PHYSICAL_V_GPRS, &iStatus))
    cce0:	f107 0310 	add.w	r3, r7, #16
    cce4:	2029      	movs	r0, #41	; 0x29
    cce6:	4619      	mov	r1, r3
    cce8:	f00a fa7f 	bl	171ea <LL_Network_GetStatus>
    ccec:	4602      	mov	r2, r0
    ccee:	f107 0318 	add.w	r3, r7, #24
    ccf2:	681b      	ldr	r3, [r3, #0]
    ccf4:	429a      	cmp	r2, r3
    ccf6:	d14c      	bne.n	cd92 <ComGPRS+0xa46>
	{
		switch(iStatus)
    ccf8:	f107 0310 	add.w	r3, r7, #16
    ccfc:	681a      	ldr	r2, [r3, #0]
    ccfe:	f240 5305 	movw	r3, #1285	; 0x505
    cd02:	f2c0 1300 	movt	r3, #256	; 0x100
    cd06:	429a      	cmp	r2, r3
    cd08:	d013      	beq.n	cd32 <ComGPRS+0x9e6>
    cd0a:	f240 5306 	movw	r3, #1286	; 0x506
    cd0e:	f2c0 1300 	movt	r3, #256	; 0x100
    cd12:	429a      	cmp	r2, r3
    cd14:	d015      	beq.n	cd42 <ComGPRS+0x9f6>
    cd16:	f240 5301 	movw	r3, #1281	; 0x501
    cd1a:	f2c0 1300 	movt	r3, #256	; 0x100
    cd1e:	429a      	cmp	r2, r3
    cd20:	d115      	bne.n	cd4e <ComGPRS+0xa02>
		{
		case LL_STATUS_GPRS_ERROR_NO_SIM:   iStatus=LL_STATUS_GPRS_NO_SIM;      break;
    cd22:	f107 0210 	add.w	r2, r7, #16
    cd26:	f64f 4322 	movw	r3, #64546	; 0xfc22
    cd2a:	f6cf 73ff 	movt	r3, #65535	; 0xffff
    cd2e:	6013      	str	r3, [r2, #0]
    cd30:	e013      	b.n	cd5a <ComGPRS+0xa0e>
		case LL_STATUS_GPRS_ERROR_PPP:      iStatus=LL_STATUS_GPRS_ERR_PPP;     break;
    cd32:	f107 0210 	add.w	r2, r7, #16
    cd36:	f64f 4320 	movw	r3, #64544	; 0xfc20
    cd3a:	f6cf 73ff 	movt	r3, #65535	; 0xffff
    cd3e:	6013      	str	r3, [r2, #0]
    cd40:	e00b      	b.n	cd5a <ComGPRS+0xa0e>
		case LL_STATUS_GPRS_ERROR_UNKNOWN:  iStatus=LL_STATUS_GPRS_ERR_UNKNOWN; break;
    cd42:	f107 0310 	add.w	r3, r7, #16
    cd46:	f46f 7278 	mvn.w	r2, #992	; 0x3e0
    cd4a:	601a      	str	r2, [r3, #0]
    cd4c:	e005      	b.n	cd5a <ComGPRS+0xa0e>
		default:                            iStatus=-1;                         break;
    cd4e:	f107 0310 	add.w	r3, r7, #16
    cd52:	f04f 32ff 	mov.w	r2, #4294967295
    cd56:	601a      	str	r2, [r3, #0]
    cd58:	bf00      	nop
		}
		strcat(tcDisplay, "\n");
    cd5a:	f107 0398 	add.w	r3, r7, #152	; 0x98
    cd5e:	4618      	mov	r0, r3
    cd60:	f7fb ef3c 	blx	8bdc <_init+0x10c>
    cd64:	4603      	mov	r3, r0
    cd66:	f107 0298 	add.w	r2, r7, #152	; 0x98
    cd6a:	18d2      	adds	r2, r2, r3
    cd6c:	f649 5310 	movw	r3, #40208	; 0x9d10
    cd70:	f2c0 0301 	movt	r3, #1
    cd74:	881b      	ldrh	r3, [r3, #0]
    cd76:	8013      	strh	r3, [r2, #0]
		strcat(tcDisplay, LL_ErrorMsg(iStatus));                      // Link Layer status
    cd78:	f107 0310 	add.w	r3, r7, #16
    cd7c:	681b      	ldr	r3, [r3, #0]
    cd7e:	4618      	mov	r0, r3
    cd80:	f003 faac 	bl	102dc <LL_ErrorMsg>
    cd84:	4603      	mov	r3, r0
    cd86:	f107 0298 	add.w	r2, r7, #152	; 0x98
    cd8a:	4610      	mov	r0, r2
    cd8c:	4619      	mov	r1, r3
    cd8e:	f7fb ef06 	blx	8b9c <_init+0xcc>
	}
	if (iRet != LL_ERROR_TIMEOUT)                                     // Cancel or timeout ?
    cd92:	f107 0318 	add.w	r3, r7, #24
    cd96:	681b      	ldr	r3, [r3, #0]
    cd98:	f513 7f7b 	cmn.w	r3, #1004	; 0x3ec
    cd9c:	d039      	beq.n	ce12 <ComGPRS+0xac6>
		GL_Dialog_Message(gGoalGraphicLibInstance, NULL, tcDisplay, GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
    cd9e:	f644 1388 	movw	r3, #18824	; 0x4988
    cda2:	f2c0 0302 	movt	r3, #2
    cda6:	681a      	ldr	r2, [r3, #0]
    cda8:	f107 0398 	add.w	r3, r7, #152	; 0x98
    cdac:	2101      	movs	r1, #1
    cdae:	9100      	str	r1, [sp, #0]
    cdb0:	f241 3188 	movw	r1, #5000	; 0x1388
    cdb4:	9101      	str	r1, [sp, #4]
    cdb6:	4610      	mov	r0, r2
    cdb8:	2100      	movs	r1, #0
    cdba:	461a      	mov	r2, r3
    cdbc:	2304      	movs	r3, #4
    cdbe:	f00b fbbd 	bl	1853c <GL_Dialog_Message>
	goto lblEnd;
    cdc2:	e026      	b.n	ce12 <ComGPRS+0xac6>
	lblDbaErr:                                                            // Data base error
	Telium_Sprintf(tcDisplay, "%s\n%s", FMG_ErrorMsg(iRet), "Software Reset Needed");
    cdc4:	f107 0318 	add.w	r3, r7, #24
    cdc8:	6818      	ldr	r0, [r3, #0]
    cdca:	f003 f99f 	bl	1010c <FMG_ErrorMsg>
    cdce:	4603      	mov	r3, r0
    cdd0:	f107 0298 	add.w	r2, r7, #152	; 0x98
    cdd4:	4610      	mov	r0, r2
    cdd6:	f649 318c 	movw	r1, #39820	; 0x9b8c
    cdda:	f2c0 0101 	movt	r1, #1
    cdde:	461a      	mov	r2, r3
    cde0:	f649 3394 	movw	r3, #39828	; 0x9b94
    cde4:	f2c0 0301 	movt	r3, #1
    cde8:	f00a fdb0 	bl	1794c <Telium_Sprintf>
	GL_Dialog_Message(gGoalGraphicLibInstance, NULL, tcDisplay, GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
    cdec:	f644 1388 	movw	r3, #18824	; 0x4988
    cdf0:	f2c0 0302 	movt	r3, #2
    cdf4:	681a      	ldr	r2, [r3, #0]
    cdf6:	f107 0398 	add.w	r3, r7, #152	; 0x98
    cdfa:	2101      	movs	r1, #1
    cdfc:	9100      	str	r1, [sp, #0]
    cdfe:	f241 3188 	movw	r1, #5000	; 0x1388
    ce02:	9101      	str	r1, [sp, #4]
    ce04:	4610      	mov	r0, r2
    ce06:	2100      	movs	r1, #0
    ce08:	461a      	mov	r2, r3
    ce0a:	2304      	movs	r3, #4
    ce0c:	f00b fb96 	bl	1853c <GL_Dialog_Message>
	goto lblEnd;
    ce10:	e000      	b.n	ce14 <ComGPRS+0xac8>
		strcat(tcDisplay, "\n");
		strcat(tcDisplay, LL_ErrorMsg(iStatus));                      // Link Layer status
	}
	if (iRet != LL_ERROR_TIMEOUT)                                     // Cancel or timeout ?
		GL_Dialog_Message(gGoalGraphicLibInstance, NULL, tcDisplay, GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
	goto lblEnd;
    ce12:	bf00      	nop
	lblDbaErr:                                                            // Data base error
	Telium_Sprintf(tcDisplay, "%s\n%s", FMG_ErrorMsg(iRet), "Software Reset Needed");
	GL_Dialog_Message(gGoalGraphicLibInstance, NULL, tcDisplay, GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
	goto lblEnd;
	lblEnd:
	if (hGPRS) {
    ce14:	f107 0314 	add.w	r3, r7, #20
    ce18:	681b      	ldr	r3, [r3, #0]
    ce1a:	2b00      	cmp	r3, #0
    ce1c:	d009      	beq.n	ce32 <ComGPRS+0xae6>
		DisconnectGPRS(hGPRS);                                        // ** Disconnect **
    ce1e:	f107 0314 	add.w	r3, r7, #20
    ce22:	6818      	ldr	r0, [r3, #0]
    ce24:	f7fe fe92 	bl	bb4c <DisconnectGPRS>
		CloseGPRS(hGPRS);                                             // ** Close **
    ce28:	f107 0314 	add.w	r3, r7, #20
    ce2c:	6818      	ldr	r0, [r3, #0]
    ce2e:	f7fe feab 	bl	bb88 <CloseGPRS>
	}
	StopGPRS();                                                       // ** Stop **
    ce32:	f7fe fec9 	bl	bbc8 <StopGPRS>
	if (hScreen)
    ce36:	f107 0308 	add.w	r3, r7, #8
    ce3a:	681b      	ldr	r3, [r3, #0]
    ce3c:	2b00      	cmp	r3, #0
    ce3e:	d004      	beq.n	ce4a <ComGPRS+0xafe>
		GoalDestroyScreen(&hScreen);                                  // Destroy screen
    ce40:	f107 0308 	add.w	r3, r7, #8
    ce44:	4618      	mov	r0, r3
    ce46:	f001 f833 	bl	deb0 <GoalDestroyScreen>
	if (hDocument)
    ce4a:	f107 030c 	add.w	r3, r7, #12
    ce4e:	681b      	ldr	r3, [r3, #0]
    ce50:	2b00      	cmp	r3, #0
    ce52:	d004      	beq.n	ce5e <ComGPRS+0xb12>
		GoalDestroyDocument(&hDocument);                              // Destroy document
    ce54:	f107 030c 	add.w	r3, r7, #12
    ce58:	4618      	mov	r0, r3
    ce5a:	f002 fa57 	bl	f30c <GoalDestroyDocument>
}
    ce5e:	f644 1380 	movw	r3, #18816	; 0x4980
    ce62:	f2c0 0302 	movt	r3, #2
    ce66:	f8d7 295c 	ldr.w	r2, [r7, #2396]	; 0x95c
    ce6a:	681b      	ldr	r3, [r3, #0]
    ce6c:	429a      	cmp	r2, r3
    ce6e:	d001      	beq.n	ce74 <ComGPRS+0xb28>
    ce70:	f7fc f83e 	bl	8ef0 <__stack_chk_fail>
    ce74:	f507 77b2 	add.w	r7, r7, #356	; 0x164
    ce78:	f507 6700 	add.w	r7, r7, #2048	; 0x800
    ce7c:	46bd      	mov	sp, r7
    ce7e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000ce80 <CallBackPressKey>:
//  true : When leaving the loop GL_Window_MainLoop
//  false : When leaving the loop GL_Window_MainLoop
//****************************************************************************

static bool CallBackPressKey(T_GL_HMESSAGE hMessage)
{
    ce80:	b580      	push	{r7, lr}
    ce82:	b084      	sub	sp, #16
    ce84:	af00      	add	r7, sp, #0
    ce86:	6078      	str	r0, [r7, #4]
    ce88:	f644 1380 	movw	r3, #18816	; 0x4980
    ce8c:	f2c0 0302 	movt	r3, #2
    ce90:	681b      	ldr	r3, [r3, #0]
    ce92:	60fb      	str	r3, [r7, #12]
	T_GL_WCHAR ulKey;

	// Retrieve key pressed
	ulKey = GL_Message_GetKey(hMessage);
    ce94:	6878      	ldr	r0, [r7, #4]
    ce96:	f00b fd1d 	bl	188d4 <GL_Message_GetKey>
    ce9a:	4603      	mov	r3, r0
    ce9c:	60bb      	str	r3, [r7, #8]

    // Sets the data user attached to the window
    GL_Message_SetUserData(hMessage, &ulKey, sizeof(ulKey));
    ce9e:	f107 0308 	add.w	r3, r7, #8
    cea2:	6878      	ldr	r0, [r7, #4]
    cea4:	4619      	mov	r1, r3
    cea6:	2204      	movs	r2, #4
    cea8:	f00b fd4a 	bl	18940 <GL_Message_SetUserData>

	// Will exit the application from the loop on GL_Window_MainLoop by returning
	// the result RES_PRESS_STATUS
	GL_Message_SetResult(hMessage, RES_PRESS_STATUS);
    ceac:	6878      	ldr	r0, [r7, #4]
    ceae:	2105      	movs	r1, #5
    ceb0:	f00b fd34 	bl	1891c <GL_Message_SetResult>

	// Force the value to true when releasing the application from the main loop
	return true;
    ceb4:	2301      	movs	r3, #1
}
    ceb6:	4618      	mov	r0, r3
    ceb8:	f644 1380 	movw	r3, #18816	; 0x4980
    cebc:	f2c0 0302 	movt	r3, #2
    cec0:	68fa      	ldr	r2, [r7, #12]
    cec2:	681b      	ldr	r3, [r3, #0]
    cec4:	429a      	cmp	r2, r3
    cec6:	d001      	beq.n	cecc <CallBackPressKey+0x4c>
    cec8:	f7fc f812 	bl	8ef0 <__stack_chk_fail>
    cecc:	f107 0710 	add.w	r7, r7, #16
    ced0:	46bd      	mov	sp, r7
    ced2:	bd80      	pop	{r7, pc}

0000ced4 <CallBackValidKey>:
//  true : When leaving the loop GL_Window_MainLoop
//  false : When leaving the loop GL_Window_MainLoop
//****************************************************************************

static bool CallBackValidKey(T_GL_HMESSAGE hMessage)
{
    ced4:	b580      	push	{r7, lr}
    ced6:	b084      	sub	sp, #16
    ced8:	af00      	add	r7, sp, #0
    ceda:	6078      	str	r0, [r7, #4]
    cedc:	f644 1380 	movw	r3, #18816	; 0x4980
    cee0:	f2c0 0302 	movt	r3, #2
    cee4:	681b      	ldr	r3, [r3, #0]
    cee6:	60fb      	str	r3, [r7, #12]
	// Will exit the application from the loop on GL_Window_MainLoop by returning
	// the result RES_VALID_STATUS
	GL_Message_SetResult(hMessage, RES_VALID_STATUS);
    cee8:	6878      	ldr	r0, [r7, #4]
    ceea:	2100      	movs	r1, #0
    ceec:	f00b fd16 	bl	1891c <GL_Message_SetResult>

	// Force the value to true when releasing the application from the main loop
	return true;
    cef0:	2301      	movs	r3, #1
}
    cef2:	4618      	mov	r0, r3
    cef4:	f644 1380 	movw	r3, #18816	; 0x4980
    cef8:	f2c0 0302 	movt	r3, #2
    cefc:	68fa      	ldr	r2, [r7, #12]
    cefe:	681b      	ldr	r3, [r3, #0]
    cf00:	429a      	cmp	r2, r3
    cf02:	d001      	beq.n	cf08 <CallBackValidKey+0x34>
    cf04:	f7fb fff4 	bl	8ef0 <__stack_chk_fail>
    cf08:	f107 0710 	add.w	r7, r7, #16
    cf0c:	46bd      	mov	sp, r7
    cf0e:	bd80      	pop	{r7, pc}

0000cf10 <CallBackCancelKey>:
//  true : When leaving the loop GL_Window_MainLoop.
//  false : When leaving the loop GL_Window_MainLoop.
//****************************************************************************

static bool CallBackCancelKey(T_GL_HMESSAGE hMessage)
{
    cf10:	b580      	push	{r7, lr}
    cf12:	b084      	sub	sp, #16
    cf14:	af00      	add	r7, sp, #0
    cf16:	6078      	str	r0, [r7, #4]
    cf18:	f644 1380 	movw	r3, #18816	; 0x4980
    cf1c:	f2c0 0302 	movt	r3, #2
    cf20:	681b      	ldr	r3, [r3, #0]
    cf22:	60fb      	str	r3, [r7, #12]
	// Will exit the application from the loop on GL_Window_MainLoop by returning
	// the result RES_CANCEL_STATUS
	GL_Message_SetResult(hMessage, RES_CANCEL_STATUS);
    cf24:	6878      	ldr	r0, [r7, #4]
    cf26:	2101      	movs	r1, #1
    cf28:	f00b fcf8 	bl	1891c <GL_Message_SetResult>

	// Force the value to true when releasing the application from the main loop
	return true;
    cf2c:	2301      	movs	r3, #1
}
    cf2e:	4618      	mov	r0, r3
    cf30:	f644 1380 	movw	r3, #18816	; 0x4980
    cf34:	f2c0 0302 	movt	r3, #2
    cf38:	68fa      	ldr	r2, [r7, #12]
    cf3a:	681b      	ldr	r3, [r3, #0]
    cf3c:	429a      	cmp	r2, r3
    cf3e:	d001      	beq.n	cf44 <CallBackCancelKey+0x34>
    cf40:	f7fb ffd6 	bl	8ef0 <__stack_chk_fail>
    cf44:	f107 0710 	add.w	r7, r7, #16
    cf48:	46bd      	mov	sp, r7
    cf4a:	bd80      	pop	{r7, pc}

0000cf4c <CallBackDownKey>:
//  true : When leaving the loop GL_Windpw_MainLoop.
//  false : When leaving the loop GL_Window_MainLoop.
//****************************************************************************

static bool CallBackDownKey(T_GL_HMESSAGE hMessage)
{
    cf4c:	b580      	push	{r7, lr}
    cf4e:	b084      	sub	sp, #16
    cf50:	af00      	add	r7, sp, #0
    cf52:	6078      	str	r0, [r7, #4]
    cf54:	f644 1380 	movw	r3, #18816	; 0x4980
    cf58:	f2c0 0302 	movt	r3, #2
    cf5c:	681b      	ldr	r3, [r3, #0]
    cf5e:	60fb      	str	r3, [r7, #12]
	// Will exit the application from the loop on GL_Window_MainLoop by returning
	// the result RES_DOWN_STATUS
	GL_Message_SetResult(hMessage, RES_DOWN_STATUS);
    cf60:	6878      	ldr	r0, [r7, #4]
    cf62:	2102      	movs	r1, #2
    cf64:	f00b fcda 	bl	1891c <GL_Message_SetResult>

	// Force the value to true when releasing the application from the main loop
	return true;
    cf68:	2301      	movs	r3, #1
}
    cf6a:	4618      	mov	r0, r3
    cf6c:	f644 1380 	movw	r3, #18816	; 0x4980
    cf70:	f2c0 0302 	movt	r3, #2
    cf74:	68fa      	ldr	r2, [r7, #12]
    cf76:	681b      	ldr	r3, [r3, #0]
    cf78:	429a      	cmp	r2, r3
    cf7a:	d001      	beq.n	cf80 <CallBackDownKey+0x34>
    cf7c:	f7fb ffb8 	bl	8ef0 <__stack_chk_fail>
    cf80:	f107 0710 	add.w	r7, r7, #16
    cf84:	46bd      	mov	sp, r7
    cf86:	bd80      	pop	{r7, pc}

0000cf88 <CallBackUpKey>:
//  true : When leaving the loop GL_Window_MainLoop.
//  false : When leaving the loop GL_Window_MainLoop.
//****************************************************************************

static bool CallBackUpKey(T_GL_HMESSAGE hMessage)
{
    cf88:	b580      	push	{r7, lr}
    cf8a:	b084      	sub	sp, #16
    cf8c:	af00      	add	r7, sp, #0
    cf8e:	6078      	str	r0, [r7, #4]
    cf90:	f644 1380 	movw	r3, #18816	; 0x4980
    cf94:	f2c0 0302 	movt	r3, #2
    cf98:	681b      	ldr	r3, [r3, #0]
    cf9a:	60fb      	str	r3, [r7, #12]
	// Will exit the application from the loop on GL_Window_MainLoop by returning
	// the result RES_UP_STATUS
	GL_Message_SetResult(hMessage, RES_UP_STATUS);
    cf9c:	6878      	ldr	r0, [r7, #4]
    cf9e:	2103      	movs	r1, #3
    cfa0:	f00b fcbc 	bl	1891c <GL_Message_SetResult>

	// Force the value to true when releasing the application from the main loop
	return true;
    cfa4:	2301      	movs	r3, #1
}
    cfa6:	4618      	mov	r0, r3
    cfa8:	f644 1380 	movw	r3, #18816	; 0x4980
    cfac:	f2c0 0302 	movt	r3, #2
    cfb0:	68fa      	ldr	r2, [r7, #12]
    cfb2:	681b      	ldr	r3, [r3, #0]
    cfb4:	429a      	cmp	r2, r3
    cfb6:	d001      	beq.n	cfbc <CallBackUpKey+0x34>
    cfb8:	f7fb ff9a 	bl	8ef0 <__stack_chk_fail>
    cfbc:	f107 0710 	add.w	r7, r7, #16
    cfc0:	46bd      	mov	sp, r7
    cfc2:	bd80      	pop	{r7, pc}

0000cfc4 <CallBackTimeout>:
//  true : When leaving the loop GL_Window_MainLoop.
//  false : When leaving the loop GL_Window_MainLoop.
//****************************************************************************

static bool CallBackTimeout(T_GL_HMESSAGE hMessage)
{
    cfc4:	b580      	push	{r7, lr}
    cfc6:	b084      	sub	sp, #16
    cfc8:	af00      	add	r7, sp, #0
    cfca:	6078      	str	r0, [r7, #4]
    cfcc:	f644 1380 	movw	r3, #18816	; 0x4980
    cfd0:	f2c0 0302 	movt	r3, #2
    cfd4:	681b      	ldr	r3, [r3, #0]
    cfd6:	60fb      	str	r3, [r7, #12]
	// Will exit the application from the loop on GL_Window_MainLoop by returning
	// the result RES_TIMER_STATUS
	GL_Message_SetResult(hMessage, RES_TIMER_STATUS);
    cfd8:	6878      	ldr	r0, [r7, #4]
    cfda:	2104      	movs	r1, #4
    cfdc:	f00b fc9e 	bl	1891c <GL_Message_SetResult>

	// Stop the timer
	GL_Timer_Stop(GL_Message_GetWidget(hMessage));
    cfe0:	6878      	ldr	r0, [r7, #4]
    cfe2:	f00b fc89 	bl	188f8 <GL_Message_GetWidget>
    cfe6:	4603      	mov	r3, r0
    cfe8:	4618      	mov	r0, r3
    cfea:	f00b fd03 	bl	189f4 <GL_Timer_Stop>

	// Force the value to true when releasing the application from the main loop
	return true;
    cfee:	2301      	movs	r3, #1
}
    cff0:	4618      	mov	r0, r3
    cff2:	f644 1380 	movw	r3, #18816	; 0x4980
    cff6:	f2c0 0302 	movt	r3, #2
    cffa:	68fa      	ldr	r2, [r7, #12]
    cffc:	681b      	ldr	r3, [r3, #0]
    cffe:	429a      	cmp	r2, r3
    d000:	d001      	beq.n	d006 <CallBackTimeout+0x42>
    d002:	f7fb ff75 	bl	8ef0 <__stack_chk_fail>
    d006:	f107 0710 	add.w	r7, r7, #16
    d00a:	46bd      	mov	sp, r7
    d00c:	bd80      	pop	{r7, pc}
    d00e:	bf00      	nop

0000d010 <GoalCreateScreen>:
//   !NULL : The handle of the screen.
//   NULL : Screen failed
//****************************************************************************

T_GL_HWIDGET GoalCreateScreen (T_GL_HGRAPHIC_LIB hGraphicLib, const ST_DSP_LINE txLine[], ushort usMaxLine, T_GL_ENCODING_CHARSET eCharSet)
{
    d010:	b580      	push	{r7, lr}
    d012:	b090      	sub	sp, #64	; 0x40
    d014:	af00      	add	r7, sp, #0
    d016:	60f8      	str	r0, [r7, #12]
    d018:	60b9      	str	r1, [r7, #8]
    d01a:	603b      	str	r3, [r7, #0]
    d01c:	4613      	mov	r3, r2
    d01e:	80fb      	strh	r3, [r7, #6]
    d020:	f644 1380 	movw	r3, #18816	; 0x4980
    d024:	f2c0 0302 	movt	r3, #2
    d028:	681b      	ldr	r3, [r3, #0]
    d02a:	63fb      	str	r3, [r7, #60]	; 0x3c
	bool bTouch;
	ushort usLine;

	// Build screen context with MAX labels and 4 buttons (Cancel, Valid, Down and Up)
	// *******************************************************************************
	GL_GraphicLib_SetCharset(hGraphicLib, eCharSet);                                  // Change the encoding charset of the graphic library
    d02c:	68f8      	ldr	r0, [r7, #12]
    d02e:	6839      	ldr	r1, [r7, #0]
    d030:	f00b fc08 	bl	18844 <GL_GraphicLib_SetCharset>

	bTouch = GL_GraphicLib_IsTouchPresent(hGraphicLib);                               // Is it a touch screen?
    d034:	68f8      	ldr	r0, [r7, #12]
    d036:	f00b fbf3 	bl	18820 <GL_GraphicLib_IsTouchPresent>
    d03a:	4603      	mov	r3, r0
    d03c:	757b      	strb	r3, [r7, #21]

	hWindow = GL_Window_Create(hGraphicLib);                                          // Create a window in the user area
    d03e:	68f8      	ldr	r0, [r7, #12]
    d040:	f00b fef4 	bl	18e2c <GL_Window_Create>
    d044:	61b8      	str	r0, [r7, #24]
	CHECK(hWindow!=NULL, lblKO);
    d046:	69bb      	ldr	r3, [r7, #24]
    d048:	2b00      	cmp	r3, #0
    d04a:	f000 8163 	beq.w	d314 <GoalCreateScreen+0x304>

	hTimer = GL_Timer_Create(hWindow);                                                // Create a timer on this window
    d04e:	69b8      	ldr	r0, [r7, #24]
    d050:	f00b fcac 	bl	189ac <GL_Timer_Create>
    d054:	61f8      	str	r0, [r7, #28]
	CHECK(hTimer!=NULL, lblKO);
    d056:	69fb      	ldr	r3, [r7, #28]
    d058:	2b00      	cmp	r3, #0
    d05a:	f000 815b 	beq.w	d314 <GoalCreateScreen+0x304>
	GL_Widget_SetId(hTimer, TIMER_ID);                                                // Timer Identifier TIMER_ID
    d05e:	69f8      	ldr	r0, [r7, #28]
    d060:	2100      	movs	r1, #0
    d062:	f00b fdd5 	bl	18c10 <GL_Widget_SetId>
	GL_Widget_RegisterCallback(hTimer, GL_EVENT_TIMER_OUT, CallBackTimeout);          // Call back when the timer expired
    d066:	69f8      	ldr	r0, [r7, #28]
    d068:	2108      	movs	r1, #8
    d06a:	f64c 72c5 	movw	r2, #53189	; 0xcfc5
    d06e:	f2c0 0200 	movt	r2, #0
    d072:	f00b fcf5 	bl	18a60 <GL_Widget_RegisterCallback>

	hLayout = GL_Layout_Create(hWindow);                                              // Create a layout on this window
    d076:	69b8      	ldr	r0, [r7, #24]
    d078:	f00b fc1a 	bl	188b0 <GL_Layout_Create>
    d07c:	6238      	str	r0, [r7, #32]
	CHECK(hLayout!=NULL, lblKO);
    d07e:	6a3b      	ldr	r3, [r7, #32]
    d080:	2b00      	cmp	r3, #0
    d082:	f000 8147 	beq.w	d314 <GoalCreateScreen+0x304>

	for (usLine=0; usLine<usMaxLine; usLine++)                                        // Build labels on this layout
    d086:	2300      	movs	r3, #0
    d088:	82fb      	strh	r3, [r7, #22]
    d08a:	e03c      	b.n	d106 <GoalCreateScreen+0xf6>
	{
		hLabel = GL_Label_Create(hLayout);                                            // Create a label on this layout
    d08c:	6a38      	ldr	r0, [r7, #32]
    d08e:	f00b fbfd 	bl	1888c <GL_Label_Create>
    d092:	6278      	str	r0, [r7, #36]	; 0x24
		CHECK(hLabel!=NULL, lblKO);
    d094:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    d096:	2b00      	cmp	r3, #0
    d098:	f000 813c 	beq.w	d314 <GoalCreateScreen+0x304>
		GL_Widget_SetItem(hLabel, 0, usLine);                                         // Label location on this layout
    d09c:	8afb      	ldrh	r3, [r7, #22]
    d09e:	6a78      	ldr	r0, [r7, #36]	; 0x24
    d0a0:	2100      	movs	r1, #0
    d0a2:	461a      	mov	r2, r3
    d0a4:	f00b fdc6 	bl	18c34 <GL_Widget_SetItem>
		GL_Widget_SetText(hLabel, NULL);                                              // Clear text on this label
    d0a8:	6a78      	ldr	r0, [r7, #36]	; 0x24
    d0aa:	2100      	movs	r1, #0
    d0ac:	f00b fe40 	bl	18d30 <GL_Widget_SetText>
		GL_Widget_SetShrink(hLabel, GL_DIRECTION_WIDTH);                              // Shrink beyond its size (No width scrolling cell if label goes over screen)
    d0b0:	6a78      	ldr	r0, [r7, #36]	; 0x24
    d0b2:	2101      	movs	r1, #1
    d0b4:	f00b fe06 	bl	18cc4 <GL_Widget_SetShrink>
		if (IsColorDisplay())                                                         // Color display?
    d0b8:	f00a fb84 	bl	177c4 <IsColorDisplay>
    d0bc:	4603      	mov	r3, r0
    d0be:	2b00      	cmp	r3, #0
    d0c0:	d00b      	beq.n	d0da <GoalCreateScreen+0xca>
			GL_Widget_SetFontScale(hLabel, txLine[usLine].xColor.xFont.eScale);       // Yes, font scale color
    d0c2:	8afb      	ldrh	r3, [r7, #22]
    d0c4:	22ac      	movs	r2, #172	; 0xac
    d0c6:	fb02 f303 	mul.w	r3, r2, r3
    d0ca:	68ba      	ldr	r2, [r7, #8]
    d0cc:	18d3      	adds	r3, r2, r3
    d0ce:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    d0d0:	6a78      	ldr	r0, [r7, #36]	; 0x24
    d0d2:	4619      	mov	r1, r3
    d0d4:	f00b fd54 	bl	18b80 <GL_Widget_SetFontScale>
    d0d8:	e00b      	b.n	d0f2 <GoalCreateScreen+0xe2>
		else
			GL_Widget_SetFontScale(hLabel, txLine[usLine].xBW.xFont.eScale);          // No, font scale B&W
    d0da:	8afb      	ldrh	r3, [r7, #22]
    d0dc:	22ac      	movs	r2, #172	; 0xac
    d0de:	fb02 f303 	mul.w	r3, r2, r3
    d0e2:	68ba      	ldr	r2, [r7, #8]
    d0e4:	18d3      	adds	r3, r2, r3
    d0e6:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
    d0ea:	6a78      	ldr	r0, [r7, #36]	; 0x24
    d0ec:	4619      	mov	r1, r3
    d0ee:	f00b fd47 	bl	18b80 <GL_Widget_SetFontScale>
		GL_Widget_SetId(hLabel, LABEL_0_ID+usLine);                                   // Label identifier LABEL0_ID + (0..8)
    d0f2:	8afb      	ldrh	r3, [r7, #22]
    d0f4:	f503 7380 	add.w	r3, r3, #256	; 0x100
    d0f8:	6a78      	ldr	r0, [r7, #36]	; 0x24
    d0fa:	4619      	mov	r1, r3
    d0fc:	f00b fd88 	bl	18c10 <GL_Widget_SetId>
	GL_Widget_RegisterCallback(hTimer, GL_EVENT_TIMER_OUT, CallBackTimeout);          // Call back when the timer expired

	hLayout = GL_Layout_Create(hWindow);                                              // Create a layout on this window
	CHECK(hLayout!=NULL, lblKO);

	for (usLine=0; usLine<usMaxLine; usLine++)                                        // Build labels on this layout
    d100:	8afb      	ldrh	r3, [r7, #22]
    d102:	3301      	adds	r3, #1
    d104:	82fb      	strh	r3, [r7, #22]
    d106:	8afa      	ldrh	r2, [r7, #22]
    d108:	88fb      	ldrh	r3, [r7, #6]
    d10a:	429a      	cmp	r2, r3
    d10c:	d3be      	bcc.n	d08c <GoalCreateScreen+0x7c>
		else
			GL_Widget_SetFontScale(hLabel, txLine[usLine].xBW.xFont.eScale);          // No, font scale B&W
		GL_Widget_SetId(hLabel, LABEL_0_ID+usLine);                                   // Label identifier LABEL0_ID + (0..8)
	}

	hLayout2 = GL_Layout_Create(hLayout);                                             // Create a second layout on this layout
    d10e:	6a38      	ldr	r0, [r7, #32]
    d110:	f00b fbce 	bl	188b0 <GL_Layout_Create>
    d114:	62b8      	str	r0, [r7, #40]	; 0x28
	CHECK(hLayout2!=NULL, lblKO);
    d116:	6abb      	ldr	r3, [r7, #40]	; 0x28
    d118:	2b00      	cmp	r3, #0
    d11a:	f000 80fb 	beq.w	d314 <GoalCreateScreen+0x304>
	GL_Widget_SetId(hLayout2, LAYOUT2_ID);                                            // Second layout identifier
    d11e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    d120:	f44f 61c0 	mov.w	r1, #1536	; 0x600
    d124:	f00b fd74 	bl	18c10 <GL_Widget_SetId>
	GL_Widget_SetItem(hLayout2, 0, usLine);                                           // Second layout location on this layout
    d128:	8afb      	ldrh	r3, [r7, #22]
    d12a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    d12c:	2100      	movs	r1, #0
    d12e:	461a      	mov	r2, r3
    d130:	f00b fd80 	bl	18c34 <GL_Widget_SetItem>
	GL_Widget_SetGrow(hLayout2, GL_DIRECTION_WIDTH);                                  // Grow beyond its size (Background width around layout will fill the complete cell)
    d134:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    d136:	2101      	movs	r1, #1
    d138:	f00b fd58 	bl	18bec <GL_Widget_SetGrow>

	hButtonCan = GL_Button_Create(hLayout2);                                          // Create a cancel button on this second layout
    d13c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    d13e:	f00b f9c7 	bl	184d0 <GL_Button_Create>
    d142:	62f8      	str	r0, [r7, #44]	; 0x2c
	CHECK(hButtonCan!=NULL, lblKO);
    d144:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    d146:	2b00      	cmp	r3, #0
    d148:	f000 80e4 	beq.w	d314 <GoalCreateScreen+0x304>
	GL_Widget_SetSource(hButtonCan, "skin://images/cancel.wgu");                      // Set the cancel skinned image
    d14c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
    d14e:	f649 5114 	movw	r1, #40212	; 0x9d14
    d152:	f2c0 0101 	movt	r1, #1
    d156:	f00b fdd9 	bl	18d0c <GL_Widget_SetSource>
	GL_Widget_SetItem(hButtonCan, 0, 0);                                              // Button location on this layout
    d15a:	6af8      	ldr	r0, [r7, #44]	; 0x2c
    d15c:	2100      	movs	r1, #0
    d15e:	2200      	movs	r2, #0
    d160:	f00b fd68 	bl	18c34 <GL_Widget_SetItem>
	GL_Widget_SetExpand(hButtonCan, GL_DIRECTION_WIDTH);                              // Expand button width
    d164:	6af8      	ldr	r0, [r7, #44]	; 0x2c
    d166:	2101      	movs	r1, #1
    d168:	f00b fcd4 	bl	18b14 <GL_Widget_SetExpand>
	GL_Widget_SetShortcut(hButtonCan, GL_KEY_CANCEL);                                 // Shortcut on this button
    d16c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
    d16e:	f64f 0151 	movw	r1, #63569	; 0xf851
    d172:	f00b fd95 	bl	18ca0 <GL_Widget_SetShortcut>
	GL_Widget_SetId(hButtonCan, BUTTON_CAN_ID);                                       // Cancel button Identifier
    d176:	6af8      	ldr	r0, [r7, #44]	; 0x2c
    d178:	f44f 7140 	mov.w	r1, #768	; 0x300
    d17c:	f00b fd48 	bl	18c10 <GL_Widget_SetId>
	GL_Widget_SetGrow(hButtonCan, GL_DIRECTION_WIDTH);                                // Grow beyond its size (Background width around cancel button will fill the complete cell)
    d180:	6af8      	ldr	r0, [r7, #44]	; 0x2c
    d182:	2101      	movs	r1, #1
    d184:	f00b fd32 	bl	18bec <GL_Widget_SetGrow>
	GL_Widget_SetFocusable(hButtonCan, false);                                        // No focus on this button
    d188:	6af8      	ldr	r0, [r7, #44]	; 0x2c
    d18a:	2100      	movs	r1, #0
    d18c:	f00b fcd4 	bl	18b38 <GL_Widget_SetFocusable>
	GL_Widget_RegisterCallback(hButtonCan, GL_EVENT_STYLUS_CLICK, CallBackCancelKey); // Call back when key pressed
    d190:	6af8      	ldr	r0, [r7, #44]	; 0x2c
    d192:	2167      	movs	r1, #103	; 0x67
    d194:	f64c 7211 	movw	r2, #53009	; 0xcf11
    d198:	f2c0 0200 	movt	r2, #0
    d19c:	f00b fc60 	bl	18a60 <GL_Widget_RegisterCallback>

	hButtonDown = GL_Button_Create(hLayout2);                                         // Create a down button on this layout
    d1a0:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    d1a2:	f00b f995 	bl	184d0 <GL_Button_Create>
    d1a6:	6338      	str	r0, [r7, #48]	; 0x30
	CHECK(hButtonDown!=NULL, lblKO);
    d1a8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    d1aa:	2b00      	cmp	r3, #0
    d1ac:	f000 80b2 	beq.w	d314 <GoalCreateScreen+0x304>
	GL_Widget_SetSource(hButtonDown, "skin://images/downArrow.wgu");                  // Set the down arrow skinned image
    d1b0:	6b38      	ldr	r0, [r7, #48]	; 0x30
    d1b2:	f649 5130 	movw	r1, #40240	; 0x9d30
    d1b6:	f2c0 0101 	movt	r1, #1
    d1ba:	f00b fda7 	bl	18d0c <GL_Widget_SetSource>
	GL_Widget_SetItem(hButtonDown, 1, 0);                                             // Button location on this layout
    d1be:	6b38      	ldr	r0, [r7, #48]	; 0x30
    d1c0:	2101      	movs	r1, #1
    d1c2:	2200      	movs	r2, #0
    d1c4:	f00b fd36 	bl	18c34 <GL_Widget_SetItem>
	GL_Widget_SetExpand(hButtonDown, GL_DIRECTION_WIDTH);                             // Expand button width
    d1c8:	6b38      	ldr	r0, [r7, #48]	; 0x30
    d1ca:	2101      	movs	r1, #1
    d1cc:	f00b fca2 	bl	18b14 <GL_Widget_SetExpand>
	GL_Widget_SetForeColor(hButtonDown, GL_COLOR_WHITE);                              // Foreground color
    d1d0:	6b38      	ldr	r0, [r7, #48]	; 0x30
    d1d2:	f04f 31ff 	mov.w	r1, #4294967295
    d1d6:	f00b fcf7 	bl	18bc8 <GL_Widget_SetForeColor>
	if (bTouch)
    d1da:	7d7b      	ldrb	r3, [r7, #21]
    d1dc:	2b00      	cmp	r3, #0
    d1de:	d004      	beq.n	d1ea <GoalCreateScreen+0x1da>
		GL_Widget_SetShortcut(hButtonDown, GL_KEY_DOT);                               // Shortcut on this button
    d1e0:	6b38      	ldr	r0, [r7, #48]	; 0x30
    d1e2:	212e      	movs	r1, #46	; 0x2e
    d1e4:	f00b fd5c 	bl	18ca0 <GL_Widget_SetShortcut>
    d1e8:	e004      	b.n	d1f4 <GoalCreateScreen+0x1e4>
	else
		GL_Widget_SetShortcut(hButtonDown, GL_KEY_DOWN);                              // Shortcut on this button
    d1ea:	6b38      	ldr	r0, [r7, #48]	; 0x30
    d1ec:	f64f 015a 	movw	r1, #63578	; 0xf85a
    d1f0:	f00b fd56 	bl	18ca0 <GL_Widget_SetShortcut>
	GL_Widget_SetId(hButtonDown, BUTTON_DOWN_ID);                                     // Down button Identifier
    d1f4:	6b38      	ldr	r0, [r7, #48]	; 0x30
    d1f6:	f44f 6180 	mov.w	r1, #1024	; 0x400
    d1fa:	f00b fd09 	bl	18c10 <GL_Widget_SetId>
	GL_Widget_SetGrow(hButtonDown, GL_DIRECTION_WIDTH);                               // Grow beyond its size (Background width around down button will fill the complete cell)
    d1fe:	6b38      	ldr	r0, [r7, #48]	; 0x30
    d200:	2101      	movs	r1, #1
    d202:	f00b fcf3 	bl	18bec <GL_Widget_SetGrow>
	GL_Widget_SetFocusable(hButtonDown, false);                                       // No focus on this button
    d206:	6b38      	ldr	r0, [r7, #48]	; 0x30
    d208:	2100      	movs	r1, #0
    d20a:	f00b fc95 	bl	18b38 <GL_Widget_SetFocusable>
	GL_Widget_RegisterCallback(hButtonDown, GL_EVENT_STYLUS_CLICK, CallBackDownKey);  // Call back when key pressed
    d20e:	6b38      	ldr	r0, [r7, #48]	; 0x30
    d210:	2167      	movs	r1, #103	; 0x67
    d212:	f64c 724d 	movw	r2, #53069	; 0xcf4d
    d216:	f2c0 0200 	movt	r2, #0
    d21a:	f00b fc21 	bl	18a60 <GL_Widget_RegisterCallback>

	hButtonUp = GL_Button_Create(hLayout2);                                           // Create a up button on this layout
    d21e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    d220:	f00b f956 	bl	184d0 <GL_Button_Create>
    d224:	6378      	str	r0, [r7, #52]	; 0x34
	CHECK(hButtonUp!=NULL, lblKO);
    d226:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    d228:	2b00      	cmp	r3, #0
    d22a:	d073      	beq.n	d314 <GoalCreateScreen+0x304>
	GL_Widget_SetSource(hButtonUp, "skin://images/upArrow.wgu");                      // Set the up arrow skinned image
    d22c:	6b78      	ldr	r0, [r7, #52]	; 0x34
    d22e:	f649 514c 	movw	r1, #40268	; 0x9d4c
    d232:	f2c0 0101 	movt	r1, #1
    d236:	f00b fd69 	bl	18d0c <GL_Widget_SetSource>
	GL_Widget_SetItem(hButtonUp, 2, 0);                                               // Button location on this layout
    d23a:	6b78      	ldr	r0, [r7, #52]	; 0x34
    d23c:	2102      	movs	r1, #2
    d23e:	2200      	movs	r2, #0
    d240:	f00b fcf8 	bl	18c34 <GL_Widget_SetItem>
	GL_Widget_SetExpand(hButtonUp, GL_DIRECTION_WIDTH);                               // Expand button width
    d244:	6b78      	ldr	r0, [r7, #52]	; 0x34
    d246:	2101      	movs	r1, #1
    d248:	f00b fc64 	bl	18b14 <GL_Widget_SetExpand>
	GL_Widget_SetForeColor(hButtonUp, GL_COLOR_WHITE);                                // Foreground color
    d24c:	6b78      	ldr	r0, [r7, #52]	; 0x34
    d24e:	f04f 31ff 	mov.w	r1, #4294967295
    d252:	f00b fcb9 	bl	18bc8 <GL_Widget_SetForeColor>
	if (bTouch)                                                                       // Touch screen?
    d256:	7d7b      	ldrb	r3, [r7, #21]
    d258:	2b00      	cmp	r3, #0
    d25a:	d005      	beq.n	d268 <GoalCreateScreen+0x258>
		GL_Widget_SetShortcut(hButtonUp, GL_KEY_F);                                   // Yes, Shortcut (Key F) on this button
    d25c:	6b78      	ldr	r0, [r7, #52]	; 0x34
    d25e:	f64f 0154 	movw	r1, #63572	; 0xf854
    d262:	f00b fd1d 	bl	18ca0 <GL_Widget_SetShortcut>
    d266:	e004      	b.n	d272 <GoalCreateScreen+0x262>
	else
		GL_Widget_SetShortcut(hButtonUp, GL_KEY_UP);                                  // No, Shortcut (Key Up) on this button
    d268:	6b78      	ldr	r0, [r7, #52]	; 0x34
    d26a:	f64f 0159 	movw	r1, #63577	; 0xf859
    d26e:	f00b fd17 	bl	18ca0 <GL_Widget_SetShortcut>
	GL_Widget_SetId(hButtonUp, BUTTON_UP_ID);                                         // Up button Identifier
    d272:	6b78      	ldr	r0, [r7, #52]	; 0x34
    d274:	f44f 61a0 	mov.w	r1, #1280	; 0x500
    d278:	f00b fcca 	bl	18c10 <GL_Widget_SetId>
	GL_Widget_SetGrow(hButtonUp, GL_DIRECTION_WIDTH);                                 // Grow beyond its size (Background width around up button will fill the complete cell)
    d27c:	6b78      	ldr	r0, [r7, #52]	; 0x34
    d27e:	2101      	movs	r1, #1
    d280:	f00b fcb4 	bl	18bec <GL_Widget_SetGrow>
	GL_Widget_SetFocusable(hButtonUp, false);                                         // No focus on this button
    d284:	6b78      	ldr	r0, [r7, #52]	; 0x34
    d286:	2100      	movs	r1, #0
    d288:	f00b fc56 	bl	18b38 <GL_Widget_SetFocusable>
	GL_Widget_RegisterCallback(hButtonUp, GL_EVENT_STYLUS_CLICK, CallBackUpKey);      // Call back when key pressed
    d28c:	6b78      	ldr	r0, [r7, #52]	; 0x34
    d28e:	2167      	movs	r1, #103	; 0x67
    d290:	f64c 7289 	movw	r2, #53129	; 0xcf89
    d294:	f2c0 0200 	movt	r2, #0
    d298:	f00b fbe2 	bl	18a60 <GL_Widget_RegisterCallback>

	hButtonVal = GL_Button_Create(hLayout2);                                          // Create a valid button on this second layout
    d29c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    d29e:	f00b f917 	bl	184d0 <GL_Button_Create>
    d2a2:	63b8      	str	r0, [r7, #56]	; 0x38
	CHECK(hButtonVal!=NULL, lblKO);
    d2a4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    d2a6:	2b00      	cmp	r3, #0
    d2a8:	d034      	beq.n	d314 <GoalCreateScreen+0x304>
	GL_Widget_SetSource(hButtonVal, "skin://images/validation.wgu");                  // Set the valid skinned image
    d2aa:	6bb8      	ldr	r0, [r7, #56]	; 0x38
    d2ac:	f649 5168 	movw	r1, #40296	; 0x9d68
    d2b0:	f2c0 0101 	movt	r1, #1
    d2b4:	f00b fd2a 	bl	18d0c <GL_Widget_SetSource>
	GL_Widget_SetItem(hButtonVal, 3, 0);                                              // Button location on this layout
    d2b8:	6bb8      	ldr	r0, [r7, #56]	; 0x38
    d2ba:	2103      	movs	r1, #3
    d2bc:	2200      	movs	r2, #0
    d2be:	f00b fcb9 	bl	18c34 <GL_Widget_SetItem>
	GL_Widget_SetExpand(hButtonVal, GL_DIRECTION_WIDTH);                              // Expand button width
    d2c2:	6bb8      	ldr	r0, [r7, #56]	; 0x38
    d2c4:	2101      	movs	r1, #1
    d2c6:	f00b fc25 	bl	18b14 <GL_Widget_SetExpand>
	GL_Widget_SetShortcut(hButtonVal, GL_KEY_VALID);                                  // Shortcut on this button
    d2ca:	6bb8      	ldr	r0, [r7, #56]	; 0x38
    d2cc:	f64f 0150 	movw	r1, #63568	; 0xf850
    d2d0:	f00b fce6 	bl	18ca0 <GL_Widget_SetShortcut>
	GL_Widget_SetId(hButtonVal, BUTTON_VAL_ID);                                       // Valid button Identifier
    d2d4:	6bb8      	ldr	r0, [r7, #56]	; 0x38
    d2d6:	f44f 7100 	mov.w	r1, #512	; 0x200
    d2da:	f00b fc99 	bl	18c10 <GL_Widget_SetId>
	GL_Widget_SetGrow(hButtonVal, GL_DIRECTION_WIDTH);                                // Grow beyond its size (Background width around valid button will fill the complete cell)
    d2de:	6bb8      	ldr	r0, [r7, #56]	; 0x38
    d2e0:	2101      	movs	r1, #1
    d2e2:	f00b fc83 	bl	18bec <GL_Widget_SetGrow>
	GL_Widget_SetFocusable(hButtonVal, false);                                        // No focus on this button
    d2e6:	6bb8      	ldr	r0, [r7, #56]	; 0x38
    d2e8:	2100      	movs	r1, #0
    d2ea:	f00b fc25 	bl	18b38 <GL_Widget_SetFocusable>
	GL_Widget_RegisterCallback(hButtonVal, GL_EVENT_STYLUS_CLICK, CallBackValidKey);  // Call back when key pressed
    d2ee:	6bb8      	ldr	r0, [r7, #56]	; 0x38
    d2f0:	2167      	movs	r1, #103	; 0x67
    d2f2:	f64c 62d5 	movw	r2, #52949	; 0xced5
    d2f6:	f2c0 0200 	movt	r2, #0
    d2fa:	f00b fbb1 	bl	18a60 <GL_Widget_RegisterCallback>

	if(!bTouch)                                                                       // Touch screen?
    d2fe:	7d7b      	ldrb	r3, [r7, #21]
    d300:	f083 0301 	eor.w	r3, r3, #1
    d304:	b2db      	uxtb	r3, r3
    d306:	2b00      	cmp	r3, #0
    d308:	d00d      	beq.n	d326 <GoalCreateScreen+0x316>
		GL_Widget_SetVisible(hLayout2, false);                                        // No, do not show second layout (keep shortcut access on key pressed)
    d30a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    d30c:	2100      	movs	r1, #0
    d30e:	f00b fd57 	bl	18dc0 <GL_Widget_SetVisible>

	goto lblEnd;
    d312:	e008      	b.n	d326 <GoalCreateScreen+0x316>

	// Errors treatment
    // ****************
lblKO:                                                                                // Window creation failed
	if (hWindow)
    d314:	69bb      	ldr	r3, [r7, #24]
    d316:	2b00      	cmp	r3, #0
    d318:	d007      	beq.n	d32a <GoalCreateScreen+0x31a>
	{
		GL_Widget_Destroy(hWindow);                                                   // Destroy window and all widgets
    d31a:	69b8      	ldr	r0, [r7, #24]
    d31c:	f00b fb7c 	bl	18a18 <GL_Widget_Destroy>
		hWindow=NULL;
    d320:	2300      	movs	r3, #0
    d322:	61bb      	str	r3, [r7, #24]
	}
	goto lblEnd;
    d324:	e001      	b.n	d32a <GoalCreateScreen+0x31a>
	GL_Widget_RegisterCallback(hButtonVal, GL_EVENT_STYLUS_CLICK, CallBackValidKey);  // Call back when key pressed

	if(!bTouch)                                                                       // Touch screen?
		GL_Widget_SetVisible(hLayout2, false);                                        // No, do not show second layout (keep shortcut access on key pressed)

	goto lblEnd;
    d326:	bf00      	nop
    d328:	e000      	b.n	d32c <GoalCreateScreen+0x31c>
	if (hWindow)
	{
		GL_Widget_Destroy(hWindow);                                                   // Destroy window and all widgets
		hWindow=NULL;
	}
	goto lblEnd;
    d32a:	bf00      	nop
lblEnd:
	return hWindow;
    d32c:	69bb      	ldr	r3, [r7, #24]
}
    d32e:	4618      	mov	r0, r3
    d330:	f644 1380 	movw	r3, #18816	; 0x4980
    d334:	f2c0 0302 	movt	r3, #2
    d338:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    d33a:	681b      	ldr	r3, [r3, #0]
    d33c:	429a      	cmp	r2, r3
    d33e:	d001      	beq.n	d344 <GoalCreateScreen+0x334>
    d340:	f7fb fdd6 	bl	8ef0 <__stack_chk_fail>
    d344:	f107 0740 	add.w	r7, r7, #64	; 0x40
    d348:	46bd      	mov	sp, r7
    d34a:	bd80      	pop	{r7, pc}

0000d34c <GoalClrScreen>:
//   >=0 : Clear screen done.
//   <0 : Clear screen failed.
//****************************************************************************

int GoalClrScreen(T_GL_HWIDGET hWindow, T_GL_COLOR ulBackColor, unsigned int uiKeys, bool bRefresh)
{
    d34c:	b580      	push	{r7, lr}
    d34e:	b090      	sub	sp, #64	; 0x40
    d350:	af04      	add	r7, sp, #16
    d352:	60f8      	str	r0, [r7, #12]
    d354:	60b9      	str	r1, [r7, #8]
    d356:	607a      	str	r2, [r7, #4]
    d358:	70fb      	strb	r3, [r7, #3]
    d35a:	f644 1380 	movw	r3, #18816	; 0x4980
    d35e:	f2c0 0302 	movt	r3, #2
    d362:	681b      	ldr	r3, [r3, #0]
    d364:	62fb      	str	r3, [r7, #44]	; 0x2c
	T_GL_HWIDGET hLabel, hButtonVal, hButtonCan, hButtonDown, hButtonUp;
	int iRet;

	// Disable the complete second layout
	// **********************************
	hButtonCan = GL_Widget_SearchId(hWindow, BUTTON_CAN_ID);      // Retrieve the cancel button on this second layout
    d366:	68f8      	ldr	r0, [r7, #12]
    d368:	f44f 7140 	mov.w	r1, #768	; 0x300
    d36c:	f00b fb8a 	bl	18a84 <GL_Widget_SearchId>
    d370:	61b8      	str	r0, [r7, #24]
	CHECK(hButtonCan!=NULL, lblKO);
    d372:	69bb      	ldr	r3, [r7, #24]
    d374:	2b00      	cmp	r3, #0
    d376:	f000 80d3 	beq.w	d520 <GoalClrScreen+0x1d4>
	hButtonDown = GL_Widget_SearchId(hWindow, BUTTON_DOWN_ID);    // Retrieve the down button on this second layout
    d37a:	68f8      	ldr	r0, [r7, #12]
    d37c:	f44f 6180 	mov.w	r1, #1024	; 0x400
    d380:	f00b fb80 	bl	18a84 <GL_Widget_SearchId>
    d384:	61f8      	str	r0, [r7, #28]
	CHECK(hButtonDown!=NULL, lblKO);
    d386:	69fb      	ldr	r3, [r7, #28]
    d388:	2b00      	cmp	r3, #0
    d38a:	f000 80c9 	beq.w	d520 <GoalClrScreen+0x1d4>
	hButtonUp = GL_Widget_SearchId(hWindow, BUTTON_UP_ID);        // Retrieve the up button on this second layout
    d38e:	68f8      	ldr	r0, [r7, #12]
    d390:	f44f 61a0 	mov.w	r1, #1280	; 0x500
    d394:	f00b fb76 	bl	18a84 <GL_Widget_SearchId>
    d398:	6238      	str	r0, [r7, #32]
	CHECK(hButtonUp!=NULL, lblKO);
    d39a:	6a3b      	ldr	r3, [r7, #32]
    d39c:	2b00      	cmp	r3, #0
    d39e:	f000 80bf 	beq.w	d520 <GoalClrScreen+0x1d4>
	hButtonVal = GL_Widget_SearchId(hWindow, BUTTON_VAL_ID);      // Retrieve the valid button on this second layout
    d3a2:	68f8      	ldr	r0, [r7, #12]
    d3a4:	f44f 7100 	mov.w	r1, #512	; 0x200
    d3a8:	f00b fb6c 	bl	18a84 <GL_Widget_SearchId>
    d3ac:	6278      	str	r0, [r7, #36]	; 0x24
	CHECK(hButtonVal!=NULL, lblKO);
    d3ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    d3b0:	2b00      	cmp	r3, #0
    d3b2:	f000 80b5 	beq.w	d520 <GoalClrScreen+0x1d4>

	GL_Widget_SetVisible(hButtonCan, false);                      // Blind the cancel button
    d3b6:	69b8      	ldr	r0, [r7, #24]
    d3b8:	2100      	movs	r1, #0
    d3ba:	f00b fd01 	bl	18dc0 <GL_Widget_SetVisible>
	GL_Widget_UnregisterCallback(hButtonCan, GL_EVENT_STYLUS_CLICK, CallBackCancelKey); // Unregister call back on cancel button
    d3be:	69b8      	ldr	r0, [r7, #24]
    d3c0:	2167      	movs	r1, #103	; 0x67
    d3c2:	f64c 7211 	movw	r2, #53009	; 0xcf11
    d3c6:	f2c0 0200 	movt	r2, #0
    d3ca:	f00b fd1d 	bl	18e08 <GL_Widget_UnregisterCallback>

	GL_Widget_SetVisible(hButtonDown, false);                     // Blind the down button
    d3ce:	69f8      	ldr	r0, [r7, #28]
    d3d0:	2100      	movs	r1, #0
    d3d2:	f00b fcf5 	bl	18dc0 <GL_Widget_SetVisible>
	GL_Widget_UnregisterCallback(hButtonDown, GL_EVENT_STYLUS_CLICK, CallBackDownKey); // Unregister call back on down button
    d3d6:	69f8      	ldr	r0, [r7, #28]
    d3d8:	2167      	movs	r1, #103	; 0x67
    d3da:	f64c 724d 	movw	r2, #53069	; 0xcf4d
    d3de:	f2c0 0200 	movt	r2, #0
    d3e2:	f00b fd11 	bl	18e08 <GL_Widget_UnregisterCallback>

	GL_Widget_SetVisible(hButtonUp, false);                       // Blind the up button
    d3e6:	6a38      	ldr	r0, [r7, #32]
    d3e8:	2100      	movs	r1, #0
    d3ea:	f00b fce9 	bl	18dc0 <GL_Widget_SetVisible>
	GL_Widget_UnregisterCallback(hButtonUp, GL_EVENT_STYLUS_CLICK, CallBackUpKey); // Unregister call back on up button
    d3ee:	6a38      	ldr	r0, [r7, #32]
    d3f0:	2167      	movs	r1, #103	; 0x67
    d3f2:	f64c 7289 	movw	r2, #53129	; 0xcf89
    d3f6:	f2c0 0200 	movt	r2, #0
    d3fa:	f00b fd05 	bl	18e08 <GL_Widget_UnregisterCallback>

	GL_Widget_SetVisible(hButtonVal, false);                      // Blind the valid button
    d3fe:	6a78      	ldr	r0, [r7, #36]	; 0x24
    d400:	2100      	movs	r1, #0
    d402:	f00b fcdd 	bl	18dc0 <GL_Widget_SetVisible>
	GL_Widget_UnregisterCallback(hButtonVal, GL_EVENT_STYLUS_CLICK, CallBackValidKey); // Unregister call back on valid button
    d406:	6a78      	ldr	r0, [r7, #36]	; 0x24
    d408:	2167      	movs	r1, #103	; 0x67
    d40a:	f64c 62d5 	movw	r2, #52949	; 0xced5
    d40e:	f2c0 0200 	movt	r2, #0
    d412:	f00b fcf9 	bl	18e08 <GL_Widget_UnregisterCallback>

	// Set the second layout with the right properties
	// ***********************************************
	if ((uiKeys & KEY_CANCEL) == KEY_CANCEL)                      // Cancel key?
    d416:	687b      	ldr	r3, [r7, #4]
    d418:	f003 0302 	and.w	r3, r3, #2
    d41c:	2b00      	cmp	r3, #0
    d41e:	d00b      	beq.n	d438 <GoalClrScreen+0xec>
	{
		GL_Widget_SetVisible(hButtonCan, true);                   // Yes, show the cancel key on this second layout
    d420:	69b8      	ldr	r0, [r7, #24]
    d422:	2101      	movs	r1, #1
    d424:	f00b fccc 	bl	18dc0 <GL_Widget_SetVisible>
		GL_Widget_RegisterCallback(hButtonCan, GL_EVENT_STYLUS_CLICK, CallBackCancelKey); // Register call back when cancel key pressed or touched
    d428:	69b8      	ldr	r0, [r7, #24]
    d42a:	2167      	movs	r1, #103	; 0x67
    d42c:	f64c 7211 	movw	r2, #53009	; 0xcf11
    d430:	f2c0 0200 	movt	r2, #0
    d434:	f00b fb14 	bl	18a60 <GL_Widget_RegisterCallback>
	}

	if ((uiKeys & KEY_DOWN) == KEY_DOWN)                          // Down key?
    d438:	687b      	ldr	r3, [r7, #4]
    d43a:	f003 0308 	and.w	r3, r3, #8
    d43e:	2b00      	cmp	r3, #0
    d440:	d00b      	beq.n	d45a <GoalClrScreen+0x10e>
	{
		GL_Widget_SetVisible(hButtonDown, true);                  // Yes, show the down key on this second layout
    d442:	69f8      	ldr	r0, [r7, #28]
    d444:	2101      	movs	r1, #1
    d446:	f00b fcbb 	bl	18dc0 <GL_Widget_SetVisible>
		GL_Widget_RegisterCallback(hButtonDown, GL_EVENT_STYLUS_CLICK, CallBackDownKey); // Register call back when down key pressed or touched
    d44a:	69f8      	ldr	r0, [r7, #28]
    d44c:	2167      	movs	r1, #103	; 0x67
    d44e:	f64c 724d 	movw	r2, #53069	; 0xcf4d
    d452:	f2c0 0200 	movt	r2, #0
    d456:	f00b fb03 	bl	18a60 <GL_Widget_RegisterCallback>
	}

	if ((uiKeys & KEY_UP) == KEY_UP)                              // Up key?
    d45a:	687b      	ldr	r3, [r7, #4]
    d45c:	f003 0304 	and.w	r3, r3, #4
    d460:	2b00      	cmp	r3, #0
    d462:	d00b      	beq.n	d47c <GoalClrScreen+0x130>
	{
		GL_Widget_SetVisible(hButtonUp, true);                    // Yes, show the up key on this second layout
    d464:	6a38      	ldr	r0, [r7, #32]
    d466:	2101      	movs	r1, #1
    d468:	f00b fcaa 	bl	18dc0 <GL_Widget_SetVisible>
		GL_Widget_RegisterCallback(hButtonUp, GL_EVENT_STYLUS_CLICK, CallBackUpKey); // Register call back when up key pressed or touched
    d46c:	6a38      	ldr	r0, [r7, #32]
    d46e:	2167      	movs	r1, #103	; 0x67
    d470:	f64c 7289 	movw	r2, #53129	; 0xcf89
    d474:	f2c0 0200 	movt	r2, #0
    d478:	f00b faf2 	bl	18a60 <GL_Widget_RegisterCallback>
	}

	if ((uiKeys & KEY_VALID) == KEY_VALID)                        // Valid key?
    d47c:	687b      	ldr	r3, [r7, #4]
    d47e:	f003 0301 	and.w	r3, r3, #1
    d482:	2b00      	cmp	r3, #0
    d484:	d00b      	beq.n	d49e <GoalClrScreen+0x152>
	{
		GL_Widget_SetVisible(hButtonVal, true);                   // Yes, show the valid key on this second layout
    d486:	6a78      	ldr	r0, [r7, #36]	; 0x24
    d488:	2101      	movs	r1, #1
    d48a:	f00b fc99 	bl	18dc0 <GL_Widget_SetVisible>
		GL_Widget_RegisterCallback(hButtonVal, GL_EVENT_STYLUS_CLICK, CallBackValidKey); // Register call back when key pressed or touched
    d48e:	6a78      	ldr	r0, [r7, #36]	; 0x24
    d490:	2167      	movs	r1, #103	; 0x67
    d492:	f64c 62d5 	movw	r2, #52949	; 0xced5
    d496:	f2c0 0200 	movt	r2, #0
    d49a:	f00b fae1 	bl	18a60 <GL_Widget_RegisterCallback>
	}

	if (IsColorDisplay())                                         // Color display?
    d49e:	f00a f991 	bl	177c4 <IsColorDisplay>
    d4a2:	4603      	mov	r3, r0
    d4a4:	2b00      	cmp	r3, #0
    d4a6:	d004      	beq.n	d4b2 <GoalClrScreen+0x166>
		GL_Widget_SetBackColor(hWindow, ulBackColor);             // Yes, set window back color
    d4a8:	68f8      	ldr	r0, [r7, #12]
    d4aa:	68b9      	ldr	r1, [r7, #8]
    d4ac:	f00b fb0e 	bl	18acc <GL_Widget_SetBackColor>
    d4b0:	e006      	b.n	d4c0 <GoalClrScreen+0x174>
	else
	{
		ulBackColor = GL_COLOR_WHITE;                             // No, force window back color to white
    d4b2:	f04f 33ff 	mov.w	r3, #4294967295
    d4b6:	60bb      	str	r3, [r7, #8]
		GL_Widget_SetBackColor(hWindow, ulBackColor);
    d4b8:	68f8      	ldr	r0, [r7, #12]
    d4ba:	68b9      	ldr	r1, [r7, #8]
    d4bc:	f00b fb06 	bl	18acc <GL_Widget_SetBackColor>
	}

	// Clear screen
	// ************
	usIdx=0;
    d4c0:	2300      	movs	r3, #0
    d4c2:	827b      	strh	r3, [r7, #18]
	while(1)
	{
		hLabel = GL_Widget_SearchId(hWindow, LABEL_0_ID+usIdx++);  // Get label from its id
    d4c4:	8a7b      	ldrh	r3, [r7, #18]
    d4c6:	f503 7380 	add.w	r3, r3, #256	; 0x100
    d4ca:	8a7a      	ldrh	r2, [r7, #18]
    d4cc:	3201      	adds	r2, #1
    d4ce:	827a      	strh	r2, [r7, #18]
    d4d0:	68f8      	ldr	r0, [r7, #12]
    d4d2:	4619      	mov	r1, r3
    d4d4:	f00b fad6 	bl	18a84 <GL_Widget_SearchId>
    d4d8:	62b8      	str	r0, [r7, #40]	; 0x28
		if(hLabel == NULL)
    d4da:	6abb      	ldr	r3, [r7, #40]	; 0x28
    d4dc:	2b00      	cmp	r3, #0
    d4de:	d014      	beq.n	d50a <GoalClrScreen+0x1be>
			break;
		GL_Widget_SetText(hLabel, NULL);                          // Remove label text
    d4e0:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    d4e2:	2100      	movs	r1, #0
    d4e4:	f00b fc24 	bl	18d30 <GL_Widget_SetText>
		GL_Widget_SetBorders(hLabel, 0, 0, 0, 0, GL_UNIT_PIXEL, ulBackColor); // Remove border with window back color
    d4e8:	2300      	movs	r3, #0
    d4ea:	9300      	str	r3, [sp, #0]
    d4ec:	2300      	movs	r3, #0
    d4ee:	9301      	str	r3, [sp, #4]
    d4f0:	68bb      	ldr	r3, [r7, #8]
    d4f2:	9302      	str	r3, [sp, #8]
    d4f4:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    d4f6:	2100      	movs	r1, #0
    d4f8:	2200      	movs	r2, #0
    d4fa:	2300      	movs	r3, #0
    d4fc:	f00b faf8 	bl	18af0 <GL_Widget_SetBorders>
		GL_Widget_SetBackColor(hLabel, ulBackColor);              // Paint label back color with window back color
    d500:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    d502:	68b9      	ldr	r1, [r7, #8]
    d504:	f00b fae2 	bl	18acc <GL_Widget_SetBackColor>
	}
    d508:	e7dc      	b.n	d4c4 <GoalClrScreen+0x178>
	usIdx=0;
	while(1)
	{
		hLabel = GL_Widget_SearchId(hWindow, LABEL_0_ID+usIdx++);  // Get label from its id
		if(hLabel == NULL)
			break;
    d50a:	bf00      	nop
		GL_Widget_SetText(hLabel, NULL);                          // Remove label text
		GL_Widget_SetBorders(hLabel, 0, 0, 0, 0, GL_UNIT_PIXEL, ulBackColor); // Remove border with window back color
		GL_Widget_SetBackColor(hLabel, ulBackColor);              // Paint label back color with window back color
	}

	if (bRefresh)                                                 // Refresh window?
    d50c:	78fb      	ldrb	r3, [r7, #3]
    d50e:	2b00      	cmp	r3, #0
    d510:	d003      	beq.n	d51a <GoalClrScreen+0x1ce>
		GL_Window_Dispatch(hWindow, 0);                           // Yes, refresh it
    d512:	68f8      	ldr	r0, [r7, #12]
    d514:	2100      	movs	r1, #0
    d516:	f00b fc9b 	bl	18e50 <GL_Window_Dispatch>

	iRet=1;
    d51a:	2301      	movs	r3, #1
    d51c:	617b      	str	r3, [r7, #20]
	goto lblEnd;
    d51e:	e003      	b.n	d528 <GoalClrScreen+0x1dc>

	// Errors treatment
    // ****************
lblKO:                                                            // Clear screen failed
	iRet=-1;
    d520:	f04f 33ff 	mov.w	r3, #4294967295
    d524:	617b      	str	r3, [r7, #20]
	goto lblEnd;
    d526:	bf00      	nop
lblEnd:
	return iRet;
    d528:	697b      	ldr	r3, [r7, #20]
}
    d52a:	4618      	mov	r0, r3
    d52c:	f644 1380 	movw	r3, #18816	; 0x4980
    d530:	f2c0 0302 	movt	r3, #2
    d534:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    d536:	681b      	ldr	r3, [r3, #0]
    d538:	429a      	cmp	r2, r3
    d53a:	d001      	beq.n	d540 <GoalClrScreen+0x1f4>
    d53c:	f7fb fcd8 	bl	8ef0 <__stack_chk_fail>
    d540:	f107 0730 	add.w	r7, r7, #48	; 0x30
    d544:	46bd      	mov	sp, r7
    d546:	bd80      	pop	{r7, pc}

0000d548 <GoalRefreshScreen>:
//   hWindow (I-) : Window context handle.
// This function has return value.
//****************************************************************************

void GoalRefreshScreen(T_GL_HWIDGET hWindow)
{
    d548:	b580      	push	{r7, lr}
    d54a:	b084      	sub	sp, #16
    d54c:	af00      	add	r7, sp, #0
    d54e:	6078      	str	r0, [r7, #4]
    d550:	f644 1380 	movw	r3, #18816	; 0x4980
    d554:	f2c0 0302 	movt	r3, #2
    d558:	681b      	ldr	r3, [r3, #0]
    d55a:	60fb      	str	r3, [r7, #12]
    // ***************
		// Empty

	// Refresh screen
	// **************
	GL_Window_Dispatch(hWindow, 0);  // Refresh the window and dispatch all messages received
    d55c:	6878      	ldr	r0, [r7, #4]
    d55e:	2100      	movs	r1, #0
    d560:	f00b fc76 	bl	18e50 <GL_Window_Dispatch>
}
    d564:	f644 1380 	movw	r3, #18816	; 0x4980
    d568:	f2c0 0302 	movt	r3, #2
    d56c:	68fa      	ldr	r2, [r7, #12]
    d56e:	681b      	ldr	r3, [r3, #0]
    d570:	429a      	cmp	r2, r3
    d572:	d001      	beq.n	d578 <GoalRefreshScreen+0x30>
    d574:	f7fb fcbc 	bl	8ef0 <__stack_chk_fail>
    d578:	f107 0710 	add.w	r7, r7, #16
    d57c:	46bd      	mov	sp, r7
    d57e:	bd80      	pop	{r7, pc}

0000d580 <GoalDspLine>:
//   >=0 : Display line done (Exit screen: 0=timeout,GL_KEY_CANCEL,GL_KEY_VALID).
//   <0 : Display line failed.
//****************************************************************************

int GoalDspLine(T_GL_HWIDGET hWindow, ushort usLine, char *pcText, const ST_DSP_LINE* pxLine, ulong ulTimeOut, bool bRefresh)
{
    d580:	b590      	push	{r4, r7, lr}
    d582:	b08f      	sub	sp, #60	; 0x3c
    d584:	af04      	add	r7, sp, #16
    d586:	6178      	str	r0, [r7, #20]
    d588:	60fa      	str	r2, [r7, #12]
    d58a:	60bb      	str	r3, [r7, #8]
    d58c:	460b      	mov	r3, r1
    d58e:	827b      	strh	r3, [r7, #18]
    d590:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    d592:	607b      	str	r3, [r7, #4]
    d594:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
    d598:	747b      	strb	r3, [r7, #17]
    d59a:	f644 1380 	movw	r3, #18816	; 0x4980
    d59e:	f2c0 0302 	movt	r3, #2
    d5a2:	681b      	ldr	r3, [r3, #0]
    d5a4:	627b      	str	r3, [r7, #36]	; 0x24
	T_GL_HWIDGET hLabel;
	int iRet;

	// Display line
	// ************
	CHECK(pxLine!=NULL, lblKO);
    d5a6:	68bb      	ldr	r3, [r7, #8]
    d5a8:	2b00      	cmp	r3, #0
    d5aa:	f000 81a7 	beq.w	d8fc <GoalDspLine+0x37c>

	hLabel = GL_Widget_SearchId(hWindow, LABEL_0_ID+usLine); // Get label from its id
    d5ae:	8a7b      	ldrh	r3, [r7, #18]
    d5b0:	f503 7380 	add.w	r3, r3, #256	; 0x100
    d5b4:	6978      	ldr	r0, [r7, #20]
    d5b6:	4619      	mov	r1, r3
    d5b8:	f00b fa64 	bl	18a84 <GL_Widget_SearchId>
    d5bc:	6238      	str	r0, [r7, #32]
	CHECK(hLabel!=NULL, lblKO);
    d5be:	6a3b      	ldr	r3, [r7, #32]
    d5c0:	2b00      	cmp	r3, #0
    d5c2:	f000 819b 	beq.w	d8fc <GoalDspLine+0x37c>

	if (pcText)                                              // Null text?
    d5c6:	68fb      	ldr	r3, [r7, #12]
    d5c8:	2b00      	cmp	r3, #0
    d5ca:	d00c      	beq.n	d5e6 <GoalDspLine+0x66>
	{
		GL_Widget_SetVisible(hLabel, true);
    d5cc:	6a38      	ldr	r0, [r7, #32]
    d5ce:	2101      	movs	r1, #1
    d5d0:	f00b fbf6 	bl	18dc0 <GL_Widget_SetVisible>
		GL_Widget_SetText(hLabel, "%s", pcText);             // No, show text (add %s to allow '%' to be displayed)
    d5d4:	6a38      	ldr	r0, [r7, #32]
    d5d6:	f649 5188 	movw	r1, #40328	; 0x9d88
    d5da:	f2c0 0101 	movt	r1, #1
    d5de:	68fa      	ldr	r2, [r7, #12]
    d5e0:	f00b fba6 	bl	18d30 <GL_Widget_SetText>
    d5e4:	e003      	b.n	d5ee <GoalDspLine+0x6e>
	}
	else
		GL_Widget_SetVisible(hLabel, false);                 // Yes, blind text (line is removed)
    d5e6:	6a38      	ldr	r0, [r7, #32]
    d5e8:	2100      	movs	r1, #0
    d5ea:	f00b fbe9 	bl	18dc0 <GL_Widget_SetVisible>

	if (IsColorDisplay())                                    // Color display?
    d5ee:	f00a f8e9 	bl	177c4 <IsColorDisplay>
    d5f2:	4603      	mov	r3, r0
    d5f4:	2b00      	cmp	r3, #0
    d5f6:	d074      	beq.n	d6e2 <GoalDspLine+0x162>
	{                                                        // Yes
		// Color properties
		// ================
		GL_Widget_SetTextAlign(hLabel, pxLine->xColor.eTextAlign);      // Text alignment
    d5f8:	68bb      	ldr	r3, [r7, #8]
    d5fa:	681b      	ldr	r3, [r3, #0]
    d5fc:	6a38      	ldr	r0, [r7, #32]
    d5fe:	4619      	mov	r1, r3
    d600:	f00b fba8 	bl	18d54 <GL_Widget_SetTextAlign>
		GL_Widget_SetBackAlign(hLabel, pxLine->xColor.eBackAlign);      // Background alignment
    d604:	68bb      	ldr	r3, [r7, #8]
    d606:	685b      	ldr	r3, [r3, #4]
    d608:	6a38      	ldr	r0, [r7, #32]
    d60a:	4619      	mov	r1, r3
    d60c:	f00b fa4c 	bl	18aa8 <GL_Widget_SetBackAlign>
		GL_Widget_SetForeColor(hLabel, pxLine->xColor.ulPen);           // Pen color
    d610:	68bb      	ldr	r3, [r7, #8]
    d612:	689b      	ldr	r3, [r3, #8]
    d614:	6a38      	ldr	r0, [r7, #32]
    d616:	4619      	mov	r1, r3
    d618:	f00b fad6 	bl	18bc8 <GL_Widget_SetForeColor>
		GL_Widget_SetBackColor(hLabel, pxLine->xColor.ulBrush);         // Brush color
    d61c:	68bb      	ldr	r3, [r7, #8]
    d61e:	68db      	ldr	r3, [r3, #12]
    d620:	6a38      	ldr	r0, [r7, #32]
    d622:	4619      	mov	r1, r3
    d624:	f00b fa52 	bl	18acc <GL_Widget_SetBackColor>
		if (pxLine->xColor.usSizeWidth < 99)                            // Background width size
    d628:	68bb      	ldr	r3, [r7, #8]
    d62a:	691b      	ldr	r3, [r3, #16]
    d62c:	2b62      	cmp	r3, #98	; 0x62
    d62e:	d808      	bhi.n	d642 <GoalDspLine+0xc2>
			GL_Widget_SetMinSize(hLabel, pxLine->xColor.usSizeWidth, 0, GL_UNIT_PERCENT); // The size
    d630:	68bb      	ldr	r3, [r7, #8]
    d632:	691b      	ldr	r3, [r3, #16]
    d634:	6a38      	ldr	r0, [r7, #32]
    d636:	4619      	mov	r1, r3
    d638:	2200      	movs	r2, #0
    d63a:	2301      	movs	r3, #1
    d63c:	f00b fb1e 	bl	18c7c <GL_Widget_SetMinSize>
    d640:	e003      	b.n	d64a <GoalDspLine+0xca>
		else
			GL_Widget_SetExpand(hLabel, GL_DIRECTION_WIDTH);                              // Full size
    d642:	6a38      	ldr	r0, [r7, #32]
    d644:	2101      	movs	r1, #1
    d646:	f00b fa65 	bl	18b14 <GL_Widget_SetExpand>
		if (pxLine->xColor.bGrowWidth)                                  // Grow beyond its size
    d64a:	68bb      	ldr	r3, [r7, #8]
    d64c:	7d1b      	ldrb	r3, [r3, #20]
    d64e:	2b00      	cmp	r3, #0
    d650:	d003      	beq.n	d65a <GoalDspLine+0xda>
			GL_Widget_SetGrow(hLabel, GL_DIRECTION_WIDTH);              // Background width around the label will fill the complete cell
    d652:	6a38      	ldr	r0, [r7, #32]
    d654:	2101      	movs	r1, #1
    d656:	f00b fac9 	bl	18bec <GL_Widget_SetGrow>
			                                                            // Paddings, Borders and Margins
		GL_Widget_SetTextPaddings(hLabel, pxLine->xColor.xPadding.usLeft, pxLine->xColor.xPadding.usTop, pxLine->xColor.xPadding.usRight, pxLine->xColor.xPadding.usBottom, GL_UNIT_PERCENT);
    d65a:	68bb      	ldr	r3, [r7, #8]
    d65c:	6999      	ldr	r1, [r3, #24]
    d65e:	68bb      	ldr	r3, [r7, #8]
    d660:	69da      	ldr	r2, [r3, #28]
    d662:	68bb      	ldr	r3, [r7, #8]
    d664:	6a1b      	ldr	r3, [r3, #32]
    d666:	68b8      	ldr	r0, [r7, #8]
    d668:	6a40      	ldr	r0, [r0, #36]	; 0x24
    d66a:	9000      	str	r0, [sp, #0]
    d66c:	2001      	movs	r0, #1
    d66e:	9001      	str	r0, [sp, #4]
    d670:	6a38      	ldr	r0, [r7, #32]
    d672:	f00b fb81 	bl	18d78 <GL_Widget_SetTextPaddings>
		GL_Widget_SetBorders(hLabel, pxLine->xColor.xBorder.usLeft, pxLine->xColor.xBorder.usTop, pxLine->xColor.xBorder.usRight, pxLine->xColor.xBorder.usBottom, GL_UNIT_PIXEL, pxLine->xColor.xBorder.ulColor);
    d676:	68bb      	ldr	r3, [r7, #8]
    d678:	6a99      	ldr	r1, [r3, #40]	; 0x28
    d67a:	68bb      	ldr	r3, [r7, #8]
    d67c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    d67e:	68bb      	ldr	r3, [r7, #8]
    d680:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    d682:	68b8      	ldr	r0, [r7, #8]
    d684:	6b44      	ldr	r4, [r0, #52]	; 0x34
    d686:	68b8      	ldr	r0, [r7, #8]
    d688:	6b80      	ldr	r0, [r0, #56]	; 0x38
    d68a:	9400      	str	r4, [sp, #0]
    d68c:	2400      	movs	r4, #0
    d68e:	9401      	str	r4, [sp, #4]
    d690:	9002      	str	r0, [sp, #8]
    d692:	6a38      	ldr	r0, [r7, #32]
    d694:	f00b fa2c 	bl	18af0 <GL_Widget_SetBorders>
		GL_Widget_SetMargins(hLabel, pxLine->xColor.xMargin.usLeft, pxLine->xColor.xMargin.usTop, pxLine->xColor.xMargin.usRight, pxLine->xColor.xMargin.usBottom, GL_UNIT_PIXEL);
    d698:	68bb      	ldr	r3, [r7, #8]
    d69a:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
    d69c:	68bb      	ldr	r3, [r7, #8]
    d69e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    d6a0:	68bb      	ldr	r3, [r7, #8]
    d6a2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    d6a4:	68b8      	ldr	r0, [r7, #8]
    d6a6:	6c80      	ldr	r0, [r0, #72]	; 0x48
    d6a8:	9000      	str	r0, [sp, #0]
    d6aa:	2000      	movs	r0, #0
    d6ac:	9001      	str	r0, [sp, #4]
    d6ae:	6a38      	ldr	r0, [r7, #32]
    d6b0:	f00b fad2 	bl	18c58 <GL_Widget_SetMargins>
		if (pxLine->xColor.xFont.pcName != NULL)
    d6b4:	68bb      	ldr	r3, [r7, #8]
    d6b6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    d6b8:	2b00      	cmp	r3, #0
    d6ba:	d005      	beq.n	d6c8 <GoalDspLine+0x148>
			GL_Widget_SetFontName(hLabel, pxLine->xColor.xFont.pcName); // Font name
    d6bc:	68bb      	ldr	r3, [r7, #8]
    d6be:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    d6c0:	6a38      	ldr	r0, [r7, #32]
    d6c2:	4619      	mov	r1, r3
    d6c4:	f00b fa4a 	bl	18b5c <GL_Widget_SetFontName>
		GL_Widget_SetFontScale(hLabel, pxLine->xColor.xFont.eScale);    // Font scale
    d6c8:	68bb      	ldr	r3, [r7, #8]
    d6ca:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    d6cc:	6a38      	ldr	r0, [r7, #32]
    d6ce:	4619      	mov	r1, r3
    d6d0:	f00b fa56 	bl	18b80 <GL_Widget_SetFontScale>
		GL_Widget_SetFontStyle(hLabel, pxLine->xColor.xFont.eStyle);    // Font style
    d6d4:	68bb      	ldr	r3, [r7, #8]
    d6d6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    d6d8:	6a38      	ldr	r0, [r7, #32]
    d6da:	4619      	mov	r1, r3
    d6dc:	f00b fa62 	bl	18ba4 <GL_Widget_SetFontStyle>
    d6e0:	e0ab      	b.n	d83a <GoalDspLine+0x2ba>
	}
	else                                                     // No
	{
		// Black & White properties
		// ========================
		GL_Widget_SetTextAlign(hLabel, pxLine->xBW.eTextAlign);         // Text alignment
    d6e2:	68bb      	ldr	r3, [r7, #8]
    d6e4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    d6e6:	6a38      	ldr	r0, [r7, #32]
    d6e8:	4619      	mov	r1, r3
    d6ea:	f00b fb33 	bl	18d54 <GL_Widget_SetTextAlign>
		GL_Widget_SetBackAlign(hLabel, pxLine->xBW.eBackAlign);         // Background alignment
    d6ee:	68bb      	ldr	r3, [r7, #8]
    d6f0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
    d6f2:	6a38      	ldr	r0, [r7, #32]
    d6f4:	4619      	mov	r1, r3
    d6f6:	f00b f9d7 	bl	18aa8 <GL_Widget_SetBackAlign>
		if (!pxLine->xBW.bReverse)                                      // B&W reverse?
    d6fa:	68bb      	ldr	r3, [r7, #8]
    d6fc:	f893 3060 	ldrb.w	r3, [r3, #96]	; 0x60
    d700:	f083 0301 	eor.w	r3, r3, #1
    d704:	b2db      	uxtb	r3, r3
    d706:	2b00      	cmp	r3, #0
    d708:	d00a      	beq.n	d720 <GoalDspLine+0x1a0>
		{                                                               // Yes
			GL_Widget_SetForeColor(hLabel, GL_COLOR_BLACK);             // Force pen color to black and brush color to white
    d70a:	6a38      	ldr	r0, [r7, #32]
    d70c:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    d710:	f00b fa5a 	bl	18bc8 <GL_Widget_SetForeColor>
			GL_Widget_SetBackColor(hLabel, GL_COLOR_WHITE);
    d714:	6a38      	ldr	r0, [r7, #32]
    d716:	f04f 31ff 	mov.w	r1, #4294967295
    d71a:	f00b f9d7 	bl	18acc <GL_Widget_SetBackColor>
    d71e:	e009      	b.n	d734 <GoalDspLine+0x1b4>
		}
		else                                                            // No
		{
			GL_Widget_SetForeColor(hLabel, GL_COLOR_WHITE);             // Force pen color to white and brush color to black
    d720:	6a38      	ldr	r0, [r7, #32]
    d722:	f04f 31ff 	mov.w	r1, #4294967295
    d726:	f00b fa4f 	bl	18bc8 <GL_Widget_SetForeColor>
			GL_Widget_SetBackColor(hLabel, GL_COLOR_BLACK);
    d72a:	6a38      	ldr	r0, [r7, #32]
    d72c:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    d730:	f00b f9cc 	bl	18acc <GL_Widget_SetBackColor>
		}
		if (pxLine->xBW.usSizeWidth < 99)                               // Background width size
    d734:	68bb      	ldr	r3, [r7, #8]
    d736:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    d738:	2b62      	cmp	r3, #98	; 0x62
    d73a:	d808      	bhi.n	d74e <GoalDspLine+0x1ce>
			GL_Widget_SetMinSize(hLabel, pxLine->xBW.usSizeWidth, 0, GL_UNIT_PERCENT); // The size
    d73c:	68bb      	ldr	r3, [r7, #8]
    d73e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    d740:	6a38      	ldr	r0, [r7, #32]
    d742:	4619      	mov	r1, r3
    d744:	2200      	movs	r2, #0
    d746:	2301      	movs	r3, #1
    d748:	f00b fa98 	bl	18c7c <GL_Widget_SetMinSize>
    d74c:	e003      	b.n	d756 <GoalDspLine+0x1d6>
		else
			GL_Widget_SetExpand(hLabel, GL_DIRECTION_WIDTH);                           // Full size
    d74e:	6a38      	ldr	r0, [r7, #32]
    d750:	2101      	movs	r1, #1
    d752:	f00b f9df 	bl	18b14 <GL_Widget_SetExpand>
		if (pxLine->xBW.bGrowWidth)                                     // Grow beyond its size
    d756:	68bb      	ldr	r3, [r7, #8]
    d758:	f893 3068 	ldrb.w	r3, [r3, #104]	; 0x68
    d75c:	2b00      	cmp	r3, #0
    d75e:	d003      	beq.n	d768 <GoalDspLine+0x1e8>
			GL_Widget_SetGrow(hLabel, GL_DIRECTION_WIDTH);              // Background width around the label will fill the complete cell
    d760:	6a38      	ldr	r0, [r7, #32]
    d762:	2101      	movs	r1, #1
    d764:	f00b fa42 	bl	18bec <GL_Widget_SetGrow>
			                                                            // Paddings, Borders and Margins
		GL_Widget_SetTextPaddings(hLabel, pxLine->xBW.xPadding.usLeft, pxLine->xBW.xPadding.usTop, pxLine->xBW.xPadding.usRight, pxLine->xBW.xPadding.usBottom, GL_UNIT_PERCENT);
    d768:	68bb      	ldr	r3, [r7, #8]
    d76a:	6ed9      	ldr	r1, [r3, #108]	; 0x6c
    d76c:	68bb      	ldr	r3, [r7, #8]
    d76e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
    d770:	68bb      	ldr	r3, [r7, #8]
    d772:	6f5b      	ldr	r3, [r3, #116]	; 0x74
    d774:	68b8      	ldr	r0, [r7, #8]
    d776:	6f80      	ldr	r0, [r0, #120]	; 0x78
    d778:	9000      	str	r0, [sp, #0]
    d77a:	2001      	movs	r0, #1
    d77c:	9001      	str	r0, [sp, #4]
    d77e:	6a38      	ldr	r0, [r7, #32]
    d780:	f00b fafa 	bl	18d78 <GL_Widget_SetTextPaddings>
		if (pxLine->xBW.xBorder.ulColor != GL_COLOR_BLACK)              // Force border to black or white
    d784:	68bb      	ldr	r3, [r7, #8]
    d786:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    d78a:	f1b3 4f7f 	cmp.w	r3, #4278190080	; 0xff000000
    d78e:	d014      	beq.n	d7ba <GoalDspLine+0x23a>
			GL_Widget_SetBorders(hLabel, pxLine->xBW.xBorder.usLeft, pxLine->xBW.xBorder.usTop, pxLine->xBW.xBorder.usRight, pxLine->xBW.xBorder.usBottom, GL_UNIT_PIXEL, GL_COLOR_WHITE);
    d790:	68bb      	ldr	r3, [r7, #8]
    d792:	6fd9      	ldr	r1, [r3, #124]	; 0x7c
    d794:	68bb      	ldr	r3, [r7, #8]
    d796:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
    d79a:	68bb      	ldr	r3, [r7, #8]
    d79c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    d7a0:	68b8      	ldr	r0, [r7, #8]
    d7a2:	f8d0 0088 	ldr.w	r0, [r0, #136]	; 0x88
    d7a6:	9000      	str	r0, [sp, #0]
    d7a8:	2000      	movs	r0, #0
    d7aa:	9001      	str	r0, [sp, #4]
    d7ac:	f04f 30ff 	mov.w	r0, #4294967295
    d7b0:	9002      	str	r0, [sp, #8]
    d7b2:	6a38      	ldr	r0, [r7, #32]
    d7b4:	f00b f99c 	bl	18af0 <GL_Widget_SetBorders>
    d7b8:	e013      	b.n	d7e2 <GoalDspLine+0x262>
		else
			GL_Widget_SetBorders(hLabel, pxLine->xBW.xBorder.usLeft, pxLine->xBW.xBorder.usTop, pxLine->xBW.xBorder.usRight, pxLine->xBW.xBorder.usBottom, GL_UNIT_PIXEL, GL_COLOR_BLACK);
    d7ba:	68bb      	ldr	r3, [r7, #8]
    d7bc:	6fd9      	ldr	r1, [r3, #124]	; 0x7c
    d7be:	68bb      	ldr	r3, [r7, #8]
    d7c0:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
    d7c4:	68bb      	ldr	r3, [r7, #8]
    d7c6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    d7ca:	68b8      	ldr	r0, [r7, #8]
    d7cc:	f8d0 0088 	ldr.w	r0, [r0, #136]	; 0x88
    d7d0:	9000      	str	r0, [sp, #0]
    d7d2:	2000      	movs	r0, #0
    d7d4:	9001      	str	r0, [sp, #4]
    d7d6:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
    d7da:	9002      	str	r0, [sp, #8]
    d7dc:	6a38      	ldr	r0, [r7, #32]
    d7de:	f00b f987 	bl	18af0 <GL_Widget_SetBorders>
		GL_Widget_SetMargins(hLabel, pxLine->xBW.xMargin.usLeft, pxLine->xBW.xMargin.usTop, pxLine->xBW.xMargin.usRight, pxLine->xBW.xMargin.usBottom, GL_UNIT_PIXEL);
    d7e2:	68bb      	ldr	r3, [r7, #8]
    d7e4:	f8d3 1090 	ldr.w	r1, [r3, #144]	; 0x90
    d7e8:	68bb      	ldr	r3, [r7, #8]
    d7ea:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
    d7ee:	68bb      	ldr	r3, [r7, #8]
    d7f0:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
    d7f4:	68b8      	ldr	r0, [r7, #8]
    d7f6:	f8d0 009c 	ldr.w	r0, [r0, #156]	; 0x9c
    d7fa:	9000      	str	r0, [sp, #0]
    d7fc:	2000      	movs	r0, #0
    d7fe:	9001      	str	r0, [sp, #4]
    d800:	6a38      	ldr	r0, [r7, #32]
    d802:	f00b fa29 	bl	18c58 <GL_Widget_SetMargins>
		if (pxLine->xBW.xFont.pcName != NULL)
    d806:	68bb      	ldr	r3, [r7, #8]
    d808:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
    d80c:	2b00      	cmp	r3, #0
    d80e:	d006      	beq.n	d81e <GoalDspLine+0x29e>
			GL_Widget_SetFontName(hLabel, pxLine->xBW.xFont.pcName);    // Font name
    d810:	68bb      	ldr	r3, [r7, #8]
    d812:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
    d816:	6a38      	ldr	r0, [r7, #32]
    d818:	4619      	mov	r1, r3
    d81a:	f00b f99f 	bl	18b5c <GL_Widget_SetFontName>
		GL_Widget_SetFontScale(hLabel, pxLine->xBW.xFont.eScale);       // Font scale
    d81e:	68bb      	ldr	r3, [r7, #8]
    d820:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
    d824:	6a38      	ldr	r0, [r7, #32]
    d826:	4619      	mov	r1, r3
    d828:	f00b f9aa 	bl	18b80 <GL_Widget_SetFontScale>
		GL_Widget_SetFontStyle(hLabel, pxLine->xBW.xFont.eStyle);       // Font style
    d82c:	68bb      	ldr	r3, [r7, #8]
    d82e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
    d832:	6a38      	ldr	r0, [r7, #32]
    d834:	4619      	mov	r1, r3
    d836:	f00b f9b5 	bl	18ba4 <GL_Widget_SetFontStyle>
	}

	CHECK(ulTimeOut!=0, lblNoTimer)                          // No timer to set
    d83a:	687b      	ldr	r3, [r7, #4]
    d83c:	2b00      	cmp	r3, #0
    d83e:	d045      	beq.n	d8cc <GoalDspLine+0x34c>

	// Restart timer
	// *************
	if (ulTimeOut == GL_TIME_INFINITE)                       // Set timeout value
    d840:	687b      	ldr	r3, [r7, #4]
    d842:	f1b3 3fff 	cmp.w	r3, #4294967295
    d846:	d10a      	bne.n	d85e <GoalDspLine+0x2de>
		GL_Timer_SetInterval(GL_Widget_SearchId(hWindow, TIMER_ID), 0x7FFFFFFF);   // Bug 0xFFFFFFFF not supported
    d848:	6978      	ldr	r0, [r7, #20]
    d84a:	2100      	movs	r1, #0
    d84c:	f00b f91a 	bl	18a84 <GL_Widget_SearchId>
    d850:	4603      	mov	r3, r0
    d852:	4618      	mov	r0, r3
    d854:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    d858:	f00b f8ba 	bl	189d0 <GL_Timer_SetInterval>
    d85c:	e008      	b.n	d870 <GoalDspLine+0x2f0>
	else
		GL_Timer_SetInterval(GL_Widget_SearchId(hWindow, TIMER_ID), ulTimeOut);
    d85e:	6978      	ldr	r0, [r7, #20]
    d860:	2100      	movs	r1, #0
    d862:	f00b f90f 	bl	18a84 <GL_Widget_SearchId>
    d866:	4603      	mov	r3, r0
    d868:	4618      	mov	r0, r3
    d86a:	6879      	ldr	r1, [r7, #4]
    d86c:	f00b f8b0 	bl	189d0 <GL_Timer_SetInterval>

	// Loop indefinitely until the result is set from the call back functions
	// **********************************************************************
	GL_Window_MainLoop(hWindow);                             // Wait until a result is set
    d870:	6978      	ldr	r0, [r7, #20]
    d872:	f00b fb11 	bl	18e98 <GL_Window_MainLoop>

	// Test the result set by the call back functions
	// **********************************************
	switch(GL_Window_GetResult(hWindow))                     // Get the result
    d876:	6978      	ldr	r0, [r7, #20]
    d878:	f00b fafc 	bl	18e74 <GL_Window_GetResult>
    d87c:	4603      	mov	r3, r0
    d87e:	2b01      	cmp	r3, #1
    d880:	d010      	beq.n	d8a4 <GoalDspLine+0x324>
    d882:	2b01      	cmp	r3, #1
    d884:	d302      	bcc.n	d88c <GoalDspLine+0x30c>
    d886:	2b04      	cmp	r3, #4
    d888:	d018      	beq.n	d8bc <GoalDspLine+0x33c>
    d88a:	e01a      	b.n	d8c2 <GoalDspLine+0x342>
	{
	case RES_VALID_STATUS:                                   // Key valid result
		GL_Timer_Stop(GL_Widget_SearchId(hWindow, TIMER_ID));
    d88c:	6978      	ldr	r0, [r7, #20]
    d88e:	2100      	movs	r1, #0
    d890:	f00b f8f8 	bl	18a84 <GL_Widget_SearchId>
    d894:	4603      	mov	r3, r0
    d896:	4618      	mov	r0, r3
    d898:	f00b f8ac 	bl	189f4 <GL_Timer_Stop>
		iRet=GL_KEY_VALID;
    d89c:	f64f 0350 	movw	r3, #63568	; 0xf850
    d8a0:	61fb      	str	r3, [r7, #28]
		break;
    d8a2:	e012      	b.n	d8ca <GoalDspLine+0x34a>
	case RES_CANCEL_STATUS:                                  // Key cancel result
		GL_Timer_Stop(GL_Widget_SearchId(hWindow, TIMER_ID));
    d8a4:	6978      	ldr	r0, [r7, #20]
    d8a6:	2100      	movs	r1, #0
    d8a8:	f00b f8ec 	bl	18a84 <GL_Widget_SearchId>
    d8ac:	4603      	mov	r3, r0
    d8ae:	4618      	mov	r0, r3
    d8b0:	f00b f8a0 	bl	189f4 <GL_Timer_Stop>
		iRet=GL_KEY_CANCEL;
    d8b4:	f64f 0351 	movw	r3, #63569	; 0xf851
    d8b8:	61fb      	str	r3, [r7, #28]
		break;
    d8ba:	e006      	b.n	d8ca <GoalDspLine+0x34a>
	case RES_TIMER_STATUS:                                   // Timer result
		iRet=0;
    d8bc:	2300      	movs	r3, #0
    d8be:	61fb      	str	r3, [r7, #28]
		break;
    d8c0:	e003      	b.n	d8ca <GoalDspLine+0x34a>
	default:                                                 // Unknown result
		iRet=-1;
    d8c2:	f04f 33ff 	mov.w	r3, #4294967295
    d8c6:	61fb      	str	r3, [r7, #28]
		break;
    d8c8:	bf00      	nop
	}

	goto lblEnd;
    d8ca:	e01c      	b.n	d906 <GoalDspLine+0x386>

	// Errors treatment
    // ****************
lblNoTimer:                                                  // No timer used
	iRet=0;
    d8cc:	2300      	movs	r3, #0
    d8ce:	61fb      	str	r3, [r7, #28]
	if (bRefresh)
    d8d0:	7c7b      	ldrb	r3, [r7, #17]
    d8d2:	2b00      	cmp	r3, #0
    d8d4:	d016      	beq.n	d904 <GoalDspLine+0x384>
	{
		iRet = GL_Window_Dispatch(hWindow, 0);               // Refresh the window
    d8d6:	6978      	ldr	r0, [r7, #20]
    d8d8:	2100      	movs	r1, #0
    d8da:	f00b fab9 	bl	18e50 <GL_Window_Dispatch>
    d8de:	4603      	mov	r3, r0
    d8e0:	61fb      	str	r3, [r7, #28]
		if (iRet == RES_VALID_STATUS)
    d8e2:	69fb      	ldr	r3, [r7, #28]
    d8e4:	2b00      	cmp	r3, #0
    d8e6:	d102      	bne.n	d8ee <GoalDspLine+0x36e>
			iRet=GL_KEY_VALID;
    d8e8:	f64f 0350 	movw	r3, #63568	; 0xf850
    d8ec:	61fb      	str	r3, [r7, #28]
		if (iRet == RES_CANCEL_STATUS)
    d8ee:	69fb      	ldr	r3, [r7, #28]
    d8f0:	2b01      	cmp	r3, #1
    d8f2:	d107      	bne.n	d904 <GoalDspLine+0x384>
			iRet=GL_KEY_CANCEL;
    d8f4:	f64f 0351 	movw	r3, #63569	; 0xf851
    d8f8:	61fb      	str	r3, [r7, #28]
	}
	goto lblEnd;
    d8fa:	e003      	b.n	d904 <GoalDspLine+0x384>
lblKO:                                                       // Display line failed
	iRet=-1;
    d8fc:	f04f 33ff 	mov.w	r3, #4294967295
    d900:	61fb      	str	r3, [r7, #28]
	goto lblEnd;
    d902:	e000      	b.n	d906 <GoalDspLine+0x386>
		if (iRet == RES_VALID_STATUS)
			iRet=GL_KEY_VALID;
		if (iRet == RES_CANCEL_STATUS)
			iRet=GL_KEY_CANCEL;
	}
	goto lblEnd;
    d904:	bf00      	nop
lblKO:                                                       // Display line failed
	iRet=-1;
	goto lblEnd;
lblEnd:
	return iRet;
    d906:	69fb      	ldr	r3, [r7, #28]
}
    d908:	4618      	mov	r0, r3
    d90a:	f644 1380 	movw	r3, #18816	; 0x4980
    d90e:	f2c0 0302 	movt	r3, #2
    d912:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    d914:	681b      	ldr	r3, [r3, #0]
    d916:	429a      	cmp	r2, r3
    d918:	d001      	beq.n	d91e <GoalDspLine+0x39e>
    d91a:	f7fb fae9 	bl	8ef0 <__stack_chk_fail>
    d91e:	f107 072c 	add.w	r7, r7, #44	; 0x2c
    d922:	46bd      	mov	sp, r7
    d924:	bd90      	pop	{r4, r7, pc}
    d926:	bf00      	nop

0000d928 <GoalDspMultiLine>:
//    >=0 : Display buffer done (Exit screen : 0=timeout,GL_KEY_CANCEL,GL_KEY_VALID).
//    <0 : Display buffer failed.
//****************************************************************************

int GoalDspMultiLine(T_GL_HWIDGET hWindow, ushort usLine, char *pcData , int iLen, const ST_DSP_LINE txLine[], ushort usMaxLine, ulong ulTimeOut, bool bRefresh)
{
    d928:	b5b0      	push	{r4, r5, r7, lr}
    d92a:	b0d2      	sub	sp, #328	; 0x148
    d92c:	af02      	add	r7, sp, #8
    d92e:	f107 041c 	add.w	r4, r7, #28
    d932:	6020      	str	r0, [r4, #0]
    d934:	460d      	mov	r5, r1
    d936:	f107 0114 	add.w	r1, r7, #20
    d93a:	600a      	str	r2, [r1, #0]
    d93c:	f107 0210 	add.w	r2, r7, #16
    d940:	6013      	str	r3, [r2, #0]
    d942:	f107 000c 	add.w	r0, r7, #12
    d946:	f107 0118 	add.w	r1, r7, #24
    d94a:	f107 0208 	add.w	r2, r7, #8
    d94e:	1dfb      	adds	r3, r7, #7
    d950:	f107 041a 	add.w	r4, r7, #26
    d954:	8025      	strh	r5, [r4, #0]
    d956:	f8d7 4150 	ldr.w	r4, [r7, #336]	; 0x150
    d95a:	6004      	str	r4, [r0, #0]
    d95c:	f8b7 0154 	ldrh.w	r0, [r7, #340]	; 0x154
    d960:	8008      	strh	r0, [r1, #0]
    d962:	f8d7 1158 	ldr.w	r1, [r7, #344]	; 0x158
    d966:	6011      	str	r1, [r2, #0]
    d968:	f897 215c 	ldrb.w	r2, [r7, #348]	; 0x15c
    d96c:	701a      	strb	r2, [r3, #0]
    d96e:	f644 1380 	movw	r3, #18816	; 0x4980
    d972:	f2c0 0302 	movt	r3, #2
    d976:	681b      	ldr	r3, [r3, #0]
    d978:	f8c7 313c 	str.w	r3, [r7, #316]	; 0x13c
	// Local variables
    // ***************
	ST_DSP_LINE xLine;
	int iCount=0;
    d97c:	f107 0320 	add.w	r3, r7, #32
    d980:	2200      	movs	r2, #0
    d982:	601a      	str	r2, [r3, #0]
	char tcBuffer[100+1];
	int iRet=-1;
    d984:	f107 0324 	add.w	r3, r7, #36	; 0x24
    d988:	f04f 32ff 	mov.w	r2, #4294967295
    d98c:	601a      	str	r2, [r3, #0]

	// Printing in progress
	// ********************
	CHECK ((pcData!=NULL) && (iLen>=0), lblKO);
    d98e:	f107 0314 	add.w	r3, r7, #20
    d992:	681b      	ldr	r3, [r3, #0]
    d994:	2b00      	cmp	r3, #0
    d996:	f000 8110 	beq.w	dbba <GoalDspMultiLine+0x292>
    d99a:	f107 0310 	add.w	r3, r7, #16
    d99e:	681b      	ldr	r3, [r3, #0]
    d9a0:	2b00      	cmp	r3, #0
    d9a2:	f2c0 810a 	blt.w	dbba <GoalDspMultiLine+0x292>

	memset(tcBuffer, 0, sizeof(tcBuffer));
    d9a6:	f107 03d4 	add.w	r3, r7, #212	; 0xd4
    d9aa:	4618      	mov	r0, r3
    d9ac:	2100      	movs	r1, #0
    d9ae:	2265      	movs	r2, #101	; 0x65
    d9b0:	f7fb e8bc 	blx	8b2c <_init+0x5c>
	while(usLine < usMaxLine)
    d9b4:	e0f6      	b.n	dba4 <GoalDspMultiLine+0x27c>
	{
		if (iLen > 0)               // Check if it is the end of data
    d9b6:	f107 0310 	add.w	r3, r7, #16
    d9ba:	681b      	ldr	r3, [r3, #0]
    d9bc:	2b00      	cmp	r3, #0
    d9be:	f340 80ba 	ble.w	db36 <GoalDspMultiLine+0x20e>
		{                           // No, it's a line with '\n' detected
			if (*pcData != '\n')    // Save character into buffer
    d9c2:	f107 0314 	add.w	r3, r7, #20
    d9c6:	681b      	ldr	r3, [r3, #0]
    d9c8:	781b      	ldrb	r3, [r3, #0]
    d9ca:	2b0a      	cmp	r3, #10
    d9cc:	d039      	beq.n	da42 <GoalDspMultiLine+0x11a>
			{
				if (iCount < 100)
    d9ce:	f107 0320 	add.w	r3, r7, #32
    d9d2:	681b      	ldr	r3, [r3, #0]
    d9d4:	2b63      	cmp	r3, #99	; 0x63
    d9d6:	dc20      	bgt.n	da1a <GoalDspMultiLine+0xf2>
				{
					tcBuffer[iCount++] = *pcData++;
    d9d8:	f107 0314 	add.w	r3, r7, #20
    d9dc:	681b      	ldr	r3, [r3, #0]
    d9de:	781a      	ldrb	r2, [r3, #0]
    d9e0:	f107 01d4 	add.w	r1, r7, #212	; 0xd4
    d9e4:	f107 0320 	add.w	r3, r7, #32
    d9e8:	681b      	ldr	r3, [r3, #0]
    d9ea:	18cb      	adds	r3, r1, r3
    d9ec:	701a      	strb	r2, [r3, #0]
    d9ee:	f107 0320 	add.w	r3, r7, #32
    d9f2:	f107 0220 	add.w	r2, r7, #32
    d9f6:	6812      	ldr	r2, [r2, #0]
    d9f8:	3201      	adds	r2, #1
    d9fa:	601a      	str	r2, [r3, #0]
    d9fc:	f107 0314 	add.w	r3, r7, #20
    da00:	f107 0214 	add.w	r2, r7, #20
    da04:	6812      	ldr	r2, [r2, #0]
    da06:	3201      	adds	r2, #1
    da08:	601a      	str	r2, [r3, #0]
					tcBuffer[iCount]=0;
    da0a:	f107 02d4 	add.w	r2, r7, #212	; 0xd4
    da0e:	f107 0320 	add.w	r3, r7, #32
    da12:	681b      	ldr	r3, [r3, #0]
    da14:	18d3      	adds	r3, r2, r3
    da16:	2200      	movs	r2, #0
    da18:	701a      	strb	r2, [r3, #0]
				}
				iLen--;
    da1a:	f107 0310 	add.w	r3, r7, #16
    da1e:	f107 0210 	add.w	r2, r7, #16
    da22:	6812      	ldr	r2, [r2, #0]
    da24:	3a01      	subs	r2, #1
    da26:	601a      	str	r2, [r3, #0]
    da28:	f107 031a 	add.w	r3, r7, #26
    da2c:	f107 021a 	add.w	r2, r7, #26
    da30:	8812      	ldrh	r2, [r2, #0]
    da32:	801a      	strh	r2, [r3, #0]
    da34:	f107 0324 	add.w	r3, r7, #36	; 0x24
    da38:	f107 0224 	add.w	r2, r7, #36	; 0x24
    da3c:	6812      	ldr	r2, [r2, #0]
    da3e:	601a      	str	r2, [r3, #0]
    da40:	e0b0      	b.n	dba4 <GoalDspMultiLine+0x27c>
			}
			else                    // '\n' detected
			{
				xLine = txLine[usLine];
    da42:	f107 031a 	add.w	r3, r7, #26
    da46:	881b      	ldrh	r3, [r3, #0]
    da48:	22ac      	movs	r2, #172	; 0xac
    da4a:	fb02 f303 	mul.w	r3, r2, r3
    da4e:	f107 020c 	add.w	r2, r7, #12
    da52:	6812      	ldr	r2, [r2, #0]
    da54:	18d3      	adds	r3, r2, r3
    da56:	f107 0228 	add.w	r2, r7, #40	; 0x28
    da5a:	4611      	mov	r1, r2
    da5c:	461a      	mov	r2, r3
    da5e:	23ac      	movs	r3, #172	; 0xac
    da60:	4608      	mov	r0, r1
    da62:	4611      	mov	r1, r2
    da64:	461a      	mov	r2, r3
    da66:	f7fb e8b4 	blx	8bd0 <_init+0x100>
				if (usLine == usMaxLine-1)
    da6a:	f107 031a 	add.w	r3, r7, #26
    da6e:	881a      	ldrh	r2, [r3, #0]
    da70:	f107 0318 	add.w	r3, r7, #24
    da74:	881b      	ldrh	r3, [r3, #0]
    da76:	3b01      	subs	r3, #1
    da78:	429a      	cmp	r2, r3
    da7a:	d122      	bne.n	dac2 <GoalDspMultiLine+0x19a>
				{                   // Last line to display
					iRet = GoalDspLine(hWindow, usLine++, tcBuffer, &xLine, ulTimeOut, bRefresh);
    da7c:	f107 031a 	add.w	r3, r7, #26
    da80:	8819      	ldrh	r1, [r3, #0]
    da82:	f107 031a 	add.w	r3, r7, #26
    da86:	f107 021a 	add.w	r2, r7, #26
    da8a:	8812      	ldrh	r2, [r2, #0]
    da8c:	3201      	adds	r2, #1
    da8e:	801a      	strh	r2, [r3, #0]
    da90:	f107 0424 	add.w	r4, r7, #36	; 0x24
    da94:	f107 001c 	add.w	r0, r7, #28
    da98:	f107 02d4 	add.w	r2, r7, #212	; 0xd4
    da9c:	f107 0328 	add.w	r3, r7, #40	; 0x28
    daa0:	f107 0508 	add.w	r5, r7, #8
    daa4:	682d      	ldr	r5, [r5, #0]
    daa6:	9500      	str	r5, [sp, #0]
    daa8:	1dfd      	adds	r5, r7, #7
    daaa:	782d      	ldrb	r5, [r5, #0]
    daac:	9501      	str	r5, [sp, #4]
    daae:	6800      	ldr	r0, [r0, #0]
    dab0:	f7ff fd66 	bl	d580 <GoalDspLine>
    dab4:	6020      	str	r0, [r4, #0]
					CHECK(iRet>=0, lblKO);
    dab6:	f107 0324 	add.w	r3, r7, #36	; 0x24
    daba:	681b      	ldr	r3, [r3, #0]
    dabc:	2b00      	cmp	r3, #0
    dabe:	db7c      	blt.n	dbba <GoalDspMultiLine+0x292>
    dac0:	e01e      	b.n	db00 <GoalDspMultiLine+0x1d8>
				}
				else
				{                   // Next line to display
					iRet = GoalDspLine(hWindow, usLine++, tcBuffer, &xLine, 0, false);
    dac2:	f107 031a 	add.w	r3, r7, #26
    dac6:	8819      	ldrh	r1, [r3, #0]
    dac8:	f107 031a 	add.w	r3, r7, #26
    dacc:	f107 021a 	add.w	r2, r7, #26
    dad0:	8812      	ldrh	r2, [r2, #0]
    dad2:	3201      	adds	r2, #1
    dad4:	801a      	strh	r2, [r3, #0]
    dad6:	f107 0424 	add.w	r4, r7, #36	; 0x24
    dada:	f107 001c 	add.w	r0, r7, #28
    dade:	f107 02d4 	add.w	r2, r7, #212	; 0xd4
    dae2:	f107 0328 	add.w	r3, r7, #40	; 0x28
    dae6:	2500      	movs	r5, #0
    dae8:	9500      	str	r5, [sp, #0]
    daea:	2500      	movs	r5, #0
    daec:	9501      	str	r5, [sp, #4]
    daee:	6800      	ldr	r0, [r0, #0]
    daf0:	f7ff fd46 	bl	d580 <GoalDspLine>
    daf4:	6020      	str	r0, [r4, #0]
					CHECK(iRet>=0, lblKO);
    daf6:	f107 0324 	add.w	r3, r7, #36	; 0x24
    dafa:	681b      	ldr	r3, [r3, #0]
    dafc:	2b00      	cmp	r3, #0
    dafe:	db5c      	blt.n	dbba <GoalDspMultiLine+0x292>
				}
				iCount=0;
    db00:	f107 0320 	add.w	r3, r7, #32
    db04:	2200      	movs	r2, #0
    db06:	601a      	str	r2, [r3, #0]
				tcBuffer[iCount]=0;
    db08:	f107 02d4 	add.w	r2, r7, #212	; 0xd4
    db0c:	f107 0320 	add.w	r3, r7, #32
    db10:	681b      	ldr	r3, [r3, #0]
    db12:	18d3      	adds	r3, r2, r3
    db14:	2200      	movs	r2, #0
    db16:	701a      	strb	r2, [r3, #0]
				pcData++;
    db18:	f107 0314 	add.w	r3, r7, #20
    db1c:	f107 0214 	add.w	r2, r7, #20
    db20:	6812      	ldr	r2, [r2, #0]
    db22:	3201      	adds	r2, #1
    db24:	601a      	str	r2, [r3, #0]
				iLen--;
    db26:	f107 0310 	add.w	r3, r7, #16
    db2a:	f107 0210 	add.w	r2, r7, #16
    db2e:	6812      	ldr	r2, [r2, #0]
    db30:	3a01      	subs	r2, #1
    db32:	601a      	str	r2, [r3, #0]
    db34:	e036      	b.n	dba4 <GoalDspMultiLine+0x27c>
			}
		}
		else
		{                           // Yes, it's the end of data
			xLine = txLine[usLine]; // Display line
    db36:	f107 031a 	add.w	r3, r7, #26
    db3a:	881b      	ldrh	r3, [r3, #0]
    db3c:	22ac      	movs	r2, #172	; 0xac
    db3e:	fb02 f303 	mul.w	r3, r2, r3
    db42:	f107 020c 	add.w	r2, r7, #12
    db46:	6812      	ldr	r2, [r2, #0]
    db48:	18d3      	adds	r3, r2, r3
    db4a:	f107 0228 	add.w	r2, r7, #40	; 0x28
    db4e:	4611      	mov	r1, r2
    db50:	461a      	mov	r2, r3
    db52:	23ac      	movs	r3, #172	; 0xac
    db54:	4608      	mov	r0, r1
    db56:	4611      	mov	r1, r2
    db58:	461a      	mov	r2, r3
    db5a:	f7fb e83a 	blx	8bd0 <_init+0x100>
			iRet = GoalDspLine(hWindow, usLine++, tcBuffer, &xLine, ulTimeOut, bRefresh);
    db5e:	f107 031a 	add.w	r3, r7, #26
    db62:	8819      	ldrh	r1, [r3, #0]
    db64:	f107 031a 	add.w	r3, r7, #26
    db68:	f107 021a 	add.w	r2, r7, #26
    db6c:	8812      	ldrh	r2, [r2, #0]
    db6e:	3201      	adds	r2, #1
    db70:	801a      	strh	r2, [r3, #0]
    db72:	f107 0424 	add.w	r4, r7, #36	; 0x24
    db76:	f107 001c 	add.w	r0, r7, #28
    db7a:	f107 02d4 	add.w	r2, r7, #212	; 0xd4
    db7e:	f107 0328 	add.w	r3, r7, #40	; 0x28
    db82:	f107 0508 	add.w	r5, r7, #8
    db86:	682d      	ldr	r5, [r5, #0]
    db88:	9500      	str	r5, [sp, #0]
    db8a:	1dfd      	adds	r5, r7, #7
    db8c:	782d      	ldrb	r5, [r5, #0]
    db8e:	9501      	str	r5, [sp, #4]
    db90:	6800      	ldr	r0, [r0, #0]
    db92:	f7ff fcf5 	bl	d580 <GoalDspLine>
    db96:	6020      	str	r0, [r4, #0]
			CHECK(iRet>=0, lblKO);
    db98:	f107 0324 	add.w	r3, r7, #36	; 0x24
    db9c:	681b      	ldr	r3, [r3, #0]
    db9e:	2b00      	cmp	r3, #0
    dba0:	db0b      	blt.n	dbba <GoalDspMultiLine+0x292>
			break;                  // Exit from the loop
    dba2:	e009      	b.n	dbb8 <GoalDspMultiLine+0x290>
	// Printing in progress
	// ********************
	CHECK ((pcData!=NULL) && (iLen>=0), lblKO);

	memset(tcBuffer, 0, sizeof(tcBuffer));
	while(usLine < usMaxLine)
    dba4:	f107 021a 	add.w	r2, r7, #26
    dba8:	f107 0318 	add.w	r3, r7, #24
    dbac:	8812      	ldrh	r2, [r2, #0]
    dbae:	881b      	ldrh	r3, [r3, #0]
    dbb0:	429a      	cmp	r2, r3
    dbb2:	f4ff af00 	bcc.w	d9b6 <GoalDspMultiLine+0x8e>
			CHECK(iRet>=0, lblKO);
			break;                  // Exit from the loop
		}
	}

	goto lblEnd;
    dbb6:	e006      	b.n	dbc6 <GoalDspMultiLine+0x29e>
    dbb8:	e005      	b.n	dbc6 <GoalDspMultiLine+0x29e>

	// Errors treatment
    // ****************
lblKO:                              // Display buffer failed.
	iRet=-1;
    dbba:	f107 0324 	add.w	r3, r7, #36	; 0x24
    dbbe:	f04f 32ff 	mov.w	r2, #4294967295
    dbc2:	601a      	str	r2, [r3, #0]
	goto lblEnd;
    dbc4:	bf00      	nop
lblEnd:
	return iRet;
    dbc6:	f107 0324 	add.w	r3, r7, #36	; 0x24
    dbca:	681b      	ldr	r3, [r3, #0]
}
    dbcc:	4618      	mov	r0, r3
    dbce:	f644 1380 	movw	r3, #18816	; 0x4980
    dbd2:	f2c0 0302 	movt	r3, #2
    dbd6:	f8d7 213c 	ldr.w	r2, [r7, #316]	; 0x13c
    dbda:	681b      	ldr	r3, [r3, #0]
    dbdc:	429a      	cmp	r2, r3
    dbde:	d001      	beq.n	dbe4 <GoalDspMultiLine+0x2bc>
    dbe0:	f7fb f986 	bl	8ef0 <__stack_chk_fail>
    dbe4:	f507 77a0 	add.w	r7, r7, #320	; 0x140
    dbe8:	46bd      	mov	sp, r7
    dbea:	bdb0      	pop	{r4, r5, r7, pc}

0000dbec <GoalGetKey>:
//   >0 : Key value.
//   =0 : Timeout.
//****************************************************************************

int GoalGetKey(T_GL_HWIDGET hWindow, T_GL_HGRAPHIC_LIB hGraphicLib, bool bShortcut, ulong ulTimeOut, bool bClear)
{
    dbec:	b580      	push	{r7, lr}
    dbee:	b088      	sub	sp, #32
    dbf0:	af00      	add	r7, sp, #0
    dbf2:	60f8      	str	r0, [r7, #12]
    dbf4:	60b9      	str	r1, [r7, #8]
    dbf6:	603b      	str	r3, [r7, #0]
    dbf8:	4613      	mov	r3, r2
    dbfa:	71fb      	strb	r3, [r7, #7]
    dbfc:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
    dc00:	71bb      	strb	r3, [r7, #6]
    dc02:	f644 1380 	movw	r3, #18816	; 0x4980
    dc06:	f2c0 0302 	movt	r3, #2
    dc0a:	681b      	ldr	r3, [r3, #0]
    dc0c:	61fb      	str	r3, [r7, #28]
	T_GL_WCHAR ulKey;
	int iRet;

	// Loop indefinitely until the result is set from the call back functions
	// **********************************************************************
	bTouch = GL_GraphicLib_IsTouchPresent(hGraphicLib);       // Touch screen?
    dc0e:	68b8      	ldr	r0, [r7, #8]
    dc10:	f00a fe06 	bl	18820 <GL_GraphicLib_IsTouchPresent>
    dc14:	4603      	mov	r3, r0
    dc16:	74fb      	strb	r3, [r7, #19]
	if (bTouch)
    dc18:	7cfb      	ldrb	r3, [r7, #19]
    dc1a:	2b00      	cmp	r3, #0
    dc1c:	d009      	beq.n	dc32 <GoalGetKey+0x46>
	{                                                         // Yes,
		GL_GraphicLib_UnbindKey(hGraphicLib, GL_KEY_F);       // Unbind "F" key to Telium Key
    dc1e:	68b8      	ldr	r0, [r7, #8]
    dc20:	f64f 0154 	movw	r1, #63572	; 0xf854
    dc24:	f00a fe20 	bl	18868 <GL_GraphicLib_UnbindKey>
		GL_GraphicLib_UnbindKey(hGraphicLib, GL_KEY_DOT);     // Unbind "Dot" key to Telium Key
    dc28:	68b8      	ldr	r0, [r7, #8]
    dc2a:	212e      	movs	r1, #46	; 0x2e
    dc2c:	f00a fe1c 	bl	18868 <GL_GraphicLib_UnbindKey>
    dc30:	e013      	b.n	dc5a <GoalGetKey+0x6e>
	}
	else
	{                                                         // No,
		GL_GraphicLib_UnbindKey(hGraphicLib, GL_KEY_UP);      // Unbind "Up" key to Telium Key
    dc32:	68b8      	ldr	r0, [r7, #8]
    dc34:	f64f 0159 	movw	r1, #63577	; 0xf859
    dc38:	f00a fe16 	bl	18868 <GL_GraphicLib_UnbindKey>
		GL_GraphicLib_UnbindKey(hGraphicLib, GL_KEY_DOWN);    // Unbind "Down" key to Telium Key
    dc3c:	68b8      	ldr	r0, [r7, #8]
    dc3e:	f64f 015a 	movw	r1, #63578	; 0xf85a
    dc42:	f00a fe11 	bl	18868 <GL_GraphicLib_UnbindKey>
		GL_GraphicLib_UnbindKey(hGraphicLib, GL_KEY_F1);      // Unbind "F1" key to Telium Key
    dc46:	68b8      	ldr	r0, [r7, #8]
    dc48:	f64f 0155 	movw	r1, #63573	; 0xf855
    dc4c:	f00a fe0c 	bl	18868 <GL_GraphicLib_UnbindKey>
		GL_GraphicLib_UnbindKey(hGraphicLib, GL_KEY_F4);      // Unbind "F4" key to Telium Key
    dc50:	68b8      	ldr	r0, [r7, #8]
    dc52:	f64f 0158 	movw	r1, #63576	; 0xf858
    dc56:	f00a fe07 	bl	18868 <GL_GraphicLib_UnbindKey>
	}

	// Restart timer
	// *************
	if (ulTimeOut == GL_TIME_INFINITE)                        // Set timeout value
    dc5a:	683b      	ldr	r3, [r7, #0]
    dc5c:	f1b3 3fff 	cmp.w	r3, #4294967295
    dc60:	d10a      	bne.n	dc78 <GoalGetKey+0x8c>
		GL_Timer_SetInterval(GL_Widget_SearchId(hWindow, TIMER_ID), 0x7FFFFFFF);          // Bug 0xFFFFFFFF not supported
    dc62:	68f8      	ldr	r0, [r7, #12]
    dc64:	2100      	movs	r1, #0
    dc66:	f00a ff0d 	bl	18a84 <GL_Widget_SearchId>
    dc6a:	4603      	mov	r3, r0
    dc6c:	4618      	mov	r0, r3
    dc6e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    dc72:	f00a fead 	bl	189d0 <GL_Timer_SetInterval>
    dc76:	e008      	b.n	dc8a <GoalGetKey+0x9e>
	else
		GL_Timer_SetInterval(GL_Widget_SearchId(hWindow, TIMER_ID), ulTimeOut);
    dc78:	68f8      	ldr	r0, [r7, #12]
    dc7a:	2100      	movs	r1, #0
    dc7c:	f00a ff02 	bl	18a84 <GL_Widget_SearchId>
    dc80:	4603      	mov	r3, r0
    dc82:	4618      	mov	r0, r3
    dc84:	6839      	ldr	r1, [r7, #0]
    dc86:	f00a fea3 	bl	189d0 <GL_Timer_SetInterval>

	// Detect key pressed
	// ******************
	if (!bShortcut)                                           // Remove shortcut and enable callback on key pressed?
    dc8a:	79fb      	ldrb	r3, [r7, #7]
    dc8c:	f083 0301 	eor.w	r3, r3, #1
    dc90:	b2db      	uxtb	r3, r3
    dc92:	2b00      	cmp	r3, #0
    dc94:	d033      	beq.n	dcfe <GoalGetKey+0x112>
	{                                                                                     // Yes
		GL_Widget_RegisterCallback(hWindow, GL_EVENT_KEY_DOWN, CallBackPressKey);         // Call back when key pressed
    dc96:	68f8      	ldr	r0, [r7, #12]
    dc98:	2106      	movs	r1, #6
    dc9a:	f64c 6281 	movw	r2, #52865	; 0xce81
    dc9e:	f2c0 0200 	movt	r2, #0
    dca2:	f00a fedd 	bl	18a60 <GL_Widget_RegisterCallback>
		GL_Widget_SetShortcut(GL_Widget_SearchId(hWindow, BUTTON_CAN_ID), GL_KEY_NONE);   // Remove shortcut from cancel button
    dca6:	68f8      	ldr	r0, [r7, #12]
    dca8:	f44f 7140 	mov.w	r1, #768	; 0x300
    dcac:	f00a feea 	bl	18a84 <GL_Widget_SearchId>
    dcb0:	4603      	mov	r3, r0
    dcb2:	4618      	mov	r0, r3
    dcb4:	f64f 71ff 	movw	r1, #65535	; 0xffff
    dcb8:	f00a fff2 	bl	18ca0 <GL_Widget_SetShortcut>
		GL_Widget_SetShortcut(GL_Widget_SearchId(hWindow, BUTTON_VAL_ID), GL_KEY_NONE);   // Remove shortcut from valid button
    dcbc:	68f8      	ldr	r0, [r7, #12]
    dcbe:	f44f 7100 	mov.w	r1, #512	; 0x200
    dcc2:	f00a fedf 	bl	18a84 <GL_Widget_SearchId>
    dcc6:	4603      	mov	r3, r0
    dcc8:	4618      	mov	r0, r3
    dcca:	f64f 71ff 	movw	r1, #65535	; 0xffff
    dcce:	f00a ffe7 	bl	18ca0 <GL_Widget_SetShortcut>
		GL_Widget_SetShortcut(GL_Widget_SearchId(hWindow, BUTTON_DOWN_ID), GL_KEY_NONE);  // Remove shortcut from down button
    dcd2:	68f8      	ldr	r0, [r7, #12]
    dcd4:	f44f 6180 	mov.w	r1, #1024	; 0x400
    dcd8:	f00a fed4 	bl	18a84 <GL_Widget_SearchId>
    dcdc:	4603      	mov	r3, r0
    dcde:	4618      	mov	r0, r3
    dce0:	f64f 71ff 	movw	r1, #65535	; 0xffff
    dce4:	f00a ffdc 	bl	18ca0 <GL_Widget_SetShortcut>
		GL_Widget_SetShortcut(GL_Widget_SearchId(hWindow, BUTTON_UP_ID), GL_KEY_NONE);    // Remove shortcut from up button
    dce8:	68f8      	ldr	r0, [r7, #12]
    dcea:	f44f 61a0 	mov.w	r1, #1280	; 0x500
    dcee:	f00a fec9 	bl	18a84 <GL_Widget_SearchId>
    dcf2:	4603      	mov	r3, r0
    dcf4:	4618      	mov	r0, r3
    dcf6:	f64f 71ff 	movw	r1, #65535	; 0xffff
    dcfa:	f00a ffd1 	bl	18ca0 <GL_Widget_SetShortcut>
		hTsc = Telium_Stdperif("TSCREEN", NULL);                     // Check "touch" peripheral opened?
		if(hTsc)
			Telium_Reset_buf(hTsc, _receive_id);                     // Yes, reset "touch" FIFO
	}
#endif
	GL_Window_MainLoop(hWindow);                              // Wait until a result is set
    dcfe:	68f8      	ldr	r0, [r7, #12]
    dd00:	f00b f8ca 	bl	18e98 <GL_Window_MainLoop>

	// Test the result set by the call back functions
	// **********************************************
	switch(GL_Window_GetResult(hWindow))                      // Get the result
    dd04:	68f8      	ldr	r0, [r7, #12]
    dd06:	f00b f8b5 	bl	18e74 <GL_Window_GetResult>
    dd0a:	4603      	mov	r3, r0
    dd0c:	2b05      	cmp	r3, #5
    dd0e:	d854      	bhi.n	ddba <GoalGetKey+0x1ce>
    dd10:	a201      	add	r2, pc, #4	; (adr r2, dd18 <GoalGetKey+0x12c>)
    dd12:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    dd16:	bf00      	nop
    dd18:	0000dd55 	.word	0x0000dd55
    dd1c:	0000dd6d 	.word	0x0000dd6d
    dd20:	0000dd85 	.word	0x0000dd85
    dd24:	0000dd9d 	.word	0x0000dd9d
    dd28:	0000ddb5 	.word	0x0000ddb5
    dd2c:	0000dd31 	.word	0x0000dd31
	{
	case RES_PRESS_STATUS:                                    // Key press result
		GL_Timer_Stop(GL_Widget_SearchId(hWindow, TIMER_ID));
    dd30:	68f8      	ldr	r0, [r7, #12]
    dd32:	2100      	movs	r1, #0
    dd34:	f00a fea6 	bl	18a84 <GL_Widget_SearchId>
    dd38:	4603      	mov	r3, r0
    dd3a:	4618      	mov	r0, r3
    dd3c:	f00a fe5a 	bl	189f4 <GL_Timer_Stop>
		GL_Widget_GetUserData(hWindow, &ulKey, sizeof(ulKey));
    dd40:	f107 0314 	add.w	r3, r7, #20
    dd44:	68f8      	ldr	r0, [r7, #12]
    dd46:	4619      	mov	r1, r3
    dd48:	2204      	movs	r2, #4
    dd4a:	f00a fe77 	bl	18a3c <GL_Widget_GetUserData>
		iRet=ulKey;
    dd4e:	697b      	ldr	r3, [r7, #20]
    dd50:	61bb      	str	r3, [r7, #24]
		break;
    dd52:	e035      	b.n	ddc0 <GoalGetKey+0x1d4>
	case RES_VALID_STATUS:                                    // Key valid result
		GL_Timer_Stop(GL_Widget_SearchId(hWindow, TIMER_ID));
    dd54:	68f8      	ldr	r0, [r7, #12]
    dd56:	2100      	movs	r1, #0
    dd58:	f00a fe94 	bl	18a84 <GL_Widget_SearchId>
    dd5c:	4603      	mov	r3, r0
    dd5e:	4618      	mov	r0, r3
    dd60:	f00a fe48 	bl	189f4 <GL_Timer_Stop>
		iRet=GL_KEY_VALID;
    dd64:	f64f 0350 	movw	r3, #63568	; 0xf850
    dd68:	61bb      	str	r3, [r7, #24]
		break;
    dd6a:	e029      	b.n	ddc0 <GoalGetKey+0x1d4>
	case RES_CANCEL_STATUS:                                   // Key cancel result
		GL_Timer_Stop(GL_Widget_SearchId(hWindow, TIMER_ID));
    dd6c:	68f8      	ldr	r0, [r7, #12]
    dd6e:	2100      	movs	r1, #0
    dd70:	f00a fe88 	bl	18a84 <GL_Widget_SearchId>
    dd74:	4603      	mov	r3, r0
    dd76:	4618      	mov	r0, r3
    dd78:	f00a fe3c 	bl	189f4 <GL_Timer_Stop>
		iRet=GL_KEY_CANCEL;
    dd7c:	f64f 0351 	movw	r3, #63569	; 0xf851
    dd80:	61bb      	str	r3, [r7, #24]
		break;
    dd82:	e01d      	b.n	ddc0 <GoalGetKey+0x1d4>
	case RES_DOWN_STATUS:                                     // Key down result
		GL_Timer_Stop(GL_Widget_SearchId(hWindow, TIMER_ID));
    dd84:	68f8      	ldr	r0, [r7, #12]
    dd86:	2100      	movs	r1, #0
    dd88:	f00a fe7c 	bl	18a84 <GL_Widget_SearchId>
    dd8c:	4603      	mov	r3, r0
    dd8e:	4618      	mov	r0, r3
    dd90:	f00a fe30 	bl	189f4 <GL_Timer_Stop>
		iRet=GL_KEY_DOWN;
    dd94:	f64f 035a 	movw	r3, #63578	; 0xf85a
    dd98:	61bb      	str	r3, [r7, #24]
		break;
    dd9a:	e011      	b.n	ddc0 <GoalGetKey+0x1d4>
	case RES_UP_STATUS:                                       // Key up result
		GL_Timer_Stop(GL_Widget_SearchId(hWindow, TIMER_ID));
    dd9c:	68f8      	ldr	r0, [r7, #12]
    dd9e:	2100      	movs	r1, #0
    dda0:	f00a fe70 	bl	18a84 <GL_Widget_SearchId>
    dda4:	4603      	mov	r3, r0
    dda6:	4618      	mov	r0, r3
    dda8:	f00a fe24 	bl	189f4 <GL_Timer_Stop>
		iRet=GL_KEY_UP;
    ddac:	f64f 0359 	movw	r3, #63577	; 0xf859
    ddb0:	61bb      	str	r3, [r7, #24]
		break;
    ddb2:	e005      	b.n	ddc0 <GoalGetKey+0x1d4>
	case RES_TIMER_STATUS:                                    // Timer result
		iRet=0;
    ddb4:	2300      	movs	r3, #0
    ddb6:	61bb      	str	r3, [r7, #24]
		break;
    ddb8:	e002      	b.n	ddc0 <GoalGetKey+0x1d4>
	default:                                                  // Unknown result
		iRet=0;
    ddba:	2300      	movs	r3, #0
    ddbc:	61bb      	str	r3, [r7, #24]
		break;
    ddbe:	bf00      	nop
	}

	if (!bShortcut)                                           // Restore shortcut and disable callback on key pressed?
    ddc0:	79fb      	ldrb	r3, [r7, #7]
    ddc2:	f083 0301 	eor.w	r3, r3, #1
    ddc6:	b2db      	uxtb	r3, r3
    ddc8:	2b00      	cmp	r3, #0
    ddca:	d033      	beq.n	de34 <GoalGetKey+0x248>
	{                                                                                     // Yes
		GL_Widget_UnregisterCallback(hWindow, GL_EVENT_KEY_DOWN, CallBackPressKey);       // Unregister call back on key pressed
    ddcc:	68f8      	ldr	r0, [r7, #12]
    ddce:	2106      	movs	r1, #6
    ddd0:	f64c 6281 	movw	r2, #52865	; 0xce81
    ddd4:	f2c0 0200 	movt	r2, #0
    ddd8:	f00b f816 	bl	18e08 <GL_Widget_UnregisterCallback>
		GL_Widget_SetShortcut(GL_Widget_SearchId(hWindow, BUTTON_CAN_ID), GL_KEY_CANCEL); // Set shortcut on cancel button
    dddc:	68f8      	ldr	r0, [r7, #12]
    ddde:	f44f 7140 	mov.w	r1, #768	; 0x300
    dde2:	f00a fe4f 	bl	18a84 <GL_Widget_SearchId>
    dde6:	4603      	mov	r3, r0
    dde8:	4618      	mov	r0, r3
    ddea:	f64f 0151 	movw	r1, #63569	; 0xf851
    ddee:	f00a ff57 	bl	18ca0 <GL_Widget_SetShortcut>
		GL_Widget_SetShortcut(GL_Widget_SearchId(hWindow, BUTTON_VAL_ID), GL_KEY_VALID);  // Set shortcut on valid button
    ddf2:	68f8      	ldr	r0, [r7, #12]
    ddf4:	f44f 7100 	mov.w	r1, #512	; 0x200
    ddf8:	f00a fe44 	bl	18a84 <GL_Widget_SearchId>
    ddfc:	4603      	mov	r3, r0
    ddfe:	4618      	mov	r0, r3
    de00:	f64f 0150 	movw	r1, #63568	; 0xf850
    de04:	f00a ff4c 	bl	18ca0 <GL_Widget_SetShortcut>
		GL_Widget_SetShortcut(GL_Widget_SearchId(hWindow, BUTTON_DOWN_ID), GL_KEY_DOWN);  // Set shortcut on down button
    de08:	68f8      	ldr	r0, [r7, #12]
    de0a:	f44f 6180 	mov.w	r1, #1024	; 0x400
    de0e:	f00a fe39 	bl	18a84 <GL_Widget_SearchId>
    de12:	4603      	mov	r3, r0
    de14:	4618      	mov	r0, r3
    de16:	f64f 015a 	movw	r1, #63578	; 0xf85a
    de1a:	f00a ff41 	bl	18ca0 <GL_Widget_SetShortcut>
		GL_Widget_SetShortcut(GL_Widget_SearchId(hWindow, BUTTON_UP_ID), GL_KEY_UP);      // Set shortcut on up button
    de1e:	68f8      	ldr	r0, [r7, #12]
    de20:	f44f 61a0 	mov.w	r1, #1280	; 0x500
    de24:	f00a fe2e 	bl	18a84 <GL_Widget_SearchId>
    de28:	4603      	mov	r3, r0
    de2a:	4618      	mov	r0, r3
    de2c:	f64f 0159 	movw	r1, #63577	; 0xf859
    de30:	f00a ff36 	bl	18ca0 <GL_Widget_SetShortcut>
	}

	if (bTouch)                                               // Touch screen?
    de34:	7cfb      	ldrb	r3, [r7, #19]
    de36:	2b00      	cmp	r3, #0
    de38:	d00d      	beq.n	de56 <GoalGetKey+0x26a>
	{                                                                                     // Yes
		GL_GraphicLib_BindSingleKey(hGraphicLib, GL_KEY_F, GL_VIRTUAL_KEY_PREVIOUS);      // Bind "F" key to virtual Key
    de3a:	68b8      	ldr	r0, [r7, #8]
    de3c:	f64f 0154 	movw	r1, #63572	; 0xf854
    de40:	f64f 021b 	movw	r2, #63515	; 0xf81b
    de44:	f00a fc9a 	bl	1877c <GL_GraphicLib_BindSingleKey>
		GL_GraphicLib_BindSingleKey(hGraphicLib, GL_KEY_DOT, GL_VIRTUAL_KEY_NEXT);        // Bind "Dot" key to virtual Key
    de48:	68b8      	ldr	r0, [r7, #8]
    de4a:	212e      	movs	r1, #46	; 0x2e
    de4c:	f64f 021c 	movw	r2, #63516	; 0xf81c
    de50:	f00a fc94 	bl	1877c <GL_GraphicLib_BindSingleKey>
    de54:	e01b      	b.n	de8e <GoalGetKey+0x2a2>
	}
	else
	{                                                                                     // No
		GL_GraphicLib_BindSingleKey(hGraphicLib, GL_KEY_UP, GL_VIRTUAL_KEY_PREVIOUS);     // Bind "Up" key to virtual Key
    de56:	68b8      	ldr	r0, [r7, #8]
    de58:	f64f 0159 	movw	r1, #63577	; 0xf859
    de5c:	f64f 021b 	movw	r2, #63515	; 0xf81b
    de60:	f00a fc8c 	bl	1877c <GL_GraphicLib_BindSingleKey>
		GL_GraphicLib_BindSingleKey(hGraphicLib, GL_KEY_DOWN, GL_VIRTUAL_KEY_NEXT);       // Bind "Down" key to virtual Key
    de64:	68b8      	ldr	r0, [r7, #8]
    de66:	f64f 015a 	movw	r1, #63578	; 0xf85a
    de6a:	f64f 021c 	movw	r2, #63516	; 0xf81c
    de6e:	f00a fc85 	bl	1877c <GL_GraphicLib_BindSingleKey>
		GL_GraphicLib_BindSingleKey(hGraphicLib, GL_KEY_F1, GL_VIRTUAL_KEY_LEFT);         // Bind "F1" key to virtual Key
    de72:	68b8      	ldr	r0, [r7, #8]
    de74:	f64f 0155 	movw	r1, #63573	; 0xf855
    de78:	f44f 4278 	mov.w	r2, #63488	; 0xf800
    de7c:	f00a fc7e 	bl	1877c <GL_GraphicLib_BindSingleKey>
		GL_GraphicLib_BindSingleKey(hGraphicLib, GL_KEY_F4, GL_VIRTUAL_KEY_RIGHT);        // Bind "F4" key to virtual Key
    de80:	68b8      	ldr	r0, [r7, #8]
    de82:	f64f 0158 	movw	r1, #63576	; 0xf858
    de86:	f64f 0201 	movw	r2, #63489	; 0xf801
    de8a:	f00a fc77 	bl	1877c <GL_GraphicLib_BindSingleKey>
	}

	return iRet;
    de8e:	69bb      	ldr	r3, [r7, #24]
}
    de90:	4618      	mov	r0, r3
    de92:	f644 1380 	movw	r3, #18816	; 0x4980
    de96:	f2c0 0302 	movt	r3, #2
    de9a:	69fa      	ldr	r2, [r7, #28]
    de9c:	681b      	ldr	r3, [r3, #0]
    de9e:	429a      	cmp	r2, r3
    dea0:	d001      	beq.n	dea6 <GoalGetKey+0x2ba>
    dea2:	f7fb f825 	bl	8ef0 <__stack_chk_fail>
    dea6:	f107 0720 	add.w	r7, r7, #32
    deaa:	46bd      	mov	sp, r7
    deac:	bd80      	pop	{r7, pc}
    deae:	bf00      	nop

0000deb0 <GoalDestroyScreen>:
//   phWindow (I-) : Pointer on window context handle.
// This function has no return value.
//****************************************************************************

void GoalDestroyScreen(T_GL_HWIDGET *phWindow)
{
    deb0:	b580      	push	{r7, lr}
    deb2:	b084      	sub	sp, #16
    deb4:	af00      	add	r7, sp, #0
    deb6:	6078      	str	r0, [r7, #4]
    deb8:	f644 1380 	movw	r3, #18816	; 0x4980
    debc:	f2c0 0302 	movt	r3, #2
    dec0:	681b      	ldr	r3, [r3, #0]
    dec2:	60fb      	str	r3, [r7, #12]
    // ***************
		// Empty

	// Destroy screen
	// **************
	GL_Widget_Destroy(*phWindow); // Destroy window with all widgets attached
    dec4:	687b      	ldr	r3, [r7, #4]
    dec6:	681b      	ldr	r3, [r3, #0]
    dec8:	4618      	mov	r0, r3
    deca:	f00a fda5 	bl	18a18 <GL_Widget_Destroy>
	*phWindow=NULL;
    dece:	687b      	ldr	r3, [r7, #4]
    ded0:	2200      	movs	r2, #0
    ded2:	601a      	str	r2, [r3, #0]
}
    ded4:	f644 1380 	movw	r3, #18816	; 0x4980
    ded8:	f2c0 0302 	movt	r3, #2
    dedc:	68fa      	ldr	r2, [r7, #12]
    dede:	681b      	ldr	r3, [r3, #0]
    dee0:	429a      	cmp	r2, r3
    dee2:	d001      	beq.n	dee8 <GoalDestroyScreen+0x38>
    dee4:	f7fb f804 	bl	8ef0 <__stack_chk_fail>
    dee8:	f107 0710 	add.w	r7, r7, #16
    deec:	46bd      	mov	sp, r7
    deee:	bd80      	pop	{r7, pc}

0000def0 <GoalCreateDrawing>:
//   !NULL : Pointer to the handle of the drawing.
//   NULL : Drawing failed
//****************************************************************************

T_GL_HWIDGET GoalCreateDrawing (T_GL_HGRAPHIC_LIB hGraphicLib, T_GL_ENCODING_CHARSET eCharSet)
{
    def0:	b580      	push	{r7, lr}
    def2:	b08c      	sub	sp, #48	; 0x30
    def4:	af00      	add	r7, sp, #0
    def6:	6078      	str	r0, [r7, #4]
    def8:	6039      	str	r1, [r7, #0]
    defa:	f644 1380 	movw	r3, #18816	; 0x4980
    defe:	f2c0 0302 	movt	r3, #2
    df02:	681b      	ldr	r3, [r3, #0]
    df04:	62fb      	str	r3, [r7, #44]	; 0x2c
	// Local variables
    // ***************
	T_GL_HWIDGET hWindow, hTimer, hLayout, hDrawing, hLayout2, hButtonVal, hButtonCan;
	bool bTouch=FALSE;
    df06:	2300      	movs	r3, #0
    df08:	73fb      	strb	r3, [r7, #15]

	// Build drawing context with 2 buttons (Cancel and Valid)
	// *******************************************************
    GL_GraphicLib_SetCharset(hGraphicLib, eCharSet);                  // Change the encoding charset of the graphic library
    df0a:	6878      	ldr	r0, [r7, #4]
    df0c:	6839      	ldr	r1, [r7, #0]
    df0e:	f00a fc99 	bl	18844 <GL_GraphicLib_SetCharset>

	bTouch = GL_GraphicLib_IsTouchPresent(hGraphicLib);               // Touch screen?
    df12:	6878      	ldr	r0, [r7, #4]
    df14:	f00a fc84 	bl	18820 <GL_GraphicLib_IsTouchPresent>
    df18:	4603      	mov	r3, r0
    df1a:	73fb      	strb	r3, [r7, #15]

	hWindow = GL_Window_Create(hGraphicLib);                          // Create a window in a user area
    df1c:	6878      	ldr	r0, [r7, #4]
    df1e:	f00a ff85 	bl	18e2c <GL_Window_Create>
    df22:	6138      	str	r0, [r7, #16]
	CHECK(hWindow!=NULL, lblEnd);
    df24:	693b      	ldr	r3, [r7, #16]
    df26:	2b00      	cmp	r3, #0
    df28:	f000 80bc 	beq.w	e0a4 <GoalCreateDrawing+0x1b4>

	hTimer = GL_Timer_Create(hWindow);                                // Create a timer on this window
    df2c:	6938      	ldr	r0, [r7, #16]
    df2e:	f00a fd3d 	bl	189ac <GL_Timer_Create>
    df32:	6178      	str	r0, [r7, #20]
	CHECK(hTimer!=NULL, lblKO);
    df34:	697b      	ldr	r3, [r7, #20]
    df36:	2b00      	cmp	r3, #0
    df38:	f000 80a8 	beq.w	e08c <GoalCreateDrawing+0x19c>
	GL_Widget_SetId(hTimer, TIMER_ID);                                // Timer Identifier TIMER_ID
    df3c:	6978      	ldr	r0, [r7, #20]
    df3e:	2100      	movs	r1, #0
    df40:	f00a fe66 	bl	18c10 <GL_Widget_SetId>
	GL_Widget_RegisterCallback(hTimer, GL_EVENT_TIMER_OUT, CallBackTimeout); // Call back when the timer expired
    df44:	6978      	ldr	r0, [r7, #20]
    df46:	2108      	movs	r1, #8
    df48:	f64c 72c5 	movw	r2, #53189	; 0xcfc5
    df4c:	f2c0 0200 	movt	r2, #0
    df50:	f00a fd86 	bl	18a60 <GL_Widget_RegisterCallback>

	hLayout = GL_Layout_Create(hWindow);                              // Create a layout on this window
    df54:	6938      	ldr	r0, [r7, #16]
    df56:	f00a fcab 	bl	188b0 <GL_Layout_Create>
    df5a:	61b8      	str	r0, [r7, #24]
	CHECK(hLayout!=NULL, lblKO);
    df5c:	69bb      	ldr	r3, [r7, #24]
    df5e:	2b00      	cmp	r3, #0
    df60:	f000 8094 	beq.w	e08c <GoalCreateDrawing+0x19c>

	hDrawing = GL_Drawing_Create(hLayout);                            // Create a drawing on this layout
    df64:	69b8      	ldr	r0, [r7, #24]
    df66:	f00a fb79 	bl	1865c <GL_Drawing_Create>
    df6a:	61f8      	str	r0, [r7, #28]
	CHECK(hDrawing!=NULL, lblKO);
    df6c:	69fb      	ldr	r3, [r7, #28]
    df6e:	2b00      	cmp	r3, #0
    df70:	f000 808c 	beq.w	e08c <GoalCreateDrawing+0x19c>
	GL_Widget_SetId(hDrawing, DRAWING_ID);                            // Drawing Identifier DRAWING_ID
    df74:	69f8      	ldr	r0, [r7, #28]
    df76:	f44f 61e0 	mov.w	r1, #1792	; 0x700
    df7a:	f00a fe49 	bl	18c10 <GL_Widget_SetId>
	GL_Widget_SetItem(hDrawing, 0, 0);                                // Drawing location on this layout
    df7e:	69f8      	ldr	r0, [r7, #28]
    df80:	2100      	movs	r1, #0
    df82:	2200      	movs	r2, #0
    df84:	f00a fe56 	bl	18c34 <GL_Widget_SetItem>

	hLayout2 = GL_Layout_Create(hLayout);                             // Create a second layout on this layout
    df88:	69b8      	ldr	r0, [r7, #24]
    df8a:	f00a fc91 	bl	188b0 <GL_Layout_Create>
    df8e:	6238      	str	r0, [r7, #32]
	CHECK(hLayout2!=NULL, lblKO);
    df90:	6a3b      	ldr	r3, [r7, #32]
    df92:	2b00      	cmp	r3, #0
    df94:	d07a      	beq.n	e08c <GoalCreateDrawing+0x19c>
	GL_Widget_SetId(hLayout2, LAYOUT2_ID);                            // Second layout identifier
    df96:	6a38      	ldr	r0, [r7, #32]
    df98:	f44f 61c0 	mov.w	r1, #1536	; 0x600
    df9c:	f00a fe38 	bl	18c10 <GL_Widget_SetId>
	GL_Widget_SetItem(hLayout2, 0, 1);                                // Second layout location on this layout
    dfa0:	6a38      	ldr	r0, [r7, #32]
    dfa2:	2100      	movs	r1, #0
    dfa4:	2201      	movs	r2, #1
    dfa6:	f00a fe45 	bl	18c34 <GL_Widget_SetItem>
	GL_Widget_SetGrow(hLayout2, GL_DIRECTION_WIDTH);                  // Grow beyond its size (Background width around layout will fill the complete cell)
    dfaa:	6a38      	ldr	r0, [r7, #32]
    dfac:	2101      	movs	r1, #1
    dfae:	f00a fe1d 	bl	18bec <GL_Widget_SetGrow>

	hButtonCan = GL_Button_Create(hLayout2);                          // Create a cancel button on this second layout
    dfb2:	6a38      	ldr	r0, [r7, #32]
    dfb4:	f00a fa8c 	bl	184d0 <GL_Button_Create>
    dfb8:	6278      	str	r0, [r7, #36]	; 0x24
	CHECK(hButtonCan!=NULL, lblKO);
    dfba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    dfbc:	2b00      	cmp	r3, #0
    dfbe:	d065      	beq.n	e08c <GoalCreateDrawing+0x19c>
	GL_Widget_SetSource(hButtonCan, "skin://images/cancel.wgu");      // Set the cancel skinned image
    dfc0:	6a78      	ldr	r0, [r7, #36]	; 0x24
    dfc2:	f649 5114 	movw	r1, #40212	; 0x9d14
    dfc6:	f2c0 0101 	movt	r1, #1
    dfca:	f00a fe9f 	bl	18d0c <GL_Widget_SetSource>
	GL_Widget_SetItem(hButtonCan, 0, 0);                              // Button location on this layout
    dfce:	6a78      	ldr	r0, [r7, #36]	; 0x24
    dfd0:	2100      	movs	r1, #0
    dfd2:	2200      	movs	r2, #0
    dfd4:	f00a fe2e 	bl	18c34 <GL_Widget_SetItem>
	GL_Widget_SetExpand(hButtonCan, GL_DIRECTION_WIDTH);              // Expand button width
    dfd8:	6a78      	ldr	r0, [r7, #36]	; 0x24
    dfda:	2101      	movs	r1, #1
    dfdc:	f00a fd9a 	bl	18b14 <GL_Widget_SetExpand>
	GL_Widget_SetShortcut(hButtonCan, GL_KEY_CANCEL);                 // Shortcut on this button
    dfe0:	6a78      	ldr	r0, [r7, #36]	; 0x24
    dfe2:	f64f 0151 	movw	r1, #63569	; 0xf851
    dfe6:	f00a fe5b 	bl	18ca0 <GL_Widget_SetShortcut>
	GL_Widget_SetId(hButtonCan, BUTTON_CAN_ID);                       // Cancel button Identifier
    dfea:	6a78      	ldr	r0, [r7, #36]	; 0x24
    dfec:	f44f 7140 	mov.w	r1, #768	; 0x300
    dff0:	f00a fe0e 	bl	18c10 <GL_Widget_SetId>
	GL_Widget_SetGrow(hButtonCan, GL_DIRECTION_WIDTH);                // Grow beyond its size (Background width around cancel button will fill the complete cell)
    dff4:	6a78      	ldr	r0, [r7, #36]	; 0x24
    dff6:	2101      	movs	r1, #1
    dff8:	f00a fdf8 	bl	18bec <GL_Widget_SetGrow>
	GL_Widget_SetFocusable(hButtonCan, false);                        // No focus on this button
    dffc:	6a78      	ldr	r0, [r7, #36]	; 0x24
    dffe:	2100      	movs	r1, #0
    e000:	f00a fd9a 	bl	18b38 <GL_Widget_SetFocusable>
	GL_Widget_RegisterCallback(hButtonCan, GL_EVENT_STYLUS_CLICK, CallBackCancelKey); // Call back when key pressed
    e004:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e006:	2167      	movs	r1, #103	; 0x67
    e008:	f64c 7211 	movw	r2, #53009	; 0xcf11
    e00c:	f2c0 0200 	movt	r2, #0
    e010:	f00a fd26 	bl	18a60 <GL_Widget_RegisterCallback>

	hButtonVal = GL_Button_Create(hLayout2);                          // Create a valid button on this second layout
    e014:	6a38      	ldr	r0, [r7, #32]
    e016:	f00a fa5b 	bl	184d0 <GL_Button_Create>
    e01a:	62b8      	str	r0, [r7, #40]	; 0x28
	CHECK(hButtonVal!=NULL, lblKO);
    e01c:	6abb      	ldr	r3, [r7, #40]	; 0x28
    e01e:	2b00      	cmp	r3, #0
    e020:	d034      	beq.n	e08c <GoalCreateDrawing+0x19c>
	GL_Widget_SetSource(hButtonVal, "skin://images/validation.wgu");  // Set the valid skinned image
    e022:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    e024:	f649 5168 	movw	r1, #40296	; 0x9d68
    e028:	f2c0 0101 	movt	r1, #1
    e02c:	f00a fe6e 	bl	18d0c <GL_Widget_SetSource>
	GL_Widget_SetItem(hButtonVal, 1, 0);                              // Button location on this layout
    e030:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    e032:	2101      	movs	r1, #1
    e034:	2200      	movs	r2, #0
    e036:	f00a fdfd 	bl	18c34 <GL_Widget_SetItem>
	GL_Widget_SetExpand(hButtonVal, GL_DIRECTION_WIDTH);              // Expand button width
    e03a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    e03c:	2101      	movs	r1, #1
    e03e:	f00a fd69 	bl	18b14 <GL_Widget_SetExpand>
	GL_Widget_SetShortcut(hButtonVal, GL_KEY_VALID);                  // Shortcut on this button
    e042:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    e044:	f64f 0150 	movw	r1, #63568	; 0xf850
    e048:	f00a fe2a 	bl	18ca0 <GL_Widget_SetShortcut>
	GL_Widget_SetId(hButtonVal, BUTTON_VAL_ID);                       // Valid button Identifier
    e04c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    e04e:	f44f 7100 	mov.w	r1, #512	; 0x200
    e052:	f00a fddd 	bl	18c10 <GL_Widget_SetId>
	GL_Widget_SetGrow(hButtonVal, GL_DIRECTION_WIDTH);                // Grow beyond its size (Background width around valid button will fill the complete cell)
    e056:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    e058:	2101      	movs	r1, #1
    e05a:	f00a fdc7 	bl	18bec <GL_Widget_SetGrow>
	GL_Widget_SetFocusable(hButtonVal, false);                        // No focus on this button
    e05e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    e060:	2100      	movs	r1, #0
    e062:	f00a fd69 	bl	18b38 <GL_Widget_SetFocusable>
	GL_Widget_RegisterCallback(hButtonVal, GL_EVENT_STYLUS_CLICK, CallBackValidKey); // Call back when key pressed
    e066:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    e068:	2167      	movs	r1, #103	; 0x67
    e06a:	f64c 62d5 	movw	r2, #52949	; 0xced5
    e06e:	f2c0 0200 	movt	r2, #0
    e072:	f00a fcf5 	bl	18a60 <GL_Widget_RegisterCallback>

	if(!bTouch)                                                       // Touch screen?
    e076:	7bfb      	ldrb	r3, [r7, #15]
    e078:	f083 0301 	eor.w	r3, r3, #1
    e07c:	b2db      	uxtb	r3, r3
    e07e:	2b00      	cmp	r3, #0
    e080:	d00d      	beq.n	e09e <GoalCreateDrawing+0x1ae>
		GL_Widget_SetVisible(hLayout2, false);                        // No, do not show second layout (keep shortcut access on key pressed)
    e082:	6a38      	ldr	r0, [r7, #32]
    e084:	2100      	movs	r1, #0
    e086:	f00a fe9b 	bl	18dc0 <GL_Widget_SetVisible>

	goto lblEnd;
    e08a:	e008      	b.n	e09e <GoalCreateDrawing+0x1ae>

	// Errors treatment
    // ****************
lblKO:                                                                // Window creation failed
	if (hWindow)
    e08c:	693b      	ldr	r3, [r7, #16]
    e08e:	2b00      	cmp	r3, #0
    e090:	d007      	beq.n	e0a2 <GoalCreateDrawing+0x1b2>
	{
		GL_Widget_Destroy(hWindow);                                   // Destroy window and all widgets
    e092:	6938      	ldr	r0, [r7, #16]
    e094:	f00a fcc0 	bl	18a18 <GL_Widget_Destroy>
		hWindow=NULL;
    e098:	2300      	movs	r3, #0
    e09a:	613b      	str	r3, [r7, #16]
	}
	goto lblEnd;
    e09c:	e001      	b.n	e0a2 <GoalCreateDrawing+0x1b2>
	GL_Widget_RegisterCallback(hButtonVal, GL_EVENT_STYLUS_CLICK, CallBackValidKey); // Call back when key pressed

	if(!bTouch)                                                       // Touch screen?
		GL_Widget_SetVisible(hLayout2, false);                        // No, do not show second layout (keep shortcut access on key pressed)

	goto lblEnd;
    e09e:	bf00      	nop
    e0a0:	e000      	b.n	e0a4 <GoalCreateDrawing+0x1b4>
	if (hWindow)
	{
		GL_Widget_Destroy(hWindow);                                   // Destroy window and all widgets
		hWindow=NULL;
	}
	goto lblEnd;
    e0a2:	bf00      	nop
lblEnd:
	return hWindow;
    e0a4:	693b      	ldr	r3, [r7, #16]
}
    e0a6:	4618      	mov	r0, r3
    e0a8:	f644 1380 	movw	r3, #18816	; 0x4980
    e0ac:	f2c0 0302 	movt	r3, #2
    e0b0:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    e0b2:	681b      	ldr	r3, [r3, #0]
    e0b4:	429a      	cmp	r2, r3
    e0b6:	d001      	beq.n	e0bc <GoalCreateDrawing+0x1cc>
    e0b8:	f7fa ff1a 	bl	8ef0 <__stack_chk_fail>
    e0bc:	f107 0730 	add.w	r7, r7, #48	; 0x30
    e0c0:	46bd      	mov	sp, r7
    e0c2:	bd80      	pop	{r7, pc}

0000e0c4 <GoalClrDrawing>:
//   >=0 : Clear drawing done.
//   <0 : Clear drawing failed.
//****************************************************************************

int GoalClrDrawing(T_GL_HWIDGET hWindow, T_GL_COLOR ulBackColor, unsigned int uiKeys, bool bRefresh)
{
    e0c4:	b580      	push	{r7, lr}
    e0c6:	b088      	sub	sp, #32
    e0c8:	af00      	add	r7, sp, #0
    e0ca:	60f8      	str	r0, [r7, #12]
    e0cc:	60b9      	str	r1, [r7, #8]
    e0ce:	607a      	str	r2, [r7, #4]
    e0d0:	70fb      	strb	r3, [r7, #3]
    e0d2:	f644 1380 	movw	r3, #18816	; 0x4980
    e0d6:	f2c0 0302 	movt	r3, #2
    e0da:	681b      	ldr	r3, [r3, #0]
    e0dc:	61fb      	str	r3, [r7, #28]
	T_GL_HWIDGET hButtonVal, hButtonCan;
	int iRet;

	// Disable the complete second layout
	// **********************************
	hButtonCan = GL_Widget_SearchId(hWindow, BUTTON_CAN_ID);     // Retrieve the cancel button on this second layout
    e0de:	68f8      	ldr	r0, [r7, #12]
    e0e0:	f44f 7140 	mov.w	r1, #768	; 0x300
    e0e4:	f00a fcce 	bl	18a84 <GL_Widget_SearchId>
    e0e8:	6178      	str	r0, [r7, #20]
	CHECK(hButtonCan!=NULL, lblKO);
    e0ea:	697b      	ldr	r3, [r7, #20]
    e0ec:	2b00      	cmp	r3, #0
    e0ee:	d064      	beq.n	e1ba <GoalClrDrawing+0xf6>
	hButtonVal = GL_Widget_SearchId(hWindow, BUTTON_VAL_ID);     // Retrieve the valid button on this second layout
    e0f0:	68f8      	ldr	r0, [r7, #12]
    e0f2:	f44f 7100 	mov.w	r1, #512	; 0x200
    e0f6:	f00a fcc5 	bl	18a84 <GL_Widget_SearchId>
    e0fa:	61b8      	str	r0, [r7, #24]
	CHECK(hButtonVal!=NULL, lblKO);
    e0fc:	69bb      	ldr	r3, [r7, #24]
    e0fe:	2b00      	cmp	r3, #0
    e100:	d05b      	beq.n	e1ba <GoalClrDrawing+0xf6>

	GL_Widget_SetVisible(hButtonCan, false);                     // Blind the cancel button
    e102:	6978      	ldr	r0, [r7, #20]
    e104:	2100      	movs	r1, #0
    e106:	f00a fe5b 	bl	18dc0 <GL_Widget_SetVisible>
	GL_Widget_UnregisterCallback(hButtonCan, GL_EVENT_STYLUS_CLICK, CallBackCancelKey); // Unregister call back on cancel button
    e10a:	6978      	ldr	r0, [r7, #20]
    e10c:	2167      	movs	r1, #103	; 0x67
    e10e:	f64c 7211 	movw	r2, #53009	; 0xcf11
    e112:	f2c0 0200 	movt	r2, #0
    e116:	f00a fe77 	bl	18e08 <GL_Widget_UnregisterCallback>
	GL_Widget_SetVisible(hButtonVal, false);                     // Blind the valid button
    e11a:	69b8      	ldr	r0, [r7, #24]
    e11c:	2100      	movs	r1, #0
    e11e:	f00a fe4f 	bl	18dc0 <GL_Widget_SetVisible>
	GL_Widget_UnregisterCallback(hButtonVal, GL_EVENT_STYLUS_CLICK, CallBackValidKey); // Unregister call back on valid button
    e122:	69b8      	ldr	r0, [r7, #24]
    e124:	2167      	movs	r1, #103	; 0x67
    e126:	f64c 62d5 	movw	r2, #52949	; 0xced5
    e12a:	f2c0 0200 	movt	r2, #0
    e12e:	f00a fe6b 	bl	18e08 <GL_Widget_UnregisterCallback>

	// Set the second layout with the right properties
	// ***********************************************
	if ((uiKeys & KEY_CANCEL) == KEY_CANCEL)                     // Cancel key?
    e132:	687b      	ldr	r3, [r7, #4]
    e134:	f003 0302 	and.w	r3, r3, #2
    e138:	2b00      	cmp	r3, #0
    e13a:	d00b      	beq.n	e154 <GoalClrDrawing+0x90>
	{
		GL_Widget_SetVisible(hButtonCan, true);                  // Yes, show the cancel key on this second layout
    e13c:	6978      	ldr	r0, [r7, #20]
    e13e:	2101      	movs	r1, #1
    e140:	f00a fe3e 	bl	18dc0 <GL_Widget_SetVisible>
		GL_Widget_RegisterCallback(hButtonCan, GL_EVENT_STYLUS_CLICK, CallBackCancelKey); // Register call back when cancel key pressed or touched
    e144:	6978      	ldr	r0, [r7, #20]
    e146:	2167      	movs	r1, #103	; 0x67
    e148:	f64c 7211 	movw	r2, #53009	; 0xcf11
    e14c:	f2c0 0200 	movt	r2, #0
    e150:	f00a fc86 	bl	18a60 <GL_Widget_RegisterCallback>
	}

	if ((uiKeys & KEY_VALID) == KEY_VALID)                       // Valid key?
    e154:	687b      	ldr	r3, [r7, #4]
    e156:	f003 0301 	and.w	r3, r3, #1
    e15a:	2b00      	cmp	r3, #0
    e15c:	d00b      	beq.n	e176 <GoalClrDrawing+0xb2>
	{
		GL_Widget_SetVisible(hButtonVal, true);                  // Yes, show the valid key on this second layout
    e15e:	69b8      	ldr	r0, [r7, #24]
    e160:	2101      	movs	r1, #1
    e162:	f00a fe2d 	bl	18dc0 <GL_Widget_SetVisible>
		GL_Widget_RegisterCallback(hButtonVal, GL_EVENT_STYLUS_CLICK, CallBackValidKey); // Register call back when valid key pressed or touched
    e166:	69b8      	ldr	r0, [r7, #24]
    e168:	2167      	movs	r1, #103	; 0x67
    e16a:	f64c 62d5 	movw	r2, #52949	; 0xced5
    e16e:	f2c0 0200 	movt	r2, #0
    e172:	f00a fc75 	bl	18a60 <GL_Widget_RegisterCallback>
	}

	if (IsColorDisplay())                                        // Color display?
    e176:	f009 fb25 	bl	177c4 <IsColorDisplay>
    e17a:	4603      	mov	r3, r0
    e17c:	2b00      	cmp	r3, #0
    e17e:	d004      	beq.n	e18a <GoalClrDrawing+0xc6>
		GL_Widget_SetBackColor(hWindow, ulBackColor);            // Yes, set window back color
    e180:	68f8      	ldr	r0, [r7, #12]
    e182:	68b9      	ldr	r1, [r7, #8]
    e184:	f00a fca2 	bl	18acc <GL_Widget_SetBackColor>
    e188:	e004      	b.n	e194 <GoalClrDrawing+0xd0>
	else
		GL_Widget_SetBackColor(hWindow, GL_COLOR_WHITE);         // No, force window back color to white
    e18a:	68f8      	ldr	r0, [r7, #12]
    e18c:	f04f 31ff 	mov.w	r1, #4294967295
    e190:	f00a fc9c 	bl	18acc <GL_Widget_SetBackColor>

	// Clear drawing
	// *************
	GL_Drawing_Clear(GL_Widget_SearchId(hWindow, DRAWING_ID));   // Clear drawing
    e194:	68f8      	ldr	r0, [r7, #12]
    e196:	f44f 61e0 	mov.w	r1, #1792	; 0x700
    e19a:	f00a fc73 	bl	18a84 <GL_Widget_SearchId>
    e19e:	4603      	mov	r3, r0
    e1a0:	4618      	mov	r0, r3
    e1a2:	f00a fa49 	bl	18638 <GL_Drawing_Clear>

	if (bRefresh)                                                // Refresh window?
    e1a6:	78fb      	ldrb	r3, [r7, #3]
    e1a8:	2b00      	cmp	r3, #0
    e1aa:	d003      	beq.n	e1b4 <GoalClrDrawing+0xf0>
		GL_Window_Dispatch(hWindow, 0);                          // Yes, refresh it
    e1ac:	68f8      	ldr	r0, [r7, #12]
    e1ae:	2100      	movs	r1, #0
    e1b0:	f00a fe4e 	bl	18e50 <GL_Window_Dispatch>

	iRet=1;
    e1b4:	2301      	movs	r3, #1
    e1b6:	613b      	str	r3, [r7, #16]
	goto lblEnd;
    e1b8:	e003      	b.n	e1c2 <GoalClrDrawing+0xfe>

	// Errors treatment
    // ****************
lblKO:                                                           // Clear drawing failed
	iRet=-1;
    e1ba:	f04f 33ff 	mov.w	r3, #4294967295
    e1be:	613b      	str	r3, [r7, #16]
	goto lblEnd;
    e1c0:	bf00      	nop
lblEnd:
	return iRet;
    e1c2:	693b      	ldr	r3, [r7, #16]
}
    e1c4:	4618      	mov	r0, r3
    e1c6:	f644 1380 	movw	r3, #18816	; 0x4980
    e1ca:	f2c0 0302 	movt	r3, #2
    e1ce:	69fa      	ldr	r2, [r7, #28]
    e1d0:	681b      	ldr	r3, [r3, #0]
    e1d2:	429a      	cmp	r2, r3
    e1d4:	d001      	beq.n	e1da <GoalClrDrawing+0x116>
    e1d6:	f7fa fe8b 	bl	8ef0 <__stack_chk_fail>
    e1da:	f107 0720 	add.w	r7, r7, #32
    e1de:	46bd      	mov	sp, r7
    e1e0:	bd80      	pop	{r7, pc}
    e1e2:	bf00      	nop

0000e1e4 <GoalDrawLine>:
//   >=0 : Drawing line done (Exit screen : 0=timeout,GL_KEY_CANCEL,GL_KEY_VALID).
//   <0 : Drawing line failed.
//****************************************************************************

int GoalDrawLine(T_GL_HWIDGET hWindow, T_GL_COLOR ulPen, T_GL_COORD sX1, T_GL_COORD sY1, T_GL_COORD sX2, T_GL_COORD sY2, ulong ulTimeOut, bool bRefresh)
{
    e1e4:	b580      	push	{r7, lr}
    e1e6:	b08c      	sub	sp, #48	; 0x30
    e1e8:	af02      	add	r7, sp, #8
    e1ea:	61f8      	str	r0, [r7, #28]
    e1ec:	61b9      	str	r1, [r7, #24]
    e1ee:	617a      	str	r2, [r7, #20]
    e1f0:	613b      	str	r3, [r7, #16]
    e1f2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    e1f4:	60fb      	str	r3, [r7, #12]
    e1f6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    e1f8:	60bb      	str	r3, [r7, #8]
    e1fa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    e1fc:	607b      	str	r3, [r7, #4]
    e1fe:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
    e202:	70fb      	strb	r3, [r7, #3]
    e204:	f644 1380 	movw	r3, #18816	; 0x4980
    e208:	f2c0 0302 	movt	r3, #2
    e20c:	681b      	ldr	r3, [r3, #0]
    e20e:	627b      	str	r3, [r7, #36]	; 0x24
    // ***************
	int iRet;

	// Drawing line
	// ************
	GL_Drawing_SetPen(GL_Widget_SearchId(hWindow, DRAWING_ID), ulPen, 1, GL_UNIT_PIXEL); // Set pen color and stroke (only 1 pixel supported)
    e210:	69f8      	ldr	r0, [r7, #28]
    e212:	f44f 61e0 	mov.w	r1, #1792	; 0x700
    e216:	f00a fc35 	bl	18a84 <GL_Widget_SearchId>
    e21a:	4603      	mov	r3, r0
    e21c:	4618      	mov	r0, r3
    e21e:	69b9      	ldr	r1, [r7, #24]
    e220:	2201      	movs	r2, #1
    e222:	2300      	movs	r3, #0
    e224:	f00a fa98 	bl	18758 <GL_Drawing_SetPen>
	GL_Drawing_DrawLine(GL_Widget_SearchId(hWindow, DRAWING_ID), sX1, sY1, sX2, sY2, GL_UNIT_PERCENT); // Draw line with pen
    e228:	69f8      	ldr	r0, [r7, #28]
    e22a:	f44f 61e0 	mov.w	r1, #1792	; 0x700
    e22e:	f00a fc29 	bl	18a84 <GL_Widget_SearchId>
    e232:	4603      	mov	r3, r0
    e234:	68ba      	ldr	r2, [r7, #8]
    e236:	9200      	str	r2, [sp, #0]
    e238:	2201      	movs	r2, #1
    e23a:	9201      	str	r2, [sp, #4]
    e23c:	4618      	mov	r0, r3
    e23e:	6979      	ldr	r1, [r7, #20]
    e240:	693a      	ldr	r2, [r7, #16]
    e242:	68fb      	ldr	r3, [r7, #12]
    e244:	f00a fa2e 	bl	186a4 <GL_Drawing_DrawLine>

	CHECK(ulTimeOut!=0, lblNoTimer);                       // No timer to set
    e248:	687b      	ldr	r3, [r7, #4]
    e24a:	2b00      	cmp	r3, #0
    e24c:	d045      	beq.n	e2da <GoalDrawLine+0xf6>

	// Restart timer
	// *************
	if (ulTimeOut == GL_TIME_INFINITE)                     // Set timeout value
    e24e:	687b      	ldr	r3, [r7, #4]
    e250:	f1b3 3fff 	cmp.w	r3, #4294967295
    e254:	d10a      	bne.n	e26c <GoalDrawLine+0x88>
		GL_Timer_SetInterval(GL_Widget_SearchId(hWindow, TIMER_ID), 0x7FFFFFFF); // Bug 0xFFFFFFFF not supported
    e256:	69f8      	ldr	r0, [r7, #28]
    e258:	2100      	movs	r1, #0
    e25a:	f00a fc13 	bl	18a84 <GL_Widget_SearchId>
    e25e:	4603      	mov	r3, r0
    e260:	4618      	mov	r0, r3
    e262:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    e266:	f00a fbb3 	bl	189d0 <GL_Timer_SetInterval>
    e26a:	e008      	b.n	e27e <GoalDrawLine+0x9a>
	else
		GL_Timer_SetInterval(GL_Widget_SearchId(hWindow, TIMER_ID), ulTimeOut);
    e26c:	69f8      	ldr	r0, [r7, #28]
    e26e:	2100      	movs	r1, #0
    e270:	f00a fc08 	bl	18a84 <GL_Widget_SearchId>
    e274:	4603      	mov	r3, r0
    e276:	4618      	mov	r0, r3
    e278:	6879      	ldr	r1, [r7, #4]
    e27a:	f00a fba9 	bl	189d0 <GL_Timer_SetInterval>

	// Loop indefinitely until the result is set from the call back functions
	// **********************************************************************
	GL_Window_MainLoop(hWindow);                           // Wait until a result is set
    e27e:	69f8      	ldr	r0, [r7, #28]
    e280:	f00a fe0a 	bl	18e98 <GL_Window_MainLoop>

	// Test the result set by the call back functions
	// **********************************************
	switch(GL_Window_GetResult(hWindow))                   // Get the result
    e284:	69f8      	ldr	r0, [r7, #28]
    e286:	f00a fdf5 	bl	18e74 <GL_Window_GetResult>
    e28a:	4603      	mov	r3, r0
    e28c:	2b01      	cmp	r3, #1
    e28e:	d010      	beq.n	e2b2 <GoalDrawLine+0xce>
    e290:	2b01      	cmp	r3, #1
    e292:	d302      	bcc.n	e29a <GoalDrawLine+0xb6>
    e294:	2b04      	cmp	r3, #4
    e296:	d018      	beq.n	e2ca <GoalDrawLine+0xe6>
    e298:	e01a      	b.n	e2d0 <GoalDrawLine+0xec>
	{
	case RES_VALID_STATUS:                                 // Key valid result
		GL_Timer_Stop(GL_Widget_SearchId(hWindow, TIMER_ID));
    e29a:	69f8      	ldr	r0, [r7, #28]
    e29c:	2100      	movs	r1, #0
    e29e:	f00a fbf1 	bl	18a84 <GL_Widget_SearchId>
    e2a2:	4603      	mov	r3, r0
    e2a4:	4618      	mov	r0, r3
    e2a6:	f00a fba5 	bl	189f4 <GL_Timer_Stop>
		iRet=GL_KEY_VALID;
    e2aa:	f64f 0350 	movw	r3, #63568	; 0xf850
    e2ae:	623b      	str	r3, [r7, #32]
		break;
    e2b0:	e012      	b.n	e2d8 <GoalDrawLine+0xf4>
	case RES_CANCEL_STATUS:                                // Key cancel result
		GL_Timer_Stop(GL_Widget_SearchId(hWindow, TIMER_ID));
    e2b2:	69f8      	ldr	r0, [r7, #28]
    e2b4:	2100      	movs	r1, #0
    e2b6:	f00a fbe5 	bl	18a84 <GL_Widget_SearchId>
    e2ba:	4603      	mov	r3, r0
    e2bc:	4618      	mov	r0, r3
    e2be:	f00a fb99 	bl	189f4 <GL_Timer_Stop>
		iRet=GL_KEY_CANCEL;
    e2c2:	f64f 0351 	movw	r3, #63569	; 0xf851
    e2c6:	623b      	str	r3, [r7, #32]
		break;
    e2c8:	e006      	b.n	e2d8 <GoalDrawLine+0xf4>
	case RES_TIMER_STATUS:                                 // Timer result
		iRet=0;
    e2ca:	2300      	movs	r3, #0
    e2cc:	623b      	str	r3, [r7, #32]
		break;
    e2ce:	e003      	b.n	e2d8 <GoalDrawLine+0xf4>
	default:                                               // Unknown result
		iRet=-1;
    e2d0:	f04f 33ff 	mov.w	r3, #4294967295
    e2d4:	623b      	str	r3, [r7, #32]
		break;
    e2d6:	bf00      	nop
	}

	goto lblEnd;
    e2d8:	e017      	b.n	e30a <GoalDrawLine+0x126>

	// Errors treatment
    // ****************
lblNoTimer:                                                // No timer used
	iRet=0;
    e2da:	2300      	movs	r3, #0
    e2dc:	623b      	str	r3, [r7, #32]
	if (bRefresh)
    e2de:	78fb      	ldrb	r3, [r7, #3]
    e2e0:	2b00      	cmp	r3, #0
    e2e2:	d011      	beq.n	e308 <GoalDrawLine+0x124>
	{
		iRet = GL_Window_Dispatch(hWindow, 0);             // Refresh the window
    e2e4:	69f8      	ldr	r0, [r7, #28]
    e2e6:	2100      	movs	r1, #0
    e2e8:	f00a fdb2 	bl	18e50 <GL_Window_Dispatch>
    e2ec:	4603      	mov	r3, r0
    e2ee:	623b      	str	r3, [r7, #32]
		if (iRet == RES_VALID_STATUS)
    e2f0:	6a3b      	ldr	r3, [r7, #32]
    e2f2:	2b00      	cmp	r3, #0
    e2f4:	d102      	bne.n	e2fc <GoalDrawLine+0x118>
			iRet=GL_KEY_VALID;
    e2f6:	f64f 0350 	movw	r3, #63568	; 0xf850
    e2fa:	623b      	str	r3, [r7, #32]
		if (iRet == RES_CANCEL_STATUS)
    e2fc:	6a3b      	ldr	r3, [r7, #32]
    e2fe:	2b01      	cmp	r3, #1
    e300:	d102      	bne.n	e308 <GoalDrawLine+0x124>
			iRet=GL_KEY_CANCEL;
    e302:	f64f 0351 	movw	r3, #63569	; 0xf851
    e306:	623b      	str	r3, [r7, #32]
	}
	goto lblEnd;
    e308:	bf00      	nop
lblEnd:
	return iRet;
    e30a:	6a3b      	ldr	r3, [r7, #32]
}
    e30c:	4618      	mov	r0, r3
    e30e:	f644 1380 	movw	r3, #18816	; 0x4980
    e312:	f2c0 0302 	movt	r3, #2
    e316:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    e318:	681b      	ldr	r3, [r3, #0]
    e31a:	429a      	cmp	r2, r3
    e31c:	d001      	beq.n	e322 <GoalDrawLine+0x13e>
    e31e:	f7fa fde7 	bl	8ef0 <__stack_chk_fail>
    e322:	f107 0728 	add.w	r7, r7, #40	; 0x28
    e326:	46bd      	mov	sp, r7
    e328:	bd80      	pop	{r7, pc}
    e32a:	bf00      	nop

0000e32c <GoalDrawRect>:
//   >=0 : Drawing rectangle done (Exit screen : 0=timeout,GL_KEY_CANCEL,GL_KEY_VALID).
//   <0 : Drawing rectangle failed.
//****************************************************************************

int GoalDrawRect(T_GL_HWIDGET hWindow, T_GL_COLOR ulPen, T_GL_COLOR ulBrush, T_GL_COORD sX, T_GL_COORD sY, T_GL_COORD sWidth, T_GL_COORD sHeight, ulong ulTimeOut, bool bRefresh)
{
    e32c:	b580      	push	{r7, lr}
    e32e:	b08e      	sub	sp, #56	; 0x38
    e330:	af02      	add	r7, sp, #8
    e332:	6278      	str	r0, [r7, #36]	; 0x24
    e334:	6239      	str	r1, [r7, #32]
    e336:	61fa      	str	r2, [r7, #28]
    e338:	61bb      	str	r3, [r7, #24]
    e33a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    e33c:	617b      	str	r3, [r7, #20]
    e33e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    e340:	613b      	str	r3, [r7, #16]
    e342:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    e344:	60fb      	str	r3, [r7, #12]
    e346:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    e348:	60bb      	str	r3, [r7, #8]
    e34a:	f897 3048 	ldrb.w	r3, [r7, #72]	; 0x48
    e34e:	71fb      	strb	r3, [r7, #7]
    e350:	f644 1380 	movw	r3, #18816	; 0x4980
    e354:	f2c0 0302 	movt	r3, #2
    e358:	681b      	ldr	r3, [r3, #0]
    e35a:	62fb      	str	r3, [r7, #44]	; 0x2c
    // ***************
	int iRet;

	// Drawing rectangle
	// *****************
	GL_Drawing_SetPen(GL_Widget_SearchId(hWindow, DRAWING_ID), ulPen, 1, GL_UNIT_PIXEL); // Set pen color and stroke (only 1 pixel supported)
    e35c:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e35e:	f44f 61e0 	mov.w	r1, #1792	; 0x700
    e362:	f00a fb8f 	bl	18a84 <GL_Widget_SearchId>
    e366:	4603      	mov	r3, r0
    e368:	4618      	mov	r0, r3
    e36a:	6a39      	ldr	r1, [r7, #32]
    e36c:	2201      	movs	r2, #1
    e36e:	2300      	movs	r3, #0
    e370:	f00a f9f2 	bl	18758 <GL_Drawing_SetPen>
	GL_Drawing_SetBrush(GL_Widget_SearchId(hWindow, DRAWING_ID), ulBrush);               // Set brush color
    e374:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e376:	f44f 61e0 	mov.w	r1, #1792	; 0x700
    e37a:	f00a fb83 	bl	18a84 <GL_Widget_SearchId>
    e37e:	4603      	mov	r3, r0
    e380:	4618      	mov	r0, r3
    e382:	69f9      	ldr	r1, [r7, #28]
    e384:	f00a f9c4 	bl	18710 <GL_Drawing_SetBrush>
	GL_Drawing_DrawRect(GL_Widget_SearchId(hWindow, DRAWING_ID), sX, sY, sWidth, sHeight, GL_UNIT_PERCENT); // Draw rectangle with pen and brush
    e388:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e38a:	f44f 61e0 	mov.w	r1, #1792	; 0x700
    e38e:	f00a fb79 	bl	18a84 <GL_Widget_SearchId>
    e392:	4602      	mov	r2, r0
    e394:	693b      	ldr	r3, [r7, #16]
    e396:	68f9      	ldr	r1, [r7, #12]
    e398:	9100      	str	r1, [sp, #0]
    e39a:	2101      	movs	r1, #1
    e39c:	9101      	str	r1, [sp, #4]
    e39e:	4610      	mov	r0, r2
    e3a0:	69b9      	ldr	r1, [r7, #24]
    e3a2:	697a      	ldr	r2, [r7, #20]
    e3a4:	f00a f990 	bl	186c8 <GL_Drawing_DrawRect>

	CHECK(ulTimeOut!=0, lblNoTimer);                       // No timer to set
    e3a8:	68bb      	ldr	r3, [r7, #8]
    e3aa:	2b00      	cmp	r3, #0
    e3ac:	d045      	beq.n	e43a <GoalDrawRect+0x10e>

	// Restart timer
	// *************
	if (ulTimeOut == GL_TIME_INFINITE)                     // Set timeout value
    e3ae:	68bb      	ldr	r3, [r7, #8]
    e3b0:	f1b3 3fff 	cmp.w	r3, #4294967295
    e3b4:	d10a      	bne.n	e3cc <GoalDrawRect+0xa0>
		GL_Timer_SetInterval(GL_Widget_SearchId(hWindow, TIMER_ID), 0x7FFFFFFF); // Bug 0xFFFFFFFF not supported
    e3b6:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e3b8:	2100      	movs	r1, #0
    e3ba:	f00a fb63 	bl	18a84 <GL_Widget_SearchId>
    e3be:	4603      	mov	r3, r0
    e3c0:	4618      	mov	r0, r3
    e3c2:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    e3c6:	f00a fb03 	bl	189d0 <GL_Timer_SetInterval>
    e3ca:	e008      	b.n	e3de <GoalDrawRect+0xb2>
	else
		GL_Timer_SetInterval(GL_Widget_SearchId(hWindow, TIMER_ID), ulTimeOut);
    e3cc:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e3ce:	2100      	movs	r1, #0
    e3d0:	f00a fb58 	bl	18a84 <GL_Widget_SearchId>
    e3d4:	4603      	mov	r3, r0
    e3d6:	4618      	mov	r0, r3
    e3d8:	68b9      	ldr	r1, [r7, #8]
    e3da:	f00a faf9 	bl	189d0 <GL_Timer_SetInterval>

	// Loop indefinitely until the result is set from the call back functions
	// **********************************************************************
	GL_Window_MainLoop(hWindow);                           // Wait until a result is set
    e3de:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e3e0:	f00a fd5a 	bl	18e98 <GL_Window_MainLoop>

	// Test the result set by the call back functions
	// **********************************************
	switch(GL_Window_GetResult(hWindow))                   // Get the result
    e3e4:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e3e6:	f00a fd45 	bl	18e74 <GL_Window_GetResult>
    e3ea:	4603      	mov	r3, r0
    e3ec:	2b01      	cmp	r3, #1
    e3ee:	d010      	beq.n	e412 <GoalDrawRect+0xe6>
    e3f0:	2b01      	cmp	r3, #1
    e3f2:	d302      	bcc.n	e3fa <GoalDrawRect+0xce>
    e3f4:	2b04      	cmp	r3, #4
    e3f6:	d018      	beq.n	e42a <GoalDrawRect+0xfe>
    e3f8:	e01a      	b.n	e430 <GoalDrawRect+0x104>
	{
	case RES_VALID_STATUS:                                 // Key valid result
		GL_Timer_Stop(GL_Widget_SearchId(hWindow, TIMER_ID));
    e3fa:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e3fc:	2100      	movs	r1, #0
    e3fe:	f00a fb41 	bl	18a84 <GL_Widget_SearchId>
    e402:	4603      	mov	r3, r0
    e404:	4618      	mov	r0, r3
    e406:	f00a faf5 	bl	189f4 <GL_Timer_Stop>
		iRet=GL_KEY_VALID;
    e40a:	f64f 0350 	movw	r3, #63568	; 0xf850
    e40e:	62bb      	str	r3, [r7, #40]	; 0x28
		break;
    e410:	e012      	b.n	e438 <GoalDrawRect+0x10c>
	case RES_CANCEL_STATUS:                                // Key cancel result
		GL_Timer_Stop(GL_Widget_SearchId(hWindow, TIMER_ID));
    e412:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e414:	2100      	movs	r1, #0
    e416:	f00a fb35 	bl	18a84 <GL_Widget_SearchId>
    e41a:	4603      	mov	r3, r0
    e41c:	4618      	mov	r0, r3
    e41e:	f00a fae9 	bl	189f4 <GL_Timer_Stop>
		iRet=GL_KEY_CANCEL;
    e422:	f64f 0351 	movw	r3, #63569	; 0xf851
    e426:	62bb      	str	r3, [r7, #40]	; 0x28
		break;
    e428:	e006      	b.n	e438 <GoalDrawRect+0x10c>
	case RES_TIMER_STATUS:                                 // Timer result
		iRet=0;
    e42a:	2300      	movs	r3, #0
    e42c:	62bb      	str	r3, [r7, #40]	; 0x28
		break;
    e42e:	e003      	b.n	e438 <GoalDrawRect+0x10c>
	default:                                               // Unknown result
		iRet=-1;
    e430:	f04f 33ff 	mov.w	r3, #4294967295
    e434:	62bb      	str	r3, [r7, #40]	; 0x28
		break;
    e436:	bf00      	nop
	}

	goto lblEnd;
    e438:	e017      	b.n	e46a <GoalDrawRect+0x13e>

	// Errors treatment
    // ****************
lblNoTimer:                                                // No timer used
	iRet=0;
    e43a:	2300      	movs	r3, #0
    e43c:	62bb      	str	r3, [r7, #40]	; 0x28
	if (bRefresh)
    e43e:	79fb      	ldrb	r3, [r7, #7]
    e440:	2b00      	cmp	r3, #0
    e442:	d011      	beq.n	e468 <GoalDrawRect+0x13c>
	{
		iRet = GL_Window_Dispatch(hWindow, 0);             // Refresh the window
    e444:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e446:	2100      	movs	r1, #0
    e448:	f00a fd02 	bl	18e50 <GL_Window_Dispatch>
    e44c:	4603      	mov	r3, r0
    e44e:	62bb      	str	r3, [r7, #40]	; 0x28
		if (iRet == RES_VALID_STATUS)
    e450:	6abb      	ldr	r3, [r7, #40]	; 0x28
    e452:	2b00      	cmp	r3, #0
    e454:	d102      	bne.n	e45c <GoalDrawRect+0x130>
			iRet=GL_KEY_VALID;
    e456:	f64f 0350 	movw	r3, #63568	; 0xf850
    e45a:	62bb      	str	r3, [r7, #40]	; 0x28
		if (iRet == RES_CANCEL_STATUS)
    e45c:	6abb      	ldr	r3, [r7, #40]	; 0x28
    e45e:	2b01      	cmp	r3, #1
    e460:	d102      	bne.n	e468 <GoalDrawRect+0x13c>
			iRet=GL_KEY_CANCEL;
    e462:	f64f 0351 	movw	r3, #63569	; 0xf851
    e466:	62bb      	str	r3, [r7, #40]	; 0x28
	}
	goto lblEnd;
    e468:	bf00      	nop
lblEnd:
	return iRet;
    e46a:	6abb      	ldr	r3, [r7, #40]	; 0x28
}
    e46c:	4618      	mov	r0, r3
    e46e:	f644 1380 	movw	r3, #18816	; 0x4980
    e472:	f2c0 0302 	movt	r3, #2
    e476:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    e478:	681b      	ldr	r3, [r3, #0]
    e47a:	429a      	cmp	r2, r3
    e47c:	d001      	beq.n	e482 <GoalDrawRect+0x156>
    e47e:	f7fa fd37 	bl	8ef0 <__stack_chk_fail>
    e482:	f107 0730 	add.w	r7, r7, #48	; 0x30
    e486:	46bd      	mov	sp, r7
    e488:	bd80      	pop	{r7, pc}
    e48a:	bf00      	nop

0000e48c <GoalDrawEllipse>:
//   >=0 : Drawing ellipse done (Exit screen : 0=timeout,GEL_KEY_CANCEL,GL_KEY_VALID).
//   <0 : Drawing ellipse failed.
//****************************************************************************

int GoalDrawEllipse(T_GL_HWIDGET hWindow, T_GL_COLOR ulPen, T_GL_COLOR ulBrush, T_GL_COORD sX, T_GL_COORD sY, T_GL_DIM usRadiusX, T_GL_DIM usRadiusY, ulong ulTimeOut, bool bRefresh)
{
    e48c:	b580      	push	{r7, lr}
    e48e:	b08e      	sub	sp, #56	; 0x38
    e490:	af02      	add	r7, sp, #8
    e492:	6278      	str	r0, [r7, #36]	; 0x24
    e494:	6239      	str	r1, [r7, #32]
    e496:	61fa      	str	r2, [r7, #28]
    e498:	61bb      	str	r3, [r7, #24]
    e49a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    e49c:	617b      	str	r3, [r7, #20]
    e49e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    e4a0:	613b      	str	r3, [r7, #16]
    e4a2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    e4a4:	60fb      	str	r3, [r7, #12]
    e4a6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    e4a8:	60bb      	str	r3, [r7, #8]
    e4aa:	f897 3048 	ldrb.w	r3, [r7, #72]	; 0x48
    e4ae:	71fb      	strb	r3, [r7, #7]
    e4b0:	f644 1380 	movw	r3, #18816	; 0x4980
    e4b4:	f2c0 0302 	movt	r3, #2
    e4b8:	681b      	ldr	r3, [r3, #0]
    e4ba:	62fb      	str	r3, [r7, #44]	; 0x2c
    // ***************
	int iRet;

	// Drawing ellipse
	// ***************
	GL_Drawing_SetPen(GL_Widget_SearchId(hWindow, DRAWING_ID), ulPen, 1, GL_UNIT_PIXEL); // Set pen color and stroke (only 1 pixel supported)
    e4bc:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e4be:	f44f 61e0 	mov.w	r1, #1792	; 0x700
    e4c2:	f00a fadf 	bl	18a84 <GL_Widget_SearchId>
    e4c6:	4603      	mov	r3, r0
    e4c8:	4618      	mov	r0, r3
    e4ca:	6a39      	ldr	r1, [r7, #32]
    e4cc:	2201      	movs	r2, #1
    e4ce:	2300      	movs	r3, #0
    e4d0:	f00a f942 	bl	18758 <GL_Drawing_SetPen>
	GL_Drawing_SetBrush(GL_Widget_SearchId(hWindow, DRAWING_ID), ulBrush);               // Set brush color
    e4d4:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e4d6:	f44f 61e0 	mov.w	r1, #1792	; 0x700
    e4da:	f00a fad3 	bl	18a84 <GL_Widget_SearchId>
    e4de:	4603      	mov	r3, r0
    e4e0:	4618      	mov	r0, r3
    e4e2:	69f9      	ldr	r1, [r7, #28]
    e4e4:	f00a f914 	bl	18710 <GL_Drawing_SetBrush>
	GL_Drawing_DrawEllipse(GL_Widget_SearchId(hWindow, DRAWING_ID), sX, sY, usRadiusX, usRadiusY, GL_UNIT_PERCENT); // Draw ellipse with pen and brush
    e4e8:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e4ea:	f44f 61e0 	mov.w	r1, #1792	; 0x700
    e4ee:	f00a fac9 	bl	18a84 <GL_Widget_SearchId>
    e4f2:	4603      	mov	r3, r0
    e4f4:	68fa      	ldr	r2, [r7, #12]
    e4f6:	9200      	str	r2, [sp, #0]
    e4f8:	2201      	movs	r2, #1
    e4fa:	9201      	str	r2, [sp, #4]
    e4fc:	4618      	mov	r0, r3
    e4fe:	69b9      	ldr	r1, [r7, #24]
    e500:	697a      	ldr	r2, [r7, #20]
    e502:	693b      	ldr	r3, [r7, #16]
    e504:	f00a f8bc 	bl	18680 <GL_Drawing_DrawEllipse>

	CHECK(ulTimeOut!=0, lblNoTimer);                       // No timer to set
    e508:	68bb      	ldr	r3, [r7, #8]
    e50a:	2b00      	cmp	r3, #0
    e50c:	d045      	beq.n	e59a <GoalDrawEllipse+0x10e>

	// Restart timer
	// *************
	if (ulTimeOut == GL_TIME_INFINITE)                     // Set timeout value
    e50e:	68bb      	ldr	r3, [r7, #8]
    e510:	f1b3 3fff 	cmp.w	r3, #4294967295
    e514:	d10a      	bne.n	e52c <GoalDrawEllipse+0xa0>
		GL_Timer_SetInterval(GL_Widget_SearchId(hWindow, TIMER_ID), 0x7FFFFFFF); // Bug 0xFFFFFFFF not supported
    e516:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e518:	2100      	movs	r1, #0
    e51a:	f00a fab3 	bl	18a84 <GL_Widget_SearchId>
    e51e:	4603      	mov	r3, r0
    e520:	4618      	mov	r0, r3
    e522:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    e526:	f00a fa53 	bl	189d0 <GL_Timer_SetInterval>
    e52a:	e008      	b.n	e53e <GoalDrawEllipse+0xb2>
	else
		GL_Timer_SetInterval(GL_Widget_SearchId(hWindow, TIMER_ID), ulTimeOut);
    e52c:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e52e:	2100      	movs	r1, #0
    e530:	f00a faa8 	bl	18a84 <GL_Widget_SearchId>
    e534:	4603      	mov	r3, r0
    e536:	4618      	mov	r0, r3
    e538:	68b9      	ldr	r1, [r7, #8]
    e53a:	f00a fa49 	bl	189d0 <GL_Timer_SetInterval>

	// Loop indefinitely until the result is set from the call back functions
	// **********************************************************************
	GL_Window_MainLoop(hWindow);                           // Wait until a result is set
    e53e:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e540:	f00a fcaa 	bl	18e98 <GL_Window_MainLoop>

	// Test the result set by the call back functions
	// **********************************************
	switch(GL_Window_GetResult(hWindow))                   // Get the result
    e544:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e546:	f00a fc95 	bl	18e74 <GL_Window_GetResult>
    e54a:	4603      	mov	r3, r0
    e54c:	2b01      	cmp	r3, #1
    e54e:	d010      	beq.n	e572 <GoalDrawEllipse+0xe6>
    e550:	2b01      	cmp	r3, #1
    e552:	d302      	bcc.n	e55a <GoalDrawEllipse+0xce>
    e554:	2b04      	cmp	r3, #4
    e556:	d018      	beq.n	e58a <GoalDrawEllipse+0xfe>
    e558:	e01a      	b.n	e590 <GoalDrawEllipse+0x104>
	{
	case RES_VALID_STATUS:                                 // Key valid result
		GL_Timer_Stop(GL_Widget_SearchId(hWindow, TIMER_ID));
    e55a:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e55c:	2100      	movs	r1, #0
    e55e:	f00a fa91 	bl	18a84 <GL_Widget_SearchId>
    e562:	4603      	mov	r3, r0
    e564:	4618      	mov	r0, r3
    e566:	f00a fa45 	bl	189f4 <GL_Timer_Stop>
		iRet=GL_KEY_VALID;
    e56a:	f64f 0350 	movw	r3, #63568	; 0xf850
    e56e:	62bb      	str	r3, [r7, #40]	; 0x28
		break;
    e570:	e012      	b.n	e598 <GoalDrawEllipse+0x10c>
	case RES_CANCEL_STATUS:                                // Key cancel result
		GL_Timer_Stop(GL_Widget_SearchId(hWindow, TIMER_ID));
    e572:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e574:	2100      	movs	r1, #0
    e576:	f00a fa85 	bl	18a84 <GL_Widget_SearchId>
    e57a:	4603      	mov	r3, r0
    e57c:	4618      	mov	r0, r3
    e57e:	f00a fa39 	bl	189f4 <GL_Timer_Stop>
		iRet=GL_KEY_CANCEL;
    e582:	f64f 0351 	movw	r3, #63569	; 0xf851
    e586:	62bb      	str	r3, [r7, #40]	; 0x28
		break;
    e588:	e006      	b.n	e598 <GoalDrawEllipse+0x10c>
	case RES_TIMER_STATUS:                                 // Timer result
		iRet=0;
    e58a:	2300      	movs	r3, #0
    e58c:	62bb      	str	r3, [r7, #40]	; 0x28
		break;
    e58e:	e003      	b.n	e598 <GoalDrawEllipse+0x10c>
	default:                                               // Unknown result
		iRet=-1;
    e590:	f04f 33ff 	mov.w	r3, #4294967295
    e594:	62bb      	str	r3, [r7, #40]	; 0x28
		break;
    e596:	bf00      	nop
	}

	goto lblEnd;
    e598:	e017      	b.n	e5ca <GoalDrawEllipse+0x13e>

	// Errors treatment
    // ****************
lblNoTimer:                                                // No timer used
	iRet=0;
    e59a:	2300      	movs	r3, #0
    e59c:	62bb      	str	r3, [r7, #40]	; 0x28
	if (bRefresh)
    e59e:	79fb      	ldrb	r3, [r7, #7]
    e5a0:	2b00      	cmp	r3, #0
    e5a2:	d011      	beq.n	e5c8 <GoalDrawEllipse+0x13c>
	{
		iRet = GL_Window_Dispatch(hWindow, 0);             // Refresh the window
    e5a4:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e5a6:	2100      	movs	r1, #0
    e5a8:	f00a fc52 	bl	18e50 <GL_Window_Dispatch>
    e5ac:	4603      	mov	r3, r0
    e5ae:	62bb      	str	r3, [r7, #40]	; 0x28
		if (iRet == RES_VALID_STATUS)
    e5b0:	6abb      	ldr	r3, [r7, #40]	; 0x28
    e5b2:	2b00      	cmp	r3, #0
    e5b4:	d102      	bne.n	e5bc <GoalDrawEllipse+0x130>
			iRet=GL_KEY_VALID;
    e5b6:	f64f 0350 	movw	r3, #63568	; 0xf850
    e5ba:	62bb      	str	r3, [r7, #40]	; 0x28
		if (iRet == RES_CANCEL_STATUS)
    e5bc:	6abb      	ldr	r3, [r7, #40]	; 0x28
    e5be:	2b01      	cmp	r3, #1
    e5c0:	d102      	bne.n	e5c8 <GoalDrawEllipse+0x13c>
			iRet=GL_KEY_CANCEL;
    e5c2:	f64f 0351 	movw	r3, #63569	; 0xf851
    e5c6:	62bb      	str	r3, [r7, #40]	; 0x28
	}
	goto lblEnd;
    e5c8:	bf00      	nop
lblEnd:
	return iRet;
    e5ca:	6abb      	ldr	r3, [r7, #40]	; 0x28
}
    e5cc:	4618      	mov	r0, r3
    e5ce:	f644 1380 	movw	r3, #18816	; 0x4980
    e5d2:	f2c0 0302 	movt	r3, #2
    e5d6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    e5d8:	681b      	ldr	r3, [r3, #0]
    e5da:	429a      	cmp	r2, r3
    e5dc:	d001      	beq.n	e5e2 <GoalDrawEllipse+0x156>
    e5de:	f7fa fc87 	bl	8ef0 <__stack_chk_fail>
    e5e2:	f107 0730 	add.w	r7, r7, #48	; 0x30
    e5e6:	46bd      	mov	sp, r7
    e5e8:	bd80      	pop	{r7, pc}
    e5ea:	bf00      	nop

0000e5ec <GoalDrawText>:
//   >=0 : Drawing text done (Exit screen : 0=timeout,GL_KEY_CANCEL,GL_KEY_VALID).
//   <0 : Drawing text failed.
//****************************************************************************

int GoalDrawText(T_GL_HWIDGET hWindow, const char* pcText, const ST_DRAW_FONT* pxFont, T_GL_COLOR ulPen, T_GL_COORD sX, T_GL_COORD sY, ulong ulTimeOut, bool bRefresh)
{
    e5ec:	b590      	push	{r4, r7, lr}
    e5ee:	b08d      	sub	sp, #52	; 0x34
    e5f0:	af02      	add	r7, sp, #8
    e5f2:	61f8      	str	r0, [r7, #28]
    e5f4:	61b9      	str	r1, [r7, #24]
    e5f6:	617a      	str	r2, [r7, #20]
    e5f8:	613b      	str	r3, [r7, #16]
    e5fa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    e5fc:	60fb      	str	r3, [r7, #12]
    e5fe:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    e600:	60bb      	str	r3, [r7, #8]
    e602:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    e604:	607b      	str	r3, [r7, #4]
    e606:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
    e60a:	70fb      	strb	r3, [r7, #3]
    e60c:	f644 1380 	movw	r3, #18816	; 0x4980
    e610:	f2c0 0302 	movt	r3, #2
    e614:	681b      	ldr	r3, [r3, #0]
    e616:	627b      	str	r3, [r7, #36]	; 0x24
    // ***************
	int iRet;

	// Drawing text
	// ************
	GL_Drawing_SetPen(GL_Widget_SearchId(hWindow, DRAWING_ID), ulPen, 1, GL_UNIT_PIXEL);           // Set pen color and stroke (only 1 pixel supported)
    e618:	69f8      	ldr	r0, [r7, #28]
    e61a:	f44f 61e0 	mov.w	r1, #1792	; 0x700
    e61e:	f00a fa31 	bl	18a84 <GL_Widget_SearchId>
    e622:	4603      	mov	r3, r0
    e624:	4618      	mov	r0, r3
    e626:	6939      	ldr	r1, [r7, #16]
    e628:	2201      	movs	r2, #1
    e62a:	2300      	movs	r3, #0
    e62c:	f00a f894 	bl	18758 <GL_Drawing_SetPen>
	if (pxFont->pcName!=NULL)                              // Customer font?
    e630:	697b      	ldr	r3, [r7, #20]
    e632:	681b      	ldr	r3, [r3, #0]
    e634:	2b00      	cmp	r3, #0
    e636:	d012      	beq.n	e65e <GoalDrawText+0x72>
		GL_Drawing_SetFont(GL_Widget_SearchId(hWindow, DRAWING_ID), pxFont->pcName, pxFont->eStyle, pxFont->usWidth, pxFont->usHeight, GL_UNIT_PERCENT); // Yes, Set customer font
    e638:	69f8      	ldr	r0, [r7, #28]
    e63a:	f44f 61e0 	mov.w	r1, #1792	; 0x700
    e63e:	f00a fa21 	bl	18a84 <GL_Widget_SearchId>
    e642:	697b      	ldr	r3, [r7, #20]
    e644:	6819      	ldr	r1, [r3, #0]
    e646:	697b      	ldr	r3, [r7, #20]
    e648:	685a      	ldr	r2, [r3, #4]
    e64a:	697b      	ldr	r3, [r7, #20]
    e64c:	689b      	ldr	r3, [r3, #8]
    e64e:	697c      	ldr	r4, [r7, #20]
    e650:	68e4      	ldr	r4, [r4, #12]
    e652:	9400      	str	r4, [sp, #0]
    e654:	2401      	movs	r4, #1
    e656:	9401      	str	r4, [sp, #4]
    e658:	f00a f86c 	bl	18734 <GL_Drawing_SetFont>
    e65c:	e015      	b.n	e68a <GoalDrawText+0x9e>
	else
		GL_Drawing_SetFont(GL_Widget_SearchId(hWindow, DRAWING_ID), "GOAL", pxFont->eStyle, pxFont->usWidth, pxFont->usHeight, GL_UNIT_PERCENT); // No, Set default GOAL font
    e65e:	69f8      	ldr	r0, [r7, #28]
    e660:	f44f 61e0 	mov.w	r1, #1792	; 0x700
    e664:	f00a fa0e 	bl	18a84 <GL_Widget_SearchId>
    e668:	4601      	mov	r1, r0
    e66a:	697b      	ldr	r3, [r7, #20]
    e66c:	685a      	ldr	r2, [r3, #4]
    e66e:	697b      	ldr	r3, [r7, #20]
    e670:	689b      	ldr	r3, [r3, #8]
    e672:	6978      	ldr	r0, [r7, #20]
    e674:	68c0      	ldr	r0, [r0, #12]
    e676:	9000      	str	r0, [sp, #0]
    e678:	2001      	movs	r0, #1
    e67a:	9001      	str	r0, [sp, #4]
    e67c:	4608      	mov	r0, r1
    e67e:	f649 518c 	movw	r1, #40332	; 0x9d8c
    e682:	f2c0 0101 	movt	r1, #1
    e686:	f00a f855 	bl	18734 <GL_Drawing_SetFont>
	GL_Drawing_DrawText(GL_Widget_SearchId(hWindow, DRAWING_ID), sX, sY, GL_UNIT_PERCENT, pcText); // Draw text with pen
    e68a:	69f8      	ldr	r0, [r7, #28]
    e68c:	f44f 61e0 	mov.w	r1, #1792	; 0x700
    e690:	f00a f9f8 	bl	18a84 <GL_Widget_SearchId>
    e694:	4603      	mov	r3, r0
    e696:	69ba      	ldr	r2, [r7, #24]
    e698:	9200      	str	r2, [sp, #0]
    e69a:	4618      	mov	r0, r3
    e69c:	68f9      	ldr	r1, [r7, #12]
    e69e:	68ba      	ldr	r2, [r7, #8]
    e6a0:	2301      	movs	r3, #1
    e6a2:	f00a f823 	bl	186ec <GL_Drawing_DrawText>

	CHECK(ulTimeOut!=0, lblNoTimer);                       // No timer to set
    e6a6:	687b      	ldr	r3, [r7, #4]
    e6a8:	2b00      	cmp	r3, #0
    e6aa:	d045      	beq.n	e738 <GoalDrawText+0x14c>

	// Restart timer
	// *************
	if (ulTimeOut == GL_TIME_INFINITE)                     // Set timeout value
    e6ac:	687b      	ldr	r3, [r7, #4]
    e6ae:	f1b3 3fff 	cmp.w	r3, #4294967295
    e6b2:	d10a      	bne.n	e6ca <GoalDrawText+0xde>
		GL_Timer_SetInterval(GL_Widget_SearchId(hWindow, TIMER_ID), 0x7FFFFFFF); // Bug 0xFFFFFFFF not supported
    e6b4:	69f8      	ldr	r0, [r7, #28]
    e6b6:	2100      	movs	r1, #0
    e6b8:	f00a f9e4 	bl	18a84 <GL_Widget_SearchId>
    e6bc:	4603      	mov	r3, r0
    e6be:	4618      	mov	r0, r3
    e6c0:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    e6c4:	f00a f984 	bl	189d0 <GL_Timer_SetInterval>
    e6c8:	e008      	b.n	e6dc <GoalDrawText+0xf0>
	else
		GL_Timer_SetInterval(GL_Widget_SearchId(hWindow, TIMER_ID), ulTimeOut);
    e6ca:	69f8      	ldr	r0, [r7, #28]
    e6cc:	2100      	movs	r1, #0
    e6ce:	f00a f9d9 	bl	18a84 <GL_Widget_SearchId>
    e6d2:	4603      	mov	r3, r0
    e6d4:	4618      	mov	r0, r3
    e6d6:	6879      	ldr	r1, [r7, #4]
    e6d8:	f00a f97a 	bl	189d0 <GL_Timer_SetInterval>

	// Loop indefinitely until the result is set from the call back functions
	// **********************************************************************
	GL_Window_MainLoop(hWindow);                           // Wait until a result is set
    e6dc:	69f8      	ldr	r0, [r7, #28]
    e6de:	f00a fbdb 	bl	18e98 <GL_Window_MainLoop>

	// Test the result set by the call back functions
	// **********************************************
	switch(GL_Window_GetResult(hWindow))                   // Get the result
    e6e2:	69f8      	ldr	r0, [r7, #28]
    e6e4:	f00a fbc6 	bl	18e74 <GL_Window_GetResult>
    e6e8:	4603      	mov	r3, r0
    e6ea:	2b01      	cmp	r3, #1
    e6ec:	d010      	beq.n	e710 <GoalDrawText+0x124>
    e6ee:	2b01      	cmp	r3, #1
    e6f0:	d302      	bcc.n	e6f8 <GoalDrawText+0x10c>
    e6f2:	2b04      	cmp	r3, #4
    e6f4:	d018      	beq.n	e728 <GoalDrawText+0x13c>
    e6f6:	e01a      	b.n	e72e <GoalDrawText+0x142>
	{
	case RES_VALID_STATUS:                                 // Key valid result
		GL_Timer_Stop(GL_Widget_SearchId(hWindow, TIMER_ID));
    e6f8:	69f8      	ldr	r0, [r7, #28]
    e6fa:	2100      	movs	r1, #0
    e6fc:	f00a f9c2 	bl	18a84 <GL_Widget_SearchId>
    e700:	4603      	mov	r3, r0
    e702:	4618      	mov	r0, r3
    e704:	f00a f976 	bl	189f4 <GL_Timer_Stop>
		iRet=GL_KEY_VALID;
    e708:	f64f 0350 	movw	r3, #63568	; 0xf850
    e70c:	623b      	str	r3, [r7, #32]
		break;
    e70e:	e012      	b.n	e736 <GoalDrawText+0x14a>
	case RES_CANCEL_STATUS:                                // Key cancel result
		GL_Timer_Stop(GL_Widget_SearchId(hWindow, TIMER_ID));
    e710:	69f8      	ldr	r0, [r7, #28]
    e712:	2100      	movs	r1, #0
    e714:	f00a f9b6 	bl	18a84 <GL_Widget_SearchId>
    e718:	4603      	mov	r3, r0
    e71a:	4618      	mov	r0, r3
    e71c:	f00a f96a 	bl	189f4 <GL_Timer_Stop>
		iRet=GL_KEY_CANCEL;
    e720:	f64f 0351 	movw	r3, #63569	; 0xf851
    e724:	623b      	str	r3, [r7, #32]
		break;
    e726:	e006      	b.n	e736 <GoalDrawText+0x14a>
	case RES_TIMER_STATUS:                                 // Timer result
		iRet=0;
    e728:	2300      	movs	r3, #0
    e72a:	623b      	str	r3, [r7, #32]
		break;
    e72c:	e003      	b.n	e736 <GoalDrawText+0x14a>
	default:                                               // Unknown result
		iRet=-1;
    e72e:	f04f 33ff 	mov.w	r3, #4294967295
    e732:	623b      	str	r3, [r7, #32]
		break;
    e734:	bf00      	nop
	}

	goto lblEnd;
    e736:	e017      	b.n	e768 <GoalDrawText+0x17c>

	// Errors treatment
    // ****************
lblNoTimer:                                                // No timer used
	iRet=0;
    e738:	2300      	movs	r3, #0
    e73a:	623b      	str	r3, [r7, #32]
	if (bRefresh)
    e73c:	78fb      	ldrb	r3, [r7, #3]
    e73e:	2b00      	cmp	r3, #0
    e740:	d011      	beq.n	e766 <GoalDrawText+0x17a>
	{
		iRet=GL_Window_Dispatch(hWindow, 0);               // Refresh the window
    e742:	69f8      	ldr	r0, [r7, #28]
    e744:	2100      	movs	r1, #0
    e746:	f00a fb83 	bl	18e50 <GL_Window_Dispatch>
    e74a:	4603      	mov	r3, r0
    e74c:	623b      	str	r3, [r7, #32]
		if (iRet == RES_VALID_STATUS)
    e74e:	6a3b      	ldr	r3, [r7, #32]
    e750:	2b00      	cmp	r3, #0
    e752:	d102      	bne.n	e75a <GoalDrawText+0x16e>
			iRet=GL_KEY_VALID;
    e754:	f64f 0350 	movw	r3, #63568	; 0xf850
    e758:	623b      	str	r3, [r7, #32]
		if (iRet == RES_CANCEL_STATUS)
    e75a:	6a3b      	ldr	r3, [r7, #32]
    e75c:	2b01      	cmp	r3, #1
    e75e:	d102      	bne.n	e766 <GoalDrawText+0x17a>
			iRet=GL_KEY_CANCEL;
    e760:	f64f 0351 	movw	r3, #63569	; 0xf851
    e764:	623b      	str	r3, [r7, #32]
	}
	goto lblEnd;
    e766:	bf00      	nop
lblEnd:
	return iRet;
    e768:	6a3b      	ldr	r3, [r7, #32]
}
    e76a:	4618      	mov	r0, r3
    e76c:	f644 1380 	movw	r3, #18816	; 0x4980
    e770:	f2c0 0302 	movt	r3, #2
    e774:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    e776:	681b      	ldr	r3, [r3, #0]
    e778:	429a      	cmp	r2, r3
    e77a:	d001      	beq.n	e780 <GoalDrawText+0x194>
    e77c:	f7fa fbb8 	bl	8ef0 <__stack_chk_fail>
    e780:	f107 072c 	add.w	r7, r7, #44	; 0x2c
    e784:	46bd      	mov	sp, r7
    e786:	bd90      	pop	{r4, r7, pc}

0000e788 <GoalDestroyDrawing>:
//   phWindow (I-) : Pointer on window context handle.
// This function has no return value.
//****************************************************************************

void GoalDestroyDrawing(T_GL_HWIDGET *phWindow)
{
    e788:	b580      	push	{r7, lr}
    e78a:	b084      	sub	sp, #16
    e78c:	af00      	add	r7, sp, #0
    e78e:	6078      	str	r0, [r7, #4]
    e790:	f644 1380 	movw	r3, #18816	; 0x4980
    e794:	f2c0 0302 	movt	r3, #2
    e798:	681b      	ldr	r3, [r3, #0]
    e79a:	60fb      	str	r3, [r7, #12]
    // ***************
		// Empty

	// Destroy screen
	// **************
	GL_Widget_Destroy(*phWindow); // Destroy window with all widgets attached
    e79c:	687b      	ldr	r3, [r7, #4]
    e79e:	681b      	ldr	r3, [r3, #0]
    e7a0:	4618      	mov	r0, r3
    e7a2:	f00a f939 	bl	18a18 <GL_Widget_Destroy>
	*phWindow=NULL;
    e7a6:	687b      	ldr	r3, [r7, #4]
    e7a8:	2200      	movs	r2, #0
    e7aa:	601a      	str	r2, [r3, #0]
}
    e7ac:	f644 1380 	movw	r3, #18816	; 0x4980
    e7b0:	f2c0 0302 	movt	r3, #2
    e7b4:	68fa      	ldr	r2, [r7, #12]
    e7b6:	681b      	ldr	r3, [r3, #0]
    e7b8:	429a      	cmp	r2, r3
    e7ba:	d001      	beq.n	e7c0 <GoalDestroyDrawing+0x38>
    e7bc:	f7fa fb98 	bl	8ef0 <__stack_chk_fail>
    e7c0:	f107 0710 	add.w	r7, r7, #16
    e7c4:	46bd      	mov	sp, r7
    e7c6:	bd80      	pop	{r7, pc}

0000e7c8 <GoalCreatePicture>:
//   !NULL : Pointer to the handle of the picture.
//   NULL : Picture failed
//****************************************************************************

T_GL_HWIDGET GoalCreatePicture (T_GL_HGRAPHIC_LIB hGraphicLib)
{
    e7c8:	b580      	push	{r7, lr}
    e7ca:	b08c      	sub	sp, #48	; 0x30
    e7cc:	af00      	add	r7, sp, #0
    e7ce:	6078      	str	r0, [r7, #4]
    e7d0:	f644 1380 	movw	r3, #18816	; 0x4980
    e7d4:	f2c0 0302 	movt	r3, #2
    e7d8:	681b      	ldr	r3, [r3, #0]
    e7da:	62fb      	str	r3, [r7, #44]	; 0x2c
	T_GL_HWIDGET hWindow, hTimer, hLayout, hLabel, hPicture, hLayout2, hButtonVal, hButtonCan;
	bool bTouch;

	// Build picture context with 2 buttons (Cancel and Valid)
	// *******************************************************
	bTouch = GL_GraphicLib_IsTouchPresent(hGraphicLib);               // Is a touch screen?
    e7dc:	6878      	ldr	r0, [r7, #4]
    e7de:	f00a f81f 	bl	18820 <GL_GraphicLib_IsTouchPresent>
    e7e2:	4603      	mov	r3, r0
    e7e4:	72fb      	strb	r3, [r7, #11]

	hWindow = GL_Window_Create(hGraphicLib);                          // Create a window in a user area
    e7e6:	6878      	ldr	r0, [r7, #4]
    e7e8:	f00a fb20 	bl	18e2c <GL_Window_Create>
    e7ec:	60f8      	str	r0, [r7, #12]
	CHECK(hWindow!=NULL, lblEnd);
    e7ee:	68fb      	ldr	r3, [r7, #12]
    e7f0:	2b00      	cmp	r3, #0
    e7f2:	f000 80d8 	beq.w	e9a6 <GoalCreatePicture+0x1de>

	hTimer = GL_Timer_Create(hWindow);                                // Create a timer on this window
    e7f6:	68f8      	ldr	r0, [r7, #12]
    e7f8:	f00a f8d8 	bl	189ac <GL_Timer_Create>
    e7fc:	6138      	str	r0, [r7, #16]
	CHECK(hTimer!=NULL, lblKO);
    e7fe:	693b      	ldr	r3, [r7, #16]
    e800:	2b00      	cmp	r3, #0
    e802:	f000 80c4 	beq.w	e98e <GoalCreatePicture+0x1c6>
	GL_Widget_SetId(hTimer, TIMER_ID);                                // Timer Identifier TIMER_ID
    e806:	6938      	ldr	r0, [r7, #16]
    e808:	2100      	movs	r1, #0
    e80a:	f00a fa01 	bl	18c10 <GL_Widget_SetId>
	GL_Widget_RegisterCallback(hTimer, GL_EVENT_TIMER_OUT, CallBackTimeout); // Call back when the timer expired
    e80e:	6938      	ldr	r0, [r7, #16]
    e810:	2108      	movs	r1, #8
    e812:	f64c 72c5 	movw	r2, #53189	; 0xcfc5
    e816:	f2c0 0200 	movt	r2, #0
    e81a:	f00a f921 	bl	18a60 <GL_Widget_RegisterCallback>

	hLayout = GL_Layout_Create(hWindow);                              // Create a layout on this window
    e81e:	68f8      	ldr	r0, [r7, #12]
    e820:	f00a f846 	bl	188b0 <GL_Layout_Create>
    e824:	6178      	str	r0, [r7, #20]
	CHECK(hLayout!=NULL, lblKO);
    e826:	697b      	ldr	r3, [r7, #20]
    e828:	2b00      	cmp	r3, #0
    e82a:	f000 80b0 	beq.w	e98e <GoalCreatePicture+0x1c6>

	hLabel = GL_Label_Create(hLayout);                                // Create a label on this layout
    e82e:	6978      	ldr	r0, [r7, #20]
    e830:	f00a f82c 	bl	1888c <GL_Label_Create>
    e834:	61b8      	str	r0, [r7, #24]
	CHECK(hLabel!=NULL, lblKO);
    e836:	69bb      	ldr	r3, [r7, #24]
    e838:	2b00      	cmp	r3, #0
    e83a:	f000 80a8 	beq.w	e98e <GoalCreatePicture+0x1c6>
	GL_Widget_SetItem(hLabel, 0, 0);                                  // Label location on this layout
    e83e:	69b8      	ldr	r0, [r7, #24]
    e840:	2100      	movs	r1, #0
    e842:	2200      	movs	r2, #0
    e844:	f00a f9f6 	bl	18c34 <GL_Widget_SetItem>
	GL_Widget_SetText(hLabel, NULL);                                  // Clear text on this label
    e848:	69b8      	ldr	r0, [r7, #24]
    e84a:	2100      	movs	r1, #0
    e84c:	f00a fa70 	bl	18d30 <GL_Widget_SetText>
	GL_Widget_SetShrink(hLabel, GL_DIRECTION_WIDTH);                  // Shrink beyond its size (No width scrolling cell if label goes over screen)
    e850:	69b8      	ldr	r0, [r7, #24]
    e852:	2101      	movs	r1, #1
    e854:	f00a fa36 	bl	18cc4 <GL_Widget_SetShrink>
	GL_Widget_SetId(hLabel, LABEL_0_ID);                              // Label identifier LABEL0_ID
    e858:	69b8      	ldr	r0, [r7, #24]
    e85a:	f44f 7180 	mov.w	r1, #256	; 0x100
    e85e:	f00a f9d7 	bl	18c10 <GL_Widget_SetId>

	hPicture = GL_Picture_Create(hLayout);                            // Create a picture on this layout
    e862:	6978      	ldr	r0, [r7, #20]
    e864:	f00a f87e 	bl	18964 <GL_Picture_Create>
    e868:	61f8      	str	r0, [r7, #28]
	CHECK(hPicture!=NULL, lblKO);
    e86a:	69fb      	ldr	r3, [r7, #28]
    e86c:	2b00      	cmp	r3, #0
    e86e:	f000 808e 	beq.w	e98e <GoalCreatePicture+0x1c6>
	GL_Widget_SetId(hPicture, PICTURE_ID);                            // Picture Identifier PICTURE_ID
    e872:	69f8      	ldr	r0, [r7, #28]
    e874:	f44f 6100 	mov.w	r1, #2048	; 0x800
    e878:	f00a f9ca 	bl	18c10 <GL_Widget_SetId>
	GL_Widget_SetItem(hPicture, 0, 1);                                // Picture location on this layout
    e87c:	69f8      	ldr	r0, [r7, #28]
    e87e:	2100      	movs	r1, #0
    e880:	2201      	movs	r2, #1
    e882:	f00a f9d7 	bl	18c34 <GL_Widget_SetItem>

	hLayout2 = GL_Layout_Create(hLayout);                             // Create a second layout on this layout
    e886:	6978      	ldr	r0, [r7, #20]
    e888:	f00a f812 	bl	188b0 <GL_Layout_Create>
    e88c:	6238      	str	r0, [r7, #32]
	CHECK(hLayout2!=NULL, lblKO);
    e88e:	6a3b      	ldr	r3, [r7, #32]
    e890:	2b00      	cmp	r3, #0
    e892:	d07c      	beq.n	e98e <GoalCreatePicture+0x1c6>
	GL_Widget_SetId(hLayout2, LAYOUT2_ID);                            // Second layout identifier
    e894:	6a38      	ldr	r0, [r7, #32]
    e896:	f44f 61c0 	mov.w	r1, #1536	; 0x600
    e89a:	f00a f9b9 	bl	18c10 <GL_Widget_SetId>
	GL_Widget_SetItem(hLayout2, 0, 2);                                // Second layout location on this layout
    e89e:	6a38      	ldr	r0, [r7, #32]
    e8a0:	2100      	movs	r1, #0
    e8a2:	2202      	movs	r2, #2
    e8a4:	f00a f9c6 	bl	18c34 <GL_Widget_SetItem>
	GL_Widget_SetGrow(hLayout2, GL_DIRECTION_WIDTH);                  // Grow beyond its size (Background width around layout will fill the complete cell)
    e8a8:	6a38      	ldr	r0, [r7, #32]
    e8aa:	2101      	movs	r1, #1
    e8ac:	f00a f99e 	bl	18bec <GL_Widget_SetGrow>

	hButtonCan = GL_Button_Create(hLayout2);                          // Create a cancel button on this second layout
    e8b0:	6a38      	ldr	r0, [r7, #32]
    e8b2:	f009 fe0d 	bl	184d0 <GL_Button_Create>
    e8b6:	6278      	str	r0, [r7, #36]	; 0x24
	CHECK(hButtonCan!=NULL, lblKO);
    e8b8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    e8ba:	2b00      	cmp	r3, #0
    e8bc:	d067      	beq.n	e98e <GoalCreatePicture+0x1c6>
	GL_Widget_SetSource(hButtonCan, "skin://images/cancel.wgu");      // Set the cancel skinned image
    e8be:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e8c0:	f649 5114 	movw	r1, #40212	; 0x9d14
    e8c4:	f2c0 0101 	movt	r1, #1
    e8c8:	f00a fa20 	bl	18d0c <GL_Widget_SetSource>
	GL_Widget_SetItem(hButtonCan, 0, 0);                              // Button location on this layout
    e8cc:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e8ce:	2100      	movs	r1, #0
    e8d0:	2200      	movs	r2, #0
    e8d2:	f00a f9af 	bl	18c34 <GL_Widget_SetItem>
	GL_Widget_SetExpand(hButtonCan, GL_DIRECTION_WIDTH);              // Expand button width
    e8d6:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e8d8:	2101      	movs	r1, #1
    e8da:	f00a f91b 	bl	18b14 <GL_Widget_SetExpand>
	GL_Widget_SetShortcut(hButtonCan, GL_KEY_CANCEL);                 // Shortcut on this button
    e8de:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e8e0:	f64f 0151 	movw	r1, #63569	; 0xf851
    e8e4:	f00a f9dc 	bl	18ca0 <GL_Widget_SetShortcut>
	GL_Widget_SetId(hButtonCan, BUTTON_CAN_ID);                       // Cancel button Identifier
    e8e8:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e8ea:	f44f 7140 	mov.w	r1, #768	; 0x300
    e8ee:	f00a f98f 	bl	18c10 <GL_Widget_SetId>
	GL_Widget_SetGrow(hButtonCan, GL_DIRECTION_WIDTH);                // Grow beyond its size (Background width around cancel button will fill the complete cell)
    e8f2:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e8f4:	2101      	movs	r1, #1
    e8f6:	f00a f979 	bl	18bec <GL_Widget_SetGrow>
	GL_Widget_SetFocusable(hButtonCan, false);                        // No focus on this button
    e8fa:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e8fc:	2100      	movs	r1, #0
    e8fe:	f00a f91b 	bl	18b38 <GL_Widget_SetFocusable>
	GL_Widget_RegisterCallback(hButtonCan, GL_EVENT_STYLUS_CLICK, CallBackCancelKey); // Call back when key pressed
    e902:	6a78      	ldr	r0, [r7, #36]	; 0x24
    e904:	2167      	movs	r1, #103	; 0x67
    e906:	f64c 7211 	movw	r2, #53009	; 0xcf11
    e90a:	f2c0 0200 	movt	r2, #0
    e90e:	f00a f8a7 	bl	18a60 <GL_Widget_RegisterCallback>

	hButtonVal = GL_Button_Create(hLayout2);                          // Create a valid button on this second layout
    e912:	6a38      	ldr	r0, [r7, #32]
    e914:	f009 fddc 	bl	184d0 <GL_Button_Create>
    e918:	62b8      	str	r0, [r7, #40]	; 0x28
	CHECK(hButtonVal!=NULL, lblKO);
    e91a:	6abb      	ldr	r3, [r7, #40]	; 0x28
    e91c:	2b00      	cmp	r3, #0
    e91e:	d036      	beq.n	e98e <GoalCreatePicture+0x1c6>
	GL_Widget_SetSource(hButtonVal, "skin://images/validation.wgu");  // Set the valid skinned image
    e920:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    e922:	f649 5168 	movw	r1, #40296	; 0x9d68
    e926:	f2c0 0101 	movt	r1, #1
    e92a:	f00a f9ef 	bl	18d0c <GL_Widget_SetSource>
	GL_Widget_SetItem(hButtonVal, 1, 0);                              // Button location on this layout
    e92e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    e930:	2101      	movs	r1, #1
    e932:	2200      	movs	r2, #0
    e934:	f00a f97e 	bl	18c34 <GL_Widget_SetItem>
	GL_Widget_SetExpand(hButtonVal, GL_DIRECTION_WIDTH);              // Expand button width
    e938:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    e93a:	2101      	movs	r1, #1
    e93c:	f00a f8ea 	bl	18b14 <GL_Widget_SetExpand>
	GL_Widget_SetShortcut(hButtonVal, GL_KEY_VALID);                  // Shortcut on this button
    e940:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    e942:	f64f 0150 	movw	r1, #63568	; 0xf850
    e946:	f00a f9ab 	bl	18ca0 <GL_Widget_SetShortcut>
	GL_Widget_SetId(hButtonVal, BUTTON_VAL_ID);                       // Valid button Identifier
    e94a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    e94c:	f44f 7100 	mov.w	r1, #512	; 0x200
    e950:	f00a f95e 	bl	18c10 <GL_Widget_SetId>
	GL_Widget_SetGrow(hButtonVal, GL_DIRECTION_WIDTH);                // Grow beyond its size (Background width around valid button will fill the complete cell)
    e954:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    e956:	2101      	movs	r1, #1
    e958:	f00a f948 	bl	18bec <GL_Widget_SetGrow>
	GL_Widget_SetFocusable(hButtonVal, false);                        // No focus on this button
    e95c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    e95e:	2100      	movs	r1, #0
    e960:	f00a f8ea 	bl	18b38 <GL_Widget_SetFocusable>
	GL_Widget_RegisterCallback(hButtonVal, GL_EVENT_STYLUS_CLICK, CallBackValidKey); // Call back when key pressed
    e964:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    e966:	2167      	movs	r1, #103	; 0x67
    e968:	f64c 62d5 	movw	r2, #52949	; 0xced5
    e96c:	f2c0 0200 	movt	r2, #0
    e970:	f00a f876 	bl	18a60 <GL_Widget_RegisterCallback>

	if(!bTouch)                                                       // Touch screen?
    e974:	7afb      	ldrb	r3, [r7, #11]
    e976:	f083 0301 	eor.w	r3, r3, #1
    e97a:	b2db      	uxtb	r3, r3
    e97c:	2b00      	cmp	r3, #0
    e97e:	d00f      	beq.n	e9a0 <GoalCreatePicture+0x1d8>
		GL_Widget_SetSize(hLayout2, 100, 0, GL_UNIT_PERCENT);         // No, do not show second layout (keep shortcut access on key pressed)
    e980:	6a38      	ldr	r0, [r7, #32]
    e982:	2164      	movs	r1, #100	; 0x64
    e984:	2200      	movs	r2, #0
    e986:	2301      	movs	r3, #1
    e988:	f00a f9ae 	bl	18ce8 <GL_Widget_SetSize>

	goto lblEnd;
    e98c:	e008      	b.n	e9a0 <GoalCreatePicture+0x1d8>

	// Errors treatment
    // ****************
lblKO:                                                                // Window creation failed
	if (hWindow)
    e98e:	68fb      	ldr	r3, [r7, #12]
    e990:	2b00      	cmp	r3, #0
    e992:	d007      	beq.n	e9a4 <GoalCreatePicture+0x1dc>
	{
		GL_Widget_Destroy(hWindow);                                   // Destroy window and all widgets
    e994:	68f8      	ldr	r0, [r7, #12]
    e996:	f00a f83f 	bl	18a18 <GL_Widget_Destroy>
		hWindow=NULL;
    e99a:	2300      	movs	r3, #0
    e99c:	60fb      	str	r3, [r7, #12]
	}
	goto lblEnd;
    e99e:	e001      	b.n	e9a4 <GoalCreatePicture+0x1dc>
	GL_Widget_RegisterCallback(hButtonVal, GL_EVENT_STYLUS_CLICK, CallBackValidKey); // Call back when key pressed

	if(!bTouch)                                                       // Touch screen?
		GL_Widget_SetSize(hLayout2, 100, 0, GL_UNIT_PERCENT);         // No, do not show second layout (keep shortcut access on key pressed)

	goto lblEnd;
    e9a0:	bf00      	nop
    e9a2:	e000      	b.n	e9a6 <GoalCreatePicture+0x1de>
	if (hWindow)
	{
		GL_Widget_Destroy(hWindow);                                   // Destroy window and all widgets
		hWindow=NULL;
	}
	goto lblEnd;
    e9a4:	bf00      	nop
lblEnd:
	return hWindow;
    e9a6:	68fb      	ldr	r3, [r7, #12]
}
    e9a8:	4618      	mov	r0, r3
    e9aa:	f644 1380 	movw	r3, #18816	; 0x4980
    e9ae:	f2c0 0302 	movt	r3, #2
    e9b2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    e9b4:	681b      	ldr	r3, [r3, #0]
    e9b6:	429a      	cmp	r2, r3
    e9b8:	d001      	beq.n	e9be <GoalCreatePicture+0x1f6>
    e9ba:	f7fa fa99 	bl	8ef0 <__stack_chk_fail>
    e9be:	f107 0730 	add.w	r7, r7, #48	; 0x30
    e9c2:	46bd      	mov	sp, r7
    e9c4:	bd80      	pop	{r7, pc}
    e9c6:	bf00      	nop

0000e9c8 <GoalClrPicture>:
//   >=0 : Clear picture done.
//   <0 : Clear picture failed.
//****************************************************************************

int GoalClrPicture(T_GL_HWIDGET hWindow, T_GL_COLOR ulBackColor, unsigned int uiKeys, bool bRefresh)
{
    e9c8:	b580      	push	{r7, lr}
    e9ca:	b08c      	sub	sp, #48	; 0x30
    e9cc:	af04      	add	r7, sp, #16
    e9ce:	60f8      	str	r0, [r7, #12]
    e9d0:	60b9      	str	r1, [r7, #8]
    e9d2:	607a      	str	r2, [r7, #4]
    e9d4:	70fb      	strb	r3, [r7, #3]
    e9d6:	f644 1380 	movw	r3, #18816	; 0x4980
    e9da:	f2c0 0302 	movt	r3, #2
    e9de:	681b      	ldr	r3, [r3, #0]
    e9e0:	61fb      	str	r3, [r7, #28]
	T_GL_HWIDGET hButtonVal, hButtonCan;
	int iRet;

	// Disable the complete second layout
	// **********************************
	hButtonCan = GL_Widget_SearchId(hWindow, BUTTON_CAN_ID);     // Retrieve the cancel button on this second layout
    e9e2:	68f8      	ldr	r0, [r7, #12]
    e9e4:	f44f 7140 	mov.w	r1, #768	; 0x300
    e9e8:	f00a f84c 	bl	18a84 <GL_Widget_SearchId>
    e9ec:	6178      	str	r0, [r7, #20]
	CHECK(hButtonCan!=NULL, lblKO);
    e9ee:	697b      	ldr	r3, [r7, #20]
    e9f0:	2b00      	cmp	r3, #0
    e9f2:	f000 8085 	beq.w	eb00 <GoalClrPicture+0x138>
	hButtonVal = GL_Widget_SearchId(hWindow, BUTTON_VAL_ID);     // Retrieve the valid button on this second layout
    e9f6:	68f8      	ldr	r0, [r7, #12]
    e9f8:	f44f 7100 	mov.w	r1, #512	; 0x200
    e9fc:	f00a f842 	bl	18a84 <GL_Widget_SearchId>
    ea00:	61b8      	str	r0, [r7, #24]
	CHECK(hButtonVal!=NULL, lblKO);
    ea02:	69bb      	ldr	r3, [r7, #24]
    ea04:	2b00      	cmp	r3, #0
    ea06:	d07b      	beq.n	eb00 <GoalClrPicture+0x138>

	GL_Widget_SetVisible(hButtonCan, false);                     // Blind the cancel button
    ea08:	6978      	ldr	r0, [r7, #20]
    ea0a:	2100      	movs	r1, #0
    ea0c:	f00a f9d8 	bl	18dc0 <GL_Widget_SetVisible>
	GL_Widget_UnregisterCallback(hButtonCan, GL_EVENT_STYLUS_CLICK, CallBackCancelKey); // Unregister call back on cancel button
    ea10:	6978      	ldr	r0, [r7, #20]
    ea12:	2167      	movs	r1, #103	; 0x67
    ea14:	f64c 7211 	movw	r2, #53009	; 0xcf11
    ea18:	f2c0 0200 	movt	r2, #0
    ea1c:	f00a f9f4 	bl	18e08 <GL_Widget_UnregisterCallback>
	GL_Widget_SetVisible(hButtonVal, false);                     // Blind the valid button
    ea20:	69b8      	ldr	r0, [r7, #24]
    ea22:	2100      	movs	r1, #0
    ea24:	f00a f9cc 	bl	18dc0 <GL_Widget_SetVisible>
	GL_Widget_UnregisterCallback(hButtonVal, GL_EVENT_STYLUS_CLICK, CallBackValidKey); // Unregister call back on valid button
    ea28:	69b8      	ldr	r0, [r7, #24]
    ea2a:	2167      	movs	r1, #103	; 0x67
    ea2c:	f64c 62d5 	movw	r2, #52949	; 0xced5
    ea30:	f2c0 0200 	movt	r2, #0
    ea34:	f00a f9e8 	bl	18e08 <GL_Widget_UnregisterCallback>

	// Set the second layout with the right properties
	// ***********************************************
	if ((uiKeys & KEY_CANCEL) == KEY_CANCEL)                     // Cancel key?
    ea38:	687b      	ldr	r3, [r7, #4]
    ea3a:	f003 0302 	and.w	r3, r3, #2
    ea3e:	2b00      	cmp	r3, #0
    ea40:	d00b      	beq.n	ea5a <GoalClrPicture+0x92>
	{
		GL_Widget_SetVisible(hButtonCan, true);                  // Yes, show the cancel key on this second layout
    ea42:	6978      	ldr	r0, [r7, #20]
    ea44:	2101      	movs	r1, #1
    ea46:	f00a f9bb 	bl	18dc0 <GL_Widget_SetVisible>
		GL_Widget_RegisterCallback(hButtonCan, GL_EVENT_STYLUS_CLICK, CallBackCancelKey); // Register call back when cancel key pressed or touched
    ea4a:	6978      	ldr	r0, [r7, #20]
    ea4c:	2167      	movs	r1, #103	; 0x67
    ea4e:	f64c 7211 	movw	r2, #53009	; 0xcf11
    ea52:	f2c0 0200 	movt	r2, #0
    ea56:	f00a f803 	bl	18a60 <GL_Widget_RegisterCallback>
	}

	if ((uiKeys & KEY_VALID) == KEY_VALID)                       // Valid key?
    ea5a:	687b      	ldr	r3, [r7, #4]
    ea5c:	f003 0301 	and.w	r3, r3, #1
    ea60:	2b00      	cmp	r3, #0
    ea62:	d00b      	beq.n	ea7c <GoalClrPicture+0xb4>
	{
		GL_Widget_SetVisible(hButtonVal, true);                  // Yes, show the valid key on this second layout
    ea64:	69b8      	ldr	r0, [r7, #24]
    ea66:	2101      	movs	r1, #1
    ea68:	f00a f9aa 	bl	18dc0 <GL_Widget_SetVisible>
		GL_Widget_RegisterCallback(hButtonVal, GL_EVENT_STYLUS_CLICK, CallBackValidKey); // Register call back when valid key pressed or touched
    ea6c:	69b8      	ldr	r0, [r7, #24]
    ea6e:	2167      	movs	r1, #103	; 0x67
    ea70:	f64c 62d5 	movw	r2, #52949	; 0xced5
    ea74:	f2c0 0200 	movt	r2, #0
    ea78:	f009 fff2 	bl	18a60 <GL_Widget_RegisterCallback>
	}

	if (IsColorDisplay())                                        // Color display?
    ea7c:	f008 fea2 	bl	177c4 <IsColorDisplay>
    ea80:	4603      	mov	r3, r0
    ea82:	2b00      	cmp	r3, #0
    ea84:	d004      	beq.n	ea90 <GoalClrPicture+0xc8>
		GL_Widget_SetBackColor(hWindow, ulBackColor);            // Yes, set window back color
    ea86:	68f8      	ldr	r0, [r7, #12]
    ea88:	68b9      	ldr	r1, [r7, #8]
    ea8a:	f00a f81f 	bl	18acc <GL_Widget_SetBackColor>
    ea8e:	e004      	b.n	ea9a <GoalClrPicture+0xd2>
	else
		GL_Widget_SetBackColor(hWindow, GL_COLOR_WHITE);         // No, force window back color to white
    ea90:	68f8      	ldr	r0, [r7, #12]
    ea92:	f04f 31ff 	mov.w	r1, #4294967295
    ea96:	f00a f819 	bl	18acc <GL_Widget_SetBackColor>

	// Clear Title
	// ***********
	GL_Widget_SetText(GL_Widget_SearchId(hWindow, LABEL_0_ID), NULL); // Remove label text
    ea9a:	68f8      	ldr	r0, [r7, #12]
    ea9c:	f44f 7180 	mov.w	r1, #256	; 0x100
    eaa0:	f009 fff0 	bl	18a84 <GL_Widget_SearchId>
    eaa4:	4603      	mov	r3, r0
    eaa6:	4618      	mov	r0, r3
    eaa8:	2100      	movs	r1, #0
    eaaa:	f00a f941 	bl	18d30 <GL_Widget_SetText>

	// Clear picture
	// *************
	GL_Widget_SetSource(GL_Widget_SearchId(hWindow, PICTURE_ID), ""); // Clear picture
    eaae:	68f8      	ldr	r0, [r7, #12]
    eab0:	f44f 6100 	mov.w	r1, #2048	; 0x800
    eab4:	f009 ffe6 	bl	18a84 <GL_Widget_SearchId>
    eab8:	4603      	mov	r3, r0
    eaba:	4618      	mov	r0, r3
    eabc:	f649 5194 	movw	r1, #40340	; 0x9d94
    eac0:	f2c0 0101 	movt	r1, #1
    eac4:	f00a f922 	bl	18d0c <GL_Widget_SetSource>
	GL_Widget_SetBorders(GL_Widget_SearchId(hWindow, PICTURE_ID), 0, 0, 0, 0, GL_UNIT_PIXEL, ulBackColor); // Remove border with window back color
    eac8:	68f8      	ldr	r0, [r7, #12]
    eaca:	f44f 6100 	mov.w	r1, #2048	; 0x800
    eace:	f009 ffd9 	bl	18a84 <GL_Widget_SearchId>
    ead2:	4603      	mov	r3, r0
    ead4:	2200      	movs	r2, #0
    ead6:	9200      	str	r2, [sp, #0]
    ead8:	2200      	movs	r2, #0
    eada:	9201      	str	r2, [sp, #4]
    eadc:	68ba      	ldr	r2, [r7, #8]
    eade:	9202      	str	r2, [sp, #8]
    eae0:	4618      	mov	r0, r3
    eae2:	2100      	movs	r1, #0
    eae4:	2200      	movs	r2, #0
    eae6:	2300      	movs	r3, #0
    eae8:	f00a f802 	bl	18af0 <GL_Widget_SetBorders>

	if (bRefresh)                                                // Refresh window?
    eaec:	78fb      	ldrb	r3, [r7, #3]
    eaee:	2b00      	cmp	r3, #0
    eaf0:	d003      	beq.n	eafa <GoalClrPicture+0x132>
		GL_Window_Dispatch(hWindow, 0);                          // Yes, refresh it
    eaf2:	68f8      	ldr	r0, [r7, #12]
    eaf4:	2100      	movs	r1, #0
    eaf6:	f00a f9ab 	bl	18e50 <GL_Window_Dispatch>

	iRet=1;
    eafa:	2301      	movs	r3, #1
    eafc:	613b      	str	r3, [r7, #16]
	goto lblEnd;
    eafe:	e003      	b.n	eb08 <GoalClrPicture+0x140>

	// Errors treatment
    // ****************
lblKO:                                                           // Clear picture failed
	iRet=-1;
    eb00:	f04f 33ff 	mov.w	r3, #4294967295
    eb04:	613b      	str	r3, [r7, #16]
	goto lblEnd;
    eb06:	bf00      	nop
lblEnd:
	return iRet;
    eb08:	693b      	ldr	r3, [r7, #16]
}
    eb0a:	4618      	mov	r0, r3
    eb0c:	f644 1380 	movw	r3, #18816	; 0x4980
    eb10:	f2c0 0302 	movt	r3, #2
    eb14:	69fa      	ldr	r2, [r7, #28]
    eb16:	681b      	ldr	r3, [r3, #0]
    eb18:	429a      	cmp	r2, r3
    eb1a:	d001      	beq.n	eb20 <GoalClrPicture+0x158>
    eb1c:	f7fa f9e8 	bl	8ef0 <__stack_chk_fail>
    eb20:	f107 0720 	add.w	r7, r7, #32
    eb24:	46bd      	mov	sp, r7
    eb26:	bd80      	pop	{r7, pc}

0000eb28 <GoalDspPicture>:
//   >=0 : Display picture done (Exit screen : 0=timeout,GL_KEY_CANCEL,GL_KEY_VALID).
//   <0 : Display picture failed.
//****************************************************************************

int GoalDspPicture(T_GL_HWIDGET hWindow, char *pcTitle, const char* pcPicture, const ST_IMAGE* pxImage, ulong ulTimeOut, bool bRefresh)
{
    eb28:	b590      	push	{r4, r7, lr}
    eb2a:	b08f      	sub	sp, #60	; 0x3c
    eb2c:	af04      	add	r7, sp, #16
    eb2e:	6178      	str	r0, [r7, #20]
    eb30:	6139      	str	r1, [r7, #16]
    eb32:	60fa      	str	r2, [r7, #12]
    eb34:	60bb      	str	r3, [r7, #8]
    eb36:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    eb38:	607b      	str	r3, [r7, #4]
    eb3a:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
    eb3e:	70fb      	strb	r3, [r7, #3]
    eb40:	f644 1380 	movw	r3, #18816	; 0x4980
    eb44:	f2c0 0302 	movt	r3, #2
    eb48:	681b      	ldr	r3, [r3, #0]
    eb4a:	627b      	str	r3, [r7, #36]	; 0x24
	T_GL_HWIDGET hLabel, hPicture;
	int iRet;

	// Display label
	// *************
	hLabel = GL_Widget_SearchId(hWindow, LABEL_0_ID);   // Get label from its id
    eb4c:	6978      	ldr	r0, [r7, #20]
    eb4e:	f44f 7180 	mov.w	r1, #256	; 0x100
    eb52:	f009 ff97 	bl	18a84 <GL_Widget_SearchId>
    eb56:	61f8      	str	r0, [r7, #28]
	CHECK(hLabel!=NULL, lblKO);
    eb58:	69fb      	ldr	r3, [r7, #28]
    eb5a:	2b00      	cmp	r3, #0
    eb5c:	f000 8126 	beq.w	edac <GoalDspPicture+0x284>

	if (pcTitle)                                        // Null title?
    eb60:	693b      	ldr	r3, [r7, #16]
    eb62:	2b00      	cmp	r3, #0
    eb64:	d00c      	beq.n	eb80 <GoalDspPicture+0x58>
	{
		GL_Widget_SetVisible(hLabel, true);
    eb66:	69f8      	ldr	r0, [r7, #28]
    eb68:	2101      	movs	r1, #1
    eb6a:	f00a f929 	bl	18dc0 <GL_Widget_SetVisible>
		GL_Widget_SetText(hLabel, "%s", pcTitle);       // No, show title (add %s to allow '%' to be displayed)
    eb6e:	69f8      	ldr	r0, [r7, #28]
    eb70:	f649 5188 	movw	r1, #40328	; 0x9d88
    eb74:	f2c0 0101 	movt	r1, #1
    eb78:	693a      	ldr	r2, [r7, #16]
    eb7a:	f00a f8d9 	bl	18d30 <GL_Widget_SetText>
    eb7e:	e003      	b.n	eb88 <GoalDspPicture+0x60>
	}
	else
		GL_Widget_SetVisible(hLabel, false);            // Yes, blind title (line is removed)
    eb80:	69f8      	ldr	r0, [r7, #28]
    eb82:	2100      	movs	r1, #0
    eb84:	f00a f91c 	bl	18dc0 <GL_Widget_SetVisible>


	if (IsColorDisplay())                               // Color display?
    eb88:	f008 fe1c 	bl	177c4 <IsColorDisplay>
    eb8c:	4603      	mov	r3, r0
    eb8e:	2b00      	cmp	r3, #0
    eb90:	d027      	beq.n	ebe2 <GoalDspPicture+0xba>
	{                                                   // Yes
		// Color properties
		// ================
		if (pxImage)
    eb92:	68bb      	ldr	r3, [r7, #8]
    eb94:	2b00      	cmp	r3, #0
    eb96:	d046      	beq.n	ec26 <GoalDspPicture+0xfe>
		{
			GL_Widget_SetForeColor(hLabel, pxImage->xColor.ulPen);           // Pen color
    eb98:	68bb      	ldr	r3, [r7, #8]
    eb9a:	681b      	ldr	r3, [r3, #0]
    eb9c:	69f8      	ldr	r0, [r7, #28]
    eb9e:	4619      	mov	r1, r3
    eba0:	f00a f812 	bl	18bc8 <GL_Widget_SetForeColor>
			if (pxImage->xColor.bGrowWidth)                                  // Grow beyond its size
    eba4:	68bb      	ldr	r3, [r7, #8]
    eba6:	791b      	ldrb	r3, [r3, #4]
    eba8:	2b00      	cmp	r3, #0
    ebaa:	d003      	beq.n	ebb4 <GoalDspPicture+0x8c>
				GL_Widget_SetGrow(hLabel, GL_DIRECTION_WIDTH);               // Background width around the label will fill the complete cell
    ebac:	69f8      	ldr	r0, [r7, #28]
    ebae:	2101      	movs	r1, #1
    ebb0:	f00a f81c 	bl	18bec <GL_Widget_SetGrow>
			if (pxImage->xColor.xFont.pcName != NULL)
    ebb4:	68bb      	ldr	r3, [r7, #8]
    ebb6:	689b      	ldr	r3, [r3, #8]
    ebb8:	2b00      	cmp	r3, #0
    ebba:	d005      	beq.n	ebc8 <GoalDspPicture+0xa0>
				GL_Widget_SetFontName(hLabel, pxImage->xColor.xFont.pcName); // Font name
    ebbc:	68bb      	ldr	r3, [r7, #8]
    ebbe:	689b      	ldr	r3, [r3, #8]
    ebc0:	69f8      	ldr	r0, [r7, #28]
    ebc2:	4619      	mov	r1, r3
    ebc4:	f009 ffca 	bl	18b5c <GL_Widget_SetFontName>
			GL_Widget_SetFontScale(hLabel, pxImage->xColor.xFont.eScale);    // Font scale
    ebc8:	68bb      	ldr	r3, [r7, #8]
    ebca:	691b      	ldr	r3, [r3, #16]
    ebcc:	69f8      	ldr	r0, [r7, #28]
    ebce:	4619      	mov	r1, r3
    ebd0:	f009 ffd6 	bl	18b80 <GL_Widget_SetFontScale>
			GL_Widget_SetFontStyle(hLabel, pxImage->xColor.xFont.eStyle);    // Font style
    ebd4:	68bb      	ldr	r3, [r7, #8]
    ebd6:	68db      	ldr	r3, [r3, #12]
    ebd8:	69f8      	ldr	r0, [r7, #28]
    ebda:	4619      	mov	r1, r3
    ebdc:	f009 ffe2 	bl	18ba4 <GL_Widget_SetFontStyle>
    ebe0:	e021      	b.n	ec26 <GoalDspPicture+0xfe>
	}
	else                                                // No
	{
		// Black & White properties
		// ========================
		if (pxImage)
    ebe2:	68bb      	ldr	r3, [r7, #8]
    ebe4:	2b00      	cmp	r3, #0
    ebe6:	d01e      	beq.n	ec26 <GoalDspPicture+0xfe>
		{
			if (pxImage->xBW.bGrowWidth)                                     // Grow beyond its size
    ebe8:	68bb      	ldr	r3, [r7, #8]
    ebea:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
    ebee:	2b00      	cmp	r3, #0
    ebf0:	d003      	beq.n	ebfa <GoalDspPicture+0xd2>
				GL_Widget_SetGrow(hLabel, GL_DIRECTION_WIDTH);               // Background width around the label will fill the complete cell
    ebf2:	69f8      	ldr	r0, [r7, #28]
    ebf4:	2101      	movs	r1, #1
    ebf6:	f009 fff9 	bl	18bec <GL_Widget_SetGrow>
			if (pxImage->xBW.xFont.pcName != NULL)
    ebfa:	68bb      	ldr	r3, [r7, #8]
    ebfc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    ebfe:	2b00      	cmp	r3, #0
    ec00:	d005      	beq.n	ec0e <GoalDspPicture+0xe6>
				GL_Widget_SetFontName(hLabel, pxImage->xBW.xFont.pcName);    // Font name
    ec02:	68bb      	ldr	r3, [r7, #8]
    ec04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    ec06:	69f8      	ldr	r0, [r7, #28]
    ec08:	4619      	mov	r1, r3
    ec0a:	f009 ffa7 	bl	18b5c <GL_Widget_SetFontName>
			GL_Widget_SetFontScale(hLabel, pxImage->xBW.xFont.eScale);       // Font scale
    ec0e:	68bb      	ldr	r3, [r7, #8]
    ec10:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    ec12:	69f8      	ldr	r0, [r7, #28]
    ec14:	4619      	mov	r1, r3
    ec16:	f009 ffb3 	bl	18b80 <GL_Widget_SetFontScale>
			GL_Widget_SetFontStyle(hLabel, pxImage->xBW.xFont.eStyle);       // Font style
    ec1a:	68bb      	ldr	r3, [r7, #8]
    ec1c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    ec1e:	69f8      	ldr	r0, [r7, #28]
    ec20:	4619      	mov	r1, r3
    ec22:	f009 ffbf 	bl	18ba4 <GL_Widget_SetFontStyle>
		}
	}

	// Display picture
	// ***************
	hPicture = GL_Widget_SearchId(hWindow, PICTURE_ID); // Get picture from its id
    ec26:	6978      	ldr	r0, [r7, #20]
    ec28:	f44f 6100 	mov.w	r1, #2048	; 0x800
    ec2c:	f009 ff2a 	bl	18a84 <GL_Widget_SearchId>
    ec30:	6238      	str	r0, [r7, #32]
	GL_Widget_SetSource(hPicture, pcPicture);
    ec32:	6a38      	ldr	r0, [r7, #32]
    ec34:	68f9      	ldr	r1, [r7, #12]
    ec36:	f00a f869 	bl	18d0c <GL_Widget_SetSource>
	GL_Widget_SetTransformation(hPicture, GL_TRANSFORMATION_STRETCH_ALL); // Stretched along all directions
    ec3a:	6a38      	ldr	r0, [r7, #32]
    ec3c:	2106      	movs	r1, #6
    ec3e:	f00a f8ad 	bl	18d9c <GL_Widget_SetTransformation>
	GL_Widget_SetShrink(hPicture, GL_DIRECTION_ALL);    // Shrink beyond its size (Picture shrink automatically if picture goes over screen)
    ec42:	6a38      	ldr	r0, [r7, #32]
    ec44:	2103      	movs	r1, #3
    ec46:	f00a f83d 	bl	18cc4 <GL_Widget_SetShrink>

	if (IsColorDisplay())                               // Color display?
    ec4a:	f008 fdbb 	bl	177c4 <IsColorDisplay>
    ec4e:	4603      	mov	r3, r0
    ec50:	2b00      	cmp	r3, #0
    ec52:	d025      	beq.n	eca0 <GoalDspPicture+0x178>
	{                                                   // Yes, set expand, border and margin
		GL_Widget_SetExpand(hPicture, pxImage->xColor.eExpand);
    ec54:	68bb      	ldr	r3, [r7, #8]
    ec56:	695b      	ldr	r3, [r3, #20]
    ec58:	6a38      	ldr	r0, [r7, #32]
    ec5a:	4619      	mov	r1, r3
    ec5c:	f009 ff5a 	bl	18b14 <GL_Widget_SetExpand>
		GL_Widget_SetBorders(hPicture, pxImage->xColor.xBorder.usLeft, pxImage->xColor.xBorder.usTop, pxImage->xColor.xBorder.usRight, pxImage->xColor.xBorder.usBottom, GL_UNIT_PIXEL, pxImage->xColor.xBorder.ulColor);
    ec60:	68bb      	ldr	r3, [r7, #8]
    ec62:	6999      	ldr	r1, [r3, #24]
    ec64:	68bb      	ldr	r3, [r7, #8]
    ec66:	69da      	ldr	r2, [r3, #28]
    ec68:	68bb      	ldr	r3, [r7, #8]
    ec6a:	6a1b      	ldr	r3, [r3, #32]
    ec6c:	68b8      	ldr	r0, [r7, #8]
    ec6e:	6a44      	ldr	r4, [r0, #36]	; 0x24
    ec70:	68b8      	ldr	r0, [r7, #8]
    ec72:	6a80      	ldr	r0, [r0, #40]	; 0x28
    ec74:	9400      	str	r4, [sp, #0]
    ec76:	2400      	movs	r4, #0
    ec78:	9401      	str	r4, [sp, #4]
    ec7a:	9002      	str	r0, [sp, #8]
    ec7c:	6a38      	ldr	r0, [r7, #32]
    ec7e:	f009 ff37 	bl	18af0 <GL_Widget_SetBorders>
		GL_Widget_SetMargins(hPicture, pxImage->xColor.xMargin.usLeft, pxImage->xColor.xMargin.usTop, pxImage->xColor.xMargin.usRight, pxImage->xColor.xMargin.usBottom, GL_UNIT_PIXEL);
    ec82:	68bb      	ldr	r3, [r7, #8]
    ec84:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
    ec86:	68bb      	ldr	r3, [r7, #8]
    ec88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    ec8a:	68bb      	ldr	r3, [r7, #8]
    ec8c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    ec8e:	68b8      	ldr	r0, [r7, #8]
    ec90:	6b80      	ldr	r0, [r0, #56]	; 0x38
    ec92:	9000      	str	r0, [sp, #0]
    ec94:	2000      	movs	r0, #0
    ec96:	9001      	str	r0, [sp, #4]
    ec98:	6a38      	ldr	r0, [r7, #32]
    ec9a:	f009 ffdd 	bl	18c58 <GL_Widget_SetMargins>
    ec9e:	e024      	b.n	ecea <GoalDspPicture+0x1c2>
	}
	else
	{                                                   // No, set expand, border and margin
		GL_Widget_SetExpand(hPicture, pxImage->xBW.eExpand);
    eca0:	68bb      	ldr	r3, [r7, #8]
    eca2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    eca4:	6a38      	ldr	r0, [r7, #32]
    eca6:	4619      	mov	r1, r3
    eca8:	f009 ff34 	bl	18b14 <GL_Widget_SetExpand>
		GL_Widget_SetBorders(hPicture, pxImage->xBW.xBorder.usLeft, pxImage->xBW.xBorder.usTop, pxImage->xBW.xBorder.usRight, pxImage->xBW.xBorder.usBottom, GL_UNIT_PIXEL, pxImage->xBW.xBorder.ulColor);
    ecac:	68bb      	ldr	r3, [r7, #8]
    ecae:	6d19      	ldr	r1, [r3, #80]	; 0x50
    ecb0:	68bb      	ldr	r3, [r7, #8]
    ecb2:	6d5a      	ldr	r2, [r3, #84]	; 0x54
    ecb4:	68bb      	ldr	r3, [r7, #8]
    ecb6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    ecb8:	68b8      	ldr	r0, [r7, #8]
    ecba:	6dc4      	ldr	r4, [r0, #92]	; 0x5c
    ecbc:	68b8      	ldr	r0, [r7, #8]
    ecbe:	6e00      	ldr	r0, [r0, #96]	; 0x60
    ecc0:	9400      	str	r4, [sp, #0]
    ecc2:	2400      	movs	r4, #0
    ecc4:	9401      	str	r4, [sp, #4]
    ecc6:	9002      	str	r0, [sp, #8]
    ecc8:	6a38      	ldr	r0, [r7, #32]
    ecca:	f009 ff11 	bl	18af0 <GL_Widget_SetBorders>
		GL_Widget_SetMargins(hPicture, pxImage->xBW.xMargin.usLeft, pxImage->xBW.xMargin.usTop, pxImage->xBW.xMargin.usRight, pxImage->xBW.xMargin.usBottom, GL_UNIT_PIXEL);
    ecce:	68bb      	ldr	r3, [r7, #8]
    ecd0:	6e59      	ldr	r1, [r3, #100]	; 0x64
    ecd2:	68bb      	ldr	r3, [r7, #8]
    ecd4:	6e9a      	ldr	r2, [r3, #104]	; 0x68
    ecd6:	68bb      	ldr	r3, [r7, #8]
    ecd8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
    ecda:	68b8      	ldr	r0, [r7, #8]
    ecdc:	6f00      	ldr	r0, [r0, #112]	; 0x70
    ecde:	9000      	str	r0, [sp, #0]
    ece0:	2000      	movs	r0, #0
    ece2:	9001      	str	r0, [sp, #4]
    ece4:	6a38      	ldr	r0, [r7, #32]
    ece6:	f009 ffb7 	bl	18c58 <GL_Widget_SetMargins>
	}

	CHECK(ulTimeOut!=0, lblNoTimer);                    // No timer to set
    ecea:	687b      	ldr	r3, [r7, #4]
    ecec:	2b00      	cmp	r3, #0
    ecee:	d045      	beq.n	ed7c <GoalDspPicture+0x254>

	// Restart timer
	// *************
	if (ulTimeOut == GL_TIME_INFINITE)                  // Set timeout value
    ecf0:	687b      	ldr	r3, [r7, #4]
    ecf2:	f1b3 3fff 	cmp.w	r3, #4294967295
    ecf6:	d10a      	bne.n	ed0e <GoalDspPicture+0x1e6>
		GL_Timer_SetInterval(GL_Widget_SearchId(hWindow, TIMER_ID), 0x7FFFFFFF); // Bug 0xFFFFFFFF not supported
    ecf8:	6978      	ldr	r0, [r7, #20]
    ecfa:	2100      	movs	r1, #0
    ecfc:	f009 fec2 	bl	18a84 <GL_Widget_SearchId>
    ed00:	4603      	mov	r3, r0
    ed02:	4618      	mov	r0, r3
    ed04:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    ed08:	f009 fe62 	bl	189d0 <GL_Timer_SetInterval>
    ed0c:	e008      	b.n	ed20 <GoalDspPicture+0x1f8>
	else
		GL_Timer_SetInterval(GL_Widget_SearchId(hWindow, TIMER_ID), ulTimeOut);
    ed0e:	6978      	ldr	r0, [r7, #20]
    ed10:	2100      	movs	r1, #0
    ed12:	f009 feb7 	bl	18a84 <GL_Widget_SearchId>
    ed16:	4603      	mov	r3, r0
    ed18:	4618      	mov	r0, r3
    ed1a:	6879      	ldr	r1, [r7, #4]
    ed1c:	f009 fe58 	bl	189d0 <GL_Timer_SetInterval>

	// Loop indefinitely until the result is set from the call back functions
	// **********************************************************************
	GL_Window_MainLoop(hWindow);                        // Wait until a result is set
    ed20:	6978      	ldr	r0, [r7, #20]
    ed22:	f00a f8b9 	bl	18e98 <GL_Window_MainLoop>

	// Test the result set by the call back functions
	// **********************************************
	switch(GL_Window_GetResult(hWindow))                // Get the result
    ed26:	6978      	ldr	r0, [r7, #20]
    ed28:	f00a f8a4 	bl	18e74 <GL_Window_GetResult>
    ed2c:	4603      	mov	r3, r0
    ed2e:	2b01      	cmp	r3, #1
    ed30:	d010      	beq.n	ed54 <GoalDspPicture+0x22c>
    ed32:	2b01      	cmp	r3, #1
    ed34:	d302      	bcc.n	ed3c <GoalDspPicture+0x214>
    ed36:	2b04      	cmp	r3, #4
    ed38:	d018      	beq.n	ed6c <GoalDspPicture+0x244>
    ed3a:	e01a      	b.n	ed72 <GoalDspPicture+0x24a>
	{
	case RES_VALID_STATUS:                              // Key valid result
		GL_Timer_Stop(GL_Widget_SearchId(hWindow, TIMER_ID));
    ed3c:	6978      	ldr	r0, [r7, #20]
    ed3e:	2100      	movs	r1, #0
    ed40:	f009 fea0 	bl	18a84 <GL_Widget_SearchId>
    ed44:	4603      	mov	r3, r0
    ed46:	4618      	mov	r0, r3
    ed48:	f009 fe54 	bl	189f4 <GL_Timer_Stop>
		iRet=GL_KEY_VALID;
    ed4c:	f64f 0350 	movw	r3, #63568	; 0xf850
    ed50:	61bb      	str	r3, [r7, #24]
		break;
    ed52:	e012      	b.n	ed7a <GoalDspPicture+0x252>
	case RES_CANCEL_STATUS:                             // Key cancel result
		GL_Timer_Stop(GL_Widget_SearchId(hWindow, TIMER_ID));
    ed54:	6978      	ldr	r0, [r7, #20]
    ed56:	2100      	movs	r1, #0
    ed58:	f009 fe94 	bl	18a84 <GL_Widget_SearchId>
    ed5c:	4603      	mov	r3, r0
    ed5e:	4618      	mov	r0, r3
    ed60:	f009 fe48 	bl	189f4 <GL_Timer_Stop>
		iRet=GL_KEY_CANCEL;
    ed64:	f64f 0351 	movw	r3, #63569	; 0xf851
    ed68:	61bb      	str	r3, [r7, #24]
		break;
    ed6a:	e006      	b.n	ed7a <GoalDspPicture+0x252>
	case RES_TIMER_STATUS:                              // Timer result
		iRet=0;
    ed6c:	2300      	movs	r3, #0
    ed6e:	61bb      	str	r3, [r7, #24]
		break;
    ed70:	e003      	b.n	ed7a <GoalDspPicture+0x252>
	default:                                            // Unknown result
		iRet=-1;
    ed72:	f04f 33ff 	mov.w	r3, #4294967295
    ed76:	61bb      	str	r3, [r7, #24]
		break;
    ed78:	bf00      	nop
	}

	goto lblEnd;
    ed7a:	e01c      	b.n	edb6 <GoalDspPicture+0x28e>

	// Errors treatment
    // ****************
lblNoTimer:                                             // No timer used
	iRet=0;
    ed7c:	2300      	movs	r3, #0
    ed7e:	61bb      	str	r3, [r7, #24]
	if (bRefresh)
    ed80:	78fb      	ldrb	r3, [r7, #3]
    ed82:	2b00      	cmp	r3, #0
    ed84:	d016      	beq.n	edb4 <GoalDspPicture+0x28c>
	{
		iRet=GL_Window_Dispatch(hWindow, 0);            // Refresh the window
    ed86:	6978      	ldr	r0, [r7, #20]
    ed88:	2100      	movs	r1, #0
    ed8a:	f00a f861 	bl	18e50 <GL_Window_Dispatch>
    ed8e:	4603      	mov	r3, r0
    ed90:	61bb      	str	r3, [r7, #24]
		if (iRet == RES_VALID_STATUS)
    ed92:	69bb      	ldr	r3, [r7, #24]
    ed94:	2b00      	cmp	r3, #0
    ed96:	d102      	bne.n	ed9e <GoalDspPicture+0x276>
			iRet=GL_KEY_VALID;
    ed98:	f64f 0350 	movw	r3, #63568	; 0xf850
    ed9c:	61bb      	str	r3, [r7, #24]
		if (iRet == RES_CANCEL_STATUS)
    ed9e:	69bb      	ldr	r3, [r7, #24]
    eda0:	2b01      	cmp	r3, #1
    eda2:	d107      	bne.n	edb4 <GoalDspPicture+0x28c>
			iRet=GL_KEY_CANCEL;
    eda4:	f64f 0351 	movw	r3, #63569	; 0xf851
    eda8:	61bb      	str	r3, [r7, #24]
	}
	goto lblEnd;
    edaa:	e003      	b.n	edb4 <GoalDspPicture+0x28c>
lblKO:                                                  // Display picture failed
	iRet=-1;
    edac:	f04f 33ff 	mov.w	r3, #4294967295
    edb0:	61bb      	str	r3, [r7, #24]
	goto lblEnd;
    edb2:	e000      	b.n	edb6 <GoalDspPicture+0x28e>
		if (iRet == RES_VALID_STATUS)
			iRet=GL_KEY_VALID;
		if (iRet == RES_CANCEL_STATUS)
			iRet=GL_KEY_CANCEL;
	}
	goto lblEnd;
    edb4:	bf00      	nop
lblKO:                                                  // Display picture failed
	iRet=-1;
	goto lblEnd;
lblEnd:
	return iRet;
    edb6:	69bb      	ldr	r3, [r7, #24]
}
    edb8:	4618      	mov	r0, r3
    edba:	f644 1380 	movw	r3, #18816	; 0x4980
    edbe:	f2c0 0302 	movt	r3, #2
    edc2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    edc4:	681b      	ldr	r3, [r3, #0]
    edc6:	429a      	cmp	r2, r3
    edc8:	d001      	beq.n	edce <GoalDspPicture+0x2a6>
    edca:	f7fa f891 	bl	8ef0 <__stack_chk_fail>
    edce:	f107 072c 	add.w	r7, r7, #44	; 0x2c
    edd2:	46bd      	mov	sp, r7
    edd4:	bd90      	pop	{r4, r7, pc}
    edd6:	bf00      	nop

0000edd8 <GoalDestroyPicture>:
//   phWindow (I-) : Pointer on window context handle.
// This function has no return value.
//****************************************************************************

void GoalDestroyPicture(T_GL_HWIDGET *phWindow)
{
    edd8:	b580      	push	{r7, lr}
    edda:	b084      	sub	sp, #16
    eddc:	af00      	add	r7, sp, #0
    edde:	6078      	str	r0, [r7, #4]
    ede0:	f644 1380 	movw	r3, #18816	; 0x4980
    ede4:	f2c0 0302 	movt	r3, #2
    ede8:	681b      	ldr	r3, [r3, #0]
    edea:	60fb      	str	r3, [r7, #12]
    // ***************
		// Empty

	// Destroy screen
	// **************
	GL_Widget_Destroy(*phWindow); // Destroy window with all widgets attached
    edec:	687b      	ldr	r3, [r7, #4]
    edee:	681b      	ldr	r3, [r3, #0]
    edf0:	4618      	mov	r0, r3
    edf2:	f009 fe11 	bl	18a18 <GL_Widget_Destroy>
	*phWindow=NULL;
    edf6:	687b      	ldr	r3, [r7, #4]
    edf8:	2200      	movs	r2, #0
    edfa:	601a      	str	r2, [r3, #0]
}
    edfc:	f644 1380 	movw	r3, #18816	; 0x4980
    ee00:	f2c0 0302 	movt	r3, #2
    ee04:	68fa      	ldr	r2, [r7, #12]
    ee06:	681b      	ldr	r3, [r3, #0]
    ee08:	429a      	cmp	r2, r3
    ee0a:	d001      	beq.n	ee10 <GoalDestroyPicture+0x38>
    ee0c:	f7fa f870 	bl	8ef0 <__stack_chk_fail>
    ee10:	f107 0710 	add.w	r7, r7, #16
    ee14:	46bd      	mov	sp, r7
    ee16:	bd80      	pop	{r7, pc}

0000ee18 <GoalCreateDocument>:
//   !NULL : Pointer to the handle of the document.
//   NULL : Document failed
//****************************************************************************

T_GL_HWIDGET GoalCreateDocument (T_GL_HGRAPHIC_LIB hGraphicLib, T_GL_ENCODING_CHARSET eCharSet)
{
    ee18:	b580      	push	{r7, lr}
    ee1a:	b086      	sub	sp, #24
    ee1c:	af00      	add	r7, sp, #0
    ee1e:	6078      	str	r0, [r7, #4]
    ee20:	6039      	str	r1, [r7, #0]
    ee22:	f644 1380 	movw	r3, #18816	; 0x4980
    ee26:	f2c0 0302 	movt	r3, #2
    ee2a:	681b      	ldr	r3, [r3, #0]
    ee2c:	617b      	str	r3, [r7, #20]
    // ***************
	T_GL_HWIDGET hDocument, hLayout;

	// Build document context
	// **********************
	GL_GraphicLib_SetCharset(hGraphicLib, eCharSet);  // Changes the encoding charset of the graphic library
    ee2e:	6878      	ldr	r0, [r7, #4]
    ee30:	6839      	ldr	r1, [r7, #0]
    ee32:	f009 fd07 	bl	18844 <GL_GraphicLib_SetCharset>

	hDocument = GL_Document_Create(hGraphicLib);      // Create a document to print
    ee36:	6878      	ldr	r0, [r7, #4]
    ee38:	f009 fbda 	bl	185f0 <GL_Document_Create>
    ee3c:	60f8      	str	r0, [r7, #12]
	CHECK(hDocument!=NULL, lblEnd);
    ee3e:	68fb      	ldr	r3, [r7, #12]
    ee40:	2b00      	cmp	r3, #0
    ee42:	d015      	beq.n	ee70 <GoalCreateDocument+0x58>

	hLayout = GL_Layout_Create(hDocument);            // Create a layout on this document
    ee44:	68f8      	ldr	r0, [r7, #12]
    ee46:	f009 fd33 	bl	188b0 <GL_Layout_Create>
    ee4a:	6138      	str	r0, [r7, #16]
	CHECK(hLayout!=NULL, lblKO);
    ee4c:	693b      	ldr	r3, [r7, #16]
    ee4e:	2b00      	cmp	r3, #0
    ee50:	d005      	beq.n	ee5e <GoalCreateDocument+0x46>
	GL_Widget_SetId(hLayout, LAYOUT3_ID);             // Layout Identifier LAYOUT3_ID
    ee52:	6938      	ldr	r0, [r7, #16]
    ee54:	f44f 6110 	mov.w	r1, #2304	; 0x900
    ee58:	f009 feda 	bl	18c10 <GL_Widget_SetId>

	goto lblEnd;
    ee5c:	e008      	b.n	ee70 <GoalCreateDocument+0x58>

	// Errors treatment
    // ****************
lblKO:                                                // Document creation failed
	if (hDocument)
    ee5e:	68fb      	ldr	r3, [r7, #12]
    ee60:	2b00      	cmp	r3, #0
    ee62:	d004      	beq.n	ee6e <GoalCreateDocument+0x56>
	{
		GL_Widget_Destroy(hDocument);                 // Destroy document and all widgets
    ee64:	68f8      	ldr	r0, [r7, #12]
    ee66:	f009 fdd7 	bl	18a18 <GL_Widget_Destroy>
		hDocument=NULL;
    ee6a:	2300      	movs	r3, #0
    ee6c:	60fb      	str	r3, [r7, #12]
	}
	goto lblEnd;
    ee6e:	bf00      	nop
lblEnd:
	return hDocument;
    ee70:	68fb      	ldr	r3, [r7, #12]
}
    ee72:	4618      	mov	r0, r3
    ee74:	f644 1380 	movw	r3, #18816	; 0x4980
    ee78:	f2c0 0302 	movt	r3, #2
    ee7c:	697a      	ldr	r2, [r7, #20]
    ee7e:	681b      	ldr	r3, [r3, #0]
    ee80:	429a      	cmp	r2, r3
    ee82:	d001      	beq.n	ee88 <GoalCreateDocument+0x70>
    ee84:	f7fa f834 	bl	8ef0 <__stack_chk_fail>
    ee88:	f107 0718 	add.w	r7, r7, #24
    ee8c:	46bd      	mov	sp, r7
    ee8e:	bd80      	pop	{r7, pc}

0000ee90 <GoalPrnLine>:
//   >=0 : Build line done.
//   <0 : Build line failed.
//****************************************************************************

int GoalPrnLine(T_GL_HWIDGET hDocument, ushort usLine, char *pcText, const ST_PRN_LINE* pxLine)
{
    ee90:	b580      	push	{r7, lr}
    ee92:	b08c      	sub	sp, #48	; 0x30
    ee94:	af04      	add	r7, sp, #16
    ee96:	60f8      	str	r0, [r7, #12]
    ee98:	607a      	str	r2, [r7, #4]
    ee9a:	603b      	str	r3, [r7, #0]
    ee9c:	460b      	mov	r3, r1
    ee9e:	817b      	strh	r3, [r7, #10]
    eea0:	f644 1380 	movw	r3, #18816	; 0x4980
    eea4:	f2c0 0302 	movt	r3, #2
    eea8:	681b      	ldr	r3, [r3, #0]
    eeaa:	61fb      	str	r3, [r7, #28]
	// Local variables
    // ***************
	T_GL_HWIDGET hLayout, hPrint;
	int iRet=0;
    eeac:	2300      	movs	r3, #0
    eeae:	613b      	str	r3, [r7, #16]

	// Build line on document
	// **********************
	CHECK((pcText!=NULL) && (pxLine!=NULL), lblKO);
    eeb0:	687b      	ldr	r3, [r7, #4]
    eeb2:	2b00      	cmp	r3, #0
    eeb4:	f000 80c7 	beq.w	f046 <GoalPrnLine+0x1b6>
    eeb8:	683b      	ldr	r3, [r7, #0]
    eeba:	2b00      	cmp	r3, #0
    eebc:	f000 80c3 	beq.w	f046 <GoalPrnLine+0x1b6>
	CHECK(strlen(pcText)!=0, lblEnd);
    eec0:	687b      	ldr	r3, [r7, #4]
    eec2:	781b      	ldrb	r3, [r3, #0]
    eec4:	2b00      	cmp	r3, #0
    eec6:	f000 80c2 	beq.w	f04e <GoalPrnLine+0x1be>

	hLayout = GL_Widget_SearchId(hDocument, LAYOUT3_ID);      // Get layout from its id
    eeca:	68f8      	ldr	r0, [r7, #12]
    eecc:	f44f 6110 	mov.w	r1, #2304	; 0x900
    eed0:	f009 fdd8 	bl	18a84 <GL_Widget_SearchId>
    eed4:	6178      	str	r0, [r7, #20]
	CHECK(hLayout!=NULL, lblKO);
    eed6:	697b      	ldr	r3, [r7, #20]
    eed8:	2b00      	cmp	r3, #0
    eeda:	f000 80b4 	beq.w	f046 <GoalPrnLine+0x1b6>

	hPrint = GL_Print_Create(hLayout);                        // Create a print label designed to be printed on this layout
    eede:	6978      	ldr	r0, [r7, #20]
    eee0:	f009 fd52 	bl	18988 <GL_Print_Create>
    eee4:	61b8      	str	r0, [r7, #24]
	CHECK(hPrint!=NULL, lblKO);
    eee6:	69bb      	ldr	r3, [r7, #24]
    eee8:	2b00      	cmp	r3, #0
    eeea:	f000 80ac 	beq.w	f046 <GoalPrnLine+0x1b6>
	GL_Widget_SetItem(hPrint, 0, usLine);                     // Print label location on this layout
    eeee:	897b      	ldrh	r3, [r7, #10]
    eef0:	69b8      	ldr	r0, [r7, #24]
    eef2:	2100      	movs	r1, #0
    eef4:	461a      	mov	r2, r3
    eef6:	f009 fe9d 	bl	18c34 <GL_Widget_SetItem>
	GL_Widget_SetText(hPrint, "%s", pcText);                  // Print text (Add %s to allow '%' to be printed)
    eefa:	69b8      	ldr	r0, [r7, #24]
    eefc:	f649 5188 	movw	r1, #40328	; 0x9d88
    ef00:	f2c0 0101 	movt	r1, #1
    ef04:	687a      	ldr	r2, [r7, #4]
    ef06:	f009 ff13 	bl	18d30 <GL_Widget_SetText>
	GL_Widget_SetWrap(hPrint, true);                          // Set the wrap of text (Allows text to automatically return to the next line if it does not fit in width)
    ef0a:	69b8      	ldr	r0, [r7, #24]
    ef0c:	2101      	movs	r1, #1
    ef0e:	f009 ff69 	bl	18de4 <GL_Widget_SetWrap>
	GL_Widget_SetShrink(hPrint, GL_DIRECTION_WIDTH);          // Shrink beyond its size (No width scrolling cell if text goes over printer size)
    ef12:	69b8      	ldr	r0, [r7, #24]
    ef14:	2101      	movs	r1, #1
    ef16:	f009 fed5 	bl	18cc4 <GL_Widget_SetShrink>

	GL_Widget_SetTextAlign(hPrint, pxLine->eTextAlign);       // Text alignment
    ef1a:	683b      	ldr	r3, [r7, #0]
    ef1c:	681b      	ldr	r3, [r3, #0]
    ef1e:	69b8      	ldr	r0, [r7, #24]
    ef20:	4619      	mov	r1, r3
    ef22:	f009 ff17 	bl	18d54 <GL_Widget_SetTextAlign>
	GL_Widget_SetBackAlign(hPrint, pxLine->eBackAlign);       // Background alignment
    ef26:	683b      	ldr	r3, [r7, #0]
    ef28:	685b      	ldr	r3, [r3, #4]
    ef2a:	69b8      	ldr	r0, [r7, #24]
    ef2c:	4619      	mov	r1, r3
    ef2e:	f009 fdbb 	bl	18aa8 <GL_Widget_SetBackAlign>
	if (pxLine->usSizeWidth < 99)                             // Background size
    ef32:	683b      	ldr	r3, [r7, #0]
    ef34:	68db      	ldr	r3, [r3, #12]
    ef36:	2b62      	cmp	r3, #98	; 0x62
    ef38:	d808      	bhi.n	ef4c <GoalPrnLine+0xbc>
		GL_Widget_SetMinSize(hPrint, pxLine->usSizeWidth, 0, GL_UNIT_PERCENT); // The size
    ef3a:	683b      	ldr	r3, [r7, #0]
    ef3c:	68db      	ldr	r3, [r3, #12]
    ef3e:	69b8      	ldr	r0, [r7, #24]
    ef40:	4619      	mov	r1, r3
    ef42:	2200      	movs	r2, #0
    ef44:	2301      	movs	r3, #1
    ef46:	f009 fe99 	bl	18c7c <GL_Widget_SetMinSize>
    ef4a:	e003      	b.n	ef54 <GoalPrnLine+0xc4>
	else
		GL_Widget_SetExpand(hPrint, GL_DIRECTION_WIDTH);                       // Full size
    ef4c:	69b8      	ldr	r0, [r7, #24]
    ef4e:	2101      	movs	r1, #1
    ef50:	f009 fde0 	bl	18b14 <GL_Widget_SetExpand>
	if (!pxLine->bReverse)                                    // Reverse mode?
    ef54:	683b      	ldr	r3, [r7, #0]
    ef56:	7a1b      	ldrb	r3, [r3, #8]
    ef58:	f083 0301 	eor.w	r3, r3, #1
    ef5c:	b2db      	uxtb	r3, r3
    ef5e:	2b00      	cmp	r3, #0
    ef60:	d00a      	beq.n	ef78 <GoalPrnLine+0xe8>
	{                                                         // No
		GL_Widget_SetForeColor(hPrint, GL_COLOR_BLACK);       // Force pen color to black and brush color to white
    ef62:	69b8      	ldr	r0, [r7, #24]
    ef64:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    ef68:	f009 fe2e 	bl	18bc8 <GL_Widget_SetForeColor>
		GL_Widget_SetBackColor(hPrint, GL_COLOR_WHITE);
    ef6c:	69b8      	ldr	r0, [r7, #24]
    ef6e:	f04f 31ff 	mov.w	r1, #4294967295
    ef72:	f009 fdab 	bl	18acc <GL_Widget_SetBackColor>
    ef76:	e009      	b.n	ef8c <GoalPrnLine+0xfc>
	}
	else
	{                                                         // Yes
		GL_Widget_SetForeColor(hPrint, GL_COLOR_WHITE);       // Force pen color to white and brush color to black
    ef78:	69b8      	ldr	r0, [r7, #24]
    ef7a:	f04f 31ff 	mov.w	r1, #4294967295
    ef7e:	f009 fe23 	bl	18bc8 <GL_Widget_SetForeColor>
		GL_Widget_SetBackColor(hPrint, GL_COLOR_BLACK);
    ef82:	69b8      	ldr	r0, [r7, #24]
    ef84:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    ef88:	f009 fda0 	bl	18acc <GL_Widget_SetBackColor>
	}
	                                                          // Padding, Border and Margin
	GL_Widget_SetTextPaddings(hPrint, pxLine->xPadding.usLeft, pxLine->xPadding.usTop, pxLine->xPadding.usRight, pxLine->xPadding.usBottom, GL_UNIT_PERCENT);
    ef8c:	683b      	ldr	r3, [r7, #0]
    ef8e:	6919      	ldr	r1, [r3, #16]
    ef90:	683b      	ldr	r3, [r7, #0]
    ef92:	695a      	ldr	r2, [r3, #20]
    ef94:	683b      	ldr	r3, [r7, #0]
    ef96:	699b      	ldr	r3, [r3, #24]
    ef98:	6838      	ldr	r0, [r7, #0]
    ef9a:	69c0      	ldr	r0, [r0, #28]
    ef9c:	9000      	str	r0, [sp, #0]
    ef9e:	2001      	movs	r0, #1
    efa0:	9001      	str	r0, [sp, #4]
    efa2:	69b8      	ldr	r0, [r7, #24]
    efa4:	f009 fee8 	bl	18d78 <GL_Widget_SetTextPaddings>
	if (pxLine->xBorder.ulColor != GL_COLOR_BLACK)            // Force border to black or white
    efa8:	683b      	ldr	r3, [r7, #0]
    efaa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    efac:	f1b3 4f7f 	cmp.w	r3, #4278190080	; 0xff000000
    efb0:	d011      	beq.n	efd6 <GoalPrnLine+0x146>
		GL_Widget_SetBorders(hPrint, pxLine->xBorder.usLeft, pxLine->xBorder.usTop, pxLine->xBorder.usRight, pxLine->xBorder.usBottom, GL_UNIT_PIXEL, GL_COLOR_WHITE);
    efb2:	683b      	ldr	r3, [r7, #0]
    efb4:	6a19      	ldr	r1, [r3, #32]
    efb6:	683b      	ldr	r3, [r7, #0]
    efb8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    efba:	683b      	ldr	r3, [r7, #0]
    efbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    efbe:	6838      	ldr	r0, [r7, #0]
    efc0:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
    efc2:	9000      	str	r0, [sp, #0]
    efc4:	2000      	movs	r0, #0
    efc6:	9001      	str	r0, [sp, #4]
    efc8:	f04f 30ff 	mov.w	r0, #4294967295
    efcc:	9002      	str	r0, [sp, #8]
    efce:	69b8      	ldr	r0, [r7, #24]
    efd0:	f009 fd8e 	bl	18af0 <GL_Widget_SetBorders>
    efd4:	e010      	b.n	eff8 <GoalPrnLine+0x168>
	else
		GL_Widget_SetBorders(hPrint, pxLine->xBorder.usLeft, pxLine->xBorder.usTop, pxLine->xBorder.usRight, pxLine->xBorder.usBottom, GL_UNIT_PIXEL, GL_COLOR_BLACK);
    efd6:	683b      	ldr	r3, [r7, #0]
    efd8:	6a19      	ldr	r1, [r3, #32]
    efda:	683b      	ldr	r3, [r7, #0]
    efdc:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    efde:	683b      	ldr	r3, [r7, #0]
    efe0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    efe2:	6838      	ldr	r0, [r7, #0]
    efe4:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
    efe6:	9000      	str	r0, [sp, #0]
    efe8:	2000      	movs	r0, #0
    efea:	9001      	str	r0, [sp, #4]
    efec:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
    eff0:	9002      	str	r0, [sp, #8]
    eff2:	69b8      	ldr	r0, [r7, #24]
    eff4:	f009 fd7c 	bl	18af0 <GL_Widget_SetBorders>
	GL_Widget_SetMargins(hPrint, pxLine->xMargin.usLeft, pxLine->xMargin.usTop, pxLine->xMargin.usRight, pxLine->xMargin.usBottom, GL_UNIT_PIXEL);
    eff8:	683b      	ldr	r3, [r7, #0]
    effa:	6b59      	ldr	r1, [r3, #52]	; 0x34
    effc:	683b      	ldr	r3, [r7, #0]
    effe:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    f000:	683b      	ldr	r3, [r7, #0]
    f002:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    f004:	6838      	ldr	r0, [r7, #0]
    f006:	6c00      	ldr	r0, [r0, #64]	; 0x40
    f008:	9000      	str	r0, [sp, #0]
    f00a:	2000      	movs	r0, #0
    f00c:	9001      	str	r0, [sp, #4]
    f00e:	69b8      	ldr	r0, [r7, #24]
    f010:	f009 fe22 	bl	18c58 <GL_Widget_SetMargins>
	if (pxLine->xFont.pcName != NULL)
    f014:	683b      	ldr	r3, [r7, #0]
    f016:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    f018:	2b00      	cmp	r3, #0
    f01a:	d005      	beq.n	f028 <GoalPrnLine+0x198>
		GL_Widget_SetFontName(hPrint, pxLine->xFont.pcName);  // Font name
    f01c:	683b      	ldr	r3, [r7, #0]
    f01e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    f020:	69b8      	ldr	r0, [r7, #24]
    f022:	4619      	mov	r1, r3
    f024:	f009 fd9a 	bl	18b5c <GL_Widget_SetFontName>
	GL_Widget_SetFontScale(hPrint, pxLine->xFont.eScale);     // Font scale
    f028:	683b      	ldr	r3, [r7, #0]
    f02a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    f02c:	69b8      	ldr	r0, [r7, #24]
    f02e:	4619      	mov	r1, r3
    f030:	f009 fda6 	bl	18b80 <GL_Widget_SetFontScale>
	GL_Widget_SetFontStyle(hPrint, pxLine->xFont.eStyle);     // Font style
    f034:	683b      	ldr	r3, [r7, #0]
    f036:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    f038:	69b8      	ldr	r0, [r7, #24]
    f03a:	4619      	mov	r1, r3
    f03c:	f009 fdb2 	bl	18ba4 <GL_Widget_SetFontStyle>

	iRet=1;
    f040:	2301      	movs	r3, #1
    f042:	613b      	str	r3, [r7, #16]
	goto lblEnd;
    f044:	e003      	b.n	f04e <GoalPrnLine+0x1be>

	// Errors treatment
    // ****************
lblKO:                                                        // Build line on document failed
	iRet=-1;
    f046:	f04f 33ff 	mov.w	r3, #4294967295
    f04a:	613b      	str	r3, [r7, #16]
	goto lblEnd;
    f04c:	bf00      	nop
lblEnd:
	return iRet;
    f04e:	693b      	ldr	r3, [r7, #16]
}
    f050:	4618      	mov	r0, r3
    f052:	f644 1380 	movw	r3, #18816	; 0x4980
    f056:	f2c0 0302 	movt	r3, #2
    f05a:	69fa      	ldr	r2, [r7, #28]
    f05c:	681b      	ldr	r3, [r3, #0]
    f05e:	429a      	cmp	r2, r3
    f060:	d001      	beq.n	f066 <GoalPrnLine+0x1d6>
    f062:	f7f9 ff45 	bl	8ef0 <__stack_chk_fail>
    f066:	f107 0720 	add.w	r7, r7, #32
    f06a:	46bd      	mov	sp, r7
    f06c:	bd80      	pop	{r7, pc}
    f06e:	bf00      	nop

0000f070 <GoalPrnMultiLine>:
//    >=0 : Build buffer done.
//    <0 : Build buffer failed.
//****************************************************************************

int GoalPrnMultiLine(T_GL_HWIDGET hDocument, ushort usLine, ushort usSize, char *pcData , ushort usLen, const ST_PRN_LINE* pxLine)
{
    f070:	b590      	push	{r4, r7, lr}
    f072:	f2ad 4d2c 	subw	sp, sp, #1068	; 0x42c
    f076:	af00      	add	r7, sp, #0
    f078:	f107 0414 	add.w	r4, r7, #20
    f07c:	6020      	str	r0, [r4, #0]
    f07e:	460c      	mov	r4, r1
    f080:	4610      	mov	r0, r2
    f082:	f107 020c 	add.w	r2, r7, #12
    f086:	6013      	str	r3, [r2, #0]
    f088:	f107 020a 	add.w	r2, r7, #10
    f08c:	1d3b      	adds	r3, r7, #4
    f08e:	f107 0112 	add.w	r1, r7, #18
    f092:	800c      	strh	r4, [r1, #0]
    f094:	f107 0110 	add.w	r1, r7, #16
    f098:	8008      	strh	r0, [r1, #0]
    f09a:	f8b7 1438 	ldrh.w	r1, [r7, #1080]	; 0x438
    f09e:	8011      	strh	r1, [r2, #0]
    f0a0:	f8d7 243c 	ldr.w	r2, [r7, #1084]	; 0x43c
    f0a4:	601a      	str	r2, [r3, #0]
    f0a6:	f644 1380 	movw	r3, #18816	; 0x4980
    f0aa:	f2c0 0302 	movt	r3, #2
    f0ae:	681b      	ldr	r3, [r3, #0]
    f0b0:	f8c7 3424 	str.w	r3, [r7, #1060]	; 0x424
	// Local variables
    // ***************
	ushort usIdx=0;
    f0b4:	f107 0318 	add.w	r3, r7, #24
    f0b8:	2200      	movs	r2, #0
    f0ba:	801a      	strh	r2, [r3, #0]
	ushort usCount=0;
    f0bc:	f107 031a 	add.w	r3, r7, #26
    f0c0:	2200      	movs	r2, #0
    f0c2:	801a      	strh	r2, [r3, #0]
	char tcBuffer[1024+1];
	int iRet=-1;
    f0c4:	f107 031c 	add.w	r3, r7, #28
    f0c8:	f04f 32ff 	mov.w	r2, #4294967295
    f0cc:	601a      	str	r2, [r3, #0]

	// Build document in progress
	// **************************
	CHECK ((pcData!=NULL) && (usLen>=0), lblKO)
    f0ce:	f107 030c 	add.w	r3, r7, #12
    f0d2:	681b      	ldr	r3, [r3, #0]
    f0d4:	2b00      	cmp	r3, #0
    f0d6:	d07d      	beq.n	f1d4 <GoalPrnMultiLine+0x164>

	memset(tcBuffer, 0, sizeof(tcBuffer));
    f0d8:	f107 0320 	add.w	r3, r7, #32
    f0dc:	4618      	mov	r0, r3
    f0de:	2100      	movs	r1, #0
    f0e0:	f240 4201 	movw	r2, #1025	; 0x401
    f0e4:	f7f9 ed22 	blx	8b2c <_init+0x5c>
	while(1)
	{
		if (usLen > 0)                 // Check if it is the end of data
    f0e8:	f107 030a 	add.w	r3, r7, #10
    f0ec:	881b      	ldrh	r3, [r3, #0]
    f0ee:	2b00      	cmp	r3, #0
    f0f0:	d04c      	beq.n	f18c <GoalPrnMultiLine+0x11c>
		{                              // No, it's a line with '\n' detected
			if (usCount < usSize)      // Save character into buffer
    f0f2:	f107 021a 	add.w	r2, r7, #26
    f0f6:	f107 0310 	add.w	r3, r7, #16
    f0fa:	8812      	ldrh	r2, [r2, #0]
    f0fc:	881b      	ldrh	r3, [r3, #0]
    f0fe:	429a      	cmp	r2, r3
    f100:	d231      	bcs.n	f166 <GoalPrnMultiLine+0xf6>
			{
				if (*pcData == '\n')
    f102:	f107 030c 	add.w	r3, r7, #12
    f106:	681b      	ldr	r3, [r3, #0]
    f108:	781b      	ldrb	r3, [r3, #0]
    f10a:	2b0a      	cmp	r3, #10
    f10c:	d104      	bne.n	f118 <GoalPrnMultiLine+0xa8>
					usCount=0;
    f10e:	f107 031a 	add.w	r3, r7, #26
    f112:	2200      	movs	r2, #0
    f114:	801a      	strh	r2, [r3, #0]
    f116:	e006      	b.n	f126 <GoalPrnMultiLine+0xb6>
				else
					usCount++;
    f118:	f107 031a 	add.w	r3, r7, #26
    f11c:	f107 021a 	add.w	r2, r7, #26
    f120:	8812      	ldrh	r2, [r2, #0]
    f122:	3201      	adds	r2, #1
    f124:	801a      	strh	r2, [r3, #0]
				tcBuffer[usIdx++] = *pcData++;
    f126:	f107 0318 	add.w	r3, r7, #24
    f12a:	881b      	ldrh	r3, [r3, #0]
    f12c:	f107 020c 	add.w	r2, r7, #12
    f130:	6812      	ldr	r2, [r2, #0]
    f132:	7811      	ldrb	r1, [r2, #0]
    f134:	f107 0220 	add.w	r2, r7, #32
    f138:	54d1      	strb	r1, [r2, r3]
    f13a:	f107 0318 	add.w	r3, r7, #24
    f13e:	f107 0218 	add.w	r2, r7, #24
    f142:	8812      	ldrh	r2, [r2, #0]
    f144:	3201      	adds	r2, #1
    f146:	801a      	strh	r2, [r3, #0]
    f148:	f107 030c 	add.w	r3, r7, #12
    f14c:	f107 020c 	add.w	r2, r7, #12
    f150:	6812      	ldr	r2, [r2, #0]
    f152:	3201      	adds	r2, #1
    f154:	601a      	str	r2, [r3, #0]
				usLen--;
    f156:	f107 030a 	add.w	r3, r7, #10
    f15a:	f107 020a 	add.w	r2, r7, #10
    f15e:	8812      	ldrh	r2, [r2, #0]
    f160:	3a01      	subs	r2, #1
    f162:	801a      	strh	r2, [r3, #0]
		{                              // Yes, it's the end of data
			if (usLen != 0)
				tcBuffer[usIdx++] = '\n';
			break;                     // Exit from the loop
		}
	}
    f164:	e7c0      	b.n	f0e8 <GoalPrnMultiLine+0x78>
				tcBuffer[usIdx++] = *pcData++;
				usLen--;
			}
			else                       // Bloc detected
			{
				tcBuffer[usIdx++] = '\n';
    f166:	f107 0318 	add.w	r3, r7, #24
    f16a:	881b      	ldrh	r3, [r3, #0]
    f16c:	f107 0220 	add.w	r2, r7, #32
    f170:	210a      	movs	r1, #10
    f172:	54d1      	strb	r1, [r2, r3]
    f174:	f107 0318 	add.w	r3, r7, #24
    f178:	f107 0218 	add.w	r2, r7, #24
    f17c:	8812      	ldrh	r2, [r2, #0]
    f17e:	3201      	adds	r2, #1
    f180:	801a      	strh	r2, [r3, #0]
				usCount=0;
    f182:	f107 031a 	add.w	r3, r7, #26
    f186:	2200      	movs	r2, #0
    f188:	801a      	strh	r2, [r3, #0]
		{                              // Yes, it's the end of data
			if (usLen != 0)
				tcBuffer[usIdx++] = '\n';
			break;                     // Exit from the loop
		}
	}
    f18a:	e7ad      	b.n	f0e8 <GoalPrnMultiLine+0x78>
				usCount=0;
			}
		}
		else
		{                              // Yes, it's the end of data
			if (usLen != 0)
    f18c:	f107 030a 	add.w	r3, r7, #10
    f190:	881b      	ldrh	r3, [r3, #0]
    f192:	2b00      	cmp	r3, #0
    f194:	d00d      	beq.n	f1b2 <GoalPrnMultiLine+0x142>
				tcBuffer[usIdx++] = '\n';
    f196:	f107 0318 	add.w	r3, r7, #24
    f19a:	881b      	ldrh	r3, [r3, #0]
    f19c:	f107 0220 	add.w	r2, r7, #32
    f1a0:	210a      	movs	r1, #10
    f1a2:	54d1      	strb	r1, [r2, r3]
    f1a4:	f107 0318 	add.w	r3, r7, #24
    f1a8:	f107 0218 	add.w	r2, r7, #24
    f1ac:	8812      	ldrh	r2, [r2, #0]
    f1ae:	3201      	adds	r2, #1
    f1b0:	801a      	strh	r2, [r3, #0]
			break;                     // Exit from the loop
    f1b2:	bf00      	nop
		}
	}
                                       // Send line to the document
	iRet = GoalPrnLine(hDocument, usLine, tcBuffer, pxLine);
    f1b4:	f107 041c 	add.w	r4, r7, #28
    f1b8:	f107 0014 	add.w	r0, r7, #20
    f1bc:	f107 0312 	add.w	r3, r7, #18
    f1c0:	8819      	ldrh	r1, [r3, #0]
    f1c2:	f107 0220 	add.w	r2, r7, #32
    f1c6:	1d3b      	adds	r3, r7, #4
    f1c8:	6800      	ldr	r0, [r0, #0]
    f1ca:	681b      	ldr	r3, [r3, #0]
    f1cc:	f7ff fe60 	bl	ee90 <GoalPrnLine>
    f1d0:	6020      	str	r0, [r4, #0]

	goto lblEnd;
    f1d2:	e005      	b.n	f1e0 <GoalPrnMultiLine+0x170>

	// Errors treatment
    // ****************
lblKO:                                 // Build buffer failed.
	iRet=-1;
    f1d4:	f107 031c 	add.w	r3, r7, #28
    f1d8:	f04f 32ff 	mov.w	r2, #4294967295
    f1dc:	601a      	str	r2, [r3, #0]
	goto lblEnd;
    f1de:	bf00      	nop
lblEnd:
	return iRet;
    f1e0:	f107 031c 	add.w	r3, r7, #28
    f1e4:	681b      	ldr	r3, [r3, #0]
}
    f1e6:	4618      	mov	r0, r3
    f1e8:	f644 1380 	movw	r3, #18816	; 0x4980
    f1ec:	f2c0 0302 	movt	r3, #2
    f1f0:	f8d7 2424 	ldr.w	r2, [r7, #1060]	; 0x424
    f1f4:	681b      	ldr	r3, [r3, #0]
    f1f6:	429a      	cmp	r2, r3
    f1f8:	d001      	beq.n	f1fe <GoalPrnMultiLine+0x18e>
    f1fa:	f7f9 fe79 	bl	8ef0 <__stack_chk_fail>
    f1fe:	f107 072c 	add.w	r7, r7, #44	; 0x2c
    f202:	f507 6780 	add.w	r7, r7, #1024	; 0x400
    f206:	46bd      	mov	sp, r7
    f208:	bd90      	pop	{r4, r7, pc}
    f20a:	bf00      	nop

0000f20c <GoalPrnPicture>:
//   >=0 : Build picture done.
//   <0 : Build picture failed.
//****************************************************************************

int GoalPrnPicture(T_GL_HWIDGET hDocument, ushort usLine, const char* pcPicture, const ST_BORDER* pxBorder)
{
    f20c:	b590      	push	{r4, r7, lr}
    f20e:	b08d      	sub	sp, #52	; 0x34
    f210:	af04      	add	r7, sp, #16
    f212:	60f8      	str	r0, [r7, #12]
    f214:	607a      	str	r2, [r7, #4]
    f216:	603b      	str	r3, [r7, #0]
    f218:	460b      	mov	r3, r1
    f21a:	817b      	strh	r3, [r7, #10]
    f21c:	f644 1380 	movw	r3, #18816	; 0x4980
    f220:	f2c0 0302 	movt	r3, #2
    f224:	681b      	ldr	r3, [r3, #0]
    f226:	61fb      	str	r3, [r7, #28]
	T_GL_HWIDGET hLayout, hPrint;
	int iRet;

	// Build picture on document
	// *************************
	hLayout = GL_Widget_SearchId(hDocument, LAYOUT3_ID);    // Get layout from its id
    f228:	68f8      	ldr	r0, [r7, #12]
    f22a:	f44f 6110 	mov.w	r1, #2304	; 0x900
    f22e:	f009 fc29 	bl	18a84 <GL_Widget_SearchId>
    f232:	6178      	str	r0, [r7, #20]
	CHECK(hLayout!=NULL, lblKO);
    f234:	697b      	ldr	r3, [r7, #20]
    f236:	2b00      	cmp	r3, #0
    f238:	d028      	beq.n	f28c <GoalPrnPicture+0x80>

	hPrint = GL_Picture_Create(hLayout);                    // Create a picture designed to be printed on this layout
    f23a:	6978      	ldr	r0, [r7, #20]
    f23c:	f009 fb92 	bl	18964 <GL_Picture_Create>
    f240:	61b8      	str	r0, [r7, #24]
	CHECK(hPrint!=NULL, lblKO);
    f242:	69bb      	ldr	r3, [r7, #24]
    f244:	2b00      	cmp	r3, #0
    f246:	d021      	beq.n	f28c <GoalPrnPicture+0x80>
	GL_Widget_SetItem(hPrint, 0, usLine);                   // Picture location on this layout
    f248:	897b      	ldrh	r3, [r7, #10]
    f24a:	69b8      	ldr	r0, [r7, #24]
    f24c:	2100      	movs	r1, #0
    f24e:	461a      	mov	r2, r3
    f250:	f009 fcf0 	bl	18c34 <GL_Widget_SetItem>
	GL_Widget_SetSource(hPrint, pcPicture);                 // The picture to print
    f254:	69b8      	ldr	r0, [r7, #24]
    f256:	6879      	ldr	r1, [r7, #4]
    f258:	f009 fd58 	bl	18d0c <GL_Widget_SetSource>

	GL_Widget_SetShrink(hPrint, GL_DIRECTION_WIDTH);        // Shrink beyond its size (Picture shrinks automatically if picture goes over printer size)
    f25c:	69b8      	ldr	r0, [r7, #24]
    f25e:	2101      	movs	r1, #1
    f260:	f009 fd30 	bl	18cc4 <GL_Widget_SetShrink>
	                                                        // Border around the picture
	GL_Widget_SetBorders(hPrint, pxBorder->usLeft, pxBorder->usTop, pxBorder->usRight, pxBorder->usBottom, GL_UNIT_PIXEL, pxBorder->ulColor);
    f264:	683b      	ldr	r3, [r7, #0]
    f266:	6819      	ldr	r1, [r3, #0]
    f268:	683b      	ldr	r3, [r7, #0]
    f26a:	685a      	ldr	r2, [r3, #4]
    f26c:	683b      	ldr	r3, [r7, #0]
    f26e:	689b      	ldr	r3, [r3, #8]
    f270:	6838      	ldr	r0, [r7, #0]
    f272:	68c4      	ldr	r4, [r0, #12]
    f274:	6838      	ldr	r0, [r7, #0]
    f276:	6900      	ldr	r0, [r0, #16]
    f278:	9400      	str	r4, [sp, #0]
    f27a:	2400      	movs	r4, #0
    f27c:	9401      	str	r4, [sp, #4]
    f27e:	9002      	str	r0, [sp, #8]
    f280:	69b8      	ldr	r0, [r7, #24]
    f282:	f009 fc35 	bl	18af0 <GL_Widget_SetBorders>

	iRet=1;
    f286:	2301      	movs	r3, #1
    f288:	613b      	str	r3, [r7, #16]
	goto lblEnd;
    f28a:	e003      	b.n	f294 <GoalPrnPicture+0x88>

	// Errors treatment
    // ****************
lblKO:                                                      // Build picture failed.
	iRet=-1;
    f28c:	f04f 33ff 	mov.w	r3, #4294967295
    f290:	613b      	str	r3, [r7, #16]
	goto lblEnd;
    f292:	bf00      	nop
lblEnd:
	return iRet;
    f294:	693b      	ldr	r3, [r7, #16]
}
    f296:	4618      	mov	r0, r3
    f298:	f644 1380 	movw	r3, #18816	; 0x4980
    f29c:	f2c0 0302 	movt	r3, #2
    f2a0:	69fa      	ldr	r2, [r7, #28]
    f2a2:	681b      	ldr	r3, [r3, #0]
    f2a4:	429a      	cmp	r2, r3
    f2a6:	d001      	beq.n	f2ac <GoalPrnPicture+0xa0>
    f2a8:	f7f9 fe22 	bl	8ef0 <__stack_chk_fail>
    f2ac:	f107 0724 	add.w	r7, r7, #36	; 0x24
    f2b0:	46bd      	mov	sp, r7
    f2b2:	bd90      	pop	{r4, r7, pc}

0000f2b4 <GoalPrnDocument>:
//   >=0 : Print document done.
//   <0 : Print document failed.
//****************************************************************************

int GoalPrnDocument(T_GL_HWIDGET hDocument)
{
    f2b4:	b580      	push	{r7, lr}
    f2b6:	b086      	sub	sp, #24
    f2b8:	af00      	add	r7, sp, #0
    f2ba:	6078      	str	r0, [r7, #4]
    f2bc:	f644 1380 	movw	r3, #18816	; 0x4980
    f2c0:	f2c0 0302 	movt	r3, #2
    f2c4:	681b      	ldr	r3, [r3, #0]
    f2c6:	617b      	str	r3, [r7, #20]
	// Local variables
    // ***************
	T_GL_ERROR_CODE eRet;
	int iRet=-1;
    f2c8:	f04f 33ff 	mov.w	r3, #4294967295
    f2cc:	60fb      	str	r3, [r7, #12]

	// Printing in progress
	// ********************
	eRet = GL_Document_Print(hDocument, 0);
    f2ce:	6878      	ldr	r0, [r7, #4]
    f2d0:	2100      	movs	r1, #0
    f2d2:	f009 f99f 	bl	18614 <GL_Document_Print>
    f2d6:	6138      	str	r0, [r7, #16]
	if ((eRet == GL_SUCCESS) || !IsPrinter())
    f2d8:	693b      	ldr	r3, [r7, #16]
    f2da:	2b00      	cmp	r3, #0
    f2dc:	d004      	beq.n	f2e8 <GoalPrnDocument+0x34>
    f2de:	f008 faa1 	bl	17824 <IsPrinter>
    f2e2:	4603      	mov	r3, r0
    f2e4:	2b00      	cmp	r3, #0
    f2e6:	d101      	bne.n	f2ec <GoalPrnDocument+0x38>
		iRet=1;
    f2e8:	2301      	movs	r3, #1
    f2ea:	60fb      	str	r3, [r7, #12]

	return iRet;
    f2ec:	68fb      	ldr	r3, [r7, #12]
}
    f2ee:	4618      	mov	r0, r3
    f2f0:	f644 1380 	movw	r3, #18816	; 0x4980
    f2f4:	f2c0 0302 	movt	r3, #2
    f2f8:	697a      	ldr	r2, [r7, #20]
    f2fa:	681b      	ldr	r3, [r3, #0]
    f2fc:	429a      	cmp	r2, r3
    f2fe:	d001      	beq.n	f304 <GoalPrnDocument+0x50>
    f300:	f7f9 fdf6 	bl	8ef0 <__stack_chk_fail>
    f304:	f107 0718 	add.w	r7, r7, #24
    f308:	46bd      	mov	sp, r7
    f30a:	bd80      	pop	{r7, pc}

0000f30c <GoalDestroyDocument>:
//   phDocument (I-) : Pointer on document context handle.
// This function has no return value.
//****************************************************************************

void GoalDestroyDocument(T_GL_HWIDGET *phDocument)
{
    f30c:	b580      	push	{r7, lr}
    f30e:	b084      	sub	sp, #16
    f310:	af00      	add	r7, sp, #0
    f312:	6078      	str	r0, [r7, #4]
    f314:	f644 1380 	movw	r3, #18816	; 0x4980
    f318:	f2c0 0302 	movt	r3, #2
    f31c:	681b      	ldr	r3, [r3, #0]
    f31e:	60fb      	str	r3, [r7, #12]
    // ***************
		// Empty

	// Destroy document
	// ****************
	GL_Widget_Destroy(*phDocument); // Destroy document with all widgets attached
    f320:	687b      	ldr	r3, [r7, #4]
    f322:	681b      	ldr	r3, [r3, #0]
    f324:	4618      	mov	r0, r3
    f326:	f009 fb77 	bl	18a18 <GL_Widget_Destroy>
	*phDocument=NULL;
    f32a:	687b      	ldr	r3, [r7, #4]
    f32c:	2200      	movs	r2, #0
    f32e:	601a      	str	r2, [r3, #0]
}
    f330:	f644 1380 	movw	r3, #18816	; 0x4980
    f334:	f2c0 0302 	movt	r3, #2
    f338:	68fa      	ldr	r2, [r7, #12]
    f33a:	681b      	ldr	r3, [r3, #0]
    f33c:	429a      	cmp	r2, r3
    f33e:	d001      	beq.n	f344 <GoalDestroyDocument+0x38>
    f340:	f7f9 fdd6 	bl	8ef0 <__stack_chk_fail>
    f344:	f107 0710 	add.w	r7, r7, #16
    f348:	46bd      	mov	sp, r7
    f34a:	bd80      	pop	{r7, pc}

0000f34c <getAppCmpDat>:
#include "VGE_FMG.H"

//****************************************************************************
//      EXTERN                                                              
//****************************************************************************
const char *getAppCmpDat(void){ return __DATE__;} // Return the date of compilation of the file Mapapp.c
    f34c:	b580      	push	{r7, lr}
    f34e:	b082      	sub	sp, #8
    f350:	af00      	add	r7, sp, #0
    f352:	f644 1380 	movw	r3, #18816	; 0x4980
    f356:	f2c0 0302 	movt	r3, #2
    f35a:	681b      	ldr	r3, [r3, #0]
    f35c:	607b      	str	r3, [r7, #4]
    f35e:	f649 5398 	movw	r3, #40344	; 0x9d98
    f362:	f2c0 0301 	movt	r3, #1
    f366:	4618      	mov	r0, r3
    f368:	f644 1380 	movw	r3, #18816	; 0x4980
    f36c:	f2c0 0302 	movt	r3, #2
    f370:	687a      	ldr	r2, [r7, #4]
    f372:	681b      	ldr	r3, [r3, #0]
    f374:	429a      	cmp	r2, r3
    f376:	d001      	beq.n	f37c <getAppCmpDat+0x30>
    f378:	f7f9 fdba 	bl	8ef0 <__stack_chk_fail>
    f37c:	f107 0708 	add.w	r7, r7, #8
    f380:	46bd      	mov	sp, r7
    f382:	bd80      	pop	{r7, pc}

0000f384 <getAppCmpTim>:
const char *getAppCmpTim(void){ return __TIME__;} // Return the time of compilation of the file Mapapp.c
    f384:	b580      	push	{r7, lr}
    f386:	b082      	sub	sp, #8
    f388:	af00      	add	r7, sp, #0
    f38a:	f644 1380 	movw	r3, #18816	; 0x4980
    f38e:	f2c0 0302 	movt	r3, #2
    f392:	681b      	ldr	r3, [r3, #0]
    f394:	607b      	str	r3, [r7, #4]
    f396:	f649 53a4 	movw	r3, #40356	; 0x9da4
    f39a:	f2c0 0301 	movt	r3, #1
    f39e:	4618      	mov	r0, r3
    f3a0:	f644 1380 	movw	r3, #18816	; 0x4980
    f3a4:	f2c0 0302 	movt	r3, #2
    f3a8:	687a      	ldr	r2, [r7, #4]
    f3aa:	681b      	ldr	r3, [r3, #0]
    f3ac:	429a      	cmp	r2, r3
    f3ae:	d001      	beq.n	f3b4 <getAppCmpTim+0x30>
    f3b0:	f7f9 fd9e 	bl	8ef0 <__stack_chk_fail>
    f3b4:	f107 0708 	add.w	r7, r7, #8
    f3b8:	46bd      	mov	sp, r7
    f3ba:	bd80      	pop	{r7, pc}

0000f3bc <appReset>:
//	 >=0 : Initialization done (size of bytes reseted).
//   <0  : Initialization failed (FMG failed).
//****************************************************************************

int appReset (void)
{
    f3bc:	b580      	push	{r7, lr}
    f3be:	b092      	sub	sp, #72	; 0x48
    f3c0:	af02      	add	r7, sp, #8
    f3c2:	f644 1380 	movw	r3, #18816	; 0x4980
    f3c6:	f2c0 0302 	movt	r3, #2
    f3ca:	681b      	ldr	r3, [r3, #0]
    f3cc:	63fb      	str	r3, [r7, #60]	; 0x3c
	// Local variables 
    // ***************
	FMG_t_file_info xFileInfo;
	word usIdx;
	int iByteNbr=0, iRet;
    f3ce:	2300      	movs	r3, #0
    f3d0:	60bb      	str	r3, [r7, #8]
	
    // Create "app" table
	// ******************
	iRet = FMG_CreateFile(PARAM_DISK, (char*)zAppTab, FMG_VARIABLE_LENGTH, FMG_WITH_CKECKSUM);
    f3d2:	f649 701c 	movw	r0, #40732	; 0x9f1c
    f3d6:	f2c0 0001 	movt	r0, #1
    f3da:	f649 7110 	movw	r1, #40720	; 0x9f10
    f3de:	f2c0 0101 	movt	r1, #1
    f3e2:	2201      	movs	r2, #1
    f3e4:	2301      	movs	r3, #1
    f3e6:	f005 fa6d 	bl	148c4 <FMG_CreateFile>
    f3ea:	60f8      	str	r0, [r7, #12]
    CHECK((iRet==FMG_SUCCESS)||(iRet==FMG_FILE_ALREADY_EXIST), lblKO);
    f3ec:	68fb      	ldr	r3, [r7, #12]
    f3ee:	2b0a      	cmp	r3, #10
    f3f0:	d002      	beq.n	f3f8 <appReset+0x3c>
    f3f2:	68fb      	ldr	r3, [r7, #12]
    f3f4:	2b0c      	cmp	r3, #12
    f3f6:	d177      	bne.n	f4e8 <appReset+0x12c>

    if (iRet==FMG_FILE_ALREADY_EXIST)                    // File already exist?
    f3f8:	68fb      	ldr	r3, [r7, #12]
    f3fa:	2b0c      	cmp	r3, #12
    f3fc:	d11d      	bne.n	f43a <appReset+0x7e>
    {
        iRet = FMG_DeleteFile(PARAM_DISK, (char*)zAppTab);
    f3fe:	f649 701c 	movw	r0, #40732	; 0x9f1c
    f402:	f2c0 0001 	movt	r0, #1
    f406:	f649 7110 	movw	r1, #40720	; 0x9f10
    f40a:	f2c0 0101 	movt	r1, #1
    f40e:	f005 fb3b 	bl	14a88 <FMG_DeleteFile>
    f412:	60f8      	str	r0, [r7, #12]
        CHECK(iRet==FMG_SUCCESS, lblKO);                 // Delete it
    f414:	68fb      	ldr	r3, [r7, #12]
    f416:	2b0a      	cmp	r3, #10
    f418:	d166      	bne.n	f4e8 <appReset+0x12c>
    	iRet = FMG_CreateFile(PARAM_DISK, (char*)zAppTab, FMG_VARIABLE_LENGTH, FMG_WITH_CKECKSUM);
    f41a:	f649 701c 	movw	r0, #40732	; 0x9f1c
    f41e:	f2c0 0001 	movt	r0, #1
    f422:	f649 7110 	movw	r1, #40720	; 0x9f10
    f426:	f2c0 0101 	movt	r1, #1
    f42a:	2201      	movs	r2, #1
    f42c:	2301      	movs	r3, #1
    f42e:	f005 fa49 	bl	148c4 <FMG_CreateFile>
    f432:	60f8      	str	r0, [r7, #12]
        CHECK(iRet==FMG_SUCCESS, lblKO);                 // Re-create it
    f434:	68fb      	ldr	r3, [r7, #12]
    f436:	2b0a      	cmp	r3, #10
    f438:	d156      	bne.n	f4e8 <appReset+0x12c>
    }

	// Reset "app" table
	// *****************
	xFileInfo.eCreationType = FMGPathAndName;            // File type with Path and Name
    f43a:	2300      	movs	r3, #0
    f43c:	613b      	str	r3, [r7, #16]
    strcpy((char*)xFileInfo.ucFilePath, PARAM_DISK);     // \PARAMDISK
    f43e:	f107 0310 	add.w	r3, r7, #16
    f442:	3304      	adds	r3, #4
    f444:	f649 721c 	movw	r2, #40732	; 0x9f1c
    f448:	f2c0 0201 	movt	r2, #1
    f44c:	ca07      	ldmia	r2, {r0, r1, r2}
    f44e:	c303      	stmia	r3!, {r0, r1}
    f450:	801a      	strh	r2, [r3, #0]
    strcpy((char*)xFileInfo.ucFileName, zAppTab);        // \appTab.par
    f452:	f649 7310 	movw	r3, #40720	; 0x9f10
    f456:	f2c0 0301 	movt	r3, #1
    f45a:	f107 0225 	add.w	r2, r7, #37	; 0x25
    f45e:	cb03      	ldmia	r3!, {r0, r1}
    f460:	6010      	str	r0, [r2, #0]
    f462:	6051      	str	r1, [r2, #4]
    f464:	8819      	ldrh	r1, [r3, #0]
    f466:	789b      	ldrb	r3, [r3, #2]
    f468:	8111      	strh	r1, [r2, #8]
    f46a:	7293      	strb	r3, [r2, #10]
    for (usIdx=0; usIdx<appEnd-appBeg; usIdx++)          // Build "app" table with parameters filled with default value
    f46c:	2300      	movs	r3, #0
    f46e:	80fb      	strh	r3, [r7, #6]
    f470:	e034      	b.n	f4dc <appReset+0x120>
	{
    	CHECK(tzApp[usIdx].usKey==usIdx+appBeg, lblKO);  // Check if it is the right key
    f472:	88fa      	ldrh	r2, [r7, #6]
    f474:	f649 6340 	movw	r3, #40512	; 0x9e40
    f478:	f2c0 0301 	movt	r3, #1
    f47c:	f833 3032 	ldrh.w	r3, [r3, r2, lsl #3]
    f480:	88fa      	ldrh	r2, [r7, #6]
    f482:	429a      	cmp	r2, r3
    f484:	d130      	bne.n	f4e8 <appReset+0x12c>

    	iByteNbr += (int)tzApp[usIdx].usLen;
    f486:	88fb      	ldrh	r3, [r7, #6]
    f488:	f649 6240 	movw	r2, #40512	; 0x9e40
    f48c:	f2c0 0201 	movt	r2, #1
    f490:	00db      	lsls	r3, r3, #3
    f492:	18d3      	adds	r3, r2, r3
    f494:	885b      	ldrh	r3, [r3, #2]
    f496:	68ba      	ldr	r2, [r7, #8]
    f498:	18d3      	adds	r3, r2, r3
    f49a:	60bb      	str	r3, [r7, #8]
    	iRet = FMG_AddRecord(&xFileInfo, tzApp[usIdx].pvDefault, (long)tzApp[usIdx].usLen, FMGMiddle, usIdx);
    f49c:	88fb      	ldrh	r3, [r7, #6]
    f49e:	f649 6240 	movw	r2, #40512	; 0x9e40
    f4a2:	f2c0 0201 	movt	r2, #1
    f4a6:	00db      	lsls	r3, r3, #3
    f4a8:	18d3      	adds	r3, r2, r3
    f4aa:	6859      	ldr	r1, [r3, #4]
    f4ac:	88fb      	ldrh	r3, [r7, #6]
    f4ae:	f649 6240 	movw	r2, #40512	; 0x9e40
    f4b2:	f2c0 0201 	movt	r2, #1
    f4b6:	00db      	lsls	r3, r3, #3
    f4b8:	18d3      	adds	r3, r2, r3
    f4ba:	885b      	ldrh	r3, [r3, #2]
    f4bc:	88f8      	ldrh	r0, [r7, #6]
    f4be:	f107 0210 	add.w	r2, r7, #16
    f4c2:	9000      	str	r0, [sp, #0]
    f4c4:	4610      	mov	r0, r2
    f4c6:	461a      	mov	r2, r3
    f4c8:	2301      	movs	r3, #1
    f4ca:	f005 fe81 	bl	151d0 <FMG_AddRecord>
    f4ce:	60f8      	str	r0, [r7, #12]
    	CHECK(iRet==FMG_SUCCESS, lblKO);
    f4d0:	68fb      	ldr	r3, [r7, #12]
    f4d2:	2b0a      	cmp	r3, #10
    f4d4:	d108      	bne.n	f4e8 <appReset+0x12c>
	// Reset "app" table
	// *****************
	xFileInfo.eCreationType = FMGPathAndName;            // File type with Path and Name
    strcpy((char*)xFileInfo.ucFilePath, PARAM_DISK);     // \PARAMDISK
    strcpy((char*)xFileInfo.ucFileName, zAppTab);        // \appTab.par
    for (usIdx=0; usIdx<appEnd-appBeg; usIdx++)          // Build "app" table with parameters filled with default value
    f4d6:	88fb      	ldrh	r3, [r7, #6]
    f4d8:	3301      	adds	r3, #1
    f4da:	80fb      	strh	r3, [r7, #6]
    f4dc:	88fb      	ldrh	r3, [r7, #6]
    f4de:	2b19      	cmp	r3, #25
    f4e0:	d9c7      	bls.n	f472 <appReset+0xb6>
    	iByteNbr += (int)tzApp[usIdx].usLen;
    	iRet = FMG_AddRecord(&xFileInfo, tzApp[usIdx].pvDefault, (long)tzApp[usIdx].usLen, FMGMiddle, usIdx);
    	CHECK(iRet==FMG_SUCCESS, lblKO);
	}

    iRet = iByteNbr;                                     // Size of bytes reseted
    f4e2:	68bb      	ldr	r3, [r7, #8]
    f4e4:	60fb      	str	r3, [r7, #12]
	goto lblEnd;
    f4e6:	e003      	b.n	f4f0 <appReset+0x134>

	// Errors treatment 
    // ****************
lblKO:                                                   // Initialization failed
	iRet=-1;
    f4e8:	f04f 33ff 	mov.w	r3, #4294967295
    f4ec:	60fb      	str	r3, [r7, #12]
	goto lblEnd;
    f4ee:	bf00      	nop
lblEnd:
    return iRet;
    f4f0:	68fb      	ldr	r3, [r7, #12]
}
    f4f2:	4618      	mov	r0, r3
    f4f4:	f644 1380 	movw	r3, #18816	; 0x4980
    f4f8:	f2c0 0302 	movt	r3, #2
    f4fc:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    f4fe:	681b      	ldr	r3, [r3, #0]
    f500:	429a      	cmp	r2, r3
    f502:	d001      	beq.n	f508 <appReset+0x14c>
    f504:	f7f9 fcf4 	bl	8ef0 <__stack_chk_fail>
    f508:	f107 0740 	add.w	r7, r7, #64	; 0x40
    f50c:	46bd      	mov	sp, r7
    f50e:	bd80      	pop	{r7, pc}

0000f510 <appPut>:
//   >=0 : Storage done (size of bytes stored).
//   <0  : Storage failed (FMG failed).
//****************************************************************************

int appPut (word usKey, void *pvDat, word usLen)
{
    f510:	b580      	push	{r7, lr}
    f512:	b092      	sub	sp, #72	; 0x48
    f514:	af02      	add	r7, sp, #8
    f516:	6039      	str	r1, [r7, #0]
    f518:	4613      	mov	r3, r2
    f51a:	4602      	mov	r2, r0
    f51c:	80fa      	strh	r2, [r7, #6]
    f51e:	80bb      	strh	r3, [r7, #4]
    f520:	f644 1380 	movw	r3, #18816	; 0x4980
    f524:	f2c0 0302 	movt	r3, #2
    f528:	681b      	ldr	r3, [r3, #0]
    f52a:	63fb      	str	r3, [r7, #60]	; 0x3c
	long lLength;
	int iRet;

	// Store parameter
	// ***************
	CHECK(tzApp[usKey-appBeg].usKey==usKey, lblKO);     // Check if it is the right key
    f52c:	88fa      	ldrh	r2, [r7, #6]
    f52e:	f649 6340 	movw	r3, #40512	; 0x9e40
    f532:	f2c0 0301 	movt	r3, #1
    f536:	f833 3032 	ldrh.w	r3, [r3, r2, lsl #3]
    f53a:	88fa      	ldrh	r2, [r7, #6]
    f53c:	429a      	cmp	r2, r3
    f53e:	d138      	bne.n	f5b2 <appPut+0xa2>
	
	lLength = (long)tzApp[usKey-appBeg].usLen;
    f540:	88fb      	ldrh	r3, [r7, #6]
    f542:	f649 6240 	movw	r2, #40512	; 0x9e40
    f546:	f2c0 0201 	movt	r2, #1
    f54a:	00db      	lsls	r3, r3, #3
    f54c:	18d3      	adds	r3, r2, r3
    f54e:	885b      	ldrh	r3, [r3, #2]
    f550:	60bb      	str	r3, [r7, #8]
	if (lLength > usLen)
    f552:	88ba      	ldrh	r2, [r7, #4]
    f554:	68bb      	ldr	r3, [r7, #8]
    f556:	429a      	cmp	r2, r3
    f558:	da01      	bge.n	f55e <appPut+0x4e>
		lLength = (long)usLen;
    f55a:	88bb      	ldrh	r3, [r7, #4]
    f55c:	60bb      	str	r3, [r7, #8]
	xFileInfo.eCreationType = FMGPathAndName;           // File type with Path and Name
    f55e:	2300      	movs	r3, #0
    f560:	613b      	str	r3, [r7, #16]
    strcpy((char*)xFileInfo.ucFilePath, PARAM_DISK);    // \PARAMDISK
    f562:	f107 0310 	add.w	r3, r7, #16
    f566:	3304      	adds	r3, #4
    f568:	f649 721c 	movw	r2, #40732	; 0x9f1c
    f56c:	f2c0 0201 	movt	r2, #1
    f570:	ca07      	ldmia	r2, {r0, r1, r2}
    f572:	c303      	stmia	r3!, {r0, r1}
    f574:	801a      	strh	r2, [r3, #0]
    strcpy((char*)xFileInfo.ucFileName, zAppTab);       // \appTab.par
    f576:	f649 7310 	movw	r3, #40720	; 0x9f10
    f57a:	f2c0 0301 	movt	r3, #1
    f57e:	f107 0225 	add.w	r2, r7, #37	; 0x25
    f582:	cb03      	ldmia	r3!, {r0, r1}
    f584:	6010      	str	r0, [r2, #0]
    f586:	6051      	str	r1, [r2, #4]
    f588:	8819      	ldrh	r1, [r3, #0]
    f58a:	789b      	ldrb	r3, [r3, #2]
    f58c:	8111      	strh	r1, [r2, #8]
    f58e:	7293      	strb	r3, [r2, #10]
	iRet = FMG_ModifyRecord(&xFileInfo, pvDat, lLength, FMGMiddle, usKey-appBeg);
    f590:	88fa      	ldrh	r2, [r7, #6]
    f592:	f107 0310 	add.w	r3, r7, #16
    f596:	9200      	str	r2, [sp, #0]
    f598:	4618      	mov	r0, r3
    f59a:	6839      	ldr	r1, [r7, #0]
    f59c:	68ba      	ldr	r2, [r7, #8]
    f59e:	2301      	movs	r3, #1
    f5a0:	f005 ffa2 	bl	154e8 <FMG_ModifyRecord>
    f5a4:	60f8      	str	r0, [r7, #12]
	CHECK(iRet==FMG_SUCCESS, lblKO);                    // Store the parameter related to this key
    f5a6:	68fb      	ldr	r3, [r7, #12]
    f5a8:	2b0a      	cmp	r3, #10
    f5aa:	d102      	bne.n	f5b2 <appPut+0xa2>

	iRet = (int)lLength;                                // Size of bytes stored.
    f5ac:	68bb      	ldr	r3, [r7, #8]
    f5ae:	60fb      	str	r3, [r7, #12]
	goto lblEnd;
    f5b0:	e003      	b.n	f5ba <appPut+0xaa>

	// Errors treatment 
    // ****************
lblKO:                                                  // Storage parameter failed
    iRet=-1;
    f5b2:	f04f 33ff 	mov.w	r3, #4294967295
    f5b6:	60fb      	str	r3, [r7, #12]
    goto lblEnd;
    f5b8:	bf00      	nop
lblEnd:
    return iRet;
    f5ba:	68fb      	ldr	r3, [r7, #12]
}
    f5bc:	4618      	mov	r0, r3
    f5be:	f644 1380 	movw	r3, #18816	; 0x4980
    f5c2:	f2c0 0302 	movt	r3, #2
    f5c6:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    f5c8:	681b      	ldr	r3, [r3, #0]
    f5ca:	429a      	cmp	r2, r3
    f5cc:	d001      	beq.n	f5d2 <appPut+0xc2>
    f5ce:	f7f9 fc8f 	bl	8ef0 <__stack_chk_fail>
    f5d2:	f107 0740 	add.w	r7, r7, #64	; 0x40
    f5d6:	46bd      	mov	sp, r7
    f5d8:	bd80      	pop	{r7, pc}
    f5da:	bf00      	nop

0000f5dc <appGet>:
//   >=0 : Retrieve done (size of bytes retrieved)
//   <0  : Retrieve failed (FMG failed)
//****************************************************************************

int appGet (word usKey, void *pvDat, word usLen)
{
    f5dc:	b580      	push	{r7, lr}
    f5de:	b092      	sub	sp, #72	; 0x48
    f5e0:	af02      	add	r7, sp, #8
    f5e2:	6039      	str	r1, [r7, #0]
    f5e4:	4613      	mov	r3, r2
    f5e6:	4602      	mov	r2, r0
    f5e8:	80fa      	strh	r2, [r7, #6]
    f5ea:	80bb      	strh	r3, [r7, #4]
    f5ec:	f644 1380 	movw	r3, #18816	; 0x4980
    f5f0:	f2c0 0302 	movt	r3, #2
    f5f4:	681b      	ldr	r3, [r3, #0]
    f5f6:	63fb      	str	r3, [r7, #60]	; 0x3c
	long lLength;
	int iRet;

	// Retrieve parameter
	// ******************
	CHECK(tzApp[usKey-appBeg].usKey==usKey, lblKO);
    f5f8:	88fa      	ldrh	r2, [r7, #6]
    f5fa:	f649 6340 	movw	r3, #40512	; 0x9e40
    f5fe:	f2c0 0301 	movt	r3, #1
    f602:	f833 3032 	ldrh.w	r3, [r3, r2, lsl #3]
    f606:	88fa      	ldrh	r2, [r7, #6]
    f608:	429a      	cmp	r2, r3
    f60a:	d140      	bne.n	f68e <appGet+0xb2>

	memset(pvDat, 0, usLen);
    f60c:	88bb      	ldrh	r3, [r7, #4]
    f60e:	6838      	ldr	r0, [r7, #0]
    f610:	2100      	movs	r1, #0
    f612:	461a      	mov	r2, r3
    f614:	f7f9 ea8a 	blx	8b2c <_init+0x5c>
    lLength = (long) tzApp[usKey-appBeg].usLen;
    f618:	88fb      	ldrh	r3, [r7, #6]
    f61a:	f649 6240 	movw	r2, #40512	; 0x9e40
    f61e:	f2c0 0201 	movt	r2, #1
    f622:	00db      	lsls	r3, r3, #3
    f624:	18d3      	adds	r3, r2, r3
    f626:	885b      	ldrh	r3, [r3, #2]
    f628:	60bb      	str	r3, [r7, #8]
    if (lLength > usLen)
    f62a:	88ba      	ldrh	r2, [r7, #4]
    f62c:	68bb      	ldr	r3, [r7, #8]
    f62e:	429a      	cmp	r2, r3
    f630:	da01      	bge.n	f636 <appGet+0x5a>
    	lLength = (long)usLen;
    f632:	88bb      	ldrh	r3, [r7, #4]
    f634:	60bb      	str	r3, [r7, #8]
	xFileInfo.eCreationType = FMGPathAndName;            // File type with Path and Name
    f636:	2300      	movs	r3, #0
    f638:	613b      	str	r3, [r7, #16]
    strcpy((char*)xFileInfo.ucFilePath, PARAM_DISK);     // \PARAMDISK
    f63a:	f107 0310 	add.w	r3, r7, #16
    f63e:	3304      	adds	r3, #4
    f640:	f649 721c 	movw	r2, #40732	; 0x9f1c
    f644:	f2c0 0201 	movt	r2, #1
    f648:	ca07      	ldmia	r2, {r0, r1, r2}
    f64a:	c303      	stmia	r3!, {r0, r1}
    f64c:	801a      	strh	r2, [r3, #0]
    strcpy((char*)xFileInfo.ucFileName, zAppTab);        // \appTab.par
    f64e:	f649 7310 	movw	r3, #40720	; 0x9f10
    f652:	f2c0 0301 	movt	r3, #1
    f656:	f107 0225 	add.w	r2, r7, #37	; 0x25
    f65a:	cb03      	ldmia	r3!, {r0, r1}
    f65c:	6010      	str	r0, [r2, #0]
    f65e:	6051      	str	r1, [r2, #4]
    f660:	8819      	ldrh	r1, [r3, #0]
    f662:	789b      	ldrb	r3, [r3, #2]
    f664:	8111      	strh	r1, [r2, #8]
    f666:	7293      	strb	r3, [r2, #10]
	iRet = FMG_ReadRecord(&xFileInfo, pvDat, &lLength, FMGMiddle, usKey-appBeg);
    f668:	88f9      	ldrh	r1, [r7, #6]
    f66a:	f107 0210 	add.w	r2, r7, #16
    f66e:	f107 0308 	add.w	r3, r7, #8
    f672:	9100      	str	r1, [sp, #0]
    f674:	4610      	mov	r0, r2
    f676:	6839      	ldr	r1, [r7, #0]
    f678:	461a      	mov	r2, r3
    f67a:	2301      	movs	r3, #1
    f67c:	f006 f8da 	bl	15834 <FMG_ReadRecord>
    f680:	60f8      	str	r0, [r7, #12]
	CHECK(iRet==FMG_SUCCESS, lblKO);	                 // Retrieve the parameter related to this key
    f682:	68fb      	ldr	r3, [r7, #12]
    f684:	2b0a      	cmp	r3, #10
    f686:	d102      	bne.n	f68e <appGet+0xb2>

	iRet = (int)lLength;                                 // Size of bytes retrieved.
    f688:	68bb      	ldr	r3, [r7, #8]
    f68a:	60fb      	str	r3, [r7, #12]
	goto lblEnd;
    f68c:	e003      	b.n	f696 <appGet+0xba>

	// Errors treatment 
    // ****************
lblKO:                                                   // Retrieve parameter failed
    iRet=-1;
    f68e:	f04f 33ff 	mov.w	r3, #4294967295
    f692:	60fb      	str	r3, [r7, #12]
    goto lblEnd;
    f694:	bf00      	nop
lblEnd:
    return iRet;
    f696:	68fb      	ldr	r3, [r7, #12]
}
    f698:	4618      	mov	r0, r3
    f69a:	f644 1380 	movw	r3, #18816	; 0x4980
    f69e:	f2c0 0302 	movt	r3, #2
    f6a2:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    f6a4:	681b      	ldr	r3, [r3, #0]
    f6a6:	429a      	cmp	r2, r3
    f6a8:	d001      	beq.n	f6ae <appGet+0xd2>
    f6aa:	f7f9 fc21 	bl	8ef0 <__stack_chk_fail>
    f6ae:	f107 0740 	add.w	r7, r7, #64	; 0x40
    f6b2:	46bd      	mov	sp, r7
    f6b4:	bd80      	pop	{r7, pc}
    f6b6:	bf00      	nop

0000f6b8 <FMGCreateBatch>:
//  This function has no parameters.
//  This function has no return value.                                      
//****************************************************************************

void FMGCreateBatch(void)
{
    f6b8:	b590      	push	{r4, r7, lr}
    f6ba:	b085      	sub	sp, #20
    f6bc:	af02      	add	r7, sp, #8
    f6be:	f644 1380 	movw	r3, #18816	; 0x4980
    f6c2:	f2c0 0302 	movt	r3, #2
    f6c6:	681b      	ldr	r3, [r3, #0]
    f6c8:	607b      	str	r3, [r7, #4]
    // ***************
    int iRet;

	// FMG0161 Disk + BATCH File creation
    // **********************************
    iRet = FMG_CreateFileType(FMGBatch, FMG_VARIABLE_LENGTH, FMG_WITH_CKECKSUM); 
    f6ca:	2000      	movs	r0, #0
    f6cc:	2101      	movs	r1, #1
    f6ce:	2201      	movs	r2, #1
    f6d0:	f005 fa4a 	bl	14b68 <FMG_CreateFileType>
    f6d4:	6038      	str	r0, [r7, #0]
    CHECK((iRet==FMG_SUCCESS)||(iRet==FMG_FILE_ALREADY_EXIST), lblFmgKO);
    f6d6:	683b      	ldr	r3, [r7, #0]
    f6d8:	2b0a      	cmp	r3, #10
    f6da:	d002      	beq.n	f6e2 <FMGCreateBatch+0x2a>
    f6dc:	683b      	ldr	r3, [r7, #0]
    f6de:	2b0c      	cmp	r3, #12
    f6e0:	d148      	bne.n	f774 <FMGCreateBatch+0xbc>
	
    if (iRet == FMG_SUCCESS)
    f6e2:	683b      	ldr	r3, [r7, #0]
    f6e4:	2b0a      	cmp	r3, #10
    f6e6:	d131      	bne.n	f74c <FMGCreateBatch+0x94>
    {
    	xFileInfo.eCreationType = FMGFileType;    // Creation file => File Type
    f6e8:	f644 13f0 	movw	r3, #18928	; 0x49f0
    f6ec:	f2c0 0302 	movt	r3, #2
    f6f0:	2201      	movs	r2, #1
    f6f2:	601a      	str	r2, [r3, #0]
        xFileInfo.eFileType = FMGBatch;           // File Type = BATCH file
    f6f4:	f644 13f0 	movw	r3, #18928	; 0x49f0
    f6f8:	f2c0 0302 	movt	r3, #2
    f6fc:	2200      	movs	r2, #0
    f6fe:	629a      	str	r2, [r3, #40]	; 0x28
    	iRet = FMG_AddRecord(&xFileInfo, (void*) &zBatch.iBatIdx, sizeof(int), FMGBegin, 0);
    f700:	2300      	movs	r3, #0
    f702:	9300      	str	r3, [sp, #0]
    f704:	f644 10f0 	movw	r0, #18928	; 0x49f0
    f708:	f2c0 0002 	movt	r0, #2
    f70c:	f24a 618c 	movw	r1, #42636	; 0xa68c
    f710:	f2c0 0101 	movt	r1, #1
    f714:	2204      	movs	r2, #4
    f716:	2300      	movs	r3, #0
    f718:	f005 fd5a 	bl	151d0 <FMG_AddRecord>
    f71c:	6038      	str	r0, [r7, #0]
    	CHECK(iRet==FMG_SUCCESS, lblFmgKO);
    f71e:	683b      	ldr	r3, [r7, #0]
    f720:	2b0a      	cmp	r3, #10
    f722:	d127      	bne.n	f774 <FMGCreateBatch+0xbc>
    	GL_Dialog_Message(gGoalGraphicLibInstance, NULL, "Batch Created", GL_ICON_INFORMATION, GL_BUTTON_VALID, 3*1000);
    f724:	f644 1388 	movw	r3, #18824	; 0x4988
    f728:	f2c0 0302 	movt	r3, #2
    f72c:	681b      	ldr	r3, [r3, #0]
    f72e:	2201      	movs	r2, #1
    f730:	9200      	str	r2, [sp, #0]
    f732:	f640 32b8 	movw	r2, #3000	; 0xbb8
    f736:	9201      	str	r2, [sp, #4]
    f738:	4618      	mov	r0, r3
    f73a:	2100      	movs	r1, #0
    f73c:	f64a 1210 	movw	r2, #43280	; 0xa910
    f740:	f2c0 0201 	movt	r2, #1
    f744:	2302      	movs	r3, #2
    f746:	f008 fef9 	bl	1853c <GL_Dialog_Message>
    }
    else
    	GL_Dialog_Message(gGoalGraphicLibInstance, NULL, "Batch\nAlready Created", GL_ICON_WARNING, GL_BUTTON_VALID, 3*1000);

    goto lblEnd;
    f74a:	e028      	b.n	f79e <FMGCreateBatch+0xe6>
    	iRet = FMG_AddRecord(&xFileInfo, (void*) &zBatch.iBatIdx, sizeof(int), FMGBegin, 0);
    	CHECK(iRet==FMG_SUCCESS, lblFmgKO);
    	GL_Dialog_Message(gGoalGraphicLibInstance, NULL, "Batch Created", GL_ICON_INFORMATION, GL_BUTTON_VALID, 3*1000);
    }
    else
    	GL_Dialog_Message(gGoalGraphicLibInstance, NULL, "Batch\nAlready Created", GL_ICON_WARNING, GL_BUTTON_VALID, 3*1000);
    f74c:	f644 1388 	movw	r3, #18824	; 0x4988
    f750:	f2c0 0302 	movt	r3, #2
    f754:	681b      	ldr	r3, [r3, #0]
    f756:	2201      	movs	r2, #1
    f758:	9200      	str	r2, [sp, #0]
    f75a:	f640 32b8 	movw	r2, #3000	; 0xbb8
    f75e:	9201      	str	r2, [sp, #4]
    f760:	4618      	mov	r0, r3
    f762:	2100      	movs	r1, #0
    f764:	f64a 1220 	movw	r2, #43296	; 0xa920
    f768:	f2c0 0201 	movt	r2, #1
    f76c:	2303      	movs	r3, #3
    f76e:	f008 fee5 	bl	1853c <GL_Dialog_Message>

    goto lblEnd;
    f772:	e014      	b.n	f79e <FMGCreateBatch+0xe6>
    
	// Errors treatment 
    // ****************
lblFmgKO:                                         // File Management error
	GL_Dialog_Message(gGoalGraphicLibInstance, NULL, FMG_ErrorMsg(iRet), GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
    f774:	f644 1388 	movw	r3, #18824	; 0x4988
    f778:	f2c0 0302 	movt	r3, #2
    f77c:	681c      	ldr	r4, [r3, #0]
    f77e:	6838      	ldr	r0, [r7, #0]
    f780:	f000 fcc4 	bl	1010c <FMG_ErrorMsg>
    f784:	4603      	mov	r3, r0
    f786:	2201      	movs	r2, #1
    f788:	9200      	str	r2, [sp, #0]
    f78a:	f241 3288 	movw	r2, #5000	; 0x1388
    f78e:	9201      	str	r2, [sp, #4]
    f790:	4620      	mov	r0, r4
    f792:	2100      	movs	r1, #0
    f794:	461a      	mov	r2, r3
    f796:	2304      	movs	r3, #4
    f798:	f008 fed0 	bl	1853c <GL_Dialog_Message>
	goto lblEnd;
    f79c:	bf00      	nop
lblEnd:
	return;
    f79e:	bf00      	nop
}
    f7a0:	f644 1380 	movw	r3, #18816	; 0x4980
    f7a4:	f2c0 0302 	movt	r3, #2
    f7a8:	687a      	ldr	r2, [r7, #4]
    f7aa:	681b      	ldr	r3, [r3, #0]
    f7ac:	429a      	cmp	r2, r3
    f7ae:	d001      	beq.n	f7b4 <FMGCreateBatch+0xfc>
    f7b0:	f7f9 fb9e 	bl	8ef0 <__stack_chk_fail>
    f7b4:	f107 070c 	add.w	r7, r7, #12
    f7b8:	46bd      	mov	sp, r7
    f7ba:	bd90      	pop	{r4, r7, pc}

0000f7bc <FMGDeleteBatch>:
//  This function has no parameters.
//  This function has no return value.                                      
//****************************************************************************

void FMGDeleteBatch(void)
{
    f7bc:	b590      	push	{r4, r7, lr}
    f7be:	b085      	sub	sp, #20
    f7c0:	af02      	add	r7, sp, #8
    f7c2:	f644 1380 	movw	r3, #18816	; 0x4980
    f7c6:	f2c0 0302 	movt	r3, #2
    f7ca:	681b      	ldr	r3, [r3, #0]
    f7cc:	607b      	str	r3, [r7, #4]
    // ***************
    int iRet;

    // BATCH File deletion
    // *******************
    iRet = FMG_DeleteFileType(FMGBatch); 
    f7ce:	2000      	movs	r0, #0
    f7d0:	f005 fadc 	bl	14d8c <FMG_DeleteFileType>
    f7d4:	6038      	str	r0, [r7, #0]
    CHECK(iRet==FMG_SUCCESS, lblFmgKO);
    f7d6:	683b      	ldr	r3, [r7, #0]
    f7d8:	2b0a      	cmp	r3, #10
    f7da:	d113      	bne.n	f804 <FMGDeleteBatch+0x48>
    GL_Dialog_Message(gGoalGraphicLibInstance, NULL, "Batch Deleted", GL_ICON_INFORMATION, GL_BUTTON_VALID, 3*1000);
    f7dc:	f644 1388 	movw	r3, #18824	; 0x4988
    f7e0:	f2c0 0302 	movt	r3, #2
    f7e4:	681b      	ldr	r3, [r3, #0]
    f7e6:	2201      	movs	r2, #1
    f7e8:	9200      	str	r2, [sp, #0]
    f7ea:	f640 32b8 	movw	r2, #3000	; 0xbb8
    f7ee:	9201      	str	r2, [sp, #4]
    f7f0:	4618      	mov	r0, r3
    f7f2:	2100      	movs	r1, #0
    f7f4:	f64a 1238 	movw	r2, #43320	; 0xa938
    f7f8:	f2c0 0201 	movt	r2, #1
    f7fc:	2302      	movs	r3, #2
    f7fe:	f008 fe9d 	bl	1853c <GL_Dialog_Message>

    goto lblEnd;
    f802:	e02b      	b.n	f85c <FMGDeleteBatch+0xa0>
    
	// Errors treatment 
    // ****************
lblFmgKO:                                 // File Management error
	if (iRet == FMG_FILE_DOES_NOT_EXIST)
    f804:	683b      	ldr	r3, [r7, #0]
    f806:	2b0b      	cmp	r3, #11
    f808:	d113      	bne.n	f832 <FMGDeleteBatch+0x76>
		GL_Dialog_Message(gGoalGraphicLibInstance, NULL, "Batch\nAlready Deleted", GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
    f80a:	f644 1388 	movw	r3, #18824	; 0x4988
    f80e:	f2c0 0302 	movt	r3, #2
    f812:	681b      	ldr	r3, [r3, #0]
    f814:	2201      	movs	r2, #1
    f816:	9200      	str	r2, [sp, #0]
    f818:	f241 3288 	movw	r2, #5000	; 0x1388
    f81c:	9201      	str	r2, [sp, #4]
    f81e:	4618      	mov	r0, r3
    f820:	2100      	movs	r1, #0
    f822:	f64a 1248 	movw	r2, #43336	; 0xa948
    f826:	f2c0 0201 	movt	r2, #1
    f82a:	2304      	movs	r3, #4
    f82c:	f008 fe86 	bl	1853c <GL_Dialog_Message>
	else
		GL_Dialog_Message(gGoalGraphicLibInstance, NULL, FMG_ErrorMsg(iRet), GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
	goto lblEnd;
    f830:	e013      	b.n	f85a <FMGDeleteBatch+0x9e>
    // ****************
lblFmgKO:                                 // File Management error
	if (iRet == FMG_FILE_DOES_NOT_EXIST)
		GL_Dialog_Message(gGoalGraphicLibInstance, NULL, "Batch\nAlready Deleted", GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
	else
		GL_Dialog_Message(gGoalGraphicLibInstance, NULL, FMG_ErrorMsg(iRet), GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
    f832:	f644 1388 	movw	r3, #18824	; 0x4988
    f836:	f2c0 0302 	movt	r3, #2
    f83a:	681c      	ldr	r4, [r3, #0]
    f83c:	6838      	ldr	r0, [r7, #0]
    f83e:	f000 fc65 	bl	1010c <FMG_ErrorMsg>
    f842:	4603      	mov	r3, r0
    f844:	2201      	movs	r2, #1
    f846:	9200      	str	r2, [sp, #0]
    f848:	f241 3288 	movw	r2, #5000	; 0x1388
    f84c:	9201      	str	r2, [sp, #4]
    f84e:	4620      	mov	r0, r4
    f850:	2100      	movs	r1, #0
    f852:	461a      	mov	r2, r3
    f854:	2304      	movs	r3, #4
    f856:	f008 fe71 	bl	1853c <GL_Dialog_Message>
	goto lblEnd;
    f85a:	bf00      	nop
lblEnd:
	return;
    f85c:	bf00      	nop
}
    f85e:	f644 1380 	movw	r3, #18816	; 0x4980
    f862:	f2c0 0302 	movt	r3, #2
    f866:	687a      	ldr	r2, [r7, #4]
    f868:	681b      	ldr	r3, [r3, #0]
    f86a:	429a      	cmp	r2, r3
    f86c:	d001      	beq.n	f872 <FMGDeleteBatch+0xb6>
    f86e:	f7f9 fb3f 	bl	8ef0 <__stack_chk_fail>
    f872:	f107 070c 	add.w	r7, r7, #12
    f876:	46bd      	mov	sp, r7
    f878:	bd90      	pop	{r4, r7, pc}
    f87a:	bf00      	nop

0000f87c <GetBatchIdx>:
//    >=0 : Return transaction's index.
//    <0  : Batch error.
//****************************************************************************

static int GetBatchIdx(void)
{
    f87c:	b580      	push	{r7, lr}
    f87e:	b086      	sub	sp, #24
    f880:	af02      	add	r7, sp, #8
    f882:	f644 1380 	movw	r3, #18816	; 0x4980
    f886:	f2c0 0302 	movt	r3, #2
    f88a:	681b      	ldr	r3, [r3, #0]
    f88c:	60fb      	str	r3, [r7, #12]
	long lLength;
    int iRet, iBatchIdx;
	
    // Retrieve Idx from BATCH file
    // ****************************
    lLength = sizeof(int);    
    f88e:	2304      	movs	r3, #4
    f890:	603b      	str	r3, [r7, #0]
	xFileInfo.eCreationType = FMGFileType;  // Creation file => File Type
    f892:	f644 13f0 	movw	r3, #18928	; 0x49f0
    f896:	f2c0 0302 	movt	r3, #2
    f89a:	2201      	movs	r2, #1
    f89c:	601a      	str	r2, [r3, #0]
    xFileInfo.eFileType = FMGBatch;         // File Type = BATCH file
    f89e:	f644 13f0 	movw	r3, #18928	; 0x49f0
    f8a2:	f2c0 0302 	movt	r3, #2
    f8a6:	2200      	movs	r2, #0
    f8a8:	629a      	str	r2, [r3, #40]	; 0x28
    iRet = FMG_ReadRecord(&xFileInfo, &iBatchIdx, &lLength, FMGBegin, 0);
    f8aa:	1d3a      	adds	r2, r7, #4
    f8ac:	463b      	mov	r3, r7
    f8ae:	2100      	movs	r1, #0
    f8b0:	9100      	str	r1, [sp, #0]
    f8b2:	f644 10f0 	movw	r0, #18928	; 0x49f0
    f8b6:	f2c0 0002 	movt	r0, #2
    f8ba:	4611      	mov	r1, r2
    f8bc:	461a      	mov	r2, r3
    f8be:	2300      	movs	r3, #0
    f8c0:	f005 ffb8 	bl	15834 <FMG_ReadRecord>
    f8c4:	60b8      	str	r0, [r7, #8]
	if (iRet == FMG_SUCCESS)
    f8c6:	68bb      	ldr	r3, [r7, #8]
    f8c8:	2b0a      	cmp	r3, #10
    f8ca:	d102      	bne.n	f8d2 <GetBatchIdx+0x56>
		iRet = iBatchIdx;                   // Read Batch Index (Transactions available)
    f8cc:	687b      	ldr	r3, [r7, #4]
    f8ce:	60bb      	str	r3, [r7, #8]
    f8d0:	e008      	b.n	f8e4 <GetBatchIdx+0x68>
	else if (iRet == FMG_READ_RECORD_ERROR)
    f8d2:	68bb      	ldr	r3, [r7, #8]
    f8d4:	2b19      	cmp	r3, #25
    f8d6:	d102      	bne.n	f8de <GetBatchIdx+0x62>
		iRet = 0;                           // Reset Batch Index (No transaction)
    f8d8:	2300      	movs	r3, #0
    f8da:	60bb      	str	r3, [r7, #8]
    f8dc:	e002      	b.n	f8e4 <GetBatchIdx+0x68>
	else
		iRet = -1;                          // Batch error
    f8de:	f04f 33ff 	mov.w	r3, #4294967295
    f8e2:	60bb      	str	r3, [r7, #8]
	
    return iRet;
    f8e4:	68bb      	ldr	r3, [r7, #8]
}
    f8e6:	4618      	mov	r0, r3
    f8e8:	f644 1380 	movw	r3, #18816	; 0x4980
    f8ec:	f2c0 0302 	movt	r3, #2
    f8f0:	68fa      	ldr	r2, [r7, #12]
    f8f2:	681b      	ldr	r3, [r3, #0]
    f8f4:	429a      	cmp	r2, r3
    f8f6:	d001      	beq.n	f8fc <GetBatchIdx+0x80>
    f8f8:	f7f9 fafa 	bl	8ef0 <__stack_chk_fail>
    f8fc:	f107 0710 	add.w	r7, r7, #16
    f900:	46bd      	mov	sp, r7
    f902:	bd80      	pop	{r7, pc}

0000f904 <SetBatchIdx>:
//    FMG_SUCCESS : Transaction's index updated.
//    Others  : Batch error.
//****************************************************************************

static int SetBatchIdx(int iBatchIdx)
{
    f904:	b580      	push	{r7, lr}
    f906:	b086      	sub	sp, #24
    f908:	af02      	add	r7, sp, #8
    f90a:	6078      	str	r0, [r7, #4]
    f90c:	f644 1380 	movw	r3, #18816	; 0x4980
    f910:	f2c0 0302 	movt	r3, #2
    f914:	681b      	ldr	r3, [r3, #0]
    f916:	60fb      	str	r3, [r7, #12]
    // ***************
	int iRet;
	
	// Update and store Idx into BATCH file
	// ************************************
	xFileInfo.eCreationType = FMGFileType;  // Creation file => File Type
    f918:	f644 13f0 	movw	r3, #18928	; 0x49f0
    f91c:	f2c0 0302 	movt	r3, #2
    f920:	2201      	movs	r2, #1
    f922:	601a      	str	r2, [r3, #0]
    xFileInfo.eFileType = FMGBatch;         // File Type = BATCH file
    f924:	f644 13f0 	movw	r3, #18928	; 0x49f0
    f928:	f2c0 0302 	movt	r3, #2
    f92c:	2200      	movs	r2, #0
    f92e:	629a      	str	r2, [r3, #40]	; 0x28
	iRet = FMG_ModifyRecord(&xFileInfo, &iBatchIdx, sizeof(int), FMGBegin, 0);	        	
    f930:	1d3b      	adds	r3, r7, #4
    f932:	2200      	movs	r2, #0
    f934:	9200      	str	r2, [sp, #0]
    f936:	f644 10f0 	movw	r0, #18928	; 0x49f0
    f93a:	f2c0 0002 	movt	r0, #2
    f93e:	4619      	mov	r1, r3
    f940:	2204      	movs	r2, #4
    f942:	2300      	movs	r3, #0
    f944:	f005 fdd0 	bl	154e8 <FMG_ModifyRecord>
    f948:	60b8      	str	r0, [r7, #8]
	if (iRet == FMG_READ_RECORD_ERROR)      // No more first record
    f94a:	68bb      	ldr	r3, [r7, #8]
    f94c:	2b19      	cmp	r3, #25
    f94e:	d101      	bne.n	f954 <SetBatchIdx+0x50>
		iRet = FMG_SUCCESS;                                                                        
    f950:	230a      	movs	r3, #10
    f952:	60bb      	str	r3, [r7, #8]
	
    return iRet;
    f954:	68bb      	ldr	r3, [r7, #8]
}
    f956:	4618      	mov	r0, r3
    f958:	f644 1380 	movw	r3, #18816	; 0x4980
    f95c:	f2c0 0302 	movt	r3, #2
    f960:	68fa      	ldr	r2, [r7, #12]
    f962:	681b      	ldr	r3, [r3, #0]
    f964:	429a      	cmp	r2, r3
    f966:	d001      	beq.n	f96c <SetBatchIdx+0x68>
    f968:	f7f9 fac2 	bl	8ef0 <__stack_chk_fail>
    f96c:	f107 0710 	add.w	r7, r7, #16
    f970:	46bd      	mov	sp, r7
    f972:	bd80      	pop	{r7, pc}

0000f974 <FMGAddDelTransactions>:
//  This function has no parameters.
//  This function has no return value.                                      
//****************************************************************************

void FMGAddDelTransactions(void) 
{
    f974:	b590      	push	{r4, r7, lr}
    f976:	b095      	sub	sp, #84	; 0x54
    f978:	af02      	add	r7, sp, #8
    f97a:	f644 1380 	movw	r3, #18816	; 0x4980
    f97e:	f2c0 0302 	movt	r3, #2
    f982:	681b      	ldr	r3, [r3, #0]
    f984:	647b      	str	r3, [r7, #68]	; 0x44
	// Local variables 
    // ***************
	T_GL_HWIDGET hScreen=NULL;
    f986:	2300      	movs	r3, #0
    f988:	603b      	str	r3, [r7, #0]
	char tcDisplay[50+1];
    int iKey, iRet, iBatchIdx;

    // Batch management
	// ****************
	hScreen = GoalCreateScreen(gGoalGraphicLibInstance, txBatch, NUMBER_OF_LINES(txBatch), GL_ENCODING_UTF8);
    f98a:	f644 1388 	movw	r3, #18824	; 0x4988
    f98e:	f2c0 0302 	movt	r3, #2
    f992:	681b      	ldr	r3, [r3, #0]
    f994:	4618      	mov	r0, r3
    f996:	f649 7128 	movw	r1, #40744	; 0x9f28
    f99a:	f2c0 0101 	movt	r1, #1
    f99e:	2204      	movs	r2, #4
    f9a0:	2300      	movs	r3, #0
    f9a2:	f7fd fb35 	bl	d010 <GoalCreateScreen>
    f9a6:	4603      	mov	r3, r0
    f9a8:	603b      	str	r3, [r7, #0]
	CHECK(hScreen!=NULL, lblKO);                                           // Create screen and clear it
    f9aa:	683b      	ldr	r3, [r7, #0]
    f9ac:	2b00      	cmp	r3, #0
    f9ae:	f000 8194 	beq.w	fcda <FMGAddDelTransactions+0x366>
	iRet = GoalClrScreen(hScreen, GL_COLOR_BLACK, KEY_CANCEL | KEY_DOWN | KEY_UP, false);
    f9b2:	683b      	ldr	r3, [r7, #0]
    f9b4:	4618      	mov	r0, r3
    f9b6:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    f9ba:	220e      	movs	r2, #14
    f9bc:	2300      	movs	r3, #0
    f9be:	f7fd fcc5 	bl	d34c <GoalClrScreen>
    f9c2:	6078      	str	r0, [r7, #4]
	CHECK(iRet>=0, lblKO);
    f9c4:	687b      	ldr	r3, [r7, #4]
    f9c6:	2b00      	cmp	r3, #0
    f9c8:	f2c0 8187 	blt.w	fcda <FMGAddDelTransactions+0x366>

	iBatchIdx = GetBatchIdx();                                             // Read Batch Index
    f9cc:	f7ff ff56 	bl	f87c <GetBatchIdx>
    f9d0:	60b8      	str	r0, [r7, #8]
	CHECK(iBatchIdx>=0, lblKO);
    f9d2:	68bb      	ldr	r3, [r7, #8]
    f9d4:	2b00      	cmp	r3, #0
    f9d6:	f2c0 8180 	blt.w	fcda <FMGAddDelTransactions+0x366>

    iRet = GoalDspLine(hScreen, 0, "Up to add", &txBatch[0], 0, false);    // Show press up to add transaction
    f9da:	683b      	ldr	r3, [r7, #0]
    f9dc:	2200      	movs	r2, #0
    f9de:	9200      	str	r2, [sp, #0]
    f9e0:	2200      	movs	r2, #0
    f9e2:	9201      	str	r2, [sp, #4]
    f9e4:	4618      	mov	r0, r3
    f9e6:	2100      	movs	r1, #0
    f9e8:	f64a 1260 	movw	r2, #43360	; 0xa960
    f9ec:	f2c0 0201 	movt	r2, #1
    f9f0:	f649 7328 	movw	r3, #40744	; 0x9f28
    f9f4:	f2c0 0301 	movt	r3, #1
    f9f8:	f7fd fdc2 	bl	d580 <GoalDspLine>
    f9fc:	6078      	str	r0, [r7, #4]
	CHECK(iRet>=0, lblKO);                                                 // Show transaction remaining
    f9fe:	687b      	ldr	r3, [r7, #4]
    fa00:	2b00      	cmp	r3, #0
    fa02:	f2c0 816a 	blt.w	fcda <FMGAddDelTransactions+0x366>
    sprintf(tcDisplay, "%d Transaction(s)", iBatchIdx);
    fa06:	f107 0310 	add.w	r3, r7, #16
    fa0a:	4618      	mov	r0, r3
    fa0c:	f64a 116c 	movw	r1, #43372	; 0xa96c
    fa10:	f2c0 0101 	movt	r1, #1
    fa14:	68ba      	ldr	r2, [r7, #8]
    fa16:	f7f9 e8fa 	blx	8c0c <_init+0x13c>
	iRet = GoalDspLine(hScreen, 2, "", &txBatch[2], 0, false);
    fa1a:	683b      	ldr	r3, [r7, #0]
    fa1c:	2200      	movs	r2, #0
    fa1e:	9200      	str	r2, [sp, #0]
    fa20:	2200      	movs	r2, #0
    fa22:	9201      	str	r2, [sp, #4]
    fa24:	4618      	mov	r0, r3
    fa26:	2102      	movs	r1, #2
    fa28:	f64a 1280 	movw	r2, #43392	; 0xa980
    fa2c:	f2c0 0201 	movt	r2, #1
    fa30:	4bb4      	ldr	r3, [pc, #720]	; (fd04 <FMGAddDelTransactions+0x390>)
    fa32:	f7fd fda5 	bl	d580 <GoalDspLine>
    fa36:	6078      	str	r0, [r7, #4]
	CHECK(iRet>=0, lblKO);
    fa38:	687b      	ldr	r3, [r7, #4]
    fa3a:	2b00      	cmp	r3, #0
    fa3c:	f2c0 814d 	blt.w	fcda <FMGAddDelTransactions+0x366>
	if (iBatchIdx == 0)
    fa40:	68bb      	ldr	r3, [r7, #8]
    fa42:	2b00      	cmp	r3, #0
    fa44:	d119      	bne.n	fa7a <FMGAddDelTransactions+0x106>
	{
	    memset(tcDisplay, 0, sizeof(tcDisplay));
    fa46:	f107 0310 	add.w	r3, r7, #16
    fa4a:	4618      	mov	r0, r3
    fa4c:	2100      	movs	r1, #0
    fa4e:	2233      	movs	r2, #51	; 0x33
    fa50:	f7f9 e86c 	blx	8b2c <_init+0x5c>
		iRet = GoalDspLine(hScreen, 2, "Batch Empty !!!", &txBatch[2], 0, false);
    fa54:	683b      	ldr	r3, [r7, #0]
    fa56:	2200      	movs	r2, #0
    fa58:	9200      	str	r2, [sp, #0]
    fa5a:	2200      	movs	r2, #0
    fa5c:	9201      	str	r2, [sp, #4]
    fa5e:	4618      	mov	r0, r3
    fa60:	2102      	movs	r1, #2
    fa62:	f64a 1284 	movw	r2, #43396	; 0xa984
    fa66:	f2c0 0201 	movt	r2, #1
    fa6a:	4ba6      	ldr	r3, [pc, #664]	; (fd04 <FMGAddDelTransactions+0x390>)
    fa6c:	f7fd fd88 	bl	d580 <GoalDspLine>
    fa70:	6078      	str	r0, [r7, #4]
		CHECK(iRet>=0, lblKO);                                             // Warm message = Batch empty
    fa72:	687b      	ldr	r3, [r7, #4]
    fa74:	2b00      	cmp	r3, #0
    fa76:	f2c0 8130 	blt.w	fcda <FMGAddDelTransactions+0x366>
	}
	if (iBatchIdx == MAX_TRANS)
    fa7a:	68bb      	ldr	r3, [r7, #8]
    fa7c:	2b0a      	cmp	r3, #10
    fa7e:	d112      	bne.n	faa6 <FMGAddDelTransactions+0x132>
	{
		iRet = GoalDspLine(hScreen, 2, "Batch Full !!!", &txBatch[2], 0, false);
    fa80:	683b      	ldr	r3, [r7, #0]
    fa82:	2200      	movs	r2, #0
    fa84:	9200      	str	r2, [sp, #0]
    fa86:	2200      	movs	r2, #0
    fa88:	9201      	str	r2, [sp, #4]
    fa8a:	4618      	mov	r0, r3
    fa8c:	2102      	movs	r1, #2
    fa8e:	f64a 1294 	movw	r2, #43412	; 0xa994
    fa92:	f2c0 0201 	movt	r2, #1
    fa96:	4b9b      	ldr	r3, [pc, #620]	; (fd04 <FMGAddDelTransactions+0x390>)
    fa98:	f7fd fd72 	bl	d580 <GoalDspLine>
    fa9c:	6078      	str	r0, [r7, #4]
		CHECK(iRet>=0, lblKO);                                             // Warm message = Batch full
    fa9e:	687b      	ldr	r3, [r7, #4]
    faa0:	2b00      	cmp	r3, #0
    faa2:	f2c0 811a 	blt.w	fcda <FMGAddDelTransactions+0x366>
	}
   	iRet = GoalDspLine(hScreen, 3, "Down to del", &txBatch[3], 0, false);  // Show press down to delete transaction
    faa6:	683b      	ldr	r3, [r7, #0]
    faa8:	2200      	movs	r2, #0
    faaa:	9200      	str	r2, [sp, #0]
    faac:	2200      	movs	r2, #0
    faae:	9201      	str	r2, [sp, #4]
    fab0:	4618      	mov	r0, r3
    fab2:	2103      	movs	r1, #3
    fab4:	f64a 12a4 	movw	r2, #43428	; 0xa9a4
    fab8:	f2c0 0201 	movt	r2, #1
    fabc:	4b92      	ldr	r3, [pc, #584]	; (fd08 <FMGAddDelTransactions+0x394>)
    fabe:	f7fd fd5f 	bl	d580 <GoalDspLine>
    fac2:	6078      	str	r0, [r7, #4]
    CHECK(iRet>=0, lblKO);
    fac4:	687b      	ldr	r3, [r7, #4]
    fac6:	2b00      	cmp	r3, #0
    fac8:	f2c0 8107 	blt.w	fcda <FMGAddDelTransactions+0x366>
    facc:	e000      	b.n	fad0 <FMGAddDelTransactions+0x15c>
		    		CHECK(iRet>=0, lblKO);
		    		buzzer(10);
	            }
			}
		}
    }
    face:	bf00      	nop
   	iRet = GoalDspLine(hScreen, 3, "Down to del", &txBatch[3], 0, false);  // Show press down to delete transaction
    CHECK(iRet>=0, lblKO);

    while(1) 
	{
    	iRet = GoalDspLine(hScreen, 1, tcDisplay, &txBatch[1], 0, true);
    fad0:	683a      	ldr	r2, [r7, #0]
    fad2:	f107 0310 	add.w	r3, r7, #16
    fad6:	2100      	movs	r1, #0
    fad8:	9100      	str	r1, [sp, #0]
    fada:	2101      	movs	r1, #1
    fadc:	9101      	str	r1, [sp, #4]
    fade:	4610      	mov	r0, r2
    fae0:	2101      	movs	r1, #1
    fae2:	461a      	mov	r2, r3
    fae4:	4b89      	ldr	r3, [pc, #548]	; (fd0c <FMGAddDelTransactions+0x398>)
    fae6:	f7fd fd4b 	bl	d580 <GoalDspLine>
    faea:	6078      	str	r0, [r7, #4]
    	CHECK(iRet>=0, lblKO);                                             // Show transaction recorded or deleted
    faec:	687b      	ldr	r3, [r7, #4]
    faee:	2b00      	cmp	r3, #0
    faf0:	f2c0 80f3 	blt.w	fcda <FMGAddDelTransactions+0x366>

		iKey = GoalGetKey(hScreen, gGoalGraphicLibInstance, true, 30*1000, true);            // Wait for key pressed/touched (shortcut)
    faf4:	683a      	ldr	r2, [r7, #0]
    faf6:	f644 1388 	movw	r3, #18824	; 0x4988
    fafa:	f2c0 0302 	movt	r3, #2
    fafe:	681b      	ldr	r3, [r3, #0]
    fb00:	2101      	movs	r1, #1
    fb02:	9100      	str	r1, [sp, #0]
    fb04:	4610      	mov	r0, r2
    fb06:	4619      	mov	r1, r3
    fb08:	2201      	movs	r2, #1
    fb0a:	f247 5330 	movw	r3, #30000	; 0x7530
    fb0e:	f7fe f86d 	bl	dbec <GoalGetKey>
    fb12:	60f8      	str	r0, [r7, #12]

		// Exit from the batch
		// ===================
        if(iKey==0)
    fb14:	68fb      	ldr	r3, [r7, #12]
    fb16:	2b00      	cmp	r3, #0
    fb18:	f000 80db 	beq.w	fcd2 <FMGAddDelTransactions+0x35e>
            break;                                                         // Exit loop if nothing is pressed during 5s
        if (iKey==GL_KEY_CANCEL)
    fb1c:	68fa      	ldr	r2, [r7, #12]
    fb1e:	f64f 0351 	movw	r3, #63569	; 0xf851
    fb22:	429a      	cmp	r2, r3
    fb24:	f000 80d7 	beq.w	fcd6 <FMGAddDelTransactions+0x362>
            break;                                                         // Exit loop if red key is pressed

        // Add transactions into the batch
        // ===============================
        if (iKey==GL_KEY_UP)                                               // *** Key UP ***
    fb28:	68fa      	ldr	r2, [r7, #12]
    fb2a:	f64f 0359 	movw	r3, #63577	; 0xf859
    fb2e:	429a      	cmp	r2, r3
    fb30:	d175      	bne.n	fc1e <FMGAddDelTransactions+0x2aa>
		{
			if (iBatchIdx < MAX_TRANS)                                     // Add transaction
    fb32:	68bb      	ldr	r3, [r7, #8]
    fb34:	2b09      	cmp	r3, #9
    fb36:	dc72      	bgt.n	fc1e <FMGAddDelTransactions+0x2aa>
			{        
	        	iRet = FMG_AddRecord(&xFileInfo, (void*) &zBatch.txTable[iBatchIdx], sizeof(ST_TRANSAC), FMGMiddle, iBatchIdx+1);
    fb38:	68bb      	ldr	r3, [r7, #8]
    fb3a:	019a      	lsls	r2, r3, #6
    fb3c:	f24a 638c 	movw	r3, #42636	; 0xa68c
    fb40:	f2c0 0301 	movt	r3, #1
    fb44:	18d3      	adds	r3, r2, r3
    fb46:	3304      	adds	r3, #4
    fb48:	68ba      	ldr	r2, [r7, #8]
    fb4a:	3201      	adds	r2, #1
    fb4c:	9200      	str	r2, [sp, #0]
    fb4e:	f644 10f0 	movw	r0, #18928	; 0x49f0
    fb52:	f2c0 0002 	movt	r0, #2
    fb56:	4619      	mov	r1, r3
    fb58:	2240      	movs	r2, #64	; 0x40
    fb5a:	2301      	movs	r3, #1
    fb5c:	f005 fb38 	bl	151d0 <FMG_AddRecord>
    fb60:	6078      	str	r0, [r7, #4]
	        	CHECK(iRet==FMG_SUCCESS, lblFmgKO);
    fb62:	687b      	ldr	r3, [r7, #4]
    fb64:	2b0a      	cmp	r3, #10
    fb66:	f040 80d3 	bne.w	fd10 <FMGAddDelTransactions+0x39c>
	        	iBatchIdx++;                                               // Inc Batch Index
    fb6a:	68bb      	ldr	r3, [r7, #8]
    fb6c:	3301      	adds	r3, #1
    fb6e:	60bb      	str	r3, [r7, #8]
	        	iRet = SetBatchIdx(iBatchIdx);                             // Save Batch Index
    fb70:	68b8      	ldr	r0, [r7, #8]
    fb72:	f7ff fec7 	bl	f904 <SetBatchIdx>
    fb76:	6078      	str	r0, [r7, #4]
	        	CHECK(iRet==FMG_SUCCESS, lblFmgKO);
    fb78:	687b      	ldr	r3, [r7, #4]
    fb7a:	2b0a      	cmp	r3, #10
    fb7c:	f040 80c8 	bne.w	fd10 <FMGAddDelTransactions+0x39c>
	        	sprintf(tcDisplay, "Transaction %d recorded", iBatchIdx);  // Transaction recorded
    fb80:	f107 0310 	add.w	r3, r7, #16
    fb84:	4618      	mov	r0, r3
    fb86:	f64a 11b0 	movw	r1, #43440	; 0xa9b0
    fb8a:	f2c0 0101 	movt	r1, #1
    fb8e:	68ba      	ldr	r2, [r7, #8]
    fb90:	f7f9 e83c 	blx	8c0c <_init+0x13c>

	            if ((iBatchIdx > MAX_TRANS-3) && (iBatchIdx != MAX_TRANS)) // Batch almost full
    fb94:	68bb      	ldr	r3, [r7, #8]
    fb96:	2b07      	cmp	r3, #7
    fb98:	dd16      	ble.n	fbc8 <FMGAddDelTransactions+0x254>
    fb9a:	68bb      	ldr	r3, [r7, #8]
    fb9c:	2b0a      	cmp	r3, #10
    fb9e:	d013      	beq.n	fbc8 <FMGAddDelTransactions+0x254>
	            {
		    		iRet = GoalDspLine(hScreen, 2, "Batch almost Full !!!", &txBatch[2], 0, false);
    fba0:	683b      	ldr	r3, [r7, #0]
    fba2:	2200      	movs	r2, #0
    fba4:	9200      	str	r2, [sp, #0]
    fba6:	2200      	movs	r2, #0
    fba8:	9201      	str	r2, [sp, #4]
    fbaa:	4618      	mov	r0, r3
    fbac:	2102      	movs	r1, #2
    fbae:	f64a 12c8 	movw	r2, #43464	; 0xa9c8
    fbb2:	f2c0 0201 	movt	r2, #1
    fbb6:	4b53      	ldr	r3, [pc, #332]	; (fd04 <FMGAddDelTransactions+0x390>)
    fbb8:	f7fd fce2 	bl	d580 <GoalDspLine>
    fbbc:	6078      	str	r0, [r7, #4]
		    		CHECK(iRet>=0, lblKO);
    fbbe:	687b      	ldr	r3, [r7, #4]
    fbc0:	2b00      	cmp	r3, #0
    fbc2:	f2c0 808a 	blt.w	fcda <FMGAddDelTransactions+0x366>
    fbc6:	e02a      	b.n	fc1e <FMGAddDelTransactions+0x2aa>
	            }
	            else if (iBatchIdx == MAX_TRANS)                           // Batch full
    fbc8:	68bb      	ldr	r3, [r7, #8]
    fbca:	2b0a      	cmp	r3, #10
    fbcc:	d115      	bne.n	fbfa <FMGAddDelTransactions+0x286>
	            {
			    	iRet = GoalDspLine(hScreen, 2, "Batch Full !!!", &txBatch[2], 0, false);
    fbce:	683b      	ldr	r3, [r7, #0]
    fbd0:	2200      	movs	r2, #0
    fbd2:	9200      	str	r2, [sp, #0]
    fbd4:	2200      	movs	r2, #0
    fbd6:	9201      	str	r2, [sp, #4]
    fbd8:	4618      	mov	r0, r3
    fbda:	2102      	movs	r1, #2
    fbdc:	f64a 1294 	movw	r2, #43412	; 0xa994
    fbe0:	f2c0 0201 	movt	r2, #1
    fbe4:	4b47      	ldr	r3, [pc, #284]	; (fd04 <FMGAddDelTransactions+0x390>)
    fbe6:	f7fd fccb 	bl	d580 <GoalDspLine>
    fbea:	6078      	str	r0, [r7, #4]
			    	CHECK(iRet>=0, lblKO);
    fbec:	687b      	ldr	r3, [r7, #4]
    fbee:	2b00      	cmp	r3, #0
    fbf0:	db73      	blt.n	fcda <FMGAddDelTransactions+0x366>
			    	buzzer(10);
    fbf2:	200a      	movs	r0, #10
    fbf4:	f007 fd8a 	bl	1770c <buzzer>
    fbf8:	e011      	b.n	fc1e <FMGAddDelTransactions+0x2aa>
	            }
	            else
	            {
		    		iRet = GoalDspLine(hScreen, 2, "", &txBatch[2], 0, false);
    fbfa:	683b      	ldr	r3, [r7, #0]
    fbfc:	2200      	movs	r2, #0
    fbfe:	9200      	str	r2, [sp, #0]
    fc00:	2200      	movs	r2, #0
    fc02:	9201      	str	r2, [sp, #4]
    fc04:	4618      	mov	r0, r3
    fc06:	2102      	movs	r1, #2
    fc08:	f64a 1280 	movw	r2, #43392	; 0xa980
    fc0c:	f2c0 0201 	movt	r2, #1
    fc10:	4b3c      	ldr	r3, [pc, #240]	; (fd04 <FMGAddDelTransactions+0x390>)
    fc12:	f7fd fcb5 	bl	d580 <GoalDspLine>
    fc16:	6078      	str	r0, [r7, #4]
		    		CHECK(iRet>=0, lblKO);
    fc18:	687b      	ldr	r3, [r7, #4]
    fc1a:	2b00      	cmp	r3, #0
    fc1c:	db5d      	blt.n	fcda <FMGAddDelTransactions+0x366>
			}
		}
				
		// Delete transactions from the batch
		// ==================================
		if (iKey==GL_KEY_DOWN)                                              // *** Key DOWN ***
    fc1e:	68fa      	ldr	r2, [r7, #12]
    fc20:	f64f 035a 	movw	r3, #63578	; 0xf85a
    fc24:	429a      	cmp	r2, r3
    fc26:	f47f af52 	bne.w	face <FMGAddDelTransactions+0x15a>
		{
        	if (iBatchIdx > 0)                                              // Delete transaction
    fc2a:	68bb      	ldr	r3, [r7, #8]
    fc2c:	2b00      	cmp	r3, #0
    fc2e:	f77f af4e 	ble.w	face <FMGAddDelTransactions+0x15a>
			{
				iBatchIdx--;                                                // Dec Batch Index
    fc32:	68bb      	ldr	r3, [r7, #8]
    fc34:	3b01      	subs	r3, #1
    fc36:	60bb      	str	r3, [r7, #8]
	        	iRet = FMG_DeleteRecord(&xFileInfo, FMGMiddle, sizeof(ST_TRANSAC), iBatchIdx+1);
    fc38:	68bb      	ldr	r3, [r7, #8]
    fc3a:	3301      	adds	r3, #1
    fc3c:	f644 10f0 	movw	r0, #18928	; 0x49f0
    fc40:	f2c0 0002 	movt	r0, #2
    fc44:	2101      	movs	r1, #1
    fc46:	2240      	movs	r2, #64	; 0x40
    fc48:	f006 f836 	bl	15cb8 <FMG_DeleteRecord>
    fc4c:	6078      	str	r0, [r7, #4]
	        	CHECK(iRet==FMG_SUCCESS, lblFmgKO);
    fc4e:	687b      	ldr	r3, [r7, #4]
    fc50:	2b0a      	cmp	r3, #10
    fc52:	d15d      	bne.n	fd10 <FMGAddDelTransactions+0x39c>
	        	iRet = SetBatchIdx(iBatchIdx);                              // Save Batch Index
    fc54:	68b8      	ldr	r0, [r7, #8]
    fc56:	f7ff fe55 	bl	f904 <SetBatchIdx>
    fc5a:	6078      	str	r0, [r7, #4]
	        	CHECK(iRet==FMG_SUCCESS, lblFmgKO);
    fc5c:	687b      	ldr	r3, [r7, #4]
    fc5e:	2b0a      	cmp	r3, #10
    fc60:	d156      	bne.n	fd10 <FMGAddDelTransactions+0x39c>
	        	sprintf(tcDisplay, "Transaction %d deleted", iBatchIdx+1);  // Transaction deleted
    fc62:	68bb      	ldr	r3, [r7, #8]
    fc64:	3301      	adds	r3, #1
    fc66:	f107 0210 	add.w	r2, r7, #16
    fc6a:	4610      	mov	r0, r2
    fc6c:	f64a 11e0 	movw	r1, #43488	; 0xa9e0
    fc70:	f2c0 0101 	movt	r1, #1
    fc74:	461a      	mov	r2, r3
    fc76:	f7f8 efca 	blx	8c0c <_init+0x13c>

	    		iRet = GoalDspLine(hScreen, 2, "", &txBatch[2], 0, false);
    fc7a:	683b      	ldr	r3, [r7, #0]
    fc7c:	2200      	movs	r2, #0
    fc7e:	9200      	str	r2, [sp, #0]
    fc80:	2200      	movs	r2, #0
    fc82:	9201      	str	r2, [sp, #4]
    fc84:	4618      	mov	r0, r3
    fc86:	2102      	movs	r1, #2
    fc88:	f64a 1280 	movw	r2, #43392	; 0xa980
    fc8c:	f2c0 0201 	movt	r2, #1
    fc90:	4b1c      	ldr	r3, [pc, #112]	; (fd04 <FMGAddDelTransactions+0x390>)
    fc92:	f7fd fc75 	bl	d580 <GoalDspLine>
    fc96:	6078      	str	r0, [r7, #4]
	    		CHECK(iRet>=0, lblKO);
    fc98:	687b      	ldr	r3, [r7, #4]
    fc9a:	2b00      	cmp	r3, #0
    fc9c:	db1d      	blt.n	fcda <FMGAddDelTransactions+0x366>

	            if (iBatchIdx == 0)                                         // Batch empty
    fc9e:	68bb      	ldr	r3, [r7, #8]
    fca0:	2b00      	cmp	r3, #0
    fca2:	f47f af14 	bne.w	face <FMGAddDelTransactions+0x15a>
	            {
		    		iRet = GoalDspLine(hScreen, 2, "Batch Empty !!!", &txBatch[2], 0, false);
    fca6:	683b      	ldr	r3, [r7, #0]
    fca8:	2200      	movs	r2, #0
    fcaa:	9200      	str	r2, [sp, #0]
    fcac:	2200      	movs	r2, #0
    fcae:	9201      	str	r2, [sp, #4]
    fcb0:	4618      	mov	r0, r3
    fcb2:	2102      	movs	r1, #2
    fcb4:	f64a 1284 	movw	r2, #43396	; 0xa984
    fcb8:	f2c0 0201 	movt	r2, #1
    fcbc:	4b11      	ldr	r3, [pc, #68]	; (fd04 <FMGAddDelTransactions+0x390>)
    fcbe:	f7fd fc5f 	bl	d580 <GoalDspLine>
    fcc2:	6078      	str	r0, [r7, #4]
		    		CHECK(iRet>=0, lblKO);
    fcc4:	687b      	ldr	r3, [r7, #4]
    fcc6:	2b00      	cmp	r3, #0
    fcc8:	db07      	blt.n	fcda <FMGAddDelTransactions+0x366>
		    		buzzer(10);
    fcca:	200a      	movs	r0, #10
    fccc:	f007 fd1e 	bl	1770c <buzzer>
	            }
			}
		}
    }
    fcd0:	e6fd      	b.n	face <FMGAddDelTransactions+0x15a>
		iKey = GoalGetKey(hScreen, gGoalGraphicLibInstance, true, 30*1000, true);            // Wait for key pressed/touched (shortcut)

		// Exit from the batch
		// ===================
        if(iKey==0)
            break;                                                         // Exit loop if nothing is pressed during 5s
    fcd2:	bf00      	nop
    fcd4:	e000      	b.n	fcd8 <FMGAddDelTransactions+0x364>
        if (iKey==GL_KEY_CANCEL)
            break;                                                         // Exit loop if red key is pressed
    fcd6:	bf00      	nop
	            }
			}
		}
    }
    
    goto lblEnd;
    fcd8:	e02f      	b.n	fd3a <FMGAddDelTransactions+0x3c6>

	// Errors treatment 
    // ****************
lblKO:                               // None-classified low level error
	GL_Dialog_Message(gGoalGraphicLibInstance, NULL, "Processing Error", GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
    fcda:	f644 1388 	movw	r3, #18824	; 0x4988
    fcde:	f2c0 0302 	movt	r3, #2
    fce2:	681b      	ldr	r3, [r3, #0]
    fce4:	2201      	movs	r2, #1
    fce6:	9200      	str	r2, [sp, #0]
    fce8:	f241 3288 	movw	r2, #5000	; 0x1388
    fcec:	9201      	str	r2, [sp, #4]
    fcee:	4618      	mov	r0, r3
    fcf0:	2100      	movs	r1, #0
    fcf2:	f64a 12f8 	movw	r2, #43512	; 0xa9f8
    fcf6:	f2c0 0201 	movt	r2, #1
    fcfa:	2304      	movs	r3, #4
    fcfc:	f008 fc1e 	bl	1853c <GL_Dialog_Message>
	goto lblEnd;
    fd00:	e01b      	b.n	fd3a <FMGAddDelTransactions+0x3c6>
    fd02:	bf00      	nop
    fd04:	0001a080 	.word	0x0001a080
    fd08:	0001a12c 	.word	0x0001a12c
    fd0c:	00019fd4 	.word	0x00019fd4
lblFmgKO:                            // File Management error
	GL_Dialog_Message(gGoalGraphicLibInstance, NULL, FMG_ErrorMsg(iRet), GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
    fd10:	f644 1388 	movw	r3, #18824	; 0x4988
    fd14:	f2c0 0302 	movt	r3, #2
    fd18:	681c      	ldr	r4, [r3, #0]
    fd1a:	6878      	ldr	r0, [r7, #4]
    fd1c:	f000 f9f6 	bl	1010c <FMG_ErrorMsg>
    fd20:	4603      	mov	r3, r0
    fd22:	2201      	movs	r2, #1
    fd24:	9200      	str	r2, [sp, #0]
    fd26:	f241 3288 	movw	r2, #5000	; 0x1388
    fd2a:	9201      	str	r2, [sp, #4]
    fd2c:	4620      	mov	r0, r4
    fd2e:	2100      	movs	r1, #0
    fd30:	461a      	mov	r2, r3
    fd32:	2304      	movs	r3, #4
    fd34:	f008 fc02 	bl	1853c <GL_Dialog_Message>
	goto lblEnd;
    fd38:	bf00      	nop
lblEnd: 
	if (hScreen)
    fd3a:	683b      	ldr	r3, [r7, #0]
    fd3c:	2b00      	cmp	r3, #0
    fd3e:	d003      	beq.n	fd48 <FMGAddDelTransactions+0x3d4>
		GoalDestroyScreen(&hScreen); // Destroy screen
    fd40:	463b      	mov	r3, r7
    fd42:	4618      	mov	r0, r3
    fd44:	f7fe f8b4 	bl	deb0 <GoalDestroyScreen>
}
    fd48:	f644 1380 	movw	r3, #18816	; 0x4980
    fd4c:	f2c0 0302 	movt	r3, #2
    fd50:	6c7a      	ldr	r2, [r7, #68]	; 0x44
    fd52:	681b      	ldr	r3, [r3, #0]
    fd54:	429a      	cmp	r2, r3
    fd56:	d001      	beq.n	fd5c <FMGAddDelTransactions+0x3e8>
    fd58:	f7f9 f8ca 	bl	8ef0 <__stack_chk_fail>
    fd5c:	f107 074c 	add.w	r7, r7, #76	; 0x4c
    fd60:	46bd      	mov	sp, r7
    fd62:	bd90      	pop	{r4, r7, pc}

0000fd64 <FMGReadTransactions>:
//  This function has no parameters.
//  This function has no return value.                                      
//****************************************************************************

void FMGReadTransactions(void) 
{
    fd64:	b590      	push	{r4, r7, lr}
    fd66:	b0a7      	sub	sp, #156	; 0x9c
    fd68:	af02      	add	r7, sp, #8
    fd6a:	f644 1380 	movw	r3, #18816	; 0x4980
    fd6e:	f2c0 0302 	movt	r3, #2
    fd72:	681b      	ldr	r3, [r3, #0]
    fd74:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
	// Local variables 
    // ***************
	T_GL_HWIDGET hScreen=NULL;
    fd78:	2300      	movs	r3, #0
    fd7a:	603b      	str	r3, [r7, #0]
    long lLength;
	int iKey, iRet, iBatchIdx, iIdx;

    // Batch management
	// ****************
	memset(&xTransac, 0, sizeof(ST_TRANSAC));
    fd7c:	f107 0318 	add.w	r3, r7, #24
    fd80:	4618      	mov	r0, r3
    fd82:	2100      	movs	r1, #0
    fd84:	2240      	movs	r2, #64	; 0x40
    fd86:	f7f8 eed2 	blx	8b2c <_init+0x5c>
    iIdx=1;                                                               // Transactions start at iIdx=1
    fd8a:	2301      	movs	r3, #1
    fd8c:	60fb      	str	r3, [r7, #12]

	hScreen = GoalCreateScreen(gGoalGraphicLibInstance, txTrans, NUMBER_OF_LINES(txTrans), GL_ENCODING_UTF8);
    fd8e:	f644 1388 	movw	r3, #18824	; 0x4988
    fd92:	f2c0 0302 	movt	r3, #2
    fd96:	681b      	ldr	r3, [r3, #0]
    fd98:	4618      	mov	r0, r3
    fd9a:	f24a 11d8 	movw	r1, #41432	; 0xa1d8
    fd9e:	f2c0 0101 	movt	r1, #1
    fda2:	2207      	movs	r2, #7
    fda4:	2300      	movs	r3, #0
    fda6:	f7fd f933 	bl	d010 <GoalCreateScreen>
    fdaa:	4603      	mov	r3, r0
    fdac:	603b      	str	r3, [r7, #0]
	CHECK(hScreen!=NULL, lblKO);                                          // Create screen and clear it
    fdae:	683b      	ldr	r3, [r7, #0]
    fdb0:	2b00      	cmp	r3, #0
    fdb2:	f000 814b 	beq.w	1004c <FMGReadTransactions+0x2e8>
	iRet = GoalClrScreen(hScreen, GL_COLOR_BLACK, KEY_CANCEL | KEY_DOWN | KEY_UP, false);
    fdb6:	683b      	ldr	r3, [r7, #0]
    fdb8:	4618      	mov	r0, r3
    fdba:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    fdbe:	220e      	movs	r2, #14
    fdc0:	2300      	movs	r3, #0
    fdc2:	f7fd fac3 	bl	d34c <GoalClrScreen>
    fdc6:	60b8      	str	r0, [r7, #8]
	CHECK(iRet>=0, lblKO);
    fdc8:	68bb      	ldr	r3, [r7, #8]
    fdca:	2b00      	cmp	r3, #0
    fdcc:	f2c0 813e 	blt.w	1004c <FMGReadTransactions+0x2e8>

	// Read first transaction
    // ======================
    iBatchIdx = GetBatchIdx();                                            // Read Batch Index
    fdd0:	f7ff fd54 	bl	f87c <GetBatchIdx>
    fdd4:	6138      	str	r0, [r7, #16]
    CHECK(iBatchIdx>=0, lblKO);
    fdd6:	693b      	ldr	r3, [r7, #16]
    fdd8:	2b00      	cmp	r3, #0
    fdda:	f2c0 8137 	blt.w	1004c <FMGReadTransactions+0x2e8>
	CHECK(iBatchIdx!=0, lblEmpty);                                        // Check if batch empty
    fdde:	693b      	ldr	r3, [r7, #16]
    fde0:	2b00      	cmp	r3, #0
    fde2:	f000 8147 	beq.w	10074 <FMGReadTransactions+0x310>

    lLength = sizeof(ST_TRANSAC);                                         // Read first transaction
    fde6:	2340      	movs	r3, #64	; 0x40
    fde8:	607b      	str	r3, [r7, #4]
	iRet = FMG_ReadRecord(&xFileInfo, &xTransac, &lLength, FMGMiddle, iIdx);
    fdea:	f107 0218 	add.w	r2, r7, #24
    fdee:	1d3b      	adds	r3, r7, #4
    fdf0:	68f9      	ldr	r1, [r7, #12]
    fdf2:	9100      	str	r1, [sp, #0]
    fdf4:	f644 10f0 	movw	r0, #18928	; 0x49f0
    fdf8:	f2c0 0002 	movt	r0, #2
    fdfc:	4611      	mov	r1, r2
    fdfe:	461a      	mov	r2, r3
    fe00:	2301      	movs	r3, #1
    fe02:	f005 fd17 	bl	15834 <FMG_ReadRecord>
    fe06:	60b8      	str	r0, [r7, #8]
	CHECK(iRet==FMG_SUCCESS, lblFmgKO);
    fe08:	68bb      	ldr	r3, [r7, #8]
    fe0a:	2b0a      	cmp	r3, #10
    fe0c:	f040 8146 	bne.w	1009c <FMGReadTransactions+0x338>

	iRet = GoalDspLine(hScreen, 0, "Up to inc", &txTrans[0], 0, false);   // Show press up to read the next transaction
    fe10:	683b      	ldr	r3, [r7, #0]
    fe12:	2200      	movs	r2, #0
    fe14:	9200      	str	r2, [sp, #0]
    fe16:	2200      	movs	r2, #0
    fe18:	9201      	str	r2, [sp, #4]
    fe1a:	4618      	mov	r0, r3
    fe1c:	2100      	movs	r1, #0
    fe1e:	f64a 220c 	movw	r2, #43532	; 0xaa0c
    fe22:	f2c0 0201 	movt	r2, #1
    fe26:	f24a 13d8 	movw	r3, #41432	; 0xa1d8
    fe2a:	f2c0 0301 	movt	r3, #1
    fe2e:	f7fd fba7 	bl	d580 <GoalDspLine>
    fe32:	60b8      	str	r0, [r7, #8]
	CHECK(iRet>=0, lblKO);
    fe34:	68bb      	ldr	r3, [r7, #8]
    fe36:	2b00      	cmp	r3, #0
    fe38:	f2c0 8108 	blt.w	1004c <FMGReadTransactions+0x2e8>

	iRet = GoalDspLine(hScreen, 6, "Down to dec", &txTrans[6], 0, false); // Show press down to read the previous transaction
    fe3c:	683b      	ldr	r3, [r7, #0]
    fe3e:	2200      	movs	r2, #0
    fe40:	9200      	str	r2, [sp, #0]
    fe42:	2200      	movs	r2, #0
    fe44:	9201      	str	r2, [sp, #4]
    fe46:	4618      	mov	r0, r3
    fe48:	2106      	movs	r1, #6
    fe4a:	f64a 2218 	movw	r2, #43544	; 0xaa18
    fe4e:	f2c0 0201 	movt	r2, #1
    fe52:	4ba8      	ldr	r3, [pc, #672]	; (100f4 <FMGReadTransactions+0x390>)
    fe54:	f7fd fb94 	bl	d580 <GoalDspLine>
    fe58:	60b8      	str	r0, [r7, #8]
	CHECK(iRet>=0, lblKO);
    fe5a:	68bb      	ldr	r3, [r7, #8]
    fe5c:	2b00      	cmp	r3, #0
    fe5e:	f2c0 80f5 	blt.w	1004c <FMGReadTransactions+0x2e8>
    fe62:	e000      	b.n	fe66 <FMGReadTransactions+0x102>
		        lLength = sizeof(ST_TRANSAC);
		    	iRet = FMG_ReadRecord(&xFileInfo, &xTransac, &lLength, FMGMiddle, iIdx);
		    	CHECK(iRet==FMG_SUCCESS, lblFmgKO);
			}
		}
    }
    fe64:	bf00      	nop

	// Scrolling transactions
	// ======================
    while(1) 
	{
        sprintf(tcDisplay, "TRANSACTION %02d", iIdx);                     // Show transaction
    fe66:	f107 0358 	add.w	r3, r7, #88	; 0x58
    fe6a:	4618      	mov	r0, r3
    fe6c:	f64a 2124 	movw	r1, #43556	; 0xaa24
    fe70:	f2c0 0101 	movt	r1, #1
    fe74:	68fa      	ldr	r2, [r7, #12]
    fe76:	f7f8 eeca 	blx	8c0c <_init+0x13c>
    	iRet = GoalDspLine(hScreen, 1, tcDisplay, &txTrans[1], 0, false);
    fe7a:	683a      	ldr	r2, [r7, #0]
    fe7c:	f107 0358 	add.w	r3, r7, #88	; 0x58
    fe80:	2100      	movs	r1, #0
    fe82:	9100      	str	r1, [sp, #0]
    fe84:	2100      	movs	r1, #0
    fe86:	9101      	str	r1, [sp, #4]
    fe88:	4610      	mov	r0, r2
    fe8a:	2101      	movs	r1, #1
    fe8c:	461a      	mov	r2, r3
    fe8e:	4b9a      	ldr	r3, [pc, #616]	; (100f8 <FMGReadTransactions+0x394>)
    fe90:	f7fd fb76 	bl	d580 <GoalDspLine>
    fe94:	60b8      	str	r0, [r7, #8]
    	CHECK(iRet>=0, lblKO);
    fe96:	68bb      	ldr	r3, [r7, #8]
    fe98:	2b00      	cmp	r3, #0
    fe9a:	f2c0 80d7 	blt.w	1004c <FMGReadTransactions+0x2e8>
    	sprintf(tcDisplay, "DATE: %s", xTransac.tcDate);
    fe9e:	f107 0258 	add.w	r2, r7, #88	; 0x58
    fea2:	f107 0318 	add.w	r3, r7, #24
    fea6:	4610      	mov	r0, r2
    fea8:	f64a 2138 	movw	r1, #43576	; 0xaa38
    feac:	f2c0 0101 	movt	r1, #1
    feb0:	461a      	mov	r2, r3
    feb2:	f7f8 eeac 	blx	8c0c <_init+0x13c>
        iRet = GoalDspLine(hScreen, 2, tcDisplay, &txTrans[2], 0, false);
    feb6:	683a      	ldr	r2, [r7, #0]
    feb8:	f107 0358 	add.w	r3, r7, #88	; 0x58
    febc:	2100      	movs	r1, #0
    febe:	9100      	str	r1, [sp, #0]
    fec0:	2100      	movs	r1, #0
    fec2:	9101      	str	r1, [sp, #4]
    fec4:	4610      	mov	r0, r2
    fec6:	2102      	movs	r1, #2
    fec8:	461a      	mov	r2, r3
    feca:	4b8c      	ldr	r3, [pc, #560]	; (100fc <FMGReadTransactions+0x398>)
    fecc:	f7fd fb58 	bl	d580 <GoalDspLine>
    fed0:	60b8      	str	r0, [r7, #8]
    	CHECK(iRet>=0, lblKO);
    fed2:	68bb      	ldr	r3, [r7, #8]
    fed4:	2b00      	cmp	r3, #0
    fed6:	f2c0 80b9 	blt.w	1004c <FMGReadTransactions+0x2e8>
        sprintf(tcDisplay, "ACCOUNT #: %s", xTransac.tcAccount);
    feda:	f107 0258 	add.w	r2, r7, #88	; 0x58
    fede:	f107 0318 	add.w	r3, r7, #24
    fee2:	3311      	adds	r3, #17
    fee4:	4610      	mov	r0, r2
    fee6:	f64a 2144 	movw	r1, #43588	; 0xaa44
    feea:	f2c0 0101 	movt	r1, #1
    feee:	461a      	mov	r2, r3
    fef0:	f7f8 ee8c 	blx	8c0c <_init+0x13c>
        iRet = GoalDspLine(hScreen, 3, tcDisplay, &txTrans[3], 0, false);
    fef4:	683a      	ldr	r2, [r7, #0]
    fef6:	f107 0358 	add.w	r3, r7, #88	; 0x58
    fefa:	2100      	movs	r1, #0
    fefc:	9100      	str	r1, [sp, #0]
    fefe:	2100      	movs	r1, #0
    ff00:	9101      	str	r1, [sp, #4]
    ff02:	4610      	mov	r0, r2
    ff04:	2103      	movs	r1, #3
    ff06:	461a      	mov	r2, r3
    ff08:	4b7d      	ldr	r3, [pc, #500]	; (10100 <FMGReadTransactions+0x39c>)
    ff0a:	f7fd fb39 	bl	d580 <GoalDspLine>
    ff0e:	60b8      	str	r0, [r7, #8]
    	CHECK(iRet>=0, lblKO);
    ff10:	68bb      	ldr	r3, [r7, #8]
    ff12:	2b00      	cmp	r3, #0
    ff14:	f2c0 809a 	blt.w	1004c <FMGReadTransactions+0x2e8>
        sprintf(tcDisplay, "AMOUNT: %s", xTransac.tcAmount);
    ff18:	f107 0258 	add.w	r2, r7, #88	; 0x58
    ff1c:	f107 0318 	add.w	r3, r7, #24
    ff20:	3322      	adds	r3, #34	; 0x22
    ff22:	4610      	mov	r0, r2
    ff24:	f64a 2154 	movw	r1, #43604	; 0xaa54
    ff28:	f2c0 0101 	movt	r1, #1
    ff2c:	461a      	mov	r2, r3
    ff2e:	f7f8 ee6e 	blx	8c0c <_init+0x13c>
        iRet = GoalDspLine(hScreen, 4, tcDisplay, &txTrans[4], 0, false);
    ff32:	683a      	ldr	r2, [r7, #0]
    ff34:	f107 0358 	add.w	r3, r7, #88	; 0x58
    ff38:	2100      	movs	r1, #0
    ff3a:	9100      	str	r1, [sp, #0]
    ff3c:	2100      	movs	r1, #0
    ff3e:	9101      	str	r1, [sp, #4]
    ff40:	4610      	mov	r0, r2
    ff42:	2104      	movs	r1, #4
    ff44:	461a      	mov	r2, r3
    ff46:	4b6f      	ldr	r3, [pc, #444]	; (10104 <FMGReadTransactions+0x3a0>)
    ff48:	f7fd fb1a 	bl	d580 <GoalDspLine>
    ff4c:	60b8      	str	r0, [r7, #8]
    	CHECK(iRet>=0, lblKO);
    ff4e:	68bb      	ldr	r3, [r7, #8]
    ff50:	2b00      	cmp	r3, #0
    ff52:	db7b      	blt.n	1004c <FMGReadTransactions+0x2e8>
        sprintf(tcDisplay, "TYPE: %s", xTransac.tcType);
    ff54:	f107 0258 	add.w	r2, r7, #88	; 0x58
    ff58:	f107 0318 	add.w	r3, r7, #24
    ff5c:	3332      	adds	r3, #50	; 0x32
    ff5e:	4610      	mov	r0, r2
    ff60:	f64a 2160 	movw	r1, #43616	; 0xaa60
    ff64:	f2c0 0101 	movt	r1, #1
    ff68:	461a      	mov	r2, r3
    ff6a:	f7f8 ee50 	blx	8c0c <_init+0x13c>
        iRet = GoalDspLine(hScreen, 5, tcDisplay, &txTrans[5], 0, true);
    ff6e:	683a      	ldr	r2, [r7, #0]
    ff70:	f107 0358 	add.w	r3, r7, #88	; 0x58
    ff74:	2100      	movs	r1, #0
    ff76:	9100      	str	r1, [sp, #0]
    ff78:	2101      	movs	r1, #1
    ff7a:	9101      	str	r1, [sp, #4]
    ff7c:	4610      	mov	r0, r2
    ff7e:	2105      	movs	r1, #5
    ff80:	461a      	mov	r2, r3
    ff82:	4b61      	ldr	r3, [pc, #388]	; (10108 <FMGReadTransactions+0x3a4>)
    ff84:	f7fd fafc 	bl	d580 <GoalDspLine>
    ff88:	60b8      	str	r0, [r7, #8]
    	CHECK(iRet>=0, lblKO);
    ff8a:	68bb      	ldr	r3, [r7, #8]
    ff8c:	2b00      	cmp	r3, #0
    ff8e:	db5d      	blt.n	1004c <FMGReadTransactions+0x2e8>

		iKey = GoalGetKey(hScreen, gGoalGraphicLibInstance, true, 30*1000, false);          // Wait for key pressed/touched (shortcut)
    ff90:	683a      	ldr	r2, [r7, #0]
    ff92:	f644 1388 	movw	r3, #18824	; 0x4988
    ff96:	f2c0 0302 	movt	r3, #2
    ff9a:	681b      	ldr	r3, [r3, #0]
    ff9c:	2100      	movs	r1, #0
    ff9e:	9100      	str	r1, [sp, #0]
    ffa0:	4610      	mov	r0, r2
    ffa2:	4619      	mov	r1, r3
    ffa4:	2201      	movs	r2, #1
    ffa6:	f247 5330 	movw	r3, #30000	; 0x7530
    ffaa:	f7fd fe1f 	bl	dbec <GoalGetKey>
    ffae:	6178      	str	r0, [r7, #20]

		// Exit from batch
		// ---------------
        if(iKey==0)
    ffb0:	697b      	ldr	r3, [r7, #20]
    ffb2:	2b00      	cmp	r3, #0
    ffb4:	d046      	beq.n	10044 <FMGReadTransactions+0x2e0>
            break;                                                        // Exit loop if nothing is pressed during 5s
        if(iKey==GL_KEY_CANCEL)
    ffb6:	697a      	ldr	r2, [r7, #20]
    ffb8:	f64f 0351 	movw	r3, #63569	; 0xf851
    ffbc:	429a      	cmp	r2, r3
    ffbe:	d043      	beq.n	10048 <FMGReadTransactions+0x2e4>
            break;                                                        // Exit loop if red key is pressed
       
        // Scrolling UP transactions
        // -------------------------
        if (iKey==GL_KEY_UP)                                              // *** Key UP ***
    ffc0:	697a      	ldr	r2, [r7, #20]
    ffc2:	f64f 0359 	movw	r3, #63577	; 0xf859
    ffc6:	429a      	cmp	r2, r3
    ffc8:	d11a      	bne.n	10000 <FMGReadTransactions+0x29c>
		{
			if (iIdx < iBatchIdx)                                         // Reading transaction
    ffca:	68fa      	ldr	r2, [r7, #12]
    ffcc:	693b      	ldr	r3, [r7, #16]
    ffce:	429a      	cmp	r2, r3
    ffd0:	da16      	bge.n	10000 <FMGReadTransactions+0x29c>
			{         
				iIdx++;
    ffd2:	68fb      	ldr	r3, [r7, #12]
    ffd4:	3301      	adds	r3, #1
    ffd6:	60fb      	str	r3, [r7, #12]
		        lLength = sizeof(ST_TRANSAC);
    ffd8:	2340      	movs	r3, #64	; 0x40
    ffda:	607b      	str	r3, [r7, #4]
		    	iRet = FMG_ReadRecord(&xFileInfo, &xTransac, &lLength, FMGMiddle, iIdx);
    ffdc:	f107 0218 	add.w	r2, r7, #24
    ffe0:	1d3b      	adds	r3, r7, #4
    ffe2:	68f9      	ldr	r1, [r7, #12]
    ffe4:	9100      	str	r1, [sp, #0]
    ffe6:	f644 10f0 	movw	r0, #18928	; 0x49f0
    ffea:	f2c0 0002 	movt	r0, #2
    ffee:	4611      	mov	r1, r2
    fff0:	461a      	mov	r2, r3
    fff2:	2301      	movs	r3, #1
    fff4:	f005 fc1e 	bl	15834 <FMG_ReadRecord>
    fff8:	60b8      	str	r0, [r7, #8]
		    	CHECK(iRet==FMG_SUCCESS, lblFmgKO);
    fffa:	68bb      	ldr	r3, [r7, #8]
    fffc:	2b0a      	cmp	r3, #10
    fffe:	d14d      	bne.n	1009c <FMGReadTransactions+0x338>
			}
		}
				
		// Scrolling DOWN transactions
		// ---------------------------
		if (iKey==GL_KEY_DOWN)                                            // *** Key DOWN ***
   10000:	697a      	ldr	r2, [r7, #20]
   10002:	f64f 035a 	movw	r3, #63578	; 0xf85a
   10006:	429a      	cmp	r2, r3
   10008:	f47f af2c 	bne.w	fe64 <FMGReadTransactions+0x100>
		{
        	if (iIdx > 1)                                                 // Reading transaction
   1000c:	68fb      	ldr	r3, [r7, #12]
   1000e:	2b01      	cmp	r3, #1
   10010:	f77f af28 	ble.w	fe64 <FMGReadTransactions+0x100>
			{
				iIdx--;
   10014:	68fb      	ldr	r3, [r7, #12]
   10016:	3b01      	subs	r3, #1
   10018:	60fb      	str	r3, [r7, #12]
		        lLength = sizeof(ST_TRANSAC);
   1001a:	2340      	movs	r3, #64	; 0x40
   1001c:	607b      	str	r3, [r7, #4]
		    	iRet = FMG_ReadRecord(&xFileInfo, &xTransac, &lLength, FMGMiddle, iIdx);
   1001e:	f107 0218 	add.w	r2, r7, #24
   10022:	1d3b      	adds	r3, r7, #4
   10024:	68f9      	ldr	r1, [r7, #12]
   10026:	9100      	str	r1, [sp, #0]
   10028:	f644 10f0 	movw	r0, #18928	; 0x49f0
   1002c:	f2c0 0002 	movt	r0, #2
   10030:	4611      	mov	r1, r2
   10032:	461a      	mov	r2, r3
   10034:	2301      	movs	r3, #1
   10036:	f005 fbfd 	bl	15834 <FMG_ReadRecord>
   1003a:	60b8      	str	r0, [r7, #8]
		    	CHECK(iRet==FMG_SUCCESS, lblFmgKO);
   1003c:	68bb      	ldr	r3, [r7, #8]
   1003e:	2b0a      	cmp	r3, #10
   10040:	d12c      	bne.n	1009c <FMGReadTransactions+0x338>
			}
		}
    }
   10042:	e70f      	b.n	fe64 <FMGReadTransactions+0x100>
		iKey = GoalGetKey(hScreen, gGoalGraphicLibInstance, true, 30*1000, false);          // Wait for key pressed/touched (shortcut)

		// Exit from batch
		// ---------------
        if(iKey==0)
            break;                                                        // Exit loop if nothing is pressed during 5s
   10044:	bf00      	nop
   10046:	e000      	b.n	1004a <FMGReadTransactions+0x2e6>
        if(iKey==GL_KEY_CANCEL)
            break;                                                        // Exit loop if red key is pressed
   10048:	bf00      	nop
		    	CHECK(iRet==FMG_SUCCESS, lblFmgKO);
			}
		}
    }
    
    goto lblEnd;
   1004a:	e03c      	b.n	100c6 <FMGReadTransactions+0x362>

	// Errors treatment 
    // ****************
lblKO:                               // None-classified low level error
	GL_Dialog_Message(gGoalGraphicLibInstance, NULL, "Processing Error", GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
   1004c:	f644 1388 	movw	r3, #18824	; 0x4988
   10050:	f2c0 0302 	movt	r3, #2
   10054:	681b      	ldr	r3, [r3, #0]
   10056:	2201      	movs	r2, #1
   10058:	9200      	str	r2, [sp, #0]
   1005a:	f241 3288 	movw	r2, #5000	; 0x1388
   1005e:	9201      	str	r2, [sp, #4]
   10060:	4618      	mov	r0, r3
   10062:	2100      	movs	r1, #0
   10064:	f64a 12f8 	movw	r2, #43512	; 0xa9f8
   10068:	f2c0 0201 	movt	r2, #1
   1006c:	2304      	movs	r3, #4
   1006e:	f008 fa65 	bl	1853c <GL_Dialog_Message>
	goto lblEnd;
   10072:	e028      	b.n	100c6 <FMGReadTransactions+0x362>
lblEmpty:                            // Batch file empty
	GL_Dialog_Message(gGoalGraphicLibInstance, NULL, "Batch Empty !!!", GL_ICON_WARNING, GL_BUTTON_VALID, 3*1000);
   10074:	f644 1388 	movw	r3, #18824	; 0x4988
   10078:	f2c0 0302 	movt	r3, #2
   1007c:	681b      	ldr	r3, [r3, #0]
   1007e:	2201      	movs	r2, #1
   10080:	9200      	str	r2, [sp, #0]
   10082:	f640 32b8 	movw	r2, #3000	; 0xbb8
   10086:	9201      	str	r2, [sp, #4]
   10088:	4618      	mov	r0, r3
   1008a:	2100      	movs	r1, #0
   1008c:	f64a 1284 	movw	r2, #43396	; 0xa984
   10090:	f2c0 0201 	movt	r2, #1
   10094:	2303      	movs	r3, #3
   10096:	f008 fa51 	bl	1853c <GL_Dialog_Message>
    goto lblEnd;
   1009a:	e014      	b.n	100c6 <FMGReadTransactions+0x362>
lblFmgKO:                            // File Management error
	GL_Dialog_Message(gGoalGraphicLibInstance, NULL, FMG_ErrorMsg(iRet), GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
   1009c:	f644 1388 	movw	r3, #18824	; 0x4988
   100a0:	f2c0 0302 	movt	r3, #2
   100a4:	681c      	ldr	r4, [r3, #0]
   100a6:	68b8      	ldr	r0, [r7, #8]
   100a8:	f000 f830 	bl	1010c <FMG_ErrorMsg>
   100ac:	4603      	mov	r3, r0
   100ae:	2201      	movs	r2, #1
   100b0:	9200      	str	r2, [sp, #0]
   100b2:	f241 3288 	movw	r2, #5000	; 0x1388
   100b6:	9201      	str	r2, [sp, #4]
   100b8:	4620      	mov	r0, r4
   100ba:	2100      	movs	r1, #0
   100bc:	461a      	mov	r2, r3
   100be:	2304      	movs	r3, #4
   100c0:	f008 fa3c 	bl	1853c <GL_Dialog_Message>
	goto lblEnd;
   100c4:	bf00      	nop
lblEnd: 
	if (hScreen)
   100c6:	683b      	ldr	r3, [r7, #0]
   100c8:	2b00      	cmp	r3, #0
   100ca:	d003      	beq.n	100d4 <FMGReadTransactions+0x370>
		GoalDestroyScreen(&hScreen); // Destroy screen
   100cc:	463b      	mov	r3, r7
   100ce:	4618      	mov	r0, r3
   100d0:	f7fd feee 	bl	deb0 <GoalDestroyScreen>
}
   100d4:	f644 1380 	movw	r3, #18816	; 0x4980
   100d8:	f2c0 0302 	movt	r3, #2
   100dc:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
   100e0:	681b      	ldr	r3, [r3, #0]
   100e2:	429a      	cmp	r2, r3
   100e4:	d001      	beq.n	100ea <FMGReadTransactions+0x386>
   100e6:	f7f8 ff03 	bl	8ef0 <__stack_chk_fail>
   100ea:	f107 0794 	add.w	r7, r7, #148	; 0x94
   100ee:	46bd      	mov	sp, r7
   100f0:	bd90      	pop	{r4, r7, pc}
   100f2:	bf00      	nop
   100f4:	0001a5e0 	.word	0x0001a5e0
   100f8:	0001a284 	.word	0x0001a284
   100fc:	0001a330 	.word	0x0001a330
   10100:	0001a3dc 	.word	0x0001a3dc
   10104:	0001a488 	.word	0x0001a488
   10108:	0001a534 	.word	0x0001a534

0001010c <FMG_ErrorMsg>:
//  This function has return value.
//    A message string regarding the error value.
//****************************************************************************

char* FMG_ErrorMsg (int iValue) 
{
   1010c:	b580      	push	{r7, lr}
   1010e:	b084      	sub	sp, #16
   10110:	af00      	add	r7, sp, #0
   10112:	6078      	str	r0, [r7, #4]
   10114:	f644 1380 	movw	r3, #18816	; 0x4980
   10118:	f2c0 0302 	movt	r3, #2
   1011c:	681b      	ldr	r3, [r3, #0]
   1011e:	60fb      	str	r3, [r7, #12]
    // ***************
	char *pcError;
	
	// List error messages 
    // *******************
	switch (iValue)
   10120:	687b      	ldr	r3, [r7, #4]
   10122:	3301      	adds	r3, #1
   10124:	2b20      	cmp	r3, #32
   10126:	f200 80c3 	bhi.w	102b0 <FMG_ErrorMsg+0x1a4>
   1012a:	a201      	add	r2, pc, #4	; (adr r2, 10130 <FMG_ErrorMsg+0x24>)
   1012c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   10130:	000101b5 	.word	0x000101b5
   10134:	000102b1 	.word	0x000102b1
   10138:	000102b1 	.word	0x000102b1
   1013c:	000102b1 	.word	0x000102b1
   10140:	000102b1 	.word	0x000102b1
   10144:	000102b1 	.word	0x000102b1
   10148:	000102b1 	.word	0x000102b1
   1014c:	000102b1 	.word	0x000102b1
   10150:	000102b1 	.word	0x000102b1
   10154:	000102b1 	.word	0x000102b1
   10158:	000102b1 	.word	0x000102b1
   1015c:	000102b1 	.word	0x000102b1
   10160:	000101c1 	.word	0x000101c1
   10164:	000101cd 	.word	0x000101cd
   10168:	000101d9 	.word	0x000101d9
   1016c:	000101e5 	.word	0x000101e5
   10170:	000101f1 	.word	0x000101f1
   10174:	000101fd 	.word	0x000101fd
   10178:	00010209 	.word	0x00010209
   1017c:	00010215 	.word	0x00010215
   10180:	00010221 	.word	0x00010221
   10184:	0001022d 	.word	0x0001022d
   10188:	00010239 	.word	0x00010239
   1018c:	00010245 	.word	0x00010245
   10190:	00010251 	.word	0x00010251
   10194:	0001025d 	.word	0x0001025d
   10198:	00010269 	.word	0x00010269
   1019c:	00010275 	.word	0x00010275
   101a0:	00010281 	.word	0x00010281
   101a4:	0001028d 	.word	0x0001028d
   101a8:	00010299 	.word	0x00010299
   101ac:	000102b1 	.word	0x000102b1
   101b0:	000102a5 	.word	0x000102a5
	{
	case -1:                                   pcError="MEMORY FAILED";    break; // Key unknown from the data base
   101b4:	f64a 239c 	movw	r3, #43676	; 0xaa9c
   101b8:	f2c0 0301 	movt	r3, #1
   101bc:	60bb      	str	r3, [r7, #8]
   101be:	e07d      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	                       // ERRORS CODES
    // *** Generic errors ***
	case FMG_FILE_DOES_NOT_EXIST:              pcError="Telium_File_t NOT EXIST";   break;
   101c0:	f64a 23ac 	movw	r3, #43692	; 0xaaac
   101c4:	f2c0 0301 	movt	r3, #1
   101c8:	60bb      	str	r3, [r7, #8]
   101ca:	e077      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_FILE_ALREADY_EXIST:               pcError="Telium_File_t YET EXIST";   break;
   101cc:	f64a 23c4 	movw	r3, #43716	; 0xaac4
   101d0:	f2c0 0301 	movt	r3, #1
   101d4:	60bb      	str	r3, [r7, #8]
   101d6:	e071      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_BAD_RECORD_TYPE:                  pcError="BAD RECORD TYPE";  break;
   101d8:	f64a 23dc 	movw	r3, #43740	; 0xaadc
   101dc:	f2c0 0301 	movt	r3, #1
   101e0:	60bb      	str	r3, [r7, #8]
   101e2:	e06b      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_BAD_CHECKSUM_TYPE:                pcError="BAD CHKSUM TYPE";  break;
   101e4:	f64a 23ec 	movw	r3, #43756	; 0xaaec
   101e8:	f2c0 0301 	movt	r3, #1
   101ec:	60bb      	str	r3, [r7, #8]
   101ee:	e065      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_BAD_FILE_TYPE:                    pcError="BAD Telium_File_t TYPE";    break;
   101f0:	f64a 23fc 	movw	r3, #43772	; 0xaafc
   101f4:	f2c0 0301 	movt	r3, #1
   101f8:	60bb      	str	r3, [r7, #8]
   101fa:	e05f      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_BAD_RECORD_POSITION:              pcError="BAD RECORD INDEX"; break;
   101fc:	f64a 3314 	movw	r3, #43796	; 0xab14
   10200:	f2c0 0301 	movt	r3, #1
   10204:	60bb      	str	r3, [r7, #8]
   10206:	e059      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_BAD_CREATION_PARAM:               pcError="BAD CREATE PARAM"; break;
   10208:	f64a 3328 	movw	r3, #43816	; 0xab28
   1020c:	f2c0 0301 	movt	r3, #1
   10210:	60bb      	str	r3, [r7, #8]
   10212:	e053      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_BAD_PATH:                         pcError="BAD PATH";         break;
   10214:	f64a 333c 	movw	r3, #43836	; 0xab3c
   10218:	f2c0 0301 	movt	r3, #1
   1021c:	60bb      	str	r3, [r7, #8]
   1021e:	e04d      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_OPEN_FILE_PROBLEM:                pcError="OPEN Telium_File_t ERROR";  break;
   10220:	f64a 3348 	movw	r3, #43848	; 0xab48
   10224:	f2c0 0301 	movt	r3, #1
   10228:	60bb      	str	r3, [r7, #8]
   1022a:	e047      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_CREATE_FILE_PROBLEM:              pcError="CREATE Telium_File_t ERR";  break;
   1022c:	f64a 3364 	movw	r3, #43876	; 0xab64
   10230:	f2c0 0301 	movt	r3, #1
   10234:	60bb      	str	r3, [r7, #8]
   10236:	e041      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_DELETE_FILE_PROBLEM:              pcError="DELETE Telium_File_t ERR";  break;
   10238:	f64a 3380 	movw	r3, #43904	; 0xab80
   1023c:	f2c0 0301 	movt	r3, #1
   10240:	60bb      	str	r3, [r7, #8]
   10242:	e03b      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_NB_FILE_PROBLEM:                  pcError="Telium_File_t INDEX ERROR"; break;
   10244:	f64a 339c 	movw	r3, #43932	; 0xab9c
   10248:	f2c0 0301 	movt	r3, #1
   1024c:	60bb      	str	r3, [r7, #8]
   1024e:	e035      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_MANAGEMENT_ERROR:                 pcError="Telium_File_t ERROR";       break;
   10250:	f64a 33b8 	movw	r3, #43960	; 0xabb8
   10254:	f2c0 0301 	movt	r3, #1
   10258:	60bb      	str	r3, [r7, #8]
   1025a:	e02f      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_ADD_RECORD_ERROR:                 pcError="ADD RECORD ERR";   break;
   1025c:	f64a 33cc 	movw	r3, #43980	; 0xabcc
   10260:	f2c0 0301 	movt	r3, #1
   10264:	60bb      	str	r3, [r7, #8]
   10266:	e029      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_READ_RECORD_ERROR:                pcError="READ RECORD ERR";  break;
   10268:	f64a 33dc 	movw	r3, #43996	; 0xabdc
   1026c:	f2c0 0301 	movt	r3, #1
   10270:	60bb      	str	r3, [r7, #8]
   10272:	e023      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_DELETE_RECORD_ERROR:              pcError="DEL RECORD ERR";   break;
   10274:	f64a 33ec 	movw	r3, #44012	; 0xabec
   10278:	f2c0 0301 	movt	r3, #1
   1027c:	60bb      	str	r3, [r7, #8]
   1027e:	e01d      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_CHECKSUM_PROBLEM:                 pcError="CHECKSUM ERROR";   break;
   10280:	f64a 33fc 	movw	r3, #44028	; 0xabfc
   10284:	f2c0 0301 	movt	r3, #1
   10288:	60bb      	str	r3, [r7, #8]
   1028a:	e017      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_CORRUPTED_FILE:                   pcError="CORRUPTED Telium_File_t";   break;
   1028c:	f64a 430c 	movw	r3, #44044	; 0xac0c
   10290:	f2c0 0301 	movt	r3, #1
   10294:	60bb      	str	r3, [r7, #8]
   10296:	e011      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_CORRUPTED_RECORD:                 pcError="CORRUPTED RECORD"; break;
   10298:	f64a 4324 	movw	r3, #44068	; 0xac24
   1029c:	f2c0 0301 	movt	r3, #1
   102a0:	60bb      	str	r3, [r7, #8]
   102a2:	e00b      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	case FMG_INIT_KO:                          pcError="FMG INIT ERROR";   break;
   102a4:	f64a 4338 	movw	r3, #44088	; 0xac38
   102a8:	f2c0 0301 	movt	r3, #1
   102ac:	60bb      	str	r3, [r7, #8]
   102ae:	e005      	b.n	102bc <FMG_ErrorMsg+0x1b0>
	// *** Other errors
	default:                                   pcError="ERROR UNKNOWN";    break;
   102b0:	f64a 4348 	movw	r3, #44104	; 0xac48
   102b4:	f2c0 0301 	movt	r3, #1
   102b8:	60bb      	str	r3, [r7, #8]
   102ba:	bf00      	nop
	}
	
	return pcError;
   102bc:	68bb      	ldr	r3, [r7, #8]
}
   102be:	4618      	mov	r0, r3
   102c0:	f644 1380 	movw	r3, #18816	; 0x4980
   102c4:	f2c0 0302 	movt	r3, #2
   102c8:	68fa      	ldr	r2, [r7, #12]
   102ca:	681b      	ldr	r3, [r3, #0]
   102cc:	429a      	cmp	r2, r3
   102ce:	d001      	beq.n	102d4 <FMG_ErrorMsg+0x1c8>
   102d0:	f7f8 fe0e 	bl	8ef0 <__stack_chk_fail>
   102d4:	f107 0710 	add.w	r7, r7, #16
   102d8:	46bd      	mov	sp, r7
   102da:	bd80      	pop	{r7, pc}

000102dc <LL_ErrorMsg>:
//  This function has return value.
//    A message string regarding the error value.
//****************************************************************************

char* LL_ErrorMsg (int iValue) 
{
   102dc:	b580      	push	{r7, lr}
   102de:	b084      	sub	sp, #16
   102e0:	af00      	add	r7, sp, #0
   102e2:	6078      	str	r0, [r7, #4]
   102e4:	f644 1380 	movw	r3, #18816	; 0x4980
   102e8:	f2c0 0302 	movt	r3, #2
   102ec:	681b      	ldr	r3, [r3, #0]
   102ee:	60fb      	str	r3, [r7, #12]
    // ***************
	char *pcError;
	
	// List error messages 
    // *******************
	switch (iValue)
   102f0:	687b      	ldr	r3, [r7, #4]
   102f2:	f46f 727e 	mvn.w	r2, #1016	; 0x3f8
   102f6:	4293      	cmp	r3, r2
   102f8:	f000 8294 	beq.w	10824 <LL_ErrorMsg+0x548>
   102fc:	f46f 727e 	mvn.w	r2, #1016	; 0x3f8
   10300:	4293      	cmp	r3, r2
   10302:	f300 80f9 	bgt.w	104f8 <LL_ErrorMsg+0x21c>
   10306:	f64f 22e4 	movw	r2, #64228	; 0xfae4
   1030a:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   1030e:	4293      	cmp	r3, r2
   10310:	f000 82ee 	beq.w	108f0 <LL_ErrorMsg+0x614>
   10314:	f64f 22e4 	movw	r2, #64228	; 0xfae4
   10318:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   1031c:	4293      	cmp	r3, r2
   1031e:	dc78      	bgt.n	10412 <LL_ErrorMsg+0x136>
   10320:	f64f 12bd 	movw	r2, #63933	; 0xf9bd
   10324:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10328:	4293      	cmp	r3, r2
   1032a:	f000 8317 	beq.w	1095c <LL_ErrorMsg+0x680>
   1032e:	f64f 12bd 	movw	r2, #63933	; 0xf9bd
   10332:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10336:	4293      	cmp	r3, r2
   10338:	dc35      	bgt.n	103a6 <LL_ErrorMsg+0xca>
   1033a:	f64f 125a 	movw	r2, #63834	; 0xf95a
   1033e:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10342:	4293      	cmp	r3, r2
   10344:	f000 8322 	beq.w	1098c <LL_ErrorMsg+0x6b0>
   10348:	f64f 125a 	movw	r2, #63834	; 0xf95a
   1034c:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10350:	4293      	cmp	r3, r2
   10352:	dc12      	bgt.n	1037a <LL_ErrorMsg+0x9e>
   10354:	f513 6fe1 	cmn.w	r3, #1800	; 0x708
   10358:	f000 8324 	beq.w	109a4 <LL_ErrorMsg+0x6c8>
   1035c:	f64f 1259 	movw	r2, #63833	; 0xf959
   10360:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10364:	4293      	cmp	r3, r2
   10366:	f000 8317 	beq.w	10998 <LL_ErrorMsg+0x6bc>
   1036a:	f64d 02f0 	movw	r2, #55536	; 0xd8f0
   1036e:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10372:	4293      	cmp	r3, r2
   10374:	f000 831c 	beq.w	109b0 <LL_ErrorMsg+0x6d4>
   10378:	e320      	b.n	109bc <LL_ErrorMsg+0x6e0>
   1037a:	f64f 12bb 	movw	r2, #63931	; 0xf9bb
   1037e:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10382:	4293      	cmp	r3, r2
   10384:	f000 82f6 	beq.w	10974 <LL_ErrorMsg+0x698>
   10388:	f64f 12bb 	movw	r2, #63931	; 0xf9bb
   1038c:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10390:	4293      	cmp	r3, r2
   10392:	f300 82e9 	bgt.w	10968 <LL_ErrorMsg+0x68c>
   10396:	f64f 125b 	movw	r2, #63835	; 0xf95b
   1039a:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   1039e:	4293      	cmp	r3, r2
   103a0:	f000 82ee 	beq.w	10980 <LL_ErrorMsg+0x6a4>
   103a4:	e30a      	b.n	109bc <LL_ErrorMsg+0x6e0>
   103a6:	f64f 2222 	movw	r2, #64034	; 0xfa22
   103aa:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   103ae:	4293      	cmp	r3, r2
   103b0:	f000 82bc 	beq.w	1092c <LL_ErrorMsg+0x650>
   103b4:	f64f 2222 	movw	r2, #64034	; 0xfa22
   103b8:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   103bc:	4293      	cmp	r3, r2
   103be:	dc0e      	bgt.n	103de <LL_ErrorMsg+0x102>
   103c0:	f46f 62c8 	mvn.w	r2, #1600	; 0x640
   103c4:	4293      	cmp	r3, r2
   103c6:	f000 82bd 	beq.w	10944 <LL_ErrorMsg+0x668>
   103ca:	f46f 62c8 	mvn.w	r2, #1600	; 0x640
   103ce:	4293      	cmp	r3, r2
   103d0:	f2c0 82be 	blt.w	10950 <LL_ErrorMsg+0x674>
   103d4:	f513 6fc8 	cmn.w	r3, #1600	; 0x640
   103d8:	f000 82ae 	beq.w	10938 <LL_ErrorMsg+0x65c>
   103dc:	e2ee      	b.n	109bc <LL_ErrorMsg+0x6e0>
   103de:	f64f 2224 	movw	r2, #64036	; 0xfa24
   103e2:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   103e6:	4293      	cmp	r3, r2
   103e8:	f000 8294 	beq.w	10914 <LL_ErrorMsg+0x638>
   103ec:	f64f 2224 	movw	r2, #64036	; 0xfa24
   103f0:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   103f4:	4293      	cmp	r3, r2
   103f6:	f2c0 8293 	blt.w	10920 <LL_ErrorMsg+0x644>
   103fa:	f513 6faf 	cmn.w	r3, #1400	; 0x578
   103fe:	f000 8283 	beq.w	10908 <LL_ErrorMsg+0x62c>
   10402:	f64f 22e3 	movw	r2, #64227	; 0xfae3
   10406:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   1040a:	4293      	cmp	r3, r2
   1040c:	f000 8276 	beq.w	108fc <LL_ErrorMsg+0x620>
   10410:	e2d4      	b.n	109bc <LL_ErrorMsg+0x6e0>
   10412:	f64f 22ec 	movw	r2, #64236	; 0xfaec
   10416:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   1041a:	4293      	cmp	r3, r2
   1041c:	f000 8238 	beq.w	10890 <LL_ErrorMsg+0x5b4>
   10420:	f64f 22ec 	movw	r2, #64236	; 0xfaec
   10424:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10428:	4293      	cmp	r3, r2
   1042a:	dc24      	bgt.n	10476 <LL_ErrorMsg+0x19a>
   1042c:	f513 6fa3 	cmn.w	r3, #1304	; 0x518
   10430:	f000 8246 	beq.w	108c0 <LL_ErrorMsg+0x5e4>
   10434:	f513 6fa3 	cmn.w	r3, #1304	; 0x518
   10438:	dc0e      	bgt.n	10458 <LL_ErrorMsg+0x17c>
   1043a:	f64f 22e6 	movw	r2, #64230	; 0xfae6
   1043e:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10442:	4293      	cmp	r3, r2
   10444:	f000 8248 	beq.w	108d8 <LL_ErrorMsg+0x5fc>
   10448:	f64f 22e6 	movw	r2, #64230	; 0xfae6
   1044c:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10450:	4293      	cmp	r3, r2
   10452:	f300 823b 	bgt.w	108cc <LL_ErrorMsg+0x5f0>
   10456:	e245      	b.n	108e4 <LL_ErrorMsg+0x608>
   10458:	f64f 22ea 	movw	r2, #64234	; 0xfaea
   1045c:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10460:	4293      	cmp	r3, r2
   10462:	f000 8221 	beq.w	108a8 <LL_ErrorMsg+0x5cc>
   10466:	f64f 22ea 	movw	r2, #64234	; 0xfaea
   1046a:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   1046e:	4293      	cmp	r3, r2
   10470:	f300 8214 	bgt.w	1089c <LL_ErrorMsg+0x5c0>
   10474:	e21e      	b.n	108b4 <LL_ErrorMsg+0x5d8>
   10476:	f513 6f96 	cmn.w	r3, #1200	; 0x4b0
   1047a:	f000 81f1 	beq.w	10860 <LL_ErrorMsg+0x584>
   1047e:	f513 6f96 	cmn.w	r3, #1200	; 0x4b0
   10482:	dc15      	bgt.n	104b0 <LL_ErrorMsg+0x1d4>
   10484:	f64f 324e 	movw	r2, #64334	; 0xfb4e
   10488:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   1048c:	4293      	cmp	r3, r2
   1048e:	f000 81f3 	beq.w	10878 <LL_ErrorMsg+0x59c>
   10492:	f64f 324e 	movw	r2, #64334	; 0xfb4e
   10496:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   1049a:	4293      	cmp	r3, r2
   1049c:	f300 81e6 	bgt.w	1086c <LL_ErrorMsg+0x590>
   104a0:	f64f 324d 	movw	r2, #64333	; 0xfb4d
   104a4:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   104a8:	4293      	cmp	r3, r2
   104aa:	f000 81eb 	beq.w	10884 <LL_ErrorMsg+0x5a8>
   104ae:	e285      	b.n	109bc <LL_ErrorMsg+0x6e0>
   104b0:	f64f 32b4 	movw	r2, #64436	; 0xfbb4
   104b4:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   104b8:	4293      	cmp	r3, r2
   104ba:	f000 81c5 	beq.w	10848 <LL_ErrorMsg+0x56c>
   104be:	f64f 32b4 	movw	r2, #64436	; 0xfbb4
   104c2:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   104c6:	4293      	cmp	r3, r2
   104c8:	dc07      	bgt.n	104da <LL_ErrorMsg+0x1fe>
   104ca:	f64f 32b3 	movw	r2, #64435	; 0xfbb3
   104ce:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   104d2:	4293      	cmp	r3, r2
   104d4:	f000 81be 	beq.w	10854 <LL_ErrorMsg+0x578>
   104d8:	e270      	b.n	109bc <LL_ErrorMsg+0x6e0>
   104da:	f64f 4205 	movw	r2, #64517	; 0xfc05
   104de:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   104e2:	4293      	cmp	r3, r2
   104e4:	f000 81aa 	beq.w	1083c <LL_ErrorMsg+0x560>
   104e8:	f64f 4206 	movw	r2, #64518	; 0xfc06
   104ec:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   104f0:	4293      	cmp	r3, r2
   104f2:	f000 819d 	beq.w	10830 <LL_ErrorMsg+0x554>
   104f6:	e261      	b.n	109bc <LL_ErrorMsg+0x6e0>
   104f8:	f513 7f7a 	cmn.w	r3, #1000	; 0x3e8
   104fc:	f000 812c 	beq.w	10758 <LL_ErrorMsg+0x47c>
   10500:	f513 7f7a 	cmn.w	r3, #1000	; 0x3e8
   10504:	dc62      	bgt.n	105cc <LL_ErrorMsg+0x2f0>
   10506:	f46f 727c 	mvn.w	r2, #1008	; 0x3f0
   1050a:	4293      	cmp	r3, r2
   1050c:	f000 815a 	beq.w	107c4 <LL_ErrorMsg+0x4e8>
   10510:	f46f 727c 	mvn.w	r2, #1008	; 0x3f0
   10514:	4293      	cmp	r3, r2
   10516:	dc26      	bgt.n	10566 <LL_ErrorMsg+0x28a>
   10518:	f46f 727d 	mvn.w	r2, #1012	; 0x3f4
   1051c:	4293      	cmp	r3, r2
   1051e:	f000 8169 	beq.w	107f4 <LL_ErrorMsg+0x518>
   10522:	f46f 727d 	mvn.w	r2, #1012	; 0x3f4
   10526:	4293      	cmp	r3, r2
   10528:	dc0e      	bgt.n	10548 <LL_ErrorMsg+0x26c>
   1052a:	f64f 4209 	movw	r2, #64521	; 0xfc09
   1052e:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10532:	4293      	cmp	r3, r2
   10534:	f000 816a 	beq.w	1080c <LL_ErrorMsg+0x530>
   10538:	f64f 4209 	movw	r2, #64521	; 0xfc09
   1053c:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10540:	4293      	cmp	r3, r2
   10542:	f300 815d 	bgt.w	10800 <LL_ErrorMsg+0x524>
   10546:	e167      	b.n	10818 <LL_ErrorMsg+0x53c>
   10548:	f64f 420d 	movw	r2, #64525	; 0xfc0d
   1054c:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10550:	4293      	cmp	r3, r2
   10552:	f000 8143 	beq.w	107dc <LL_ErrorMsg+0x500>
   10556:	f64f 420d 	movw	r2, #64525	; 0xfc0d
   1055a:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   1055e:	4293      	cmp	r3, r2
   10560:	f300 8136 	bgt.w	107d0 <LL_ErrorMsg+0x4f4>
   10564:	e140      	b.n	107e8 <LL_ErrorMsg+0x50c>
   10566:	f46f 727b 	mvn.w	r2, #1004	; 0x3ec
   1056a:	4293      	cmp	r3, r2
   1056c:	f000 8112 	beq.w	10794 <LL_ErrorMsg+0x4b8>
   10570:	f46f 727b 	mvn.w	r2, #1004	; 0x3ec
   10574:	4293      	cmp	r3, r2
   10576:	dc0e      	bgt.n	10596 <LL_ErrorMsg+0x2ba>
   10578:	f64f 4211 	movw	r2, #64529	; 0xfc11
   1057c:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10580:	4293      	cmp	r3, r2
   10582:	f000 8113 	beq.w	107ac <LL_ErrorMsg+0x4d0>
   10586:	f64f 4211 	movw	r2, #64529	; 0xfc11
   1058a:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   1058e:	4293      	cmp	r3, r2
   10590:	f300 8106 	bgt.w	107a0 <LL_ErrorMsg+0x4c4>
   10594:	e110      	b.n	107b8 <LL_ErrorMsg+0x4dc>
   10596:	f64f 4215 	movw	r2, #64533	; 0xfc15
   1059a:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   1059e:	4293      	cmp	r3, r2
   105a0:	f000 80ec 	beq.w	1077c <LL_ErrorMsg+0x4a0>
   105a4:	f64f 4215 	movw	r2, #64533	; 0xfc15
   105a8:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   105ac:	4293      	cmp	r3, r2
   105ae:	f2c0 80eb 	blt.w	10788 <LL_ErrorMsg+0x4ac>
   105b2:	f64f 4216 	movw	r2, #64534	; 0xfc16
   105b6:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   105ba:	4293      	cmp	r3, r2
   105bc:	f000 80d8 	beq.w	10770 <LL_ErrorMsg+0x494>
   105c0:	f46f 727a 	mvn.w	r2, #1000	; 0x3e8
   105c4:	4293      	cmp	r3, r2
   105c6:	f000 80cd 	beq.w	10764 <LL_ErrorMsg+0x488>
   105ca:	e1f7      	b.n	109bc <LL_ErrorMsg+0x6e0>
   105cc:	f513 7f75 	cmn.w	r3, #980	; 0x3d4
   105d0:	d07a      	beq.n	106c8 <LL_ErrorMsg+0x3ec>
   105d2:	f513 7f75 	cmn.w	r3, #980	; 0x3d4
   105d6:	dc31      	bgt.n	1063c <LL_ErrorMsg+0x360>
   105d8:	f64f 4222 	movw	r2, #64546	; 0xfc22
   105dc:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   105e0:	4293      	cmp	r3, r2
   105e2:	d059      	beq.n	10698 <LL_ErrorMsg+0x3bc>
   105e4:	f64f 4222 	movw	r2, #64546	; 0xfc22
   105e8:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   105ec:	4293      	cmp	r3, r2
   105ee:	dc0a      	bgt.n	10606 <LL_ErrorMsg+0x32a>
   105f0:	f513 7f78 	cmn.w	r3, #992	; 0x3e0
   105f4:	d05c      	beq.n	106b0 <LL_ErrorMsg+0x3d4>
   105f6:	f513 7f78 	cmn.w	r3, #992	; 0x3e0
   105fa:	dc53      	bgt.n	106a4 <LL_ErrorMsg+0x3c8>
   105fc:	f46f 7278 	mvn.w	r2, #992	; 0x3e0
   10600:	4293      	cmp	r3, r2
   10602:	d05b      	beq.n	106bc <LL_ErrorMsg+0x3e0>
   10604:	e1da      	b.n	109bc <LL_ErrorMsg+0x6e0>
   10606:	f64f 4229 	movw	r2, #64553	; 0xfc29
   1060a:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   1060e:	4293      	cmp	r3, r2
   10610:	d06c      	beq.n	106ec <LL_ErrorMsg+0x410>
   10612:	f64f 4229 	movw	r2, #64553	; 0xfc29
   10616:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   1061a:	4293      	cmp	r3, r2
   1061c:	dc03      	bgt.n	10626 <LL_ErrorMsg+0x34a>
   1061e:	f513 7f76 	cmn.w	r3, #984	; 0x3d8
   10622:	d069      	beq.n	106f8 <LL_ErrorMsg+0x41c>
   10624:	e1ca      	b.n	109bc <LL_ErrorMsg+0x6e0>
   10626:	f64f 422a 	movw	r2, #64554	; 0xfc2a
   1062a:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   1062e:	4293      	cmp	r3, r2
   10630:	d056      	beq.n	106e0 <LL_ErrorMsg+0x404>
   10632:	f46f 7275 	mvn.w	r2, #980	; 0x3d4
   10636:	4293      	cmp	r3, r2
   10638:	d04c      	beq.n	106d4 <LL_ErrorMsg+0x3f8>
   1063a:	e1bf      	b.n	109bc <LL_ErrorMsg+0x6e0>
   1063c:	f513 7f70 	cmn.w	r3, #960	; 0x3c0
   10640:	d072      	beq.n	10728 <LL_ErrorMsg+0x44c>
   10642:	f513 7f70 	cmn.w	r3, #960	; 0x3c0
   10646:	dc0d      	bgt.n	10664 <LL_ErrorMsg+0x388>
   10648:	f46f 7272 	mvn.w	r2, #968	; 0x3c8
   1064c:	4293      	cmp	r3, r2
   1064e:	d05f      	beq.n	10710 <LL_ErrorMsg+0x434>
   10650:	f513 7f72 	cmn.w	r3, #968	; 0x3c8
   10654:	d062      	beq.n	1071c <LL_ErrorMsg+0x440>
   10656:	f64f 4236 	movw	r2, #64566	; 0xfc36
   1065a:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   1065e:	4293      	cmp	r3, r2
   10660:	d050      	beq.n	10704 <LL_ErrorMsg+0x428>
   10662:	e1ab      	b.n	109bc <LL_ErrorMsg+0x6e0>
   10664:	f64f 4242 	movw	r2, #64578	; 0xfc42
   10668:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   1066c:	4293      	cmp	r3, r2
   1066e:	d067      	beq.n	10740 <LL_ErrorMsg+0x464>
   10670:	f64f 4242 	movw	r2, #64578	; 0xfc42
   10674:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10678:	4293      	cmp	r3, r2
   1067a:	db5b      	blt.n	10734 <LL_ErrorMsg+0x458>
   1067c:	f46f 726f 	mvn.w	r2, #956	; 0x3bc
   10680:	4293      	cmp	r3, r2
   10682:	d063      	beq.n	1074c <LL_ErrorMsg+0x470>
   10684:	f1b3 3fff 	cmp.w	r3, #4294967295
   10688:	f040 8198 	bne.w	109bc <LL_ErrorMsg+0x6e0>
	{
	case -1:                                    pcError="";                 break;  // Timeout/Cancel at GPRS level
   1068c:	f64a 4358 	movw	r3, #44120	; 0xac58
   10690:	f2c0 0301 	movt	r3, #1
   10694:	60bb      	str	r3, [r7, #8]
   10696:	e197      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	                       // STATUS CODES (re-define in Training.h)
	// *** GPRS status ***
	case LL_STATUS_GPRS_NO_SIM:                 pcError="NO SIM";           break;  // No SIM card is inserted in the terminal
   10698:	f64a 435c 	movw	r3, #44124	; 0xac5c
   1069c:	f2c0 0301 	movt	r3, #1
   106a0:	60bb      	str	r3, [r7, #8]
   106a2:	e191      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_STATUS_GPRS_ERR_SIM_LOCK:           pcError="SIM LOCKED";       break;  // The SIM card is locked, enter PUK from Manager menu
   106a4:	f64a 4364 	movw	r3, #44132	; 0xac64
   106a8:	f2c0 0301 	movt	r3, #1
   106ac:	60bb      	str	r3, [r7, #8]
   106ae:	e18b      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_STATUS_GPRS_ERR_PPP:                pcError="GPRS PPP ERROR";   break;  // Error occurred during the PPP link establishment
   106b0:	f64a 4370 	movw	r3, #44144	; 0xac70
   106b4:	f2c0 0301 	movt	r3, #1
   106b8:	60bb      	str	r3, [r7, #8]
   106ba:	e185      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_STATUS_GPRS_ERR_UNKNOWN:            pcError="GPRS UNKNOWN ERR"; break;  // Error GPRS status unknown
   106bc:	f64a 4380 	movw	r3, #44160	; 0xac80
   106c0:	f2c0 0301 	movt	r3, #1
   106c4:	60bb      	str	r3, [r7, #8]
   106c6:	e17f      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	// *** ETHERNET status ***
	case LL_STATUS_ETH_AVAILABLE:               pcError="LINK AVAILABLE";   break;  // The Ethernet link is available and ready to perform a communication
   106c8:	f64a 4394 	movw	r3, #44180	; 0xac94
   106cc:	f2c0 0301 	movt	r3, #1
   106d0:	60bb      	str	r3, [r7, #8]
   106d2:	e179      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_STATUS_ETH_NO_DEFAULT_ROUTE:        pcError="NO DEFAULT ROUTE"; break;  // No default route is configured for Ethernet
   106d4:	f64a 43a4 	movw	r3, #44196	; 0xaca4
   106d8:	f2c0 0301 	movt	r3, #1
   106dc:	60bb      	str	r3, [r7, #8]
   106de:	e173      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_STATUS_ETH_NOT_PLUGGED:             pcError="CABLE NOT PLUG";   break;  // The Ethernet cable is not plugged to the terminal
   106e0:	f64a 43b8 	movw	r3, #44216	; 0xacb8
   106e4:	f2c0 0301 	movt	r3, #1
   106e8:	60bb      	str	r3, [r7, #8]
   106ea:	e16d      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_STATUS_ETH_BASE_NOT_READY:          pcError="BASE NOT READY";   break;  // The link between the Ethernet base and the terminal is not ready yet
   106ec:	f64a 43c8 	movw	r3, #44232	; 0xacc8
   106f0:	f2c0 0301 	movt	r3, #1
   106f4:	60bb      	str	r3, [r7, #8]
   106f6:	e167      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_STATUS_ETH_OUT_OF_BASE:             pcError="OUT OF BASE";      break;  // An Ethernet link is available through a base, but the terminal needs to be on its cradle to use it
   106f8:	f64a 43d8 	movw	r3, #44248	; 0xacd8
   106fc:	f2c0 0301 	movt	r3, #1
   10700:	60bb      	str	r3, [r7, #8]
   10702:	e161      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	// *** PHYSICAL status ***
	case LL_STATUS_PHY_PERIPHERAL_BUSY:         pcError="PERIPH BUSY";      break;  // The specified interface of the base is already used
   10704:	f64a 43e4 	movw	r3, #44260	; 0xace4
   10708:	f2c0 0301 	movt	r3, #1
   1070c:	60bb      	str	r3, [r7, #8]
   1070e:	e15b      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_STATUS_PHY_PERIPHERAL_OUT_OF_BASE:  pcError="OUT OF BASE";      break;  // The peripheral can't be used since the terminal is not on its cradle
   10710:	f64a 43d8 	movw	r3, #44248	; 0xacd8
   10714:	f2c0 0301 	movt	r3, #1
   10718:	60bb      	str	r3, [r7, #8]
   1071a:	e155      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_STATUS_PHY_CONVERTER_NOT_PLUGGED:   pcError="CONVERT NOT PLUG"; break;  // The converter is unplugged
   1071c:	f64a 43f0 	movw	r3, #44272	; 0xacf0
   10720:	f2c0 0301 	movt	r3, #1
   10724:	60bb      	str	r3, [r7, #8]
   10726:	e14f      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	// *** BLUETOOTH status ***
	case LL_STATUS_BT_NO_BASE_ASSOCIATED:       pcError="NO BASE ASSOCIAT"; break;  // No base is associated with the terminal
   10728:	f64a 5304 	movw	r3, #44292	; 0xad04
   1072c:	f2c0 0301 	movt	r3, #1
   10730:	60bb      	str	r3, [r7, #8]
   10732:	e149      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_STATUS_BT_PERIPHERAL_NOT_AVAILABLE: pcError="PB BASE ASSOCIAT"; break;  // The associated base does not have the specified communication interface
   10734:	f64a 5318 	movw	r3, #44312	; 0xad18
   10738:	f2c0 0301 	movt	r3, #1
   1073c:	60bb      	str	r3, [r7, #8]
   1073e:	e143      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_STATUS_BT_PERIPHERAL_BUSY:          pcError="BASE BUSY";        break;  // The specified interface of the base is already used
   10740:	f64a 532c 	movw	r3, #44332	; 0xad2c
   10744:	f2c0 0301 	movt	r3, #1
   10748:	60bb      	str	r3, [r7, #8]
   1074a:	e13d      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_STATUS_BT_BASE_NOT_AVAILABLE:       pcError="BASE UNKNOWN";     break;  // The specified base is not available
   1074c:	f64a 5338 	movw	r3, #44344	; 0xad38
   10750:	f2c0 0301 	movt	r3, #1
   10754:	60bb      	str	r3, [r7, #8]
   10756:	e137      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	                       // ERRORS CODES
    // *** Generic errors ***
	case LL_ERROR_INTERNAL_RESOURCE:            pcError="RESOURCE ERROR";   break;  // Error in resource allocation (Refer the diagnostic ticket for more information)
   10758:	f64a 5348 	movw	r3, #44360	; 0xad48
   1075c:	f2c0 0301 	movt	r3, #1
   10760:	60bb      	str	r3, [r7, #8]
   10762:	e131      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_UNKNOWN_CONFIG:               pcError="UNKOWN CONFIG";    break;  // Unknown Link Layer configuration
   10764:	f64a 5358 	movw	r3, #44376	; 0xad58
   10768:	f2c0 0301 	movt	r3, #1
   1076c:	60bb      	str	r3, [r7, #8]
   1076e:	e12b      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_INVALID_HANDLE:               pcError="INVALID HANDLE";   break;  // The specified handle is not valid
   10770:	f64a 5368 	movw	r3, #44392	; 0xad68
   10774:	f2c0 0301 	movt	r3, #1
   10778:	60bb      	str	r3, [r7, #8]
   1077a:	e125      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_SERVICE_NOT_SUPPORTED:        pcError="INVALID SERVICE";  break;  // Service from the Link Layer is not supported
   1077c:	f64a 5378 	movw	r3, #44408	; 0xad78
   10780:	f2c0 0301 	movt	r3, #1
   10784:	60bb      	str	r3, [r7, #8]
   10786:	e11f      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_TIMEOUT:                      pcError="TIMEOUT/CANCEL";   break;  // A timeout has expired
   10788:	f64a 5388 	movw	r3, #44424	; 0xad88
   1078c:	f2c0 0301 	movt	r3, #1
   10790:	60bb      	str	r3, [r7, #8]
   10792:	e119      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_INVALID_PARAMETER:            pcError="INVALID PARAM";    break;  // The specified parameter is not valid
   10794:	f64a 5398 	movw	r3, #44440	; 0xad98
   10798:	f2c0 0301 	movt	r3, #1
   1079c:	60bb      	str	r3, [r7, #8]
   1079e:	e113      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_NOT_CONNECTED:                pcError="NOT CONNECT";      break;  // The communication has been disconnected (The link has been disconnected by the server)
   107a0:	f64a 53a8 	movw	r3, #44456	; 0xada8
   107a4:	f2c0 0301 	movt	r3, #1
   107a8:	60bb      	str	r3, [r7, #8]
   107aa:	e10d      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_ALREADY_CONNECTED:            pcError="ALREADY CONNECT";  break;  // You can not modify or delete a configuration that is in use (Disconnect it first)
   107ac:	f64a 53b4 	movw	r3, #44468	; 0xadb4
   107b0:	f2c0 0301 	movt	r3, #1
   107b4:	60bb      	str	r3, [r7, #8]
   107b6:	e107      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_DISCONNECTED:                 pcError="DISCONNECT";       break;  // The communication is disconnected due to a protocol or physical error
   107b8:	f64a 53c4 	movw	r3, #44484	; 0xadc4
   107bc:	f2c0 0301 	movt	r3, #1
   107c0:	60bb      	str	r3, [r7, #8]
   107c2:	e101      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_BUSY:                         pcError="BUSY";             break;  // The communication is busy
   107c4:	f64a 53d0 	movw	r3, #44496	; 0xadd0
   107c8:	f2c0 0301 	movt	r3, #1
   107cc:	60bb      	str	r3, [r7, #8]
   107ce:	e0fb      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_SERVICE_FORBIDDEN:            pcError="SERVICE REFUSED";  break;  // Service from the Link Layer is forbidden
   107d0:	f64a 53d8 	movw	r3, #44504	; 0xadd8
   107d4:	f2c0 0301 	movt	r3, #1
   107d8:	60bb      	str	r3, [r7, #8]
   107da:	e0f5      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_NOT_READY:                    pcError="NOT READY";        break;  // The communication is not ready
   107dc:	f64a 53e8 	movw	r3, #44520	; 0xade8
   107e0:	f2c0 0301 	movt	r3, #1
   107e4:	60bb      	str	r3, [r7, #8]
   107e6:	e0ef      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_NETWORK_NOT_READY:            pcError="NETWRK NOT READY"; break;  // The physical network (GSM, GPRS...) is not ready to perform the requested
   107e8:	f64a 53f4 	movw	r3, #44532	; 0xadf4
   107ec:	f2c0 0301 	movt	r3, #1
   107f0:	60bb      	str	r3, [r7, #8]
   107f2:	e0e9      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_NETWORK_NOT_SUPPORTED:        pcError="INVALID NETWORK";  break;  // The requested physical network is not supported by the terminal
   107f4:	f64a 6308 	movw	r3, #44552	; 0xae08
   107f8:	f2c0 0301 	movt	r3, #1
   107fc:	60bb      	str	r3, [r7, #8]
   107fe:	e0e3      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_NETWORK_ALREADY_CONNECTED:    pcError="NETWORK CONNECT";  break;  // Only returned by LL_GPRS_Connect() (The connection on the GPRS/3G network is already OK)
   10800:	f64a 6318 	movw	r3, #44568	; 0xae18
   10804:	f2c0 0301 	movt	r3, #1
   10808:	60bb      	str	r3, [r7, #8]
   1080a:	e0dd      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_NETWORK_ERROR:                pcError="NETWORK ERROR";    break;  // Network error (Such as Ethernet cable not plugged, default route not configured...)
   1080c:	f64a 6328 	movw	r3, #44584	; 0xae28
   10810:	f2c0 0301 	movt	r3, #1
   10814:	60bb      	str	r3, [r7, #8]
   10816:	e0d7      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_DLL:                          pcError="SSL DLL MISSING";  break;  // The SSL DLL is not loaded in the terminal
   10818:	f64a 6338 	movw	r3, #44600	; 0xae38
   1081c:	f2c0 0301 	movt	r3, #1
   10820:	60bb      	str	r3, [r7, #8]
   10822:	e0d1      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_OUTPUT_BUFFER_TOO_SHORT:      pcError="BUFFER TOO SHORT"; break;  // Internal error (The interface object size is too short)
   10824:	f64a 6348 	movw	r3, #44616	; 0xae48
   10828:	f2c0 0301 	movt	r3, #1
   1082c:	60bb      	str	r3, [r7, #8]
   1082e:	e0cb      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_SERVICE_CALL_FAILURE:         pcError="NO LINK LAYER";    break;  // Error calling the service (Please check that the LinkLayer component is loaded in the terminal)
   10830:	f64a 635c 	movw	r3, #44636	; 0xae5c
   10834:	f2c0 0301 	movt	r3, #1
   10838:	60bb      	str	r3, [r7, #8]
   1083a:	e0c5      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_IP_VERSION_REQUIRED:          pcError="WRONG LINK LAYER"; break;  // The configuration requires the TCP/IP version of LinkLayer component
   1083c:	f64a 636c 	movw	r3, #44652	; 0xae6c
   10840:	f2c0 0301 	movt	r3, #1
   10844:	60bb      	str	r3, [r7, #8]
   10846:	e0bf      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	// *** Session errors ***
	case LL_SESSION_ERROR_TOO_MANY_PROTOCOLS:   pcError="TOO MANY PROTOCL"; break;  // Invalid session stack (It contains too many protocols)
   10848:	f64a 6380 	movw	r3, #44672	; 0xae80
   1084c:	f2c0 0301 	movt	r3, #1
   10850:	60bb      	str	r3, [r7, #8]
   10852:	e0b9      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_SESSION_ERROR_UNKNOWN_PROTOCOL:     pcError="UNKNOWN PROTOCOL"; break;  // Invalid session stack (It contains an unknown protocol)
   10854:	f64a 6394 	movw	r3, #44692	; 0xae94
   10858:	f2c0 0301 	movt	r3, #1
   1085c:	60bb      	str	r3, [r7, #8]
   1085e:	e0b3      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	// *** Physical layer errors ***
	case LL_ERROR_PHYSICAL_OVERRUN_BUFFER:      pcError="OVERRUN BUFFER";   break;  // Overrun buffer error
   10860:	f64a 63a8 	movw	r3, #44712	; 0xaea8
   10864:	f2c0 0301 	movt	r3, #1
   10868:	60bb      	str	r3, [r7, #8]
   1086a:	e0ad      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_PHYSICAL_OVERRUN:             pcError="OVERRUN";          break;  // Overrun error (the stop bit is missing)
   1086c:	f64a 63b8 	movw	r3, #44728	; 0xaeb8
   10870:	f2c0 0301 	movt	r3, #1
   10874:	60bb      	str	r3, [r7, #8]
   10876:	e0a7      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_PHYSICAL_FRAMING:             pcError="FRAMING ERROR";    break;  // Framing error
   10878:	f64a 63c0 	movw	r3, #44736	; 0xaec0
   1087c:	f2c0 0301 	movt	r3, #1
   10880:	60bb      	str	r3, [r7, #8]
   10882:	e0a1      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_PHYSICAL_PARITY:              pcError="PARITY ERROR";     break;  // Parity error
   10884:	f64a 63d0 	movw	r3, #44752	; 0xaed0
   10888:	f2c0 0301 	movt	r3, #1
   1088c:	60bb      	str	r3, [r7, #8]
   1088e:	e09b      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	// *** Modem errors ***
	case LL_MODEM_ERROR_SEND_BUFFER_OVERRUN:    pcError="AT CMD OVERRUN";   break;  // Overrun error of the sending buffer
   10890:	f64a 63e0 	movw	r3, #44768	; 0xaee0
   10894:	f2c0 0301 	movt	r3, #1
   10898:	60bb      	str	r3, [r7, #8]
   1089a:	e095      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_MODEM_ERROR_INIT_MODEM:             pcError="INIT MODEM ERR";   break;  // String AT command initialization failed
   1089c:	f64a 63f0 	movw	r3, #44784	; 0xaef0
   108a0:	f2c0 0301 	movt	r3, #1
   108a4:	60bb      	str	r3, [r7, #8]
   108a6:	e08f      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_MODEM_ERROR_RESPONSE_ERROR:         pcError="INVALID AT CMD";   break;  // The modem has returned an error
   108a8:	f64a 7300 	movw	r3, #44800	; 0xaf00
   108ac:	f2c0 0301 	movt	r3, #1
   108b0:	60bb      	str	r3, [r7, #8]
   108b2:	e089      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_MODEM_ERROR_RESPONSE_BLACKLISTED:   pcError="RESP BLACKLISTED"; break;  // The dialed number is blacklisted
   108b4:	f64a 7310 	movw	r3, #44816	; 0xaf10
   108b8:	f2c0 0301 	movt	r3, #1
   108bc:	60bb      	str	r3, [r7, #8]
   108be:	e083      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_MODEM_ERROR_RESPONSE_DELAYED:       pcError="RESP DELAYED";     break;  // The modem has returned the DELAYED error
   108c0:	f64a 7324 	movw	r3, #44836	; 0xaf24
   108c4:	f2c0 0301 	movt	r3, #1
   108c8:	60bb      	str	r3, [r7, #8]
   108ca:	e07d      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_MODEM_ERROR_RESPONSE_NO_DIALTONE:   pcError="NO DIALTONE";      break;  // No dial tone error
   108cc:	f64a 7334 	movw	r3, #44852	; 0xaf34
   108d0:	f2c0 0301 	movt	r3, #1
   108d4:	60bb      	str	r3, [r7, #8]
   108d6:	e077      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_MODEM_ERROR_RESPONSE_BUSY:          pcError="LINE BUSY";        break;  // The PSTN line is busy
   108d8:	f64a 7340 	movw	r3, #44864	; 0xaf40
   108dc:	f2c0 0301 	movt	r3, #1
   108e0:	60bb      	str	r3, [r7, #8]
   108e2:	e071      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_MODEM_ERROR_RESPONSE_NO_ANSWER:     pcError="NO ANSWER";        break;  // No answer from the remote part
   108e4:	f64a 734c 	movw	r3, #44876	; 0xaf4c
   108e8:	f2c0 0301 	movt	r3, #1
   108ec:	60bb      	str	r3, [r7, #8]
   108ee:	e06b      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_MODEM_ERROR_RESPONSE_NO_CARRIER:    pcError="NO CARRIER";       break;  // The communication has failed upon reception of NO CARRIER
   108f0:	f64a 7358 	movw	r3, #44888	; 0xaf58
   108f4:	f2c0 0301 	movt	r3, #1
   108f8:	60bb      	str	r3, [r7, #8]
   108fa:	e065      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_MODEM_ERROR_RESPONSE_INVALID:       pcError="INVALID ANSWER";   break;  // The modem has returned an unexpected answer
   108fc:	f64a 7364 	movw	r3, #44900	; 0xaf64
   10900:	f2c0 0301 	movt	r3, #1
   10904:	60bb      	str	r3, [r7, #8]
   10906:	e05f      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	// *** SDL errors ***
	case LL_HDLC_ERROR_CONNECT_TIMEOUT:         pcError="SDLC TIMEOUT";     break;  // The timeout of the HDLC connection has expired
   10908:	f64a 7374 	movw	r3, #44916	; 0xaf74
   1090c:	f2c0 0301 	movt	r3, #1
   10910:	60bb      	str	r3, [r7, #8]
   10912:	e059      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	// *** PPP errors ***
	case LL_ERROR_PPP_CONNECT:                  pcError="PPP CONNECT ERR";  break;  // PPP connection error (Connection with the PPP provider failed (problem when negociating PPP options...))
   10914:	f64a 7384 	movw	r3, #44932	; 0xaf84
   10918:	f2c0 0301 	movt	r3, #1
   1091c:	60bb      	str	r3, [r7, #8]
   1091e:	e053      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_PPP_AUTHENTICATION:           pcError="PPP AUTH ERROR";   break;  // PPP authentication error (The login and the password are not valid)
   10920:	f64a 7394 	movw	r3, #44948	; 0xaf94
   10924:	f2c0 0301 	movt	r3, #1
   10928:	60bb      	str	r3, [r7, #8]
   1092a:	e04d      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_PPP_RAS_MODE:                 pcError="PPP RAS ERROR";    break;  // PPP connection error during the exchange "CLIENT" <-> "CLIENTSERVER"
   1092c:	f64a 73a4 	movw	r3, #44964	; 0xafa4
   10930:	f2c0 0301 	movt	r3, #1
   10934:	60bb      	str	r3, [r7, #8]
   10936:	e047      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	// *** TCP/IP errors ***
	case LL_ERROR_UNKNOWN_HOST:                 pcError="UNKNOWN HOST";     break;  // Unable to resolve the DNS name
   10938:	f64a 73b4 	movw	r3, #44980	; 0xafb4
   1093c:	f2c0 0301 	movt	r3, #1
   10940:	60bb      	str	r3, [r7, #8]
   10942:	e041      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_CREATE_SOCKET:                pcError="SOCK CREATE ERR";  break;  // Error during the socket creation (Can be observed when too many sockets are used at the same time)
   10944:	f64a 73c4 	movw	r3, #44996	; 0xafc4
   10948:	f2c0 0301 	movt	r3, #1
   1094c:	60bb      	str	r3, [r7, #8]
   1094e:	e03b      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_CANNOT_CONNECT:               pcError="SOCK CONNECT ERR"; break;  // Error during the socket connection (Either the remote server is not responding, or settings problems (configuration parameters, wrong certificate in SSL...))
   10950:	f64a 73d4 	movw	r3, #45012	; 0xafd4
   10954:	f2c0 0301 	movt	r3, #1
   10958:	60bb      	str	r3, [r7, #8]
   1095a:	e035      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_CONNECTION_REFUSED:           pcError="CONNECT REFUSED";  break;  // The connection is refused by the remote server (In TCP, the 'errno' value of the socket is __ECONNREFUSED or In SSL, this can be caused by a failure during the SSL handshake)
   1095c:	f64a 73e8 	movw	r3, #45032	; 0xafe8
   10960:	f2c0 0301 	movt	r3, #1
   10964:	60bb      	str	r3, [r7, #8]
   10966:	e02f      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_HOST_UNREACHABLE:             pcError="HOST UNREACHABLE"; break;  // The host is unreachable (Cannot access the server : The 'errno' value of the socket is __EHOSTUNREACH)
   10968:	f64a 73f8 	movw	r3, #45048	; 0xaff8
   1096c:	f2c0 0301 	movt	r3, #1
   10970:	60bb      	str	r3, [r7, #8]
   10972:	e029      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_ERROR_NETWORK_UNREACHABLE:          pcError="NET UNREACHABLE";  break;  // The network is unreachable (Cannot access the server : The 'errno' value of the socket is __ENETUNREACH)
   10974:	f24b 030c 	movw	r3, #45068	; 0xb00c
   10978:	f2c0 0301 	movt	r3, #1
   1097c:	60bb      	str	r3, [r7, #8]
   1097e:	e023      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	// *** X28 errors ***
	case LL_X28_LIB:                            pcError="X28 LIB";          break;  // The network as returned the X28 message "LIB"
   10980:	f24b 031c 	movw	r3, #45084	; 0xb01c
   10984:	f2c0 0301 	movt	r3, #1
   10988:	60bb      	str	r3, [r7, #8]
   1098a:	e01d      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_X28_RESET:                          pcError="X28 RESET";        break;  // The network as returned the X28 message "RESET"
   1098c:	f24b 0324 	movw	r3, #45092	; 0xb024
   10990:	f2c0 0301 	movt	r3, #1
   10994:	60bb      	str	r3, [r7, #8]
   10996:	e017      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_X28_CLR:                            pcError="X28 CLR";          break;  // The network as returned the X28 message "CLR"
   10998:	f24b 0330 	movw	r3, #45104	; 0xb030
   1099c:	f2c0 0301 	movt	r3, #1
   109a0:	60bb      	str	r3, [r7, #8]
   109a2:	e011      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	// *** SSL errors ***
	case LL_ERROR_SSL_PROFILE:                  pcError="SSL PROFILE ERR";  break;  // The SSL profile cannot be loaded
   109a4:	f24b 0338 	movw	r3, #45112	; 0xb038
   109a8:	f2c0 0301 	movt	r3, #1
   109ac:	60bb      	str	r3, [r7, #8]
   109ae:	e00b      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	case LL_SSL_ERROR_SPECIFIC:                 pcError="SSL SPECIFIC ERR"; break;  // Base error for all SSL Specific error (from -9000 to -12000)
   109b0:	f24b 0348 	movw	r3, #45128	; 0xb048
   109b4:	f2c0 0301 	movt	r3, #1
   109b8:	60bb      	str	r3, [r7, #8]
   109ba:	e005      	b.n	109c8 <LL_ErrorMsg+0x6ec>
	// *** Other errors
	default:                                    pcError="ERROR UNKNOWN";    break;
   109bc:	f64a 4348 	movw	r3, #44104	; 0xac48
   109c0:	f2c0 0301 	movt	r3, #1
   109c4:	60bb      	str	r3, [r7, #8]
   109c6:	bf00      	nop
	}
	
	return pcError;
   109c8:	68bb      	ldr	r3, [r7, #8]
}
   109ca:	4618      	mov	r0, r3
   109cc:	f644 1380 	movw	r3, #18816	; 0x4980
   109d0:	f2c0 0302 	movt	r3, #2
   109d4:	68fa      	ldr	r2, [r7, #12]
   109d6:	681b      	ldr	r3, [r3, #0]
   109d8:	429a      	cmp	r2, r3
   109da:	d001      	beq.n	109e0 <LL_ErrorMsg+0x704>
   109dc:	f7f8 fa88 	bl	8ef0 <__stack_chk_fail>
   109e0:	f107 0710 	add.w	r7, r7, #16
   109e4:	46bd      	mov	sp, r7
   109e6:	bd80      	pop	{r7, pc}

000109e8 <SEC_ErrorMsg>:
//  This function has return value.
//    A message string regarding the error value.
//****************************************************************************

char* SEC_ErrorMsg (int iValue)
{
   109e8:	b580      	push	{r7, lr}
   109ea:	b084      	sub	sp, #16
   109ec:	af00      	add	r7, sp, #0
   109ee:	6078      	str	r0, [r7, #4]
   109f0:	f644 1380 	movw	r3, #18816	; 0x4980
   109f4:	f2c0 0302 	movt	r3, #2
   109f8:	681b      	ldr	r3, [r3, #0]
   109fa:	60fb      	str	r3, [r7, #12]
    // ***************
	char *pcError;

	// List error messages
    // *******************
	switch (iValue)
   109fc:	687b      	ldr	r3, [r7, #4]
   109fe:	f64f 32f9 	movw	r2, #64505	; 0xfbf9
   10a02:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10a06:	4293      	cmp	r3, r2
   10a08:	f000 8093 	beq.w	10b32 <SEC_ErrorMsg+0x14a>
   10a0c:	f64f 32f9 	movw	r2, #64505	; 0xfbf9
   10a10:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10a14:	4293      	cmp	r3, r2
   10a16:	dc36      	bgt.n	10a86 <SEC_ErrorMsg+0x9e>
   10a18:	f64f 32f4 	movw	r2, #64500	; 0xfbf4
   10a1c:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10a20:	4293      	cmp	r3, r2
   10a22:	f000 80a4 	beq.w	10b6e <SEC_ErrorMsg+0x186>
   10a26:	f64f 32f4 	movw	r2, #64500	; 0xfbf4
   10a2a:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10a2e:	4293      	cmp	r3, r2
   10a30:	dc15      	bgt.n	10a5e <SEC_ErrorMsg+0x76>
   10a32:	f64f 32f2 	movw	r2, #64498	; 0xfbf2
   10a36:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10a3a:	4293      	cmp	r3, r2
   10a3c:	f000 80a3 	beq.w	10b86 <SEC_ErrorMsg+0x19e>
   10a40:	f64f 32f2 	movw	r2, #64498	; 0xfbf2
   10a44:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10a48:	4293      	cmp	r3, r2
   10a4a:	f300 8096 	bgt.w	10b7a <SEC_ErrorMsg+0x192>
   10a4e:	f64f 32f1 	movw	r2, #64497	; 0xfbf1
   10a52:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10a56:	4293      	cmp	r3, r2
   10a58:	f000 809b 	beq.w	10b92 <SEC_ErrorMsg+0x1aa>
   10a5c:	e09f      	b.n	10b9e <SEC_ErrorMsg+0x1b6>
   10a5e:	f64f 32f6 	movw	r2, #64502	; 0xfbf6
   10a62:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10a66:	4293      	cmp	r3, r2
   10a68:	d075      	beq.n	10b56 <SEC_ErrorMsg+0x16e>
   10a6a:	f64f 32f6 	movw	r2, #64502	; 0xfbf6
   10a6e:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10a72:	4293      	cmp	r3, r2
   10a74:	db75      	blt.n	10b62 <SEC_ErrorMsg+0x17a>
   10a76:	f46f 6281 	mvn.w	r2, #1032	; 0x408
   10a7a:	4293      	cmp	r3, r2
   10a7c:	d065      	beq.n	10b4a <SEC_ErrorMsg+0x162>
   10a7e:	f513 6f81 	cmn.w	r3, #1032	; 0x408
   10a82:	d05c      	beq.n	10b3e <SEC_ErrorMsg+0x156>
   10a84:	e08b      	b.n	10b9e <SEC_ErrorMsg+0x1b6>
   10a86:	f64f 32fd 	movw	r2, #64509	; 0xfbfd
   10a8a:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10a8e:	4293      	cmp	r3, r2
   10a90:	d037      	beq.n	10b02 <SEC_ErrorMsg+0x11a>
   10a92:	f64f 32fd 	movw	r2, #64509	; 0xfbfd
   10a96:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10a9a:	4293      	cmp	r3, r2
   10a9c:	dc0c      	bgt.n	10ab8 <SEC_ErrorMsg+0xd0>
   10a9e:	f64f 32fb 	movw	r2, #64507	; 0xfbfb
   10aa2:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10aa6:	4293      	cmp	r3, r2
   10aa8:	d037      	beq.n	10b1a <SEC_ErrorMsg+0x132>
   10aaa:	f64f 32fb 	movw	r2, #64507	; 0xfbfb
   10aae:	f6cf 72ff 	movt	r2, #65535	; 0xffff
   10ab2:	4293      	cmp	r3, r2
   10ab4:	dc2b      	bgt.n	10b0e <SEC_ErrorMsg+0x126>
   10ab6:	e036      	b.n	10b26 <SEC_ErrorMsg+0x13e>
   10ab8:	f46f 6280 	mvn.w	r2, #1024	; 0x400
   10abc:	4293      	cmp	r3, r2
   10abe:	d014      	beq.n	10aea <SEC_ErrorMsg+0x102>
   10ac0:	f46f 6280 	mvn.w	r2, #1024	; 0x400
   10ac4:	4293      	cmp	r3, r2
   10ac6:	db16      	blt.n	10af6 <SEC_ErrorMsg+0x10e>
   10ac8:	f513 6f80 	cmn.w	r3, #1024	; 0x400
   10acc:	d007      	beq.n	10ade <SEC_ErrorMsg+0xf6>
   10ace:	2b01      	cmp	r3, #1
   10ad0:	d165      	bne.n	10b9e <SEC_ErrorMsg+0x1b6>
	{
                            // ERRORS CODES
	// *** Schemes common errors ***
	case 1:                         pcError="SCHEME MISSING\n"
   10ad2:	f24b 035c 	movw	r3, #45148	; 0xb05c
   10ad6:	f2c0 0301 	movt	r3, #1
   10ada:	60bb      	str	r3, [r7, #8]
			                                "OR WRONG PROFILE"; break;
   10adc:	e0cc      	b.n	10c78 <SEC_ErrorMsg+0x290>
	case ERR_ID_NOT_FOUND:          pcError="ID NOT FOUND";     break;
   10ade:	f24b 037c 	movw	r3, #45180	; 0xb07c
   10ae2:	f2c0 0301 	movt	r3, #1
   10ae6:	60bb      	str	r3, [r7, #8]
   10ae8:	e0c6      	b.n	10c78 <SEC_ErrorMsg+0x290>
	case ERR_PIN_CODE_NOT_FOUND:    pcError="PIN NOT FOUND";    break;
   10aea:	f24b 038c 	movw	r3, #45196	; 0xb08c
   10aee:	f2c0 0301 	movt	r3, #1
   10af2:	60bb      	str	r3, [r7, #8]
   10af4:	e0c0      	b.n	10c78 <SEC_ErrorMsg+0x290>
	case ERR_BAD_PIN_CODE_LEN:      pcError="PIN BAD LENGTH";   break;
   10af6:	f24b 039c 	movw	r3, #45212	; 0xb09c
   10afa:	f2c0 0301 	movt	r3, #1
   10afe:	60bb      	str	r3, [r7, #8]
   10b00:	e0ba      	b.n	10c78 <SEC_ErrorMsg+0x290>
	case ERR_BAD_IAPP_OPERATION:    pcError="IAPP FAILED";      break;
   10b02:	f24b 03ac 	movw	r3, #45228	; 0xb0ac
   10b06:	f2c0 0301 	movt	r3, #1
   10b0a:	60bb      	str	r3, [r7, #8]
   10b0c:	e0b4      	b.n	10c78 <SEC_ErrorMsg+0x290>
	case ERR_UNKNOW_FORMAT:         pcError="UNKNOWN FORMAT";   break;
   10b0e:	f24b 03b8 	movw	r3, #45240	; 0xb0b8
   10b12:	f2c0 0301 	movt	r3, #1
   10b16:	60bb      	str	r3, [r7, #8]
   10b18:	e0ae      	b.n	10c78 <SEC_ErrorMsg+0x290>
	case ERR_DUKPT_END_OF_LIFE:     pcError="DUKPT EXPIRED";    break;
   10b1a:	f24b 03c8 	movw	r3, #45256	; 0xb0c8
   10b1e:	f2c0 0301 	movt	r3, #1
   10b22:	60bb      	str	r3, [r7, #8]
   10b24:	e0a8      	b.n	10c78 <SEC_ErrorMsg+0x290>
	case ERR_BAD_ACTION_TYPE:       pcError="BAD ACTION TYPE";  break;
   10b26:	f24b 03d8 	movw	r3, #45272	; 0xb0d8
   10b2a:	f2c0 0301 	movt	r3, #1
   10b2e:	60bb      	str	r3, [r7, #8]
   10b30:	e0a2      	b.n	10c78 <SEC_ErrorMsg+0x290>
	case ERR_ENTRY_CANCELED:        pcError="ENTRY CANCELED";   break;
   10b32:	f24b 03e8 	movw	r3, #45288	; 0xb0e8
   10b36:	f2c0 0301 	movt	r3, #1
   10b3a:	60bb      	str	r3, [r7, #8]
   10b3c:	e09c      	b.n	10c78 <SEC_ErrorMsg+0x290>
	case ERR_TIMEOUT:               pcError="TIMEOUT EXPIRED";  break;
   10b3e:	f24b 03f8 	movw	r3, #45304	; 0xb0f8
   10b42:	f2c0 0301 	movt	r3, #1
   10b46:	60bb      	str	r3, [r7, #8]
   10b48:	e096      	b.n	10c78 <SEC_ErrorMsg+0x290>
	case ERR_BAD_IHM_OPERATION:     pcError="HMI FAILED";       break;
   10b4a:	f24b 1308 	movw	r3, #45320	; 0xb108
   10b4e:	f2c0 0301 	movt	r3, #1
   10b52:	60bb      	str	r3, [r7, #8]
   10b54:	e090      	b.n	10c78 <SEC_ErrorMsg+0x290>
	case ERR_SYSTEM:                pcError="SYSTEM ERROR";     break;
   10b56:	f24b 1314 	movw	r3, #45332	; 0xb114
   10b5a:	f2c0 0301 	movt	r3, #1
   10b5e:	60bb      	str	r3, [r7, #8]
   10b60:	e08a      	b.n	10c78 <SEC_ErrorMsg+0x290>
	case ERR_BAD_PARAM:             pcError="BAD PARAMETER";    break;
   10b62:	f24b 1324 	movw	r3, #45348	; 0xb124
   10b66:	f2c0 0301 	movt	r3, #1
   10b6a:	60bb      	str	r3, [r7, #8]
   10b6c:	e084      	b.n	10c78 <SEC_ErrorMsg+0x290>
	case ERR_MAC_VERIFY:            pcError="MAC VERIFY KO";    break;
   10b6e:	f24b 1334 	movw	r3, #45364	; 0xb134
   10b72:	f2c0 0301 	movt	r3, #1
   10b76:	60bb      	str	r3, [r7, #8]
   10b78:	e07e      	b.n	10c78 <SEC_ErrorMsg+0x290>
	case ERR_MAC_KEY:               pcError="MAC KEY FAILED";   break;
   10b7a:	f24b 1344 	movw	r3, #45380	; 0xb144
   10b7e:	f2c0 0301 	movt	r3, #1
   10b82:	60bb      	str	r3, [r7, #8]
   10b84:	e078      	b.n	10c78 <SEC_ErrorMsg+0x290>
	case ERR_DUKPT_NOT_IN_FUNCTION: pcError="DUKPT MISSING";    break;
   10b86:	f24b 1354 	movw	r3, #45396	; 0xb154
   10b8a:	f2c0 0301 	movt	r3, #1
   10b8e:	60bb      	str	r3, [r7, #8]
   10b90:	e072      	b.n	10c78 <SEC_ErrorMsg+0x290>
	case ERR_DIFFERENCE:            pcError="ERROR MISMATCHED"; break;
   10b92:	f24b 1364 	movw	r3, #45412	; 0xb164
   10b96:	f2c0 0301 	movt	r3, #1
   10b9a:	60bb      	str	r3, [r7, #8]
   10b9c:	e06c      	b.n	10c78 <SEC_ErrorMsg+0x290>
#ifndef __FRAMEWORK_TELIUM_PLUS__
	case C_UTLV_TYPE_NOT_TLV:		pcError="NO TLV TYPE";      break;
	case C_UTLV_TYPE_NO_SECRET:     pcError="NO SECRET TYPE";   break;
#endif
	default:
		switch (iValue)
   10b9e:	687b      	ldr	r3, [r7, #4]
   10ba0:	330c      	adds	r3, #12
   10ba2:	2b0b      	cmp	r3, #11
   10ba4:	d862      	bhi.n	10c6c <SEC_ErrorMsg+0x284>
   10ba6:	a201      	add	r2, pc, #4	; (adr r2, 10bac <SEC_ErrorMsg+0x1c4>)
   10ba8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   10bac:	00010c61 	.word	0x00010c61
   10bb0:	00010c55 	.word	0x00010c55
   10bb4:	00010c49 	.word	0x00010c49
   10bb8:	00010c3d 	.word	0x00010c3d
   10bbc:	00010c31 	.word	0x00010c31
   10bc0:	00010c25 	.word	0x00010c25
   10bc4:	00010c19 	.word	0x00010c19
   10bc8:	00010c0d 	.word	0x00010c0d
   10bcc:	00010c01 	.word	0x00010c01
   10bd0:	00010bf5 	.word	0x00010bf5
   10bd4:	00010be9 	.word	0x00010be9
   10bd8:	00010bdd 	.word	0x00010bdd
		{
		// *** Schemes loading errors ***
		case -1:                    pcError="ID FULL";          break;
   10bdc:	f24b 1378 	movw	r3, #45432	; 0xb178
   10be0:	f2c0 0301 	movt	r3, #1
   10be4:	60bb      	str	r3, [r7, #8]
   10be6:	e047      	b.n	10c78 <SEC_ErrorMsg+0x290>
		case -2:                    pcError="ID ALREADY EXIST"; break;
   10be8:	f24b 1380 	movw	r3, #45440	; 0xb180
   10bec:	f2c0 0301 	movt	r3, #1
   10bf0:	60bb      	str	r3, [r7, #8]
   10bf2:	e041      	b.n	10c78 <SEC_ErrorMsg+0x290>
		case -3:                    pcError="ID UNKNOWN";       break;
   10bf4:	f24b 1394 	movw	r3, #45460	; 0xb194
   10bf8:	f2c0 0301 	movt	r3, #1
   10bfc:	60bb      	str	r3, [r7, #8]
   10bfe:	e03b      	b.n	10c78 <SEC_ErrorMsg+0x290>
		case -4:                    pcError="NO MORE MEMORY";   break;
   10c00:	f24b 13a0 	movw	r3, #45472	; 0xb1a0
   10c04:	f2c0 0301 	movt	r3, #1
   10c08:	60bb      	str	r3, [r7, #8]
   10c0a:	e035      	b.n	10c78 <SEC_ErrorMsg+0x290>
		case -5:                    pcError="BAD INIT";         break;
   10c0c:	f24b 13b0 	movw	r3, #45488	; 0xb1b0
   10c10:	f2c0 0301 	movt	r3, #1
   10c14:	60bb      	str	r3, [r7, #8]
   10c16:	e02f      	b.n	10c78 <SEC_ErrorMsg+0x290>
		case -6:                    pcError="JUST DOWNLOADED";  break;
   10c18:	f24b 13bc 	movw	r3, #45500	; 0xb1bc
   10c1c:	f2c0 0301 	movt	r3, #1
   10c20:	60bb      	str	r3, [r7, #8]
   10c22:	e029      	b.n	10c78 <SEC_ErrorMsg+0x290>
		case -7:                    pcError="BAD PARAMETER";    break;
   10c24:	f24b 1324 	movw	r3, #45348	; 0xb124
   10c28:	f2c0 0301 	movt	r3, #1
   10c2c:	60bb      	str	r3, [r7, #8]
   10c2e:	e023      	b.n	10c78 <SEC_ErrorMsg+0x290>
		case -8:                    pcError="GLOBAL ERROR";     break;
   10c30:	f24b 13cc 	movw	r3, #45516	; 0xb1cc
   10c34:	f2c0 0301 	movt	r3, #1
   10c38:	60bb      	str	r3, [r7, #8]
   10c3a:	e01d      	b.n	10c78 <SEC_ErrorMsg+0x290>
		case -9:                    pcError="SCHEMES MISSING";  break;
   10c3c:	f24b 13dc 	movw	r3, #45532	; 0xb1dc
   10c40:	f2c0 0301 	movt	r3, #1
   10c44:	60bb      	str	r3, [r7, #8]
   10c46:	e017      	b.n	10c78 <SEC_ErrorMsg+0x290>
		case -10:                   pcError="ERROR ADDRESS";    break;
   10c48:	f24b 13ec 	movw	r3, #45548	; 0xb1ec
   10c4c:	f2c0 0301 	movt	r3, #1
   10c50:	60bb      	str	r3, [r7, #8]
   10c52:	e011      	b.n	10c78 <SEC_ErrorMsg+0x290>
		case -11:                   pcError="WARNING ADDRESS";  break;
   10c54:	f24b 13fc 	movw	r3, #45564	; 0xb1fc
   10c58:	f2c0 0301 	movt	r3, #1
   10c5c:	60bb      	str	r3, [r7, #8]
   10c5e:	e00b      	b.n	10c78 <SEC_ErrorMsg+0x290>
		case -12:                   pcError="CERTIFICATE KO";   break;
   10c60:	f24b 230c 	movw	r3, #45580	; 0xb20c
   10c64:	f2c0 0301 	movt	r3, #1
   10c68:	60bb      	str	r3, [r7, #8]
   10c6a:	e005      	b.n	10c78 <SEC_ErrorMsg+0x290>
		default:                    pcError="ERROR UNKNOWN";    break;
   10c6c:	f64a 4348 	movw	r3, #44104	; 0xac48
   10c70:	f2c0 0301 	movt	r3, #1
   10c74:	60bb      	str	r3, [r7, #8]
   10c76:	bf00      	nop
		}
	}

	return pcError;
   10c78:	68bb      	ldr	r3, [r7, #8]
}
   10c7a:	4618      	mov	r0, r3
   10c7c:	f644 1380 	movw	r3, #18816	; 0x4980
   10c80:	f2c0 0302 	movt	r3, #2
   10c84:	68fa      	ldr	r2, [r7, #12]
   10c86:	681b      	ldr	r3, [r3, #0]
   10c88:	429a      	cmp	r2, r3
   10c8a:	d001      	beq.n	10c90 <SEC_ErrorMsg+0x2a8>
   10c8c:	f7f8 f930 	bl	8ef0 <__stack_chk_fail>
   10c90:	f107 0710 	add.w	r7, r7, #16
   10c94:	46bd      	mov	sp, r7
   10c96:	bd80      	pop	{r7, pc}

00010c98 <OpenConverter>:
//     NULL if converter not found or wrong parameter.
//     Driver file if converter found.
//****************************************************************************

Telium_File_t *OpenConverter(char *pcName, byte ucSize)
{
   10c98:	b590      	push	{r4, r7, lr}
   10c9a:	b087      	sub	sp, #28
   10c9c:	af00      	add	r7, sp, #0
   10c9e:	6078      	str	r0, [r7, #4]
   10ca0:	460b      	mov	r3, r1
   10ca2:	70fb      	strb	r3, [r7, #3]
   10ca4:	f644 1380 	movw	r3, #18816	; 0x4980
   10ca8:	f2c0 0302 	movt	r3, #2
   10cac:	681b      	ldr	r3, [r3, #0]
   10cae:	617b      	str	r3, [r7, #20]
	Telium_File_t *hCom;
	byte ucSta;

	// Converter detection in progress
	// *******************************
	for (i=0; i<NUMBER_OF_ITEMS(tzConverter); i++)
   10cb0:	2300      	movs	r3, #0
   10cb2:	60fb      	str	r3, [r7, #12]
   10cb4:	e03d      	b.n	10d32 <OpenConverter+0x9a>
	{
		hCom = Telium_Fopen(tzConverter[i], "rw*");                 // Open converter peripheral
   10cb6:	f244 331c 	movw	r3, #17180	; 0x431c
   10cba:	f2c0 0302 	movt	r3, #2
   10cbe:	68fa      	ldr	r2, [r7, #12]
   10cc0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   10cc4:	4618      	mov	r0, r3
   10cc6:	f24b 211c 	movw	r1, #45596	; 0xb21c
   10cca:	f2c0 0101 	movt	r1, #1
   10cce:	f006 fbf9 	bl	174c4 <Telium_Fopen>
   10cd2:	6138      	str	r0, [r7, #16]
		if(hCom)
   10cd4:	693b      	ldr	r3, [r7, #16]
   10cd6:	2b00      	cmp	r3, #0
   10cd8:	d028      	beq.n	10d2c <OpenConverter+0x94>
		{
			Telium_Status(hCom, &ucSta);                           // Check if converter recognized
   10cda:	f107 030b 	add.w	r3, r7, #11
   10cde:	6938      	ldr	r0, [r7, #16]
   10ce0:	4619      	mov	r1, r3
   10ce2:	f006 fc51 	bl	17588 <Telium_Status>
			if ( (ucSta & USB_PRESENT) == USB_PRESENT)
   10ce6:	7afb      	ldrb	r3, [r7, #11]
   10ce8:	f003 0301 	and.w	r3, r3, #1
   10cec:	2b00      	cmp	r3, #0
   10cee:	d01a      	beq.n	10d26 <OpenConverter+0x8e>
			{
				if (ucSize > strlen((char*)tzConverter[i]))
   10cf0:	78fc      	ldrb	r4, [r7, #3]
   10cf2:	f244 331c 	movw	r3, #17180	; 0x431c
   10cf6:	f2c0 0302 	movt	r3, #2
   10cfa:	68fa      	ldr	r2, [r7, #12]
   10cfc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   10d00:	4618      	mov	r0, r3
   10d02:	f7f7 ef6c 	blx	8bdc <_init+0x10c>
   10d06:	4603      	mov	r3, r0
   10d08:	429c      	cmp	r4, r3
   10d0a:	d90f      	bls.n	10d2c <OpenConverter+0x94>
				{
					strcpy (pcName, (char*)tzConverter[i]);	 // Return driver name and driver file
   10d0c:	f244 331c 	movw	r3, #17180	; 0x431c
   10d10:	f2c0 0302 	movt	r3, #2
   10d14:	68fa      	ldr	r2, [r7, #12]
   10d16:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   10d1a:	6878      	ldr	r0, [r7, #4]
   10d1c:	4619      	mov	r1, r3
   10d1e:	f7f7 ef32 	blx	8b84 <_init+0xb4>
					return hCom;
   10d22:	693b      	ldr	r3, [r7, #16]
   10d24:	e009      	b.n	10d3a <OpenConverter+0xa2>
				}
			}
			else
				Telium_Fclose(hCom);                                // Close converter unrecognized
   10d26:	6938      	ldr	r0, [r7, #16]
   10d28:	f006 fb9a 	bl	17460 <Telium_Fclose>
	Telium_File_t *hCom;
	byte ucSta;

	// Converter detection in progress
	// *******************************
	for (i=0; i<NUMBER_OF_ITEMS(tzConverter); i++)
   10d2c:	68fb      	ldr	r3, [r7, #12]
   10d2e:	3301      	adds	r3, #1
   10d30:	60fb      	str	r3, [r7, #12]
   10d32:	68fb      	ldr	r3, [r7, #12]
   10d34:	2b04      	cmp	r3, #4
   10d36:	d9be      	bls.n	10cb6 <OpenConverter+0x1e>
			else
				Telium_Fclose(hCom);                                // Close converter unrecognized
		}
	}

	return NULL;                                             // Converter not found
   10d38:	2300      	movs	r3, #0
}
   10d3a:	4618      	mov	r0, r3
   10d3c:	f644 1380 	movw	r3, #18816	; 0x4980
   10d40:	f2c0 0302 	movt	r3, #2
   10d44:	697a      	ldr	r2, [r7, #20]
   10d46:	681b      	ldr	r3, [r3, #0]
   10d48:	429a      	cmp	r2, r3
   10d4a:	d001      	beq.n	10d50 <OpenConverter+0xb8>
   10d4c:	f7f8 f8d0 	bl	8ef0 <__stack_chk_fail>
   10d50:	f107 071c 	add.w	r7, r7, #28
   10d54:	46bd      	mov	sp, r7
   10d56:	bd90      	pop	{r4, r7, pc}

00010d58 <BitOn>:
//     ucIdx (I-) : Related bit number
//  This function has no return value.
//****************************************************************************

static void BitOn (char *pcBuf, byte ucIdx)
{
   10d58:	b580      	push	{r7, lr}
   10d5a:	b084      	sub	sp, #16
   10d5c:	af00      	add	r7, sp, #0
   10d5e:	6078      	str	r0, [r7, #4]
   10d60:	460b      	mov	r3, r1
   10d62:	70fb      	strb	r3, [r7, #3]
   10d64:	f644 1380 	movw	r3, #18816	; 0x4980
   10d68:	f2c0 0302 	movt	r3, #2
   10d6c:	681b      	ldr	r3, [r3, #0]
   10d6e:	60fb      	str	r3, [r7, #12]
    ucIdx--;
   10d70:	78fb      	ldrb	r3, [r7, #3]
   10d72:	3b01      	subs	r3, #1
   10d74:	70fb      	strb	r3, [r7, #3]
    while(ucIdx >= 8) 
   10d76:	e005      	b.n	10d84 <BitOn+0x2c>
    {
        pcBuf++;
   10d78:	687b      	ldr	r3, [r7, #4]
   10d7a:	3301      	adds	r3, #1
   10d7c:	607b      	str	r3, [r7, #4]
        ucIdx -= 8;
   10d7e:	78fb      	ldrb	r3, [r7, #3]
   10d80:	3b08      	subs	r3, #8
   10d82:	70fb      	strb	r3, [r7, #3]
//****************************************************************************

static void BitOn (char *pcBuf, byte ucIdx)
{
    ucIdx--;
    while(ucIdx >= 8) 
   10d84:	78fb      	ldrb	r3, [r7, #3]
   10d86:	2b07      	cmp	r3, #7
   10d88:	d8f6      	bhi.n	10d78 <BitOn+0x20>
    {
        pcBuf++;
        ucIdx -= 8;
    }
    *pcBuf |= (0x01 << (7 - ucIdx));
   10d8a:	687b      	ldr	r3, [r7, #4]
   10d8c:	781b      	ldrb	r3, [r3, #0]
   10d8e:	b2da      	uxtb	r2, r3
   10d90:	78fb      	ldrb	r3, [r7, #3]
   10d92:	f1c3 0307 	rsb	r3, r3, #7
   10d96:	2101      	movs	r1, #1
   10d98:	fa01 f303 	lsl.w	r3, r1, r3
   10d9c:	b2db      	uxtb	r3, r3
   10d9e:	4313      	orrs	r3, r2
   10da0:	b2db      	uxtb	r3, r3
   10da2:	b2da      	uxtb	r2, r3
   10da4:	687b      	ldr	r3, [r7, #4]
   10da6:	701a      	strb	r2, [r3, #0]
}
   10da8:	f644 1380 	movw	r3, #18816	; 0x4980
   10dac:	f2c0 0302 	movt	r3, #2
   10db0:	68fa      	ldr	r2, [r7, #12]
   10db2:	681b      	ldr	r3, [r3, #0]
   10db4:	429a      	cmp	r2, r3
   10db6:	d001      	beq.n	10dbc <BitOn+0x64>
   10db8:	f7f8 f89a 	bl	8ef0 <__stack_chk_fail>
   10dbc:	f107 0710 	add.w	r7, r7, #16
   10dc0:	46bd      	mov	sp, r7
   10dc2:	bd80      	pop	{r7, pc}

00010dc4 <BitOff>:
//     ucIdx (I-) : Related bit number
//  This function has no return value.
//****************************************************************************

static void BitOff (char *pcBuf, byte ucIdx)
{
   10dc4:	b580      	push	{r7, lr}
   10dc6:	b084      	sub	sp, #16
   10dc8:	af00      	add	r7, sp, #0
   10dca:	6078      	str	r0, [r7, #4]
   10dcc:	460b      	mov	r3, r1
   10dce:	70fb      	strb	r3, [r7, #3]
   10dd0:	f644 1380 	movw	r3, #18816	; 0x4980
   10dd4:	f2c0 0302 	movt	r3, #2
   10dd8:	681b      	ldr	r3, [r3, #0]
   10dda:	60fb      	str	r3, [r7, #12]
    ucIdx--;
   10ddc:	78fb      	ldrb	r3, [r7, #3]
   10dde:	3b01      	subs	r3, #1
   10de0:	70fb      	strb	r3, [r7, #3]
    while(ucIdx >= 8) 
   10de2:	e005      	b.n	10df0 <BitOff+0x2c>
    {
        pcBuf++;
   10de4:	687b      	ldr	r3, [r7, #4]
   10de6:	3301      	adds	r3, #1
   10de8:	607b      	str	r3, [r7, #4]
        ucIdx -= 8;
   10dea:	78fb      	ldrb	r3, [r7, #3]
   10dec:	3b08      	subs	r3, #8
   10dee:	70fb      	strb	r3, [r7, #3]
//****************************************************************************

static void BitOff (char *pcBuf, byte ucIdx)
{
    ucIdx--;
    while(ucIdx >= 8) 
   10df0:	78fb      	ldrb	r3, [r7, #3]
   10df2:	2b07      	cmp	r3, #7
   10df4:	d8f6      	bhi.n	10de4 <BitOff+0x20>
    {
        pcBuf++;
        ucIdx -= 8;
    }
    *pcBuf &= ~(0x01 << (7 - ucIdx));
   10df6:	687b      	ldr	r3, [r7, #4]
   10df8:	781b      	ldrb	r3, [r3, #0]
   10dfa:	b2da      	uxtb	r2, r3
   10dfc:	78fb      	ldrb	r3, [r7, #3]
   10dfe:	f1c3 0307 	rsb	r3, r3, #7
   10e02:	2101      	movs	r1, #1
   10e04:	fa01 f303 	lsl.w	r3, r1, r3
   10e08:	b2db      	uxtb	r3, r3
   10e0a:	43db      	mvns	r3, r3
   10e0c:	b2db      	uxtb	r3, r3
   10e0e:	4013      	ands	r3, r2
   10e10:	b2db      	uxtb	r3, r3
   10e12:	b2da      	uxtb	r2, r3
   10e14:	687b      	ldr	r3, [r7, #4]
   10e16:	701a      	strb	r2, [r3, #0]
}
   10e18:	f644 1380 	movw	r3, #18816	; 0x4980
   10e1c:	f2c0 0302 	movt	r3, #2
   10e20:	68fa      	ldr	r2, [r7, #12]
   10e22:	681b      	ldr	r3, [r3, #0]
   10e24:	429a      	cmp	r2, r3
   10e26:	d001      	beq.n	10e2c <BitOff+0x68>
   10e28:	f7f8 f862 	bl	8ef0 <__stack_chk_fail>
   10e2c:	f107 0710 	add.w	r7, r7, #16
   10e30:	46bd      	mov	sp, r7
   10e32:	bd80      	pop	{r7, pc}

00010e34 <BitTest>:
//    0   : if the related bit is off
//    !=0 : otherwise 
//****************************************************************************

static byte BitTest (const char *pcBuf, byte ucIdx)
{
   10e34:	b580      	push	{r7, lr}
   10e36:	b084      	sub	sp, #16
   10e38:	af00      	add	r7, sp, #0
   10e3a:	6078      	str	r0, [r7, #4]
   10e3c:	460b      	mov	r3, r1
   10e3e:	70fb      	strb	r3, [r7, #3]
   10e40:	f644 1380 	movw	r3, #18816	; 0x4980
   10e44:	f2c0 0302 	movt	r3, #2
   10e48:	681b      	ldr	r3, [r3, #0]
   10e4a:	60fb      	str	r3, [r7, #12]
    ucIdx--;
   10e4c:	78fb      	ldrb	r3, [r7, #3]
   10e4e:	3b01      	subs	r3, #1
   10e50:	70fb      	strb	r3, [r7, #3]
    while(ucIdx >= 8) 
   10e52:	e005      	b.n	10e60 <BitTest+0x2c>
    {
        pcBuf++;
   10e54:	687b      	ldr	r3, [r7, #4]
   10e56:	3301      	adds	r3, #1
   10e58:	607b      	str	r3, [r7, #4]
        ucIdx -= 8;
   10e5a:	78fb      	ldrb	r3, [r7, #3]
   10e5c:	3b08      	subs	r3, #8
   10e5e:	70fb      	strb	r3, [r7, #3]
//****************************************************************************

static byte BitTest (const char *pcBuf, byte ucIdx)
{
    ucIdx--;
    while(ucIdx >= 8) 
   10e60:	78fb      	ldrb	r3, [r7, #3]
   10e62:	2b07      	cmp	r3, #7
   10e64:	d8f6      	bhi.n	10e54 <BitTest+0x20>
    {
        pcBuf++;
        ucIdx -= 8;
    }
    return ((*pcBuf) >> (7 - ucIdx)) & 0x01;
   10e66:	687b      	ldr	r3, [r7, #4]
   10e68:	781b      	ldrb	r3, [r3, #0]
   10e6a:	461a      	mov	r2, r3
   10e6c:	78fb      	ldrb	r3, [r7, #3]
   10e6e:	f1c3 0307 	rsb	r3, r3, #7
   10e72:	fa42 f303 	asr.w	r3, r2, r3
   10e76:	b2db      	uxtb	r3, r3
   10e78:	f003 0301 	and.w	r3, r3, #1
   10e7c:	b2db      	uxtb	r3, r3
}
   10e7e:	4618      	mov	r0, r3
   10e80:	f644 1380 	movw	r3, #18816	; 0x4980
   10e84:	f2c0 0302 	movt	r3, #2
   10e88:	68fa      	ldr	r2, [r7, #12]
   10e8a:	681b      	ldr	r3, [r3, #0]
   10e8c:	429a      	cmp	r2, r3
   10e8e:	d001      	beq.n	10e94 <BitTest+0x60>
   10e90:	f7f8 f82e 	bl	8ef0 <__stack_chk_fail>
   10e94:	f107 0710 	add.w	r7, r7, #16
   10e98:	46bd      	mov	sp, r7
   10e9a:	bd80      	pop	{r7, pc}

00010e9c <SetParity>:
//     ucTyp (I-) : Even or Odd parity
//  This function has no return value.
//****************************************************************************

void SetParity (char *pcBuf, word usDim, byte ucPar, byte ucTyp)
{
   10e9c:	b580      	push	{r7, lr}
   10e9e:	b084      	sub	sp, #16
   10ea0:	af00      	add	r7, sp, #0
   10ea2:	6078      	str	r0, [r7, #4]
   10ea4:	8079      	strh	r1, [r7, #2]
   10ea6:	707a      	strb	r2, [r7, #1]
   10ea8:	703b      	strb	r3, [r7, #0]
   10eaa:	f644 1380 	movw	r3, #18816	; 0x4980
   10eae:	f2c0 0302 	movt	r3, #2
   10eb2:	681b      	ldr	r3, [r3, #0]
   10eb4:	60fb      	str	r3, [r7, #12]
    // ***************
    byte ucCnt, ucIdx;

    // Set parity in progress
    // **********************
    while(usDim--) 
   10eb6:	e049      	b.n	10f4c <SetParity+0xb0>
    {
        ucCnt=0;
   10eb8:	2300      	movs	r3, #0
   10eba:	72bb      	strb	r3, [r7, #10]
        for (ucIdx=1; ucIdx<=8; ucIdx++) 
   10ebc:	2301      	movs	r3, #1
   10ebe:	72fb      	strb	r3, [r7, #11]
   10ec0:	e013      	b.n	10eea <SetParity+0x4e>
        {
            if (ucIdx == ucPar)
   10ec2:	7afa      	ldrb	r2, [r7, #11]
   10ec4:	787b      	ldrb	r3, [r7, #1]
   10ec6:	429a      	cmp	r2, r3
   10ec8:	d00b      	beq.n	10ee2 <SetParity+0x46>
                continue;
            if (BitTest(pcBuf, ucIdx))
   10eca:	7afb      	ldrb	r3, [r7, #11]
   10ecc:	6878      	ldr	r0, [r7, #4]
   10ece:	4619      	mov	r1, r3
   10ed0:	f7ff ffb0 	bl	10e34 <BitTest>
   10ed4:	4603      	mov	r3, r0
   10ed6:	2b00      	cmp	r3, #0
   10ed8:	d004      	beq.n	10ee4 <SetParity+0x48>
                ucCnt++;
   10eda:	7abb      	ldrb	r3, [r7, #10]
   10edc:	3301      	adds	r3, #1
   10ede:	72bb      	strb	r3, [r7, #10]
   10ee0:	e000      	b.n	10ee4 <SetParity+0x48>
    {
        ucCnt=0;
        for (ucIdx=1; ucIdx<=8; ucIdx++) 
        {
            if (ucIdx == ucPar)
                continue;
   10ee2:	bf00      	nop
    // Set parity in progress
    // **********************
    while(usDim--) 
    {
        ucCnt=0;
        for (ucIdx=1; ucIdx<=8; ucIdx++) 
   10ee4:	7afb      	ldrb	r3, [r7, #11]
   10ee6:	3301      	adds	r3, #1
   10ee8:	72fb      	strb	r3, [r7, #11]
   10eea:	7afb      	ldrb	r3, [r7, #11]
   10eec:	2b08      	cmp	r3, #8
   10eee:	d9e8      	bls.n	10ec2 <SetParity+0x26>
            if (ucIdx == ucPar)
                continue;
            if (BitTest(pcBuf, ucIdx))
                ucCnt++;
        }
        switch (ucTyp) 
   10ef0:	783b      	ldrb	r3, [r7, #0]
   10ef2:	2b45      	cmp	r3, #69	; 0x45
   10ef4:	d002      	beq.n	10efc <SetParity+0x60>
   10ef6:	2b4f      	cmp	r3, #79	; 0x4f
   10ef8:	d012      	beq.n	10f20 <SetParity+0x84>
   10efa:	e023      	b.n	10f44 <SetParity+0xa8>
        {
        case 'E':
        	if (ucCnt % 2)
   10efc:	7abb      	ldrb	r3, [r7, #10]
   10efe:	f003 0301 	and.w	r3, r3, #1
   10f02:	b2db      	uxtb	r3, r3
   10f04:	2b00      	cmp	r3, #0
   10f06:	d005      	beq.n	10f14 <SetParity+0x78>
        		BitOn(pcBuf, ucPar);  // An even parity bit is set to 1 if the number of ones in a given set of bits is odd
   10f08:	787b      	ldrb	r3, [r7, #1]
   10f0a:	6878      	ldr	r0, [r7, #4]
   10f0c:	4619      	mov	r1, r3
   10f0e:	f7ff ff23 	bl	10d58 <BitOn>
        	else
                BitOff(pcBuf, ucPar);
            break;
   10f12:	e018      	b.n	10f46 <SetParity+0xaa>
        {
        case 'E':
        	if (ucCnt % 2)
        		BitOn(pcBuf, ucPar);  // An even parity bit is set to 1 if the number of ones in a given set of bits is odd
        	else
                BitOff(pcBuf, ucPar);
   10f14:	787b      	ldrb	r3, [r7, #1]
   10f16:	6878      	ldr	r0, [r7, #4]
   10f18:	4619      	mov	r1, r3
   10f1a:	f7ff ff53 	bl	10dc4 <BitOff>
            break;
   10f1e:	e012      	b.n	10f46 <SetParity+0xaa>
        case 'O':
            if (ucCnt % 2)
   10f20:	7abb      	ldrb	r3, [r7, #10]
   10f22:	f003 0301 	and.w	r3, r3, #1
   10f26:	b2db      	uxtb	r3, r3
   10f28:	2b00      	cmp	r3, #0
   10f2a:	d005      	beq.n	10f38 <SetParity+0x9c>
            	BitOff(pcBuf, ucPar);
   10f2c:	787b      	ldrb	r3, [r7, #1]
   10f2e:	6878      	ldr	r0, [r7, #4]
   10f30:	4619      	mov	r1, r3
   10f32:	f7ff ff47 	bl	10dc4 <BitOff>
            else
                BitOn(pcBuf, ucPar);  // An odd parity bit is set to 1 if the number of ones in a given set of bits is even
            break;
   10f36:	e006      	b.n	10f46 <SetParity+0xaa>
            break;
        case 'O':
            if (ucCnt % 2)
            	BitOff(pcBuf, ucPar);
            else
                BitOn(pcBuf, ucPar);  // An odd parity bit is set to 1 if the number of ones in a given set of bits is even
   10f38:	787b      	ldrb	r3, [r7, #1]
   10f3a:	6878      	ldr	r0, [r7, #4]
   10f3c:	4619      	mov	r1, r3
   10f3e:	f7ff ff0b 	bl	10d58 <BitOn>
            break;
   10f42:	e000      	b.n	10f46 <SetParity+0xaa>
        default:
        	break;
   10f44:	bf00      	nop
        }
        pcBuf++;
   10f46:	687b      	ldr	r3, [r7, #4]
   10f48:	3301      	adds	r3, #1
   10f4a:	607b      	str	r3, [r7, #4]
    // ***************
    byte ucCnt, ucIdx;

    // Set parity in progress
    // **********************
    while(usDim--) 
   10f4c:	887b      	ldrh	r3, [r7, #2]
   10f4e:	2b00      	cmp	r3, #0
   10f50:	bf0c      	ite	eq
   10f52:	2300      	moveq	r3, #0
   10f54:	2301      	movne	r3, #1
   10f56:	b2db      	uxtb	r3, r3
   10f58:	887a      	ldrh	r2, [r7, #2]
   10f5a:	3a01      	subs	r2, #1
   10f5c:	807a      	strh	r2, [r7, #2]
   10f5e:	2b00      	cmp	r3, #0
   10f60:	d1aa      	bne.n	10eb8 <SetParity+0x1c>
        default:
        	break;
        }
        pcBuf++;
    }
}
   10f62:	f644 1380 	movw	r3, #18816	; 0x4980
   10f66:	f2c0 0302 	movt	r3, #2
   10f6a:	68fa      	ldr	r2, [r7, #12]
   10f6c:	681b      	ldr	r3, [r3, #0]
   10f6e:	429a      	cmp	r2, r3
   10f70:	d001      	beq.n	10f76 <SetParity+0xda>
   10f72:	f7f7 ffbd 	bl	8ef0 <__stack_chk_fail>
   10f76:	f107 0710 	add.w	r7, r7, #16
   10f7a:	46bd      	mov	sp, r7
   10f7c:	bd80      	pop	{r7, pc}
   10f7e:	bf00      	nop

00010f80 <CheckParity>:
//    1 : if parity is OK 
//    0 : if parity NOK
//****************************************************************************

byte CheckParity (const char *pcBuf, word usDim, byte ucPar, byte ucTyp)
{
   10f80:	b580      	push	{r7, lr}
   10f82:	b084      	sub	sp, #16
   10f84:	af00      	add	r7, sp, #0
   10f86:	6078      	str	r0, [r7, #4]
   10f88:	8079      	strh	r1, [r7, #2]
   10f8a:	707a      	strb	r2, [r7, #1]
   10f8c:	703b      	strb	r3, [r7, #0]
   10f8e:	f644 1380 	movw	r3, #18816	; 0x4980
   10f92:	f2c0 0302 	movt	r3, #2
   10f96:	681b      	ldr	r3, [r3, #0]
   10f98:	60fb      	str	r3, [r7, #12]
    byte ucCnt, ucIdx;
    byte ucRet;

    // Check parity in progress
    // ************************
    ucRet=1;
   10f9a:	2301      	movs	r3, #1
   10f9c:	72fb      	strb	r3, [r7, #11]
    while (usDim--) 
   10f9e:	e035      	b.n	1100c <CheckParity+0x8c>
    {
        ucCnt=0;
   10fa0:	2300      	movs	r3, #0
   10fa2:	727b      	strb	r3, [r7, #9]
        for (ucIdx=1; ucIdx<=8; ucIdx++) 
   10fa4:	2301      	movs	r3, #1
   10fa6:	72bb      	strb	r3, [r7, #10]
   10fa8:	e00d      	b.n	10fc6 <CheckParity+0x46>
        {
            if (BitTest(pcBuf, ucIdx))
   10faa:	7abb      	ldrb	r3, [r7, #10]
   10fac:	6878      	ldr	r0, [r7, #4]
   10fae:	4619      	mov	r1, r3
   10fb0:	f7ff ff40 	bl	10e34 <BitTest>
   10fb4:	4603      	mov	r3, r0
   10fb6:	2b00      	cmp	r3, #0
   10fb8:	d002      	beq.n	10fc0 <CheckParity+0x40>
                ucCnt++;
   10fba:	7a7b      	ldrb	r3, [r7, #9]
   10fbc:	3301      	adds	r3, #1
   10fbe:	727b      	strb	r3, [r7, #9]
    // ************************
    ucRet=1;
    while (usDim--) 
    {
        ucCnt=0;
        for (ucIdx=1; ucIdx<=8; ucIdx++) 
   10fc0:	7abb      	ldrb	r3, [r7, #10]
   10fc2:	3301      	adds	r3, #1
   10fc4:	72bb      	strb	r3, [r7, #10]
   10fc6:	7abb      	ldrb	r3, [r7, #10]
   10fc8:	2b08      	cmp	r3, #8
   10fca:	d9ee      	bls.n	10faa <CheckParity+0x2a>
        {
            if (BitTest(pcBuf, ucIdx))
                ucCnt++;
        }
        switch(ucTyp)
   10fcc:	783b      	ldrb	r3, [r7, #0]
   10fce:	2b45      	cmp	r3, #69	; 0x45
   10fd0:	d00a      	beq.n	10fe8 <CheckParity+0x68>
   10fd2:	2b4f      	cmp	r3, #79	; 0x4f
   10fd4:	d111      	bne.n	10ffa <CheckParity+0x7a>
        {
        case 'O' :
        	if (!(ucCnt%2)) // Making the total number of ones, including the parity bit, odd
   10fd6:	7a7b      	ldrb	r3, [r7, #9]
   10fd8:	f003 0301 	and.w	r3, r3, #1
   10fdc:	b2db      	uxtb	r3, r3
   10fde:	2b00      	cmp	r3, #0
   10fe0:	d10e      	bne.n	11000 <CheckParity+0x80>
        		ucRet=0;
   10fe2:	2300      	movs	r3, #0
   10fe4:	72fb      	strb	r3, [r7, #11]
        	break;
   10fe6:	e00b      	b.n	11000 <CheckParity+0x80>
		case 'E':
		    if (ucCnt%2)    // Making the total number of ones, including the parity bit, even
   10fe8:	7a7b      	ldrb	r3, [r7, #9]
   10fea:	f003 0301 	and.w	r3, r3, #1
   10fee:	b2db      	uxtb	r3, r3
   10ff0:	2b00      	cmp	r3, #0
   10ff2:	d007      	beq.n	11004 <CheckParity+0x84>
		    	ucRet=0;
   10ff4:	2300      	movs	r3, #0
   10ff6:	72fb      	strb	r3, [r7, #11]
        	break;
   10ff8:	e004      	b.n	11004 <CheckParity+0x84>
		default:            // Unknown parity
			ucRet=0;
   10ffa:	2300      	movs	r3, #0
   10ffc:	72fb      	strb	r3, [r7, #11]
            break;
   10ffe:	e002      	b.n	11006 <CheckParity+0x86>
        switch(ucTyp)
        {
        case 'O' :
        	if (!(ucCnt%2)) // Making the total number of ones, including the parity bit, odd
        		ucRet=0;
        	break;
   11000:	bf00      	nop
   11002:	e000      	b.n	11006 <CheckParity+0x86>
		case 'E':
		    if (ucCnt%2)    // Making the total number of ones, including the parity bit, even
		    	ucRet=0;
        	break;
   11004:	bf00      	nop
		default:            // Unknown parity
			ucRet=0;
            break;
        }
        pcBuf++;
   11006:	687b      	ldr	r3, [r7, #4]
   11008:	3301      	adds	r3, #1
   1100a:	607b      	str	r3, [r7, #4]
    byte ucRet;

    // Check parity in progress
    // ************************
    ucRet=1;
    while (usDim--) 
   1100c:	887b      	ldrh	r3, [r7, #2]
   1100e:	2b00      	cmp	r3, #0
   11010:	bf0c      	ite	eq
   11012:	2300      	moveq	r3, #0
   11014:	2301      	movne	r3, #1
   11016:	b2db      	uxtb	r3, r3
   11018:	887a      	ldrh	r2, [r7, #2]
   1101a:	3a01      	subs	r2, #1
   1101c:	807a      	strh	r2, [r7, #2]
   1101e:	2b00      	cmp	r3, #0
   11020:	d1be      	bne.n	10fa0 <CheckParity+0x20>
            break;
        }
        pcBuf++;
    }
    
    return ucRet;
   11022:	7afb      	ldrb	r3, [r7, #11]
}
   11024:	4618      	mov	r0, r3
   11026:	f644 1380 	movw	r3, #18816	; 0x4980
   1102a:	f2c0 0302 	movt	r3, #2
   1102e:	68fa      	ldr	r2, [r7, #12]
   11030:	681b      	ldr	r3, [r3, #0]
   11032:	429a      	cmp	r2, r3
   11034:	d001      	beq.n	1103a <CheckParity+0xba>
   11036:	f7f7 ff5b 	bl	8ef0 <__stack_chk_fail>
   1103a:	f107 0710 	add.w	r7, r7, #16
   1103e:	46bd      	mov	sp, r7
   11040:	bd80      	pop	{r7, pc}
   11042:	bf00      	nop

00011044 <parseStr>:
//    NULL : Parsing failed
//    !NULL : Pointer to the end of string extracted.
//****************************************************************************

const char *parseStr(char ucToken, char *pcDst, const char *pcSrc, int iDim)
{
   11044:	b580      	push	{r7, lr}
   11046:	b086      	sub	sp, #24
   11048:	af00      	add	r7, sp, #0
   1104a:	60b9      	str	r1, [r7, #8]
   1104c:	607a      	str	r2, [r7, #4]
   1104e:	603b      	str	r3, [r7, #0]
   11050:	4603      	mov	r3, r0
   11052:	73fb      	strb	r3, [r7, #15]
   11054:	f644 1380 	movw	r3, #18816	; 0x4980
   11058:	f2c0 0302 	movt	r3, #2
   1105c:	681b      	ldr	r3, [r3, #0]
   1105e:	617b      	str	r3, [r7, #20]
    while(*pcSrc)
   11060:	e01a      	b.n	11098 <parseStr+0x54>
    {
    	if (iDim == 0)        // Buffer pcDst overflow
   11062:	683b      	ldr	r3, [r7, #0]
   11064:	2b00      	cmp	r3, #0
   11066:	d101      	bne.n	1106c <parseStr+0x28>
    		return NULL;      // Parsing failed
   11068:	2300      	movs	r3, #0
   1106a:	e01d      	b.n	110a8 <parseStr+0x64>

        if(*pcSrc == ucToken) // Token found
   1106c:	687b      	ldr	r3, [r7, #4]
   1106e:	781b      	ldrb	r3, [r3, #0]
   11070:	7bfa      	ldrb	r2, [r7, #15]
   11072:	429a      	cmp	r2, r3
   11074:	d103      	bne.n	1107e <parseStr+0x3a>
        {
            pcSrc++;          // Skip token
   11076:	687b      	ldr	r3, [r7, #4]
   11078:	3301      	adds	r3, #1
   1107a:	607b      	str	r3, [r7, #4]
            break;
   1107c:	e010      	b.n	110a0 <parseStr+0x5c>
        }

        *pcDst++ = *pcSrc++;
   1107e:	687b      	ldr	r3, [r7, #4]
   11080:	781a      	ldrb	r2, [r3, #0]
   11082:	68bb      	ldr	r3, [r7, #8]
   11084:	701a      	strb	r2, [r3, #0]
   11086:	68bb      	ldr	r3, [r7, #8]
   11088:	3301      	adds	r3, #1
   1108a:	60bb      	str	r3, [r7, #8]
   1108c:	687b      	ldr	r3, [r7, #4]
   1108e:	3301      	adds	r3, #1
   11090:	607b      	str	r3, [r7, #4]
        iDim--;
   11092:	683b      	ldr	r3, [r7, #0]
   11094:	3b01      	subs	r3, #1
   11096:	603b      	str	r3, [r7, #0]
//    !NULL : Pointer to the end of string extracted.
//****************************************************************************

const char *parseStr(char ucToken, char *pcDst, const char *pcSrc, int iDim)
{
    while(*pcSrc)
   11098:	687b      	ldr	r3, [r7, #4]
   1109a:	781b      	ldrb	r3, [r3, #0]
   1109c:	2b00      	cmp	r3, #0
   1109e:	d1e0      	bne.n	11062 <parseStr+0x1e>

        *pcDst++ = *pcSrc++;
        iDim--;
    }

    *pcDst=0;
   110a0:	68bb      	ldr	r3, [r7, #8]
   110a2:	2200      	movs	r2, #0
   110a4:	701a      	strb	r2, [r3, #0]
    return pcSrc;
   110a6:	687b      	ldr	r3, [r7, #4]
}
   110a8:	4618      	mov	r0, r3
   110aa:	f644 1380 	movw	r3, #18816	; 0x4980
   110ae:	f2c0 0302 	movt	r3, #2
   110b2:	697a      	ldr	r2, [r7, #20]
   110b4:	681b      	ldr	r3, [r3, #0]
   110b6:	429a      	cmp	r2, r3
   110b8:	d001      	beq.n	110be <parseStr+0x7a>
   110ba:	f7f7 ff19 	bl	8ef0 <__stack_chk_fail>
   110be:	f107 0718 	add.w	r7, r7, #24
   110c2:	46bd      	mov	sp, r7
   110c4:	bd80      	pop	{r7, pc}
   110c6:	bf00      	nop

000110c8 <UintToIp>:
//  This function has return value.
//    A string buffer regarding the IP address.
//****************************************************************************

char* UintToIp(doubleword uiVal)
{
   110c8:	b580      	push	{r7, lr}
   110ca:	b086      	sub	sp, #24
   110cc:	af02      	add	r7, sp, #8
   110ce:	6078      	str	r0, [r7, #4]
   110d0:	f644 1380 	movw	r3, #18816	; 0x4980
   110d4:	f2c0 0302 	movt	r3, #2
   110d8:	681b      	ldr	r3, [r3, #0]
   110da:	60fb      	str	r3, [r7, #12]
    // ***************
	byte ucVal1, ucVal2, ucVal3, ucVal4;

	// Conversion unsigned long to Ip address
	// **************************************
	ucVal1 = uiVal%256;
   110dc:	687b      	ldr	r3, [r7, #4]
   110de:	723b      	strb	r3, [r7, #8]
	ucVal2 = (uiVal/256)%256;
   110e0:	687b      	ldr	r3, [r7, #4]
   110e2:	0a1b      	lsrs	r3, r3, #8
   110e4:	727b      	strb	r3, [r7, #9]
	ucVal3 = (uiVal/(256*256))%256;
   110e6:	687b      	ldr	r3, [r7, #4]
   110e8:	0c1b      	lsrs	r3, r3, #16
   110ea:	72bb      	strb	r3, [r7, #10]
	ucVal4 = (uiVal/(256*256*256))%256;
   110ec:	687b      	ldr	r3, [r7, #4]
   110ee:	0e1b      	lsrs	r3, r3, #24
   110f0:	72fb      	strb	r3, [r7, #11]

	memset(tcIp, 0, sizeof(tcIp));
   110f2:	f644 201c 	movw	r0, #18972	; 0x4a1c
   110f6:	f2c0 0002 	movt	r0, #2
   110fa:	2100      	movs	r1, #0
   110fc:	2210      	movs	r2, #16
   110fe:	f7f7 ed16 	blx	8b2c <_init+0x5c>
	sprintf (tcIp, "%d.%d.%d.%d", ucVal4, ucVal3, ucVal2, ucVal1);
   11102:	7afa      	ldrb	r2, [r7, #11]
   11104:	7abb      	ldrb	r3, [r7, #10]
   11106:	7a78      	ldrb	r0, [r7, #9]
   11108:	7a39      	ldrb	r1, [r7, #8]
   1110a:	9000      	str	r0, [sp, #0]
   1110c:	9101      	str	r1, [sp, #4]
   1110e:	f644 201c 	movw	r0, #18972	; 0x4a1c
   11112:	f2c0 0002 	movt	r0, #2
   11116:	f24b 2120 	movw	r1, #45600	; 0xb220
   1111a:	f2c0 0101 	movt	r1, #1
   1111e:	f7f7 ed76 	blx	8c0c <_init+0x13c>

	return tcIp;
   11122:	f644 231c 	movw	r3, #18972	; 0x4a1c
   11126:	f2c0 0302 	movt	r3, #2
}
   1112a:	4618      	mov	r0, r3
   1112c:	f644 1380 	movw	r3, #18816	; 0x4980
   11130:	f2c0 0302 	movt	r3, #2
   11134:	68fa      	ldr	r2, [r7, #12]
   11136:	681b      	ldr	r3, [r3, #0]
   11138:	429a      	cmp	r2, r3
   1113a:	d001      	beq.n	11140 <UintToIp+0x78>
   1113c:	f7f7 fed8 	bl	8ef0 <__stack_chk_fail>
   11140:	f107 0710 	add.w	r7, r7, #16
   11144:	46bd      	mov	sp, r7
   11146:	bd80      	pop	{r7, pc}

00011148 <IpToUint>:
//  This function has return value.
//    An unsigned long regarding the IP address.
//****************************************************************************

doubleword IpToUint(const char *pcStr)
{
   11148:	b590      	push	{r4, r7, lr}
   1114a:	b089      	sub	sp, #36	; 0x24
   1114c:	af00      	add	r7, sp, #0
   1114e:	6078      	str	r0, [r7, #4]
   11150:	f644 1380 	movw	r3, #18816	; 0x4980
   11154:	f2c0 0302 	movt	r3, #2
   11158:	681b      	ldr	r3, [r3, #0]
   1115a:	61fb      	str	r3, [r7, #28]
	// Local variables
    // ***************
	char tcStr1[3+1], tcStr2[3+1], tcStr3[3+1], tcStr4[3+1];
	doubleword uiVal=0;
   1115c:	2300      	movs	r3, #0
   1115e:	60bb      	str	r3, [r7, #8]
	
	// Conversion Ip address to unsigned int
	// *************************************
	if (*pcStr)
   11160:	687b      	ldr	r3, [r7, #4]
   11162:	781b      	ldrb	r3, [r3, #0]
   11164:	2b00      	cmp	r3, #0
   11166:	d072      	beq.n	1124e <IpToUint+0x106>
	{
		memset(tcStr4, 0, sizeof(tcStr4));
   11168:	f107 0318 	add.w	r3, r7, #24
   1116c:	4618      	mov	r0, r3
   1116e:	2100      	movs	r1, #0
   11170:	2204      	movs	r2, #4
   11172:	f7f7 ecdc 	blx	8b2c <_init+0x5c>
		pcStr = parseStr('.', tcStr4, pcStr, sizeof(tcStr4));
   11176:	f107 0318 	add.w	r3, r7, #24
   1117a:	202e      	movs	r0, #46	; 0x2e
   1117c:	4619      	mov	r1, r3
   1117e:	687a      	ldr	r2, [r7, #4]
   11180:	2304      	movs	r3, #4
   11182:	f7ff ff5f 	bl	11044 <parseStr>
   11186:	6078      	str	r0, [r7, #4]
	    if(pcStr==NULL)
   11188:	687b      	ldr	r3, [r7, #4]
   1118a:	2b00      	cmp	r3, #0
   1118c:	d101      	bne.n	11192 <IpToUint+0x4a>
	    	return 0;
   1118e:	2300      	movs	r3, #0
   11190:	e05e      	b.n	11250 <IpToUint+0x108>
	    memset(tcStr3, 0, sizeof(tcStr3));
   11192:	f107 0314 	add.w	r3, r7, #20
   11196:	4618      	mov	r0, r3
   11198:	2100      	movs	r1, #0
   1119a:	2204      	movs	r2, #4
   1119c:	f7f7 ecc6 	blx	8b2c <_init+0x5c>
	    pcStr = parseStr('.', tcStr3, pcStr, sizeof(tcStr3));
   111a0:	f107 0314 	add.w	r3, r7, #20
   111a4:	202e      	movs	r0, #46	; 0x2e
   111a6:	4619      	mov	r1, r3
   111a8:	687a      	ldr	r2, [r7, #4]
   111aa:	2304      	movs	r3, #4
   111ac:	f7ff ff4a 	bl	11044 <parseStr>
   111b0:	6078      	str	r0, [r7, #4]
	    if(pcStr==NULL)
   111b2:	687b      	ldr	r3, [r7, #4]
   111b4:	2b00      	cmp	r3, #0
   111b6:	d101      	bne.n	111bc <IpToUint+0x74>
	    	return 0;
   111b8:	2300      	movs	r3, #0
   111ba:	e049      	b.n	11250 <IpToUint+0x108>
	    memset(tcStr2, 0, sizeof(tcStr2));
   111bc:	f107 0310 	add.w	r3, r7, #16
   111c0:	4618      	mov	r0, r3
   111c2:	2100      	movs	r1, #0
   111c4:	2204      	movs	r2, #4
   111c6:	f7f7 ecb2 	blx	8b2c <_init+0x5c>
	    pcStr = parseStr('.', tcStr2, pcStr, sizeof(tcStr2));
   111ca:	f107 0310 	add.w	r3, r7, #16
   111ce:	202e      	movs	r0, #46	; 0x2e
   111d0:	4619      	mov	r1, r3
   111d2:	687a      	ldr	r2, [r7, #4]
   111d4:	2304      	movs	r3, #4
   111d6:	f7ff ff35 	bl	11044 <parseStr>
   111da:	6078      	str	r0, [r7, #4]
	    if(pcStr==NULL)
   111dc:	687b      	ldr	r3, [r7, #4]
   111de:	2b00      	cmp	r3, #0
   111e0:	d101      	bne.n	111e6 <IpToUint+0x9e>
	    	return 0;
   111e2:	2300      	movs	r3, #0
   111e4:	e034      	b.n	11250 <IpToUint+0x108>
	    memset(tcStr1, 0, sizeof(tcStr1));
   111e6:	f107 030c 	add.w	r3, r7, #12
   111ea:	4618      	mov	r0, r3
   111ec:	2100      	movs	r1, #0
   111ee:	2204      	movs	r2, #4
   111f0:	f7f7 ec9c 	blx	8b2c <_init+0x5c>
	    pcStr = parseStr('.', tcStr1, pcStr, sizeof(tcStr1));
   111f4:	f107 030c 	add.w	r3, r7, #12
   111f8:	202e      	movs	r0, #46	; 0x2e
   111fa:	4619      	mov	r1, r3
   111fc:	687a      	ldr	r2, [r7, #4]
   111fe:	2304      	movs	r3, #4
   11200:	f7ff ff20 	bl	11044 <parseStr>
   11204:	6078      	str	r0, [r7, #4]
	    if(pcStr==NULL)
   11206:	687b      	ldr	r3, [r7, #4]
   11208:	2b00      	cmp	r3, #0
   1120a:	d101      	bne.n	11210 <IpToUint+0xc8>
	    	return 0;
   1120c:	2300      	movs	r3, #0
   1120e:	e01f      	b.n	11250 <IpToUint+0x108>

	    uiVal = atoi(tcStr4)*256*256*256 + atoi(tcStr3)*256*256 + atoi(tcStr2)*256 + atoi(tcStr1);
   11210:	f107 0318 	add.w	r3, r7, #24
   11214:	4618      	mov	r0, r3
   11216:	f7f7 ec7e 	blx	8b14 <_init+0x44>
   1121a:	4603      	mov	r3, r0
   1121c:	021c      	lsls	r4, r3, #8
   1121e:	f107 0314 	add.w	r3, r7, #20
   11222:	4618      	mov	r0, r3
   11224:	f7f7 ec76 	blx	8b14 <_init+0x44>
   11228:	4603      	mov	r3, r0
   1122a:	18e3      	adds	r3, r4, r3
   1122c:	021c      	lsls	r4, r3, #8
   1122e:	f107 0310 	add.w	r3, r7, #16
   11232:	4618      	mov	r0, r3
   11234:	f7f7 ec6e 	blx	8b14 <_init+0x44>
   11238:	4603      	mov	r3, r0
   1123a:	18e3      	adds	r3, r4, r3
   1123c:	021c      	lsls	r4, r3, #8
   1123e:	f107 030c 	add.w	r3, r7, #12
   11242:	4618      	mov	r0, r3
   11244:	f7f7 ec66 	blx	8b14 <_init+0x44>
   11248:	4603      	mov	r3, r0
   1124a:	18e3      	adds	r3, r4, r3
   1124c:	60bb      	str	r3, [r7, #8]
	}

	return uiVal;
   1124e:	68bb      	ldr	r3, [r7, #8]
}
   11250:	4618      	mov	r0, r3
   11252:	f644 1380 	movw	r3, #18816	; 0x4980
   11256:	f2c0 0302 	movt	r3, #2
   1125a:	69fa      	ldr	r2, [r7, #28]
   1125c:	681b      	ldr	r3, [r3, #0]
   1125e:	429a      	cmp	r2, r3
   11260:	d001      	beq.n	11266 <IpToUint+0x11e>
   11262:	f7f7 fe45 	bl	8ef0 <__stack_chk_fail>
   11266:	f107 0724 	add.w	r7, r7, #36	; 0x24
   1126a:	46bd      	mov	sp, r7
   1126c:	bd90      	pop	{r4, r7, pc}
   1126e:	bf00      	nop

00011270 <ParamExist>:
//     true : Parameter file present
//     false : Parameter file absent
//****************************************************************************

int ParamExist(word usAppliType, char *pcFamilyName)
{
   11270:	b580      	push	{r7, lr}
   11272:	b096      	sub	sp, #88	; 0x58
   11274:	af00      	add	r7, sp, #0
   11276:	4603      	mov	r3, r0
   11278:	6039      	str	r1, [r7, #0]
   1127a:	80fb      	strh	r3, [r7, #6]
   1127c:	f644 1380 	movw	r3, #18816	; 0x4980
   11280:	f2c0 0302 	movt	r3, #2
   11284:	681b      	ldr	r3, [r3, #0]
   11286:	657b      	str	r3, [r7, #84]	; 0x54
	object_descriptor_t xObj;
	int iRet;

	// Search parameter file
	// *********************
	iRet = ObjectGetDescriptor (OBJECT_TYPE_PARAM, usAppliType, &xObj);
   11288:	88fa      	ldrh	r2, [r7, #6]
   1128a:	f107 0310 	add.w	r3, r7, #16
   1128e:	2003      	movs	r0, #3
   11290:	4611      	mov	r1, r2
   11292:	461a      	mov	r2, r3
   11294:	f006 fdb0 	bl	17df8 <ObjectGetDescriptor>
   11298:	60f8      	str	r0, [r7, #12]

	if (iRet == 0)
   1129a:	68fb      	ldr	r3, [r7, #12]
   1129c:	2b00      	cmp	r3, #0
   1129e:	d10b      	bne.n	112b8 <ParamExist+0x48>
	{
		if (strcmp ((char*)xObj.appli_family, pcFamilyName) == 0)
   112a0:	f107 0310 	add.w	r3, r7, #16
   112a4:	332d      	adds	r3, #45	; 0x2d
   112a6:	4618      	mov	r0, r3
   112a8:	6839      	ldr	r1, [r7, #0]
   112aa:	f7f7 ecc4 	blx	8c34 <_init+0x164>
   112ae:	4603      	mov	r3, r0
   112b0:	2b00      	cmp	r3, #0
   112b2:	d101      	bne.n	112b8 <ParamExist+0x48>
			return TRUE; // Parameter file present in SYSTEM disk
   112b4:	2301      	movs	r3, #1
   112b6:	e000      	b.n	112ba <ParamExist+0x4a>
	}

	return FALSE;        // Parameter file absent from SYSTEM disk
   112b8:	2300      	movs	r3, #0
}
   112ba:	4618      	mov	r0, r3
   112bc:	f644 1380 	movw	r3, #18816	; 0x4980
   112c0:	f2c0 0302 	movt	r3, #2
   112c4:	6d7a      	ldr	r2, [r7, #84]	; 0x54
   112c6:	681b      	ldr	r3, [r3, #0]
   112c8:	429a      	cmp	r2, r3
   112ca:	d001      	beq.n	112d0 <ParamExist+0x60>
   112cc:	f7f7 fe10 	bl	8ef0 <__stack_chk_fail>
   112d0:	f107 0758 	add.w	r7, r7, #88	; 0x58
   112d4:	46bd      	mov	sp, r7
   112d6:	bd80      	pop	{r7, pc}

000112d8 <AppliExist>:
//     TRUE : Application file present
//     FALSE : Application file absent
//****************************************************************************

int AppliExist(word usAppliType)
{
   112d8:	b580      	push	{r7, lr}
   112da:	b096      	sub	sp, #88	; 0x58
   112dc:	af00      	add	r7, sp, #0
   112de:	4603      	mov	r3, r0
   112e0:	80fb      	strh	r3, [r7, #6]
   112e2:	f644 1380 	movw	r3, #18816	; 0x4980
   112e6:	f2c0 0302 	movt	r3, #2
   112ea:	681b      	ldr	r3, [r3, #0]
   112ec:	657b      	str	r3, [r7, #84]	; 0x54
	object_descriptor_t xObj;
	int iRet;

	// Search parameter file
	// *********************
	iRet = ObjectGetDescriptor (OBJECT_TYPE_APPLI, usAppliType, &xObj);
   112ee:	88fa      	ldrh	r2, [r7, #6]
   112f0:	f107 0310 	add.w	r3, r7, #16
   112f4:	2001      	movs	r0, #1
   112f6:	4611      	mov	r1, r2
   112f8:	461a      	mov	r2, r3
   112fa:	f006 fd7d 	bl	17df8 <ObjectGetDescriptor>
   112fe:	60f8      	str	r0, [r7, #12]

	if (iRet == 0)
   11300:	68fb      	ldr	r3, [r7, #12]
   11302:	2b00      	cmp	r3, #0
   11304:	d101      	bne.n	1130a <AppliExist+0x32>
		return TRUE;    // Application file present in SYSTEM disk
   11306:	2301      	movs	r3, #1
   11308:	e000      	b.n	1130c <AppliExist+0x34>

	return FALSE;       // Application file absent from SYSTEM disk
   1130a:	2300      	movs	r3, #0
}
   1130c:	4618      	mov	r0, r3
   1130e:	f644 1380 	movw	r3, #18816	; 0x4980
   11312:	f2c0 0302 	movt	r3, #2
   11316:	6d7a      	ldr	r2, [r7, #84]	; 0x54
   11318:	681b      	ldr	r3, [r3, #0]
   1131a:	429a      	cmp	r2, r3
   1131c:	d001      	beq.n	11322 <AppliExist+0x4a>
   1131e:	f7f7 fde7 	bl	8ef0 <__stack_chk_fail>
   11322:	f107 0758 	add.w	r7, r7, #88	; 0x58
   11326:	46bd      	mov	sp, r7
   11328:	bd80      	pop	{r7, pc}
   1132a:	bf00      	nop

0001132c <TimerStart>:
//     >=0 : TimerStart done
//     <0  : TimerStart failed
//****************************************************************************

long TimerStart(byte ucTimerNbr, long lDelay)
{
   1132c:	b580      	push	{r7, lr}
   1132e:	b086      	sub	sp, #24
   11330:	af00      	add	r7, sp, #0
   11332:	4603      	mov	r3, r0
   11334:	6039      	str	r1, [r7, #0]
   11336:	71fb      	strb	r3, [r7, #7]
   11338:	f644 1380 	movw	r3, #18816	; 0x4980
   1133c:	f2c0 0302 	movt	r3, #2
   11340:	681b      	ldr	r3, [r3, #0]
   11342:	617b      	str	r3, [r7, #20]
    // ***************
	T_OSL_TIMESTP llTimer;

    // Start timer in progress
    // ***********************
    CHECK(ucTimerNbr<TMR_NBR, lblKO);
   11344:	79fb      	ldrb	r3, [r7, #7]
   11346:	2b03      	cmp	r3, #3
   11348:	d82c      	bhi.n	113a4 <TimerStart+0x78>

    // Get the current timer value
    // ===========================
    llTimer = OSL_TimeStp_Now();    // In 1ns ticks.
   1134a:	f007 fe72 	bl	19032 <OSL_TimeStp_Now>
   1134e:	e9c7 0102 	strd	r0, r1, [r7, #8]

    // Set the timer to a 'period' into the future
    // ===========================================
    llTimer += (T_OSL_TIMESTP) lDelay*1000*1000;
   11352:	6839      	ldr	r1, [r7, #0]
   11354:	460a      	mov	r2, r1
   11356:	17d3      	asrs	r3, r2, #31
   11358:	f244 2140 	movw	r1, #16960	; 0x4240
   1135c:	f2c0 010f 	movt	r1, #15
   11360:	fb01 f003 	mul.w	r0, r1, r3
   11364:	2100      	movs	r1, #0
   11366:	fb01 f102 	mul.w	r1, r1, r2
   1136a:	1840      	adds	r0, r0, r1
   1136c:	f244 2140 	movw	r1, #16960	; 0x4240
   11370:	f2c0 010f 	movt	r1, #15
   11374:	fba2 2301 	umull	r2, r3, r2, r1
   11378:	18c1      	adds	r1, r0, r3
   1137a:	460b      	mov	r3, r1
   1137c:	edd7 0b02 	vldr	d16, [r7, #8]
   11380:	ec43 2b31 	vmov	d17, r2, r3
   11384:	ef70 08a1 	vadd.i64	d16, d16, d17
   11388:	edc7 0b02 	vstr	d16, [r7, #8]

    // Assign it to the proper timer
    // =============================
    tllTimer[ucTimerNbr]= llTimer;
   1138c:	79fa      	ldrb	r2, [r7, #7]
   1138e:	f644 2330 	movw	r3, #18992	; 0x4a30
   11392:	f2c0 0302 	movt	r3, #2
   11396:	00d2      	lsls	r2, r2, #3
   11398:	1899      	adds	r1, r3, r2
   1139a:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
   1139e:	e9c1 2300 	strd	r2, r3, [r1]

    goto lblEnd;
   113a2:	e002      	b.n	113aa <TimerStart+0x7e>

	// Errors treatment 
    // ****************
lblKO:
    lDelay=-1;
   113a4:	f04f 33ff 	mov.w	r3, #4294967295
   113a8:	603b      	str	r3, [r7, #0]
lblEnd:
    return lDelay;
   113aa:	683b      	ldr	r3, [r7, #0]
}
   113ac:	4618      	mov	r0, r3
   113ae:	f644 1380 	movw	r3, #18816	; 0x4980
   113b2:	f2c0 0302 	movt	r3, #2
   113b6:	697a      	ldr	r2, [r7, #20]
   113b8:	681b      	ldr	r3, [r3, #0]
   113ba:	429a      	cmp	r2, r3
   113bc:	d001      	beq.n	113c2 <TimerStart+0x96>
   113be:	f7f7 fd97 	bl	8ef0 <__stack_chk_fail>
   113c2:	f107 0718 	add.w	r7, r7, #24
   113c6:	46bd      	mov	sp, r7
   113c8:	bd80      	pop	{r7, pc}
   113ca:	bf00      	nop

000113cc <TimerGet>:
//     >=0 : The number of milliseconds rest
//     <0  : TimerGet failed
//****************************************************************************

long TimerGet(byte ucTimerNbr)
{
   113cc:	b580      	push	{r7, lr}
   113ce:	b08a      	sub	sp, #40	; 0x28
   113d0:	af00      	add	r7, sp, #0
   113d2:	4603      	mov	r3, r0
   113d4:	71fb      	strb	r3, [r7, #7]
   113d6:	f644 1380 	movw	r3, #18816	; 0x4980
   113da:	f2c0 0302 	movt	r3, #2
   113de:	681b      	ldr	r3, [r3, #0]
   113e0:	627b      	str	r3, [r7, #36]	; 0x24
	T_OSL_TIMESTP llTimerEnd, llTimer;
    long lRet;
    
    // Get timer in progress
    // *********************
    CHECK(ucTimerNbr<TMR_NBR, lblKO);
   113e2:	79fb      	ldrb	r3, [r7, #7]
   113e4:	2b03      	cmp	r3, #3
   113e6:	d821      	bhi.n	1142c <TimerGet+0x60>

    // Get the remaining timer value before expiration
    // ===============================================
    llTimerEnd = tllTimer[ucTimerNbr];  // Retrieve the timer value to reach (ns)
   113e8:	79fa      	ldrb	r2, [r7, #7]
   113ea:	f644 2330 	movw	r3, #18992	; 0x4a30
   113ee:	f2c0 0302 	movt	r3, #2
   113f2:	00d2      	lsls	r2, r2, #3
   113f4:	189b      	adds	r3, r3, r2
   113f6:	e9d3 2300 	ldrd	r2, r3, [r3]
   113fa:	e9c7 2304 	strd	r2, r3, [r7, #16]

    llTimer = OSL_TimeStp_Now();        // Get the current timer value (ns).
   113fe:	f007 fe18 	bl	19032 <OSL_TimeStp_Now>
   11402:	e9c7 0106 	strd	r0, r1, [r7, #24]

    if(llTimer < llTimerEnd)
   11406:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
   1140a:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
   1140e:	4290      	cmp	r0, r2
   11410:	eb71 0c03 	sbcs.w	ip, r1, r3
   11414:	da07      	bge.n	11426 <TimerGet+0x5a>
    	lRet = OSL_TimeStp_ElapsedMs(llTimer, llTimerEnd);  // Return the remaining value (ms)
   11416:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
   1141a:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
   1141e:	f007 fdf8 	bl	19012 <OSL_TimeStp_ElapsedMs>
   11422:	60f8      	str	r0, [r7, #12]
    else
    	lRet = 0;                                           // Timer expired
    
    goto lblEnd;
   11424:	e005      	b.n	11432 <TimerGet+0x66>
    llTimer = OSL_TimeStp_Now();        // Get the current timer value (ns).

    if(llTimer < llTimerEnd)
    	lRet = OSL_TimeStp_ElapsedMs(llTimer, llTimerEnd);  // Return the remaining value (ms)
    else
    	lRet = 0;                                           // Timer expired
   11426:	2300      	movs	r3, #0
   11428:	60fb      	str	r3, [r7, #12]
    
    goto lblEnd;
   1142a:	e002      	b.n	11432 <TimerGet+0x66>

	// Errors treatment 
    // ****************
lblKO:
    lRet=-1;
   1142c:	f04f 33ff 	mov.w	r3, #4294967295
   11430:	60fb      	str	r3, [r7, #12]
lblEnd:
    return lRet;
   11432:	68fb      	ldr	r3, [r7, #12]
}
   11434:	4618      	mov	r0, r3
   11436:	f644 1380 	movw	r3, #18816	; 0x4980
   1143a:	f2c0 0302 	movt	r3, #2
   1143e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   11440:	681b      	ldr	r3, [r3, #0]
   11442:	429a      	cmp	r2, r3
   11444:	d001      	beq.n	1144a <TimerGet+0x7e>
   11446:	f7f7 fd53 	bl	8ef0 <__stack_chk_fail>
   1144a:	f107 0728 	add.w	r7, r7, #40	; 0x28
   1144e:	46bd      	mov	sp, r7
   11450:	bd80      	pop	{r7, pc}
   11452:	bf00      	nop

00011454 <TimerStop>:
//     >=0 : TimerStop done
//     <0  : TimerStop failed
//****************************************************************************

int TimerStop(byte ucTimerNbr)
{
   11454:	b580      	push	{r7, lr}
   11456:	b084      	sub	sp, #16
   11458:	af00      	add	r7, sp, #0
   1145a:	4603      	mov	r3, r0
   1145c:	71fb      	strb	r3, [r7, #7]
   1145e:	f644 1380 	movw	r3, #18816	; 0x4980
   11462:	f2c0 0302 	movt	r3, #2
   11466:	681b      	ldr	r3, [r3, #0]
   11468:	60fb      	str	r3, [r7, #12]
    // ***************
    int iRet;
	
	// Stop timer in progress
	// **********************
    CHECK(ucTimerNbr<TMR_NBR, lblKO);
   1146a:	79fb      	ldrb	r3, [r7, #7]
   1146c:	2b03      	cmp	r3, #3
   1146e:	d80d      	bhi.n	1148c <TimerStop+0x38>
    
    tllTimer[ucTimerNbr] = 0;
   11470:	79fa      	ldrb	r2, [r7, #7]
   11472:	f644 2330 	movw	r3, #18992	; 0x4a30
   11476:	f2c0 0302 	movt	r3, #2
   1147a:	00d2      	lsls	r2, r2, #3
   1147c:	189b      	adds	r3, r3, r2
   1147e:	efc0 0010 	vmov.i32	d16, #0	; 0x00000000
   11482:	edc3 0b00 	vstr	d16, [r3]
    
    iRet=0;
   11486:	2300      	movs	r3, #0
   11488:	60bb      	str	r3, [r7, #8]
    goto lblEnd;
   1148a:	e002      	b.n	11492 <TimerStop+0x3e>

	// Errors treatment 
    // ****************
lblKO:
    iRet=-1;
   1148c:	f04f 33ff 	mov.w	r3, #4294967295
   11490:	60bb      	str	r3, [r7, #8]
lblEnd:
    return iRet; 
   11492:	68bb      	ldr	r3, [r7, #8]
}
   11494:	4618      	mov	r0, r3
   11496:	f644 1380 	movw	r3, #18816	; 0x4980
   1149a:	f2c0 0302 	movt	r3, #2
   1149e:	68fa      	ldr	r2, [r7, #12]
   114a0:	681b      	ldr	r3, [r3, #0]
   114a2:	429a      	cmp	r2, r3
   114a4:	d001      	beq.n	114aa <TimerStop+0x56>
   114a6:	f7f7 fd23 	bl	8ef0 <__stack_chk_fail>
   114aa:	f107 0710 	add.w	r7, r7, #16
   114ae:	46bd      	mov	sp, r7
   114b0:	bd80      	pop	{r7, pc}
   114b2:	bf00      	nop

000114b4 <Timer>:
//  This function has no parameters.
//  This function has no return value.
//****************************************************************************

void Timer(void)
{
   114b4:	b590      	push	{r4, r7, lr}
   114b6:	b08d      	sub	sp, #52	; 0x34
   114b8:	af02      	add	r7, sp, #8
   114ba:	f644 1380 	movw	r3, #18816	; 0x4980
   114be:	f2c0 0302 	movt	r3, #2
   114c2:	681b      	ldr	r3, [r3, #0]
   114c4:	627b      	str	r3, [r7, #36]	; 0x24
	// Local variables 
    // ***************
	T_GL_HWIDGET xScreen=NULL;
   114c6:	2300      	movs	r3, #0
   114c8:	607b      	str	r3, [r7, #4]
	long lRet0;
    int iRet;
    
    // Timer demo in progress
    // **********************
	xScreen = GoalCreateScreen(gGoalGraphicLibInstance, txCounter, NUMBER_OF_LINES(txCounter), GL_ENCODING_UTF8);
   114ca:	f644 1388 	movw	r3, #18824	; 0x4988
   114ce:	f2c0 0302 	movt	r3, #2
   114d2:	681b      	ldr	r3, [r3, #0]
   114d4:	4618      	mov	r0, r3
   114d6:	f24b 212c 	movw	r1, #45612	; 0xb22c
   114da:	f2c0 0101 	movt	r1, #1
   114de:	2203      	movs	r2, #3
   114e0:	2300      	movs	r3, #0
   114e2:	f7fb fd95 	bl	d010 <GoalCreateScreen>
   114e6:	4603      	mov	r3, r0
   114e8:	607b      	str	r3, [r7, #4]
	CHECK(xScreen!=NULL, lblKO);       // Create screen and clear it
   114ea:	687b      	ldr	r3, [r7, #4]
   114ec:	2b00      	cmp	r3, #0
   114ee:	f000 8097 	beq.w	11620 <Timer+0x16c>
	iRet = GoalClrScreen(xScreen, GL_COLOR_BLACK, KEY_CANCEL, false);
   114f2:	687b      	ldr	r3, [r7, #4]
   114f4:	4618      	mov	r0, r3
   114f6:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
   114fa:	2202      	movs	r2, #2
   114fc:	2300      	movs	r3, #0
   114fe:	f7fb ff25 	bl	d34c <GoalClrScreen>
   11502:	60b8      	str	r0, [r7, #8]
	CHECK(iRet>=0, lblKO);
   11504:	68bb      	ldr	r3, [r7, #8]
   11506:	2b00      	cmp	r3, #0
   11508:	f2c0 808a 	blt.w	11620 <Timer+0x16c>

    iRet = GoalDspLine(xScreen, 0, "Expiration Time", &txCounter[0], 0, false);
   1150c:	687b      	ldr	r3, [r7, #4]
   1150e:	2200      	movs	r2, #0
   11510:	9200      	str	r2, [sp, #0]
   11512:	2200      	movs	r2, #0
   11514:	9201      	str	r2, [sp, #4]
   11516:	4618      	mov	r0, r3
   11518:	2100      	movs	r1, #0
   1151a:	f24b 4230 	movw	r2, #46128	; 0xb430
   1151e:	f2c0 0201 	movt	r2, #1
   11522:	f24b 232c 	movw	r3, #45612	; 0xb22c
   11526:	f2c0 0301 	movt	r3, #1
   1152a:	f7fc f829 	bl	d580 <GoalDspLine>
   1152e:	60b8      	str	r0, [r7, #8]
	CHECK(iRet>=0, lblKO);
   11530:	68bb      	ldr	r3, [r7, #8]
   11532:	2b00      	cmp	r3, #0
   11534:	db74      	blt.n	11620 <Timer+0x16c>
    lRet0 = TimerStart(0, 15*1000);    // Timer0 starts to 15s
   11536:	2000      	movs	r0, #0
   11538:	f643 2198 	movw	r1, #15000	; 0x3a98
   1153c:	f7ff fef6 	bl	1132c <TimerStart>
   11540:	60f8      	str	r0, [r7, #12]
    CHECK(lRet0>=0, lblKO);
   11542:	68fb      	ldr	r3, [r7, #12]
   11544:	2b00      	cmp	r3, #0
   11546:	db6b      	blt.n	11620 <Timer+0x16c>
    while ((lRet0=TimerGet(0)) > 0)    // Check Timer0
   11548:	e03b      	b.n	115c2 <Timer+0x10e>
    {
    	CHECK(lRet0>=0, lblKO);
   1154a:	68fb      	ldr	r3, [r7, #12]
   1154c:	2b00      	cmp	r3, #0
   1154e:	db67      	blt.n	11620 <Timer+0x16c>
    	
        // Display Remaining Time
    	// ======================
        sprintf(tcDisplay, "%2ld.%03ld Sec", lRet0/1000, lRet0%1000);
   11550:	68fa      	ldr	r2, [r7, #12]
   11552:	f644 53d3 	movw	r3, #19923	; 0x4dd3
   11556:	f2c1 0362 	movt	r3, #4194	; 0x1062
   1155a:	fb83 1302 	smull	r1, r3, r3, r2
   1155e:	1199      	asrs	r1, r3, #6
   11560:	17d3      	asrs	r3, r2, #31
   11562:	1acc      	subs	r4, r1, r3
   11564:	68fa      	ldr	r2, [r7, #12]
   11566:	f644 53d3 	movw	r3, #19923	; 0x4dd3
   1156a:	f2c1 0362 	movt	r3, #4194	; 0x1062
   1156e:	fb83 1302 	smull	r1, r3, r3, r2
   11572:	1199      	asrs	r1, r3, #6
   11574:	17d3      	asrs	r3, r2, #31
   11576:	1acb      	subs	r3, r1, r3
   11578:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
   1157c:	fb01 f303 	mul.w	r3, r1, r3
   11580:	1ad3      	subs	r3, r2, r3
   11582:	f107 0210 	add.w	r2, r7, #16
   11586:	4610      	mov	r0, r2
   11588:	f24b 4140 	movw	r1, #46144	; 0xb440
   1158c:	f2c0 0101 	movt	r1, #1
   11590:	4622      	mov	r2, r4
   11592:	f7f7 eb3c 	blx	8c0c <_init+0x13c>
    	iRet = GoalDspLine(xScreen, 1, tcDisplay, &txCounter[1], 0, true);
   11596:	687a      	ldr	r2, [r7, #4]
   11598:	f107 0310 	add.w	r3, r7, #16
   1159c:	2100      	movs	r1, #0
   1159e:	9100      	str	r1, [sp, #0]
   115a0:	2101      	movs	r1, #1
   115a2:	9101      	str	r1, [sp, #4]
   115a4:	4610      	mov	r0, r2
   115a6:	2101      	movs	r1, #1
   115a8:	461a      	mov	r2, r3
   115aa:	4b34      	ldr	r3, [pc, #208]	; (1167c <Timer+0x1c8>)
   115ac:	f7fb ffe8 	bl	d580 <GoalDspLine>
   115b0:	60b8      	str	r0, [r7, #8]
		CHECK(iRet>=0, lblKO);
   115b2:	68bb      	ldr	r3, [r7, #8]
   115b4:	2b00      	cmp	r3, #0
   115b6:	db33      	blt.n	11620 <Timer+0x16c>
		CHECK(iRet!=GL_KEY_CANCEL, lblEnd);    // Exit on cancel key
   115b8:	68ba      	ldr	r2, [r7, #8]
   115ba:	f64f 0351 	movw	r3, #63569	; 0xf851
   115be:	429a      	cmp	r2, r3
   115c0:	d043      	beq.n	1164a <Timer+0x196>

    iRet = GoalDspLine(xScreen, 0, "Expiration Time", &txCounter[0], 0, false);
	CHECK(iRet>=0, lblKO);
    lRet0 = TimerStart(0, 15*1000);    // Timer0 starts to 15s
    CHECK(lRet0>=0, lblKO);
    while ((lRet0=TimerGet(0)) > 0)    // Check Timer0
   115c2:	2000      	movs	r0, #0
   115c4:	f7ff ff02 	bl	113cc <TimerGet>
   115c8:	60f8      	str	r0, [r7, #12]
   115ca:	68fb      	ldr	r3, [r7, #12]
   115cc:	2b00      	cmp	r3, #0
   115ce:	dcbc      	bgt.n	1154a <Timer+0x96>
    	iRet = GoalDspLine(xScreen, 1, tcDisplay, &txCounter[1], 0, true);
		CHECK(iRet>=0, lblKO);
		CHECK(iRet!=GL_KEY_CANCEL, lblEnd);    // Exit on cancel key
    }

	iRet = GoalDspLine(xScreen, 1, " 0.000 Sec", &txCounter[1], 0, false);
   115d0:	687b      	ldr	r3, [r7, #4]
   115d2:	2200      	movs	r2, #0
   115d4:	9200      	str	r2, [sp, #0]
   115d6:	2200      	movs	r2, #0
   115d8:	9201      	str	r2, [sp, #4]
   115da:	4618      	mov	r0, r3
   115dc:	2101      	movs	r1, #1
   115de:	f24b 4250 	movw	r2, #46160	; 0xb450
   115e2:	f2c0 0201 	movt	r2, #1
   115e6:	4b25      	ldr	r3, [pc, #148]	; (1167c <Timer+0x1c8>)
   115e8:	f7fb ffca 	bl	d580 <GoalDspLine>
   115ec:	60b8      	str	r0, [r7, #8]
	CHECK(iRet>=0, lblKO);
   115ee:	68bb      	ldr	r3, [r7, #8]
   115f0:	2b00      	cmp	r3, #0
   115f2:	db15      	blt.n	11620 <Timer+0x16c>
    buzzer(10);
   115f4:	200a      	movs	r0, #10
   115f6:	f006 f889 	bl	1770c <buzzer>
	iRet = GoalDspLine(xScreen, 2, "Timer expired !!!", &txCounter[2], 5*1000, true);
   115fa:	687b      	ldr	r3, [r7, #4]
   115fc:	f241 3288 	movw	r2, #5000	; 0x1388
   11600:	9200      	str	r2, [sp, #0]
   11602:	2201      	movs	r2, #1
   11604:	9201      	str	r2, [sp, #4]
   11606:	4618      	mov	r0, r3
   11608:	2102      	movs	r1, #2
   1160a:	f24b 425c 	movw	r2, #46172	; 0xb45c
   1160e:	f2c0 0201 	movt	r2, #1
   11612:	4b1b      	ldr	r3, [pc, #108]	; (11680 <Timer+0x1cc>)
   11614:	f7fb ffb4 	bl	d580 <GoalDspLine>
   11618:	60b8      	str	r0, [r7, #8]
	CHECK(iRet>=0, lblKO);
   1161a:	68bb      	ldr	r3, [r7, #8]
   1161c:	2b00      	cmp	r3, #0
   1161e:	da13      	bge.n	11648 <Timer+0x194>
	goto lblEnd;

	// Errors treatment 
    // ****************
lblKO:                                 // None-classified low level error
	GL_Dialog_Message(gGoalGraphicLibInstance, NULL, "Processing Error", GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
   11620:	f644 1388 	movw	r3, #18824	; 0x4988
   11624:	f2c0 0302 	movt	r3, #2
   11628:	681b      	ldr	r3, [r3, #0]
   1162a:	2201      	movs	r2, #1
   1162c:	9200      	str	r2, [sp, #0]
   1162e:	f241 3288 	movw	r2, #5000	; 0x1388
   11632:	9201      	str	r2, [sp, #4]
   11634:	4618      	mov	r0, r3
   11636:	2100      	movs	r1, #0
   11638:	f24b 4270 	movw	r2, #46192	; 0xb470
   1163c:	f2c0 0201 	movt	r2, #1
   11640:	2304      	movs	r3, #4
   11642:	f006 ff7b 	bl	1853c <GL_Dialog_Message>
   11646:	e000      	b.n	1164a <Timer+0x196>
	CHECK(iRet>=0, lblKO);
    buzzer(10);
	iRet = GoalDspLine(xScreen, 2, "Timer expired !!!", &txCounter[2], 5*1000, true);
	CHECK(iRet>=0, lblKO);

	goto lblEnd;
   11648:	bf00      	nop
	// Errors treatment 
    // ****************
lblKO:                                 // None-classified low level error
	GL_Dialog_Message(gGoalGraphicLibInstance, NULL, "Processing Error", GL_ICON_ERROR, GL_BUTTON_VALID, 5*1000);
lblEnd:
    TimerStop(0);                      // Stop Timer0
   1164a:	2000      	movs	r0, #0
   1164c:	f7ff ff02 	bl	11454 <TimerStop>

	if (xScreen)
   11650:	687b      	ldr	r3, [r7, #4]
   11652:	2b00      	cmp	r3, #0
   11654:	d003      	beq.n	1165e <Timer+0x1aa>
		GoalDestroyScreen(&xScreen);   // Destroy screen
   11656:	1d3b      	adds	r3, r7, #4
   11658:	4618      	mov	r0, r3
   1165a:	f7fc fc29 	bl	deb0 <GoalDestroyScreen>
}
   1165e:	f644 1380 	movw	r3, #18816	; 0x4980
   11662:	f2c0 0302 	movt	r3, #2
   11666:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   11668:	681b      	ldr	r3, [r3, #0]
   1166a:	429a      	cmp	r2, r3
   1166c:	d001      	beq.n	11672 <Timer+0x1be>
   1166e:	f7f7 fc3f 	bl	8ef0 <__stack_chk_fail>
   11672:	f107 072c 	add.w	r7, r7, #44	; 0x2c
   11676:	46bd      	mov	sp, r7
   11678:	bd90      	pop	{r4, r7, pc}
   1167a:	bf00      	nop
   1167c:	0001b2d8 	.word	0x0001b2d8
   11680:	0001b384 	.word	0x0001b384

00011684 <CreateOrMountDisk>:
   11684:	b590      	push	{r4, r7, lr}
   11686:	b091      	sub	sp, #68	; 0x44
   11688:	af00      	add	r7, sp, #0
   1168a:	60f8      	str	r0, [r7, #12]
   1168c:	60b9      	str	r1, [r7, #8]
   1168e:	607a      	str	r2, [r7, #4]
   11690:	4c1d      	ldr	r4, [pc, #116]	; (11708 <CreateOrMountDisk+0x84>)
   11692:	447c      	add	r4, pc
   11694:	4b1d      	ldr	r3, [pc, #116]	; (1170c <CreateOrMountDisk+0x88>)
   11696:	58e3      	ldr	r3, [r4, r3]
   11698:	681b      	ldr	r3, [r3, #0]
   1169a:	63fb      	str	r3, [r7, #60]	; 0x3c
   1169c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   116a0:	62fb      	str	r3, [r7, #44]	; 0x2c
   116a2:	2301      	movs	r3, #1
   116a4:	63bb      	str	r3, [r7, #56]	; 0x38
   116a6:	f107 031c 	add.w	r3, r7, #28
   116aa:	4618      	mov	r0, r3
   116ac:	68f9      	ldr	r1, [r7, #12]
   116ae:	f7f7 ea6a 	blx	8b84 <_init+0xb4>
   116b2:	2304      	movs	r3, #4
   116b4:	633b      	str	r3, [r7, #48]	; 0x30
   116b6:	687b      	ldr	r3, [r7, #4]
   116b8:	637b      	str	r3, [r7, #52]	; 0x34
   116ba:	68bb      	ldr	r3, [r7, #8]
   116bc:	617b      	str	r3, [r7, #20]
   116be:	f107 031c 	add.w	r3, r7, #28
   116c2:	3310      	adds	r3, #16
   116c4:	68f8      	ldr	r0, [r7, #12]
   116c6:	4619      	mov	r1, r3
   116c8:	f006 fa3a 	bl	17b40 <FS_mount>
   116cc:	61b8      	str	r0, [r7, #24]
   116ce:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   116d2:	62fb      	str	r3, [r7, #44]	; 0x2c
   116d4:	69bb      	ldr	r3, [r7, #24]
   116d6:	2b02      	cmp	r3, #2
   116d8:	d008      	beq.n	116ec <CreateOrMountDisk+0x68>
   116da:	f107 021c 	add.w	r2, r7, #28
   116de:	f107 0314 	add.w	r3, r7, #20
   116e2:	4610      	mov	r0, r2
   116e4:	4619      	mov	r1, r3
   116e6:	f006 f9a7 	bl	17a38 <FS_dskcreate>
   116ea:	61b8      	str	r0, [r7, #24]
   116ec:	69bb      	ldr	r3, [r7, #24]
   116ee:	4618      	mov	r0, r3
   116f0:	4b06      	ldr	r3, [pc, #24]	; (1170c <CreateOrMountDisk+0x88>)
   116f2:	58e3      	ldr	r3, [r4, r3]
   116f4:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
   116f6:	681b      	ldr	r3, [r3, #0]
   116f8:	429a      	cmp	r2, r3
   116fa:	d001      	beq.n	11700 <CreateOrMountDisk+0x7c>
   116fc:	f7f7 fbf8 	bl	8ef0 <__stack_chk_fail>
   11700:	f107 0744 	add.w	r7, r7, #68	; 0x44
   11704:	46bd      	mov	sp, r7
   11706:	bd90      	pop	{r4, r7, pc}
   11708:	00012a82 	.word	0x00012a82
   1170c:	000000a0 	.word	0x000000a0

00011710 <SaveMangementFile>:
   11710:	b590      	push	{r4, r7, lr}
   11712:	b08d      	sub	sp, #52	; 0x34
   11714:	af00      	add	r7, sp, #0
   11716:	4c28      	ldr	r4, [pc, #160]	; (117b8 <SaveMangementFile+0xa8>)
   11718:	447c      	add	r4, pc
   1171a:	4b28      	ldr	r3, [pc, #160]	; (117bc <SaveMangementFile+0xac>)
   1171c:	58e3      	ldr	r3, [r4, r3]
   1171e:	681b      	ldr	r3, [r3, #0]
   11720:	62fb      	str	r3, [r7, #44]	; 0x2c
   11722:	2300      	movs	r3, #0
   11724:	603b      	str	r3, [r7, #0]
   11726:	f107 0308 	add.w	r3, r7, #8
   1172a:	4618      	mov	r0, r3
   1172c:	4b24      	ldr	r3, [pc, #144]	; (117c0 <SaveMangementFile+0xb0>)
   1172e:	447b      	add	r3, pc
   11730:	4619      	mov	r1, r3
   11732:	4b24      	ldr	r3, [pc, #144]	; (117c4 <SaveMangementFile+0xb4>)
   11734:	447b      	add	r3, pc
   11736:	461a      	mov	r2, r3
   11738:	4b23      	ldr	r3, [pc, #140]	; (117c8 <SaveMangementFile+0xb8>)
   1173a:	447b      	add	r3, pc
   1173c:	f7f7 ea66 	blx	8c0c <_init+0x13c>
   11740:	f107 0308 	add.w	r3, r7, #8
   11744:	4618      	mov	r0, r3
   11746:	f006 f9a3 	bl	17a90 <FS_exist>
   1174a:	6078      	str	r0, [r7, #4]
   1174c:	687b      	ldr	r3, [r7, #4]
   1174e:	2b02      	cmp	r3, #2
   11750:	d105      	bne.n	1175e <SaveMangementFile+0x4e>
   11752:	f107 0308 	add.w	r3, r7, #8
   11756:	4618      	mov	r0, r3
   11758:	f006 fac6 	bl	17ce8 <FS_unlink>
   1175c:	6078      	str	r0, [r7, #4]
   1175e:	f107 0308 	add.w	r3, r7, #8
   11762:	4618      	mov	r0, r3
   11764:	4b19      	ldr	r3, [pc, #100]	; (117cc <SaveMangementFile+0xbc>)
   11766:	447b      	add	r3, pc
   11768:	4619      	mov	r1, r3
   1176a:	f006 fa13 	bl	17b94 <FS_open>
   1176e:	6038      	str	r0, [r7, #0]
   11770:	683b      	ldr	r3, [r7, #0]
   11772:	2b00      	cmp	r3, #0
   11774:	d101      	bne.n	1177a <SaveMangementFile+0x6a>
   11776:	2313      	movs	r3, #19
   11778:	e010      	b.n	1179c <SaveMangementFile+0x8c>
   1177a:	4b15      	ldr	r3, [pc, #84]	; (117d0 <SaveMangementFile+0xc0>)
   1177c:	58e3      	ldr	r3, [r4, r3]
   1177e:	4618      	mov	r0, r3
   11780:	f241 1134 	movw	r1, #4404	; 0x1134
   11784:	2201      	movs	r2, #1
   11786:	683b      	ldr	r3, [r7, #0]
   11788:	f006 fb06 	bl	17d98 <FS_write>
   1178c:	6078      	str	r0, [r7, #4]
   1178e:	6838      	ldr	r0, [r7, #0]
   11790:	f006 f924 	bl	179dc <FS_close>
   11794:	6078      	str	r0, [r7, #4]
   11796:	2300      	movs	r3, #0
   11798:	603b      	str	r3, [r7, #0]
   1179a:	230a      	movs	r3, #10
   1179c:	4618      	mov	r0, r3
   1179e:	4b07      	ldr	r3, [pc, #28]	; (117bc <SaveMangementFile+0xac>)
   117a0:	58e3      	ldr	r3, [r4, r3]
   117a2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
   117a4:	681b      	ldr	r3, [r3, #0]
   117a6:	429a      	cmp	r2, r3
   117a8:	d001      	beq.n	117ae <SaveMangementFile+0x9e>
   117aa:	f7f7 fba1 	bl	8ef0 <__stack_chk_fail>
   117ae:	f107 0734 	add.w	r7, r7, #52	; 0x34
   117b2:	46bd      	mov	sp, r7
   117b4:	bd90      	pop	{r4, r7, pc}
   117b6:	bf00      	nop
   117b8:	000129fc 	.word	0x000129fc
   117bc:	000000a0 	.word	0x000000a0
   117c0:	00009d6a 	.word	0x00009d6a
   117c4:	00013318 	.word	0x00013318
   117c8:	00009d66 	.word	0x00009d66
   117cc:	00009d46 	.word	0x00009d46
   117d0:	000000b4 	.word	0x000000b4

000117d4 <ExtraireFileID>:
   117d4:	b590      	push	{r4, r7, lr}
   117d6:	b087      	sub	sp, #28
   117d8:	af00      	add	r7, sp, #0
   117da:	6078      	str	r0, [r7, #4]
   117dc:	6039      	str	r1, [r7, #0]
   117de:	4c25      	ldr	r4, [pc, #148]	; (11874 <ExtraireFileID+0xa0>)
   117e0:	447c      	add	r4, pc
   117e2:	4b25      	ldr	r3, [pc, #148]	; (11878 <ExtraireFileID+0xa4>)
   117e4:	58e3      	ldr	r3, [r4, r3]
   117e6:	681b      	ldr	r3, [r3, #0]
   117e8:	617b      	str	r3, [r7, #20]
   117ea:	2300      	movs	r3, #0
   117ec:	613b      	str	r3, [r7, #16]
   117ee:	2300      	movs	r3, #0
   117f0:	73fb      	strb	r3, [r7, #15]
   117f2:	e025      	b.n	11840 <ExtraireFileID+0x6c>
   117f4:	693b      	ldr	r3, [r7, #16]
   117f6:	222c      	movs	r2, #44	; 0x2c
   117f8:	fb02 f203 	mul.w	r2, r2, r3
   117fc:	4b1f      	ldr	r3, [pc, #124]	; (1187c <ExtraireFileID+0xa8>)
   117fe:	58e3      	ldr	r3, [r4, r3]
   11800:	18d3      	adds	r3, r2, r3
   11802:	3304      	adds	r3, #4
   11804:	4618      	mov	r0, r3
   11806:	6879      	ldr	r1, [r7, #4]
   11808:	f7f7 ea14 	blx	8c34 <_init+0x164>
   1180c:	4603      	mov	r3, r0
   1180e:	2b00      	cmp	r3, #0
   11810:	d113      	bne.n	1183a <ExtraireFileID+0x66>
   11812:	693b      	ldr	r3, [r7, #16]
   11814:	222c      	movs	r2, #44	; 0x2c
   11816:	fb02 f303 	mul.w	r3, r2, r3
   1181a:	f103 0210 	add.w	r2, r3, #16
   1181e:	4b17      	ldr	r3, [pc, #92]	; (1187c <ExtraireFileID+0xa8>)
   11820:	58e3      	ldr	r3, [r4, r3]
   11822:	18d3      	adds	r3, r2, r3
   11824:	3305      	adds	r3, #5
   11826:	4618      	mov	r0, r3
   11828:	6839      	ldr	r1, [r7, #0]
   1182a:	f7f7 ea04 	blx	8c34 <_init+0x164>
   1182e:	4603      	mov	r3, r0
   11830:	2b00      	cmp	r3, #0
   11832:	d102      	bne.n	1183a <ExtraireFileID+0x66>
   11834:	2301      	movs	r3, #1
   11836:	73fb      	strb	r3, [r7, #15]
   11838:	e002      	b.n	11840 <ExtraireFileID+0x6c>
   1183a:	693b      	ldr	r3, [r7, #16]
   1183c:	3301      	adds	r3, #1
   1183e:	613b      	str	r3, [r7, #16]
   11840:	7bfb      	ldrb	r3, [r7, #15]
   11842:	2b00      	cmp	r3, #0
   11844:	d102      	bne.n	1184c <ExtraireFileID+0x78>
   11846:	693b      	ldr	r3, [r7, #16]
   11848:	2b63      	cmp	r3, #99	; 0x63
   1184a:	ddd3      	ble.n	117f4 <ExtraireFileID+0x20>
   1184c:	7bfb      	ldrb	r3, [r7, #15]
   1184e:	2b01      	cmp	r3, #1
   11850:	d101      	bne.n	11856 <ExtraireFileID+0x82>
   11852:	693b      	ldr	r3, [r7, #16]
   11854:	e001      	b.n	1185a <ExtraireFileID+0x86>
   11856:	f04f 33ff 	mov.w	r3, #4294967295
   1185a:	4618      	mov	r0, r3
   1185c:	4b06      	ldr	r3, [pc, #24]	; (11878 <ExtraireFileID+0xa4>)
   1185e:	58e3      	ldr	r3, [r4, r3]
   11860:	697a      	ldr	r2, [r7, #20]
   11862:	681b      	ldr	r3, [r3, #0]
   11864:	429a      	cmp	r2, r3
   11866:	d001      	beq.n	1186c <ExtraireFileID+0x98>
   11868:	f7f7 fb42 	bl	8ef0 <__stack_chk_fail>
   1186c:	f107 071c 	add.w	r7, r7, #28
   11870:	46bd      	mov	sp, r7
   11872:	bd90      	pop	{r4, r7, pc}
   11874:	00012934 	.word	0x00012934
   11878:	000000a0 	.word	0x000000a0
   1187c:	000000b4 	.word	0x000000b4

00011880 <DeleteFileFromTable>:
   11880:	b590      	push	{r4, r7, lr}
   11882:	b085      	sub	sp, #20
   11884:	af00      	add	r7, sp, #0
   11886:	6078      	str	r0, [r7, #4]
   11888:	4c21      	ldr	r4, [pc, #132]	; (11910 <DeleteFileFromTable+0x90>)
   1188a:	447c      	add	r4, pc
   1188c:	4b21      	ldr	r3, [pc, #132]	; (11914 <DeleteFileFromTable+0x94>)
   1188e:	58e3      	ldr	r3, [r4, r3]
   11890:	681b      	ldr	r3, [r3, #0]
   11892:	60fb      	str	r3, [r7, #12]
   11894:	687b      	ldr	r3, [r7, #4]
   11896:	60bb      	str	r3, [r7, #8]
   11898:	e018      	b.n	118cc <DeleteFileFromTable+0x4c>
   1189a:	68bb      	ldr	r3, [r7, #8]
   1189c:	222c      	movs	r2, #44	; 0x2c
   1189e:	fb02 f203 	mul.w	r2, r2, r3
   118a2:	4b1d      	ldr	r3, [pc, #116]	; (11918 <DeleteFileFromTable+0x98>)
   118a4:	58e3      	ldr	r3, [r4, r3]
   118a6:	18d3      	adds	r3, r2, r3
   118a8:	1d1a      	adds	r2, r3, #4
   118aa:	68bb      	ldr	r3, [r7, #8]
   118ac:	3301      	adds	r3, #1
   118ae:	212c      	movs	r1, #44	; 0x2c
   118b0:	fb01 f103 	mul.w	r1, r1, r3
   118b4:	4b18      	ldr	r3, [pc, #96]	; (11918 <DeleteFileFromTable+0x98>)
   118b6:	58e3      	ldr	r3, [r4, r3]
   118b8:	18cb      	adds	r3, r1, r3
   118ba:	3304      	adds	r3, #4
   118bc:	4610      	mov	r0, r2
   118be:	4619      	mov	r1, r3
   118c0:	222c      	movs	r2, #44	; 0x2c
   118c2:	f7f7 e986 	blx	8bd0 <_init+0x100>
   118c6:	68bb      	ldr	r3, [r7, #8]
   118c8:	3301      	adds	r3, #1
   118ca:	60bb      	str	r3, [r7, #8]
   118cc:	4b12      	ldr	r3, [pc, #72]	; (11918 <DeleteFileFromTable+0x98>)
   118ce:	58e3      	ldr	r3, [r4, r3]
   118d0:	681b      	ldr	r3, [r3, #0]
   118d2:	461a      	mov	r2, r3
   118d4:	68bb      	ldr	r3, [r7, #8]
   118d6:	429a      	cmp	r2, r3
   118d8:	dcdf      	bgt.n	1189a <DeleteFileFromTable+0x1a>
   118da:	4b0f      	ldr	r3, [pc, #60]	; (11918 <DeleteFileFromTable+0x98>)
   118dc:	58e3      	ldr	r3, [r4, r3]
   118de:	681b      	ldr	r3, [r3, #0]
   118e0:	222c      	movs	r2, #44	; 0x2c
   118e2:	fb02 f203 	mul.w	r2, r2, r3
   118e6:	4b0c      	ldr	r3, [pc, #48]	; (11918 <DeleteFileFromTable+0x98>)
   118e8:	58e3      	ldr	r3, [r4, r3]
   118ea:	18d3      	adds	r3, r2, r3
   118ec:	3304      	adds	r3, #4
   118ee:	4618      	mov	r0, r3
   118f0:	2100      	movs	r1, #0
   118f2:	222c      	movs	r2, #44	; 0x2c
   118f4:	f7f7 e91a 	blx	8b2c <_init+0x5c>
   118f8:	4b06      	ldr	r3, [pc, #24]	; (11914 <DeleteFileFromTable+0x94>)
   118fa:	58e3      	ldr	r3, [r4, r3]
   118fc:	68fa      	ldr	r2, [r7, #12]
   118fe:	681b      	ldr	r3, [r3, #0]
   11900:	429a      	cmp	r2, r3
   11902:	d001      	beq.n	11908 <DeleteFileFromTable+0x88>
   11904:	f7f7 faf4 	bl	8ef0 <__stack_chk_fail>
   11908:	f107 0714 	add.w	r7, r7, #20
   1190c:	46bd      	mov	sp, r7
   1190e:	bd90      	pop	{r4, r7, pc}
   11910:	0001288a 	.word	0x0001288a
   11914:	000000a0 	.word	0x000000a0
   11918:	000000b4 	.word	0x000000b4

0001191c <AddModifyRecordBegin>:
   1191c:	b590      	push	{r4, r7, lr}
   1191e:	b0a3      	sub	sp, #140	; 0x8c
   11920:	af00      	add	r7, sp, #0
   11922:	6178      	str	r0, [r7, #20]
   11924:	6139      	str	r1, [r7, #16]
   11926:	60fa      	str	r2, [r7, #12]
   11928:	60bb      	str	r3, [r7, #8]
   1192a:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
   1192e:	607b      	str	r3, [r7, #4]
   11930:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
   11934:	603b      	str	r3, [r7, #0]
   11936:	4cb9      	ldr	r4, [pc, #740]	; (11c1c <AddModifyRecordBegin+0x300>)
   11938:	447c      	add	r4, pc
   1193a:	4bb9      	ldr	r3, [pc, #740]	; (11c20 <AddModifyRecordBegin+0x304>)
   1193c:	58e3      	ldr	r3, [r4, r3]
   1193e:	681b      	ldr	r3, [r3, #0]
   11940:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
   11944:	2318      	movs	r3, #24
   11946:	623b      	str	r3, [r7, #32]
   11948:	2300      	movs	r3, #0
   1194a:	633b      	str	r3, [r7, #48]	; 0x30
   1194c:	2300      	movs	r3, #0
   1194e:	62bb      	str	r3, [r7, #40]	; 0x28
   11950:	2300      	movs	r3, #0
   11952:	62fb      	str	r3, [r7, #44]	; 0x2c
   11954:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   11958:	4618      	mov	r0, r3
   1195a:	4bb2      	ldr	r3, [pc, #712]	; (11c24 <AddModifyRecordBegin+0x308>)
   1195c:	447b      	add	r3, pc
   1195e:	4619      	mov	r1, r3
   11960:	697a      	ldr	r2, [r7, #20]
   11962:	693b      	ldr	r3, [r7, #16]
   11964:	f7f7 e952 	blx	8c0c <_init+0x13c>
   11968:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   1196c:	4618      	mov	r0, r3
   1196e:	4bae      	ldr	r3, [pc, #696]	; (11c28 <AddModifyRecordBegin+0x30c>)
   11970:	447b      	add	r3, pc
   11972:	4619      	mov	r1, r3
   11974:	f006 f90e 	bl	17b94 <FS_open>
   11978:	62b8      	str	r0, [r7, #40]	; 0x28
   1197a:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1197c:	2b00      	cmp	r3, #0
   1197e:	d102      	bne.n	11986 <AddModifyRecordBegin+0x6a>
   11980:	2313      	movs	r3, #19
   11982:	623b      	str	r3, [r7, #32]
   11984:	e13a      	b.n	11bfc <AddModifyRecordBegin+0x2e0>
   11986:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   11988:	f006 f8ae 	bl	17ae8 <FS_length>
   1198c:	6378      	str	r0, [r7, #52]	; 0x34
   1198e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   11990:	4618      	mov	r0, r3
   11992:	f006 fa8b 	bl	17eac <PageAlloc>
   11996:	6338      	str	r0, [r7, #48]	; 0x30
   11998:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   1199a:	2b00      	cmp	r3, #0
   1199c:	f000 8121 	beq.w	11be2 <AddModifyRecordBegin+0x2c6>
   119a0:	f107 0360 	add.w	r3, r7, #96	; 0x60
   119a4:	4618      	mov	r0, r3
   119a6:	4ba1      	ldr	r3, [pc, #644]	; (11c2c <AddModifyRecordBegin+0x310>)
   119a8:	447b      	add	r3, pc
   119aa:	4619      	mov	r1, r3
   119ac:	697a      	ldr	r2, [r7, #20]
   119ae:	4ba0      	ldr	r3, [pc, #640]	; (11c30 <AddModifyRecordBegin+0x314>)
   119b0:	447b      	add	r3, pc
   119b2:	f7f7 e92c 	blx	8c0c <_init+0x13c>
   119b6:	f107 0360 	add.w	r3, r7, #96	; 0x60
   119ba:	4618      	mov	r0, r3
   119bc:	f006 f868 	bl	17a90 <FS_exist>
   119c0:	63b8      	str	r0, [r7, #56]	; 0x38
   119c2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   119c4:	2b02      	cmp	r3, #2
   119c6:	d105      	bne.n	119d4 <AddModifyRecordBegin+0xb8>
   119c8:	f107 0360 	add.w	r3, r7, #96	; 0x60
   119cc:	4618      	mov	r0, r3
   119ce:	f006 f98b 	bl	17ce8 <FS_unlink>
   119d2:	63b8      	str	r0, [r7, #56]	; 0x38
   119d4:	f107 0360 	add.w	r3, r7, #96	; 0x60
   119d8:	4618      	mov	r0, r3
   119da:	4b96      	ldr	r3, [pc, #600]	; (11c34 <AddModifyRecordBegin+0x318>)
   119dc:	447b      	add	r3, pc
   119de:	4619      	mov	r1, r3
   119e0:	f006 f8d8 	bl	17b94 <FS_open>
   119e4:	62f8      	str	r0, [r7, #44]	; 0x2c
   119e6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   119e8:	2100      	movs	r1, #0
   119ea:	2200      	movs	r2, #0
   119ec:	f006 f952 	bl	17c94 <FS_seek>
   119f0:	63b8      	str	r0, [r7, #56]	; 0x38
   119f2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   119f4:	2b02      	cmp	r3, #2
   119f6:	f040 80eb 	bne.w	11bd0 <AddModifyRecordBegin+0x2b4>
   119fa:	6b38      	ldr	r0, [r7, #48]	; 0x30
   119fc:	6b79      	ldr	r1, [r7, #52]	; 0x34
   119fe:	2201      	movs	r2, #1
   11a00:	6abb      	ldr	r3, [r7, #40]	; 0x28
   11a02:	f006 f8f1 	bl	17be8 <FS_read>
   11a06:	6278      	str	r0, [r7, #36]	; 0x24
   11a08:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11a0a:	2b01      	cmp	r3, #1
   11a0c:	d007      	beq.n	11a1e <AddModifyRecordBegin+0x102>
   11a0e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11a10:	2b00      	cmp	r3, #0
   11a12:	f040 80dd 	bne.w	11bd0 <AddModifyRecordBegin+0x2b4>
   11a16:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   11a18:	2b00      	cmp	r3, #0
   11a1a:	f040 80d9 	bne.w	11bd0 <AddModifyRecordBegin+0x2b4>
   11a1e:	4b86      	ldr	r3, [pc, #536]	; (11c38 <AddModifyRecordBegin+0x31c>)
   11a20:	58e3      	ldr	r3, [r4, r3]
   11a22:	461a      	mov	r2, r3
   11a24:	687b      	ldr	r3, [r7, #4]
   11a26:	212c      	movs	r1, #44	; 0x2c
   11a28:	fb01 f303 	mul.w	r3, r1, r3
   11a2c:	18d3      	adds	r3, r2, r3
   11a2e:	3328      	adds	r3, #40	; 0x28
   11a30:	681b      	ldr	r3, [r3, #0]
   11a32:	2b01      	cmp	r3, #1
   11a34:	d173      	bne.n	11b1e <AddModifyRecordBegin+0x202>
   11a36:	683b      	ldr	r3, [r7, #0]
   11a38:	2b01      	cmp	r3, #1
   11a3a:	d10a      	bne.n	11a52 <AddModifyRecordBegin+0x136>
   11a3c:	f107 0318 	add.w	r3, r7, #24
   11a40:	4618      	mov	r0, r3
   11a42:	6b39      	ldr	r1, [r7, #48]	; 0x30
   11a44:	2204      	movs	r2, #4
   11a46:	f7f7 e8c4 	blx	8bd0 <_init+0x100>
   11a4a:	69bb      	ldr	r3, [r7, #24]
   11a4c:	3304      	adds	r3, #4
   11a4e:	61fb      	str	r3, [r7, #28]
   11a50:	e001      	b.n	11a56 <AddModifyRecordBegin+0x13a>
   11a52:	2300      	movs	r3, #0
   11a54:	61fb      	str	r3, [r7, #28]
   11a56:	68bb      	ldr	r3, [r7, #8]
   11a58:	2b00      	cmp	r3, #0
   11a5a:	f2c0 80b9 	blt.w	11bd0 <AddModifyRecordBegin+0x2b4>
   11a5e:	69fb      	ldr	r3, [r7, #28]
   11a60:	2b00      	cmp	r3, #0
   11a62:	f2c0 80b5 	blt.w	11bd0 <AddModifyRecordBegin+0x2b4>
   11a66:	6b7a      	ldr	r2, [r7, #52]	; 0x34
   11a68:	69fb      	ldr	r3, [r7, #28]
   11a6a:	1ad3      	subs	r3, r2, r3
   11a6c:	2b00      	cmp	r3, #0
   11a6e:	f2c0 80af 	blt.w	11bd0 <AddModifyRecordBegin+0x2b4>
   11a72:	f107 0308 	add.w	r3, r7, #8
   11a76:	4618      	mov	r0, r3
   11a78:	2104      	movs	r1, #4
   11a7a:	2201      	movs	r2, #1
   11a7c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   11a7e:	f006 f98b 	bl	17d98 <FS_write>
   11a82:	6278      	str	r0, [r7, #36]	; 0x24
   11a84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11a86:	2b01      	cmp	r3, #1
   11a88:	d107      	bne.n	11a9a <AddModifyRecordBegin+0x17e>
   11a8a:	68bb      	ldr	r3, [r7, #8]
   11a8c:	68f8      	ldr	r0, [r7, #12]
   11a8e:	4619      	mov	r1, r3
   11a90:	2201      	movs	r2, #1
   11a92:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   11a94:	f006 f980 	bl	17d98 <FS_write>
   11a98:	6278      	str	r0, [r7, #36]	; 0x24
   11a9a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11a9c:	2b01      	cmp	r3, #1
   11a9e:	d005      	beq.n	11aac <AddModifyRecordBegin+0x190>
   11aa0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11aa2:	2b00      	cmp	r3, #0
   11aa4:	d10f      	bne.n	11ac6 <AddModifyRecordBegin+0x1aa>
   11aa6:	68bb      	ldr	r3, [r7, #8]
   11aa8:	2b00      	cmp	r3, #0
   11aaa:	d10c      	bne.n	11ac6 <AddModifyRecordBegin+0x1aa>
   11aac:	69fb      	ldr	r3, [r7, #28]
   11aae:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   11ab0:	18d2      	adds	r2, r2, r3
   11ab2:	6b79      	ldr	r1, [r7, #52]	; 0x34
   11ab4:	69fb      	ldr	r3, [r7, #28]
   11ab6:	1acb      	subs	r3, r1, r3
   11ab8:	4610      	mov	r0, r2
   11aba:	4619      	mov	r1, r3
   11abc:	2201      	movs	r2, #1
   11abe:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   11ac0:	f006 f96a 	bl	17d98 <FS_write>
   11ac4:	6278      	str	r0, [r7, #36]	; 0x24
   11ac6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11ac8:	2b01      	cmp	r3, #1
   11aca:	d006      	beq.n	11ada <AddModifyRecordBegin+0x1be>
   11acc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11ace:	2b00      	cmp	r3, #0
   11ad0:	d17e      	bne.n	11bd0 <AddModifyRecordBegin+0x2b4>
   11ad2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
   11ad4:	69fb      	ldr	r3, [r7, #28]
   11ad6:	429a      	cmp	r2, r3
   11ad8:	d17a      	bne.n	11bd0 <AddModifyRecordBegin+0x2b4>
   11ada:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   11adc:	f005 ff7e 	bl	179dc <FS_close>
   11ae0:	2300      	movs	r3, #0
   11ae2:	62bb      	str	r3, [r7, #40]	; 0x28
   11ae4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   11ae8:	4618      	mov	r0, r3
   11aea:	f006 f8fd 	bl	17ce8 <FS_unlink>
   11aee:	63b8      	str	r0, [r7, #56]	; 0x38
   11af0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   11af2:	2b02      	cmp	r3, #2
   11af4:	d16c      	bne.n	11bd0 <AddModifyRecordBegin+0x2b4>
   11af6:	6af8      	ldr	r0, [r7, #44]	; 0x2c
   11af8:	f005 ff70 	bl	179dc <FS_close>
   11afc:	2300      	movs	r3, #0
   11afe:	62fb      	str	r3, [r7, #44]	; 0x2c
   11b00:	f107 0260 	add.w	r2, r7, #96	; 0x60
   11b04:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   11b08:	4610      	mov	r0, r2
   11b0a:	4619      	mov	r1, r3
   11b0c:	f006 f898 	bl	17c40 <FS_rename>
   11b10:	63b8      	str	r0, [r7, #56]	; 0x38
   11b12:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   11b14:	2b02      	cmp	r3, #2
   11b16:	d15b      	bne.n	11bd0 <AddModifyRecordBegin+0x2b4>
   11b18:	230a      	movs	r3, #10
   11b1a:	623b      	str	r3, [r7, #32]
   11b1c:	e058      	b.n	11bd0 <AddModifyRecordBegin+0x2b4>
   11b1e:	683b      	ldr	r3, [r7, #0]
   11b20:	2b01      	cmp	r3, #1
   11b22:	d102      	bne.n	11b2a <AddModifyRecordBegin+0x20e>
   11b24:	68bb      	ldr	r3, [r7, #8]
   11b26:	61fb      	str	r3, [r7, #28]
   11b28:	e001      	b.n	11b2e <AddModifyRecordBegin+0x212>
   11b2a:	2300      	movs	r3, #0
   11b2c:	61fb      	str	r3, [r7, #28]
   11b2e:	69fb      	ldr	r3, [r7, #28]
   11b30:	2b00      	cmp	r3, #0
   11b32:	db4d      	blt.n	11bd0 <AddModifyRecordBegin+0x2b4>
   11b34:	6b7a      	ldr	r2, [r7, #52]	; 0x34
   11b36:	69fb      	ldr	r3, [r7, #28]
   11b38:	1ad3      	subs	r3, r2, r3
   11b3a:	2b00      	cmp	r3, #0
   11b3c:	db48      	blt.n	11bd0 <AddModifyRecordBegin+0x2b4>
   11b3e:	68bb      	ldr	r3, [r7, #8]
   11b40:	68f8      	ldr	r0, [r7, #12]
   11b42:	4619      	mov	r1, r3
   11b44:	2201      	movs	r2, #1
   11b46:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   11b48:	f006 f926 	bl	17d98 <FS_write>
   11b4c:	6278      	str	r0, [r7, #36]	; 0x24
   11b4e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11b50:	2b01      	cmp	r3, #1
   11b52:	d005      	beq.n	11b60 <AddModifyRecordBegin+0x244>
   11b54:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11b56:	2b00      	cmp	r3, #0
   11b58:	d10f      	bne.n	11b7a <AddModifyRecordBegin+0x25e>
   11b5a:	68bb      	ldr	r3, [r7, #8]
   11b5c:	2b00      	cmp	r3, #0
   11b5e:	d10c      	bne.n	11b7a <AddModifyRecordBegin+0x25e>
   11b60:	69fb      	ldr	r3, [r7, #28]
   11b62:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   11b64:	18d2      	adds	r2, r2, r3
   11b66:	6b79      	ldr	r1, [r7, #52]	; 0x34
   11b68:	69fb      	ldr	r3, [r7, #28]
   11b6a:	1acb      	subs	r3, r1, r3
   11b6c:	4610      	mov	r0, r2
   11b6e:	4619      	mov	r1, r3
   11b70:	2201      	movs	r2, #1
   11b72:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   11b74:	f006 f910 	bl	17d98 <FS_write>
   11b78:	6278      	str	r0, [r7, #36]	; 0x24
   11b7a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11b7c:	2b01      	cmp	r3, #1
   11b7e:	d006      	beq.n	11b8e <AddModifyRecordBegin+0x272>
   11b80:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11b82:	2b00      	cmp	r3, #0
   11b84:	d124      	bne.n	11bd0 <AddModifyRecordBegin+0x2b4>
   11b86:	6b7a      	ldr	r2, [r7, #52]	; 0x34
   11b88:	69fb      	ldr	r3, [r7, #28]
   11b8a:	429a      	cmp	r2, r3
   11b8c:	d120      	bne.n	11bd0 <AddModifyRecordBegin+0x2b4>
   11b8e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   11b90:	f005 ff24 	bl	179dc <FS_close>
   11b94:	2300      	movs	r3, #0
   11b96:	62bb      	str	r3, [r7, #40]	; 0x28
   11b98:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   11b9c:	4618      	mov	r0, r3
   11b9e:	f006 f8a3 	bl	17ce8 <FS_unlink>
   11ba2:	63b8      	str	r0, [r7, #56]	; 0x38
   11ba4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   11ba6:	2b02      	cmp	r3, #2
   11ba8:	d112      	bne.n	11bd0 <AddModifyRecordBegin+0x2b4>
   11baa:	6af8      	ldr	r0, [r7, #44]	; 0x2c
   11bac:	f005 ff16 	bl	179dc <FS_close>
   11bb0:	2300      	movs	r3, #0
   11bb2:	62fb      	str	r3, [r7, #44]	; 0x2c
   11bb4:	f107 0260 	add.w	r2, r7, #96	; 0x60
   11bb8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   11bbc:	4610      	mov	r0, r2
   11bbe:	4619      	mov	r1, r3
   11bc0:	f006 f83e 	bl	17c40 <FS_rename>
   11bc4:	63b8      	str	r0, [r7, #56]	; 0x38
   11bc6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   11bc8:	2b02      	cmp	r3, #2
   11bca:	d101      	bne.n	11bd0 <AddModifyRecordBegin+0x2b4>
   11bcc:	230a      	movs	r3, #10
   11bce:	623b      	str	r3, [r7, #32]
   11bd0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   11bd2:	2b00      	cmp	r3, #0
   11bd4:	d007      	beq.n	11be6 <AddModifyRecordBegin+0x2ca>
   11bd6:	6af8      	ldr	r0, [r7, #44]	; 0x2c
   11bd8:	f005 ff00 	bl	179dc <FS_close>
   11bdc:	2300      	movs	r3, #0
   11bde:	62fb      	str	r3, [r7, #44]	; 0x2c
   11be0:	e001      	b.n	11be6 <AddModifyRecordBegin+0x2ca>
   11be2:	2318      	movs	r3, #24
   11be4:	623b      	str	r3, [r7, #32]
   11be6:	6abb      	ldr	r3, [r7, #40]	; 0x28
   11be8:	2b00      	cmp	r3, #0
   11bea:	d004      	beq.n	11bf6 <AddModifyRecordBegin+0x2da>
   11bec:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   11bee:	f005 fef5 	bl	179dc <FS_close>
   11bf2:	2300      	movs	r3, #0
   11bf4:	62bb      	str	r3, [r7, #40]	; 0x28
   11bf6:	6b38      	ldr	r0, [r7, #48]	; 0x30
   11bf8:	f006 f982 	bl	17f00 <PageFree>
   11bfc:	6a3b      	ldr	r3, [r7, #32]
   11bfe:	4618      	mov	r0, r3
   11c00:	4b07      	ldr	r3, [pc, #28]	; (11c20 <AddModifyRecordBegin+0x304>)
   11c02:	58e3      	ldr	r3, [r4, r3]
   11c04:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
   11c08:	681b      	ldr	r3, [r3, #0]
   11c0a:	429a      	cmp	r2, r3
   11c0c:	d001      	beq.n	11c12 <AddModifyRecordBegin+0x2f6>
   11c0e:	f7f7 f96f 	bl	8ef0 <__stack_chk_fail>
   11c12:	f107 078c 	add.w	r7, r7, #140	; 0x8c
   11c16:	46bd      	mov	sp, r7
   11c18:	bd90      	pop	{r4, r7, pc}
   11c1a:	bf00      	nop
   11c1c:	000127dc 	.word	0x000127dc
   11c20:	000000a0 	.word	0x000000a0
   11c24:	00009b3c 	.word	0x00009b3c
   11c28:	00009b40 	.word	0x00009b40
   11c2c:	00009af0 	.word	0x00009af0
   11c30:	00009b04 	.word	0x00009b04
   11c34:	00009ad0 	.word	0x00009ad0
   11c38:	000000b4 	.word	0x000000b4

00011c3c <AddModifyRecordBeginWithCkecksum>:
   11c3c:	b590      	push	{r4, r7, lr}
   11c3e:	b0bd      	sub	sp, #244	; 0xf4
   11c40:	af00      	add	r7, sp, #0
   11c42:	6178      	str	r0, [r7, #20]
   11c44:	6139      	str	r1, [r7, #16]
   11c46:	60fa      	str	r2, [r7, #12]
   11c48:	60bb      	str	r3, [r7, #8]
   11c4a:	f8d7 3100 	ldr.w	r3, [r7, #256]	; 0x100
   11c4e:	607b      	str	r3, [r7, #4]
   11c50:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
   11c54:	603b      	str	r3, [r7, #0]
   11c56:	4cf8      	ldr	r4, [pc, #992]	; (12038 <AddModifyRecordBeginWithCkecksum+0x3fc>)
   11c58:	447c      	add	r4, pc
   11c5a:	4bf8      	ldr	r3, [pc, #992]	; (1203c <AddModifyRecordBeginWithCkecksum+0x400>)
   11c5c:	58e3      	ldr	r3, [r4, r3]
   11c5e:	681b      	ldr	r3, [r3, #0]
   11c60:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
   11c64:	2318      	movs	r3, #24
   11c66:	623b      	str	r3, [r7, #32]
   11c68:	2300      	movs	r3, #0
   11c6a:	633b      	str	r3, [r7, #48]	; 0x30
   11c6c:	2300      	movs	r3, #0
   11c6e:	62bb      	str	r3, [r7, #40]	; 0x28
   11c70:	2300      	movs	r3, #0
   11c72:	62fb      	str	r3, [r7, #44]	; 0x2c
   11c74:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
   11c78:	4618      	mov	r0, r3
   11c7a:	4bf1      	ldr	r3, [pc, #964]	; (12040 <AddModifyRecordBeginWithCkecksum+0x404>)
   11c7c:	447b      	add	r3, pc
   11c7e:	4619      	mov	r1, r3
   11c80:	697a      	ldr	r2, [r7, #20]
   11c82:	693b      	ldr	r3, [r7, #16]
   11c84:	f7f6 efc2 	blx	8c0c <_init+0x13c>
   11c88:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
   11c8c:	4618      	mov	r0, r3
   11c8e:	4bed      	ldr	r3, [pc, #948]	; (12044 <AddModifyRecordBeginWithCkecksum+0x408>)
   11c90:	447b      	add	r3, pc
   11c92:	4619      	mov	r1, r3
   11c94:	f005 ff7e 	bl	17b94 <FS_open>
   11c98:	62b8      	str	r0, [r7, #40]	; 0x28
   11c9a:	6abb      	ldr	r3, [r7, #40]	; 0x28
   11c9c:	2b00      	cmp	r3, #0
   11c9e:	d102      	bne.n	11ca6 <AddModifyRecordBeginWithCkecksum+0x6a>
   11ca0:	2313      	movs	r3, #19
   11ca2:	623b      	str	r3, [r7, #32]
   11ca4:	e1b9      	b.n	1201a <AddModifyRecordBeginWithCkecksum+0x3de>
   11ca6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   11ca8:	f005 ff1e 	bl	17ae8 <FS_length>
   11cac:	6378      	str	r0, [r7, #52]	; 0x34
   11cae:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   11cb0:	4618      	mov	r0, r3
   11cb2:	f006 f8fb 	bl	17eac <PageAlloc>
   11cb6:	6338      	str	r0, [r7, #48]	; 0x30
   11cb8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   11cba:	2b00      	cmp	r3, #0
   11cbc:	f000 81a0 	beq.w	12000 <AddModifyRecordBeginWithCkecksum+0x3c4>
   11cc0:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
   11cc4:	4618      	mov	r0, r3
   11cc6:	4be0      	ldr	r3, [pc, #896]	; (12048 <AddModifyRecordBeginWithCkecksum+0x40c>)
   11cc8:	447b      	add	r3, pc
   11cca:	4619      	mov	r1, r3
   11ccc:	697a      	ldr	r2, [r7, #20]
   11cce:	4bdf      	ldr	r3, [pc, #892]	; (1204c <AddModifyRecordBeginWithCkecksum+0x410>)
   11cd0:	447b      	add	r3, pc
   11cd2:	f7f6 ef9c 	blx	8c0c <_init+0x13c>
   11cd6:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
   11cda:	4618      	mov	r0, r3
   11cdc:	f005 fed8 	bl	17a90 <FS_exist>
   11ce0:	63b8      	str	r0, [r7, #56]	; 0x38
   11ce2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   11ce4:	2b02      	cmp	r3, #2
   11ce6:	d104      	bne.n	11cf2 <AddModifyRecordBeginWithCkecksum+0xb6>
   11ce8:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
   11cec:	4618      	mov	r0, r3
   11cee:	f005 fffb 	bl	17ce8 <FS_unlink>
   11cf2:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
   11cf6:	4618      	mov	r0, r3
   11cf8:	4bd5      	ldr	r3, [pc, #852]	; (12050 <AddModifyRecordBeginWithCkecksum+0x414>)
   11cfa:	447b      	add	r3, pc
   11cfc:	4619      	mov	r1, r3
   11cfe:	f005 ff49 	bl	17b94 <FS_open>
   11d02:	62f8      	str	r0, [r7, #44]	; 0x2c
   11d04:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   11d06:	2100      	movs	r1, #0
   11d08:	2200      	movs	r2, #0
   11d0a:	f005 ffc3 	bl	17c94 <FS_seek>
   11d0e:	63b8      	str	r0, [r7, #56]	; 0x38
   11d10:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   11d12:	2b02      	cmp	r3, #2
   11d14:	f040 816b 	bne.w	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11d18:	6b38      	ldr	r0, [r7, #48]	; 0x30
   11d1a:	6b79      	ldr	r1, [r7, #52]	; 0x34
   11d1c:	2201      	movs	r2, #1
   11d1e:	6abb      	ldr	r3, [r7, #40]	; 0x28
   11d20:	f005 ff62 	bl	17be8 <FS_read>
   11d24:	6278      	str	r0, [r7, #36]	; 0x24
   11d26:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11d28:	2b01      	cmp	r3, #1
   11d2a:	d007      	beq.n	11d3c <AddModifyRecordBeginWithCkecksum+0x100>
   11d2c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11d2e:	2b00      	cmp	r3, #0
   11d30:	f040 815d 	bne.w	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11d34:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   11d36:	2b00      	cmp	r3, #0
   11d38:	f040 8159 	bne.w	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11d3c:	4bc5      	ldr	r3, [pc, #788]	; (12054 <AddModifyRecordBeginWithCkecksum+0x418>)
   11d3e:	58e3      	ldr	r3, [r4, r3]
   11d40:	461a      	mov	r2, r3
   11d42:	687b      	ldr	r3, [r7, #4]
   11d44:	212c      	movs	r1, #44	; 0x2c
   11d46:	fb01 f303 	mul.w	r3, r1, r3
   11d4a:	18d3      	adds	r3, r2, r3
   11d4c:	3328      	adds	r3, #40	; 0x28
   11d4e:	681b      	ldr	r3, [r3, #0]
   11d50:	2b01      	cmp	r3, #1
   11d52:	f040 80ba 	bne.w	11eca <AddModifyRecordBeginWithCkecksum+0x28e>
   11d56:	683b      	ldr	r3, [r7, #0]
   11d58:	2b01      	cmp	r3, #1
   11d5a:	d10a      	bne.n	11d72 <AddModifyRecordBeginWithCkecksum+0x136>
   11d5c:	f107 0318 	add.w	r3, r7, #24
   11d60:	4618      	mov	r0, r3
   11d62:	6b39      	ldr	r1, [r7, #48]	; 0x30
   11d64:	2204      	movs	r2, #4
   11d66:	f7f6 ef34 	blx	8bd0 <_init+0x100>
   11d6a:	69bb      	ldr	r3, [r7, #24]
   11d6c:	3304      	adds	r3, #4
   11d6e:	61fb      	str	r3, [r7, #28]
   11d70:	e001      	b.n	11d76 <AddModifyRecordBeginWithCkecksum+0x13a>
   11d72:	2300      	movs	r3, #0
   11d74:	61fb      	str	r3, [r7, #28]
   11d76:	69fb      	ldr	r3, [r7, #28]
   11d78:	2b00      	cmp	r3, #0
   11d7a:	f2c0 8138 	blt.w	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11d7e:	68bb      	ldr	r3, [r7, #8]
   11d80:	2b00      	cmp	r3, #0
   11d82:	f2c0 8134 	blt.w	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11d86:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   11d88:	f1a3 0210 	sub.w	r2, r3, #16
   11d8c:	69fb      	ldr	r3, [r7, #28]
   11d8e:	1ad3      	subs	r3, r2, r3
   11d90:	2b00      	cmp	r3, #0
   11d92:	f2c0 812c 	blt.w	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11d96:	f107 0308 	add.w	r3, r7, #8
   11d9a:	4618      	mov	r0, r3
   11d9c:	2104      	movs	r1, #4
   11d9e:	2201      	movs	r2, #1
   11da0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   11da2:	f005 fff9 	bl	17d98 <FS_write>
   11da6:	6278      	str	r0, [r7, #36]	; 0x24
   11da8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11daa:	2b01      	cmp	r3, #1
   11dac:	d107      	bne.n	11dbe <AddModifyRecordBeginWithCkecksum+0x182>
   11dae:	68bb      	ldr	r3, [r7, #8]
   11db0:	68f8      	ldr	r0, [r7, #12]
   11db2:	4619      	mov	r1, r3
   11db4:	2201      	movs	r2, #1
   11db6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   11db8:	f005 ffee 	bl	17d98 <FS_write>
   11dbc:	6278      	str	r0, [r7, #36]	; 0x24
   11dbe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11dc0:	2b01      	cmp	r3, #1
   11dc2:	d005      	beq.n	11dd0 <AddModifyRecordBeginWithCkecksum+0x194>
   11dc4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11dc6:	2b00      	cmp	r3, #0
   11dc8:	d111      	bne.n	11dee <AddModifyRecordBeginWithCkecksum+0x1b2>
   11dca:	68bb      	ldr	r3, [r7, #8]
   11dcc:	2b00      	cmp	r3, #0
   11dce:	d10e      	bne.n	11dee <AddModifyRecordBeginWithCkecksum+0x1b2>
   11dd0:	69fb      	ldr	r3, [r7, #28]
   11dd2:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   11dd4:	18d2      	adds	r2, r2, r3
   11dd6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   11dd8:	f1a3 0110 	sub.w	r1, r3, #16
   11ddc:	69fb      	ldr	r3, [r7, #28]
   11dde:	1acb      	subs	r3, r1, r3
   11de0:	4610      	mov	r0, r2
   11de2:	4619      	mov	r1, r3
   11de4:	2201      	movs	r2, #1
   11de6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   11de8:	f005 ffd6 	bl	17d98 <FS_write>
   11dec:	6278      	str	r0, [r7, #36]	; 0x24
   11dee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11df0:	2b01      	cmp	r3, #1
   11df2:	d00a      	beq.n	11e0a <AddModifyRecordBeginWithCkecksum+0x1ce>
   11df4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11df6:	2b00      	cmp	r3, #0
   11df8:	f040 80f9 	bne.w	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11dfc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   11dfe:	f1a3 0210 	sub.w	r2, r3, #16
   11e02:	69fb      	ldr	r3, [r7, #28]
   11e04:	429a      	cmp	r2, r3
   11e06:	f040 80f2 	bne.w	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11e0a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   11e0e:	4618      	mov	r0, r3
   11e10:	f004 ff8c 	bl	16d2c <md5_init>
   11e14:	f107 023c 	add.w	r2, r7, #60	; 0x3c
   11e18:	f107 0308 	add.w	r3, r7, #8
   11e1c:	4610      	mov	r0, r2
   11e1e:	4619      	mov	r1, r3
   11e20:	2204      	movs	r2, #4
   11e22:	f004 ffbd 	bl	16da0 <md5_append>
   11e26:	68bb      	ldr	r3, [r7, #8]
   11e28:	f107 023c 	add.w	r2, r7, #60	; 0x3c
   11e2c:	4610      	mov	r0, r2
   11e2e:	68f9      	ldr	r1, [r7, #12]
   11e30:	461a      	mov	r2, r3
   11e32:	f004 ffb5 	bl	16da0 <md5_append>
   11e36:	69fb      	ldr	r3, [r7, #28]
   11e38:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   11e3a:	18d2      	adds	r2, r2, r3
   11e3c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   11e3e:	f1a3 0110 	sub.w	r1, r3, #16
   11e42:	69fb      	ldr	r3, [r7, #28]
   11e44:	1acb      	subs	r3, r1, r3
   11e46:	f107 013c 	add.w	r1, r7, #60	; 0x3c
   11e4a:	4608      	mov	r0, r1
   11e4c:	4611      	mov	r1, r2
   11e4e:	461a      	mov	r2, r3
   11e50:	f004 ffa6 	bl	16da0 <md5_append>
   11e54:	f107 023c 	add.w	r2, r7, #60	; 0x3c
   11e58:	f107 0394 	add.w	r3, r7, #148	; 0x94
   11e5c:	4610      	mov	r0, r2
   11e5e:	4619      	mov	r1, r3
   11e60:	f005 f82a 	bl	16eb8 <md5_finish>
   11e64:	f107 0394 	add.w	r3, r7, #148	; 0x94
   11e68:	4618      	mov	r0, r3
   11e6a:	2110      	movs	r1, #16
   11e6c:	2201      	movs	r2, #1
   11e6e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   11e70:	f005 ff92 	bl	17d98 <FS_write>
   11e74:	6278      	str	r0, [r7, #36]	; 0x24
   11e76:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   11e78:	f005 fdb0 	bl	179dc <FS_close>
   11e7c:	63b8      	str	r0, [r7, #56]	; 0x38
   11e7e:	2300      	movs	r3, #0
   11e80:	62bb      	str	r3, [r7, #40]	; 0x28
   11e82:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
   11e86:	4618      	mov	r0, r3
   11e88:	f005 ff2e 	bl	17ce8 <FS_unlink>
   11e8c:	63b8      	str	r0, [r7, #56]	; 0x38
   11e8e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   11e90:	2b02      	cmp	r3, #2
   11e92:	f040 80ac 	bne.w	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11e96:	6af8      	ldr	r0, [r7, #44]	; 0x2c
   11e98:	f005 fda0 	bl	179dc <FS_close>
   11e9c:	63b8      	str	r0, [r7, #56]	; 0x38
   11e9e:	2300      	movs	r3, #0
   11ea0:	62fb      	str	r3, [r7, #44]	; 0x2c
   11ea2:	f107 02c8 	add.w	r2, r7, #200	; 0xc8
   11ea6:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
   11eaa:	4610      	mov	r0, r2
   11eac:	4619      	mov	r1, r3
   11eae:	f005 fec7 	bl	17c40 <FS_rename>
   11eb2:	63b8      	str	r0, [r7, #56]	; 0x38
   11eb4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   11eb6:	2b02      	cmp	r3, #2
   11eb8:	f040 8099 	bne.w	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11ebc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11ebe:	2b01      	cmp	r3, #1
   11ec0:	f040 8095 	bne.w	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11ec4:	230a      	movs	r3, #10
   11ec6:	623b      	str	r3, [r7, #32]
   11ec8:	e091      	b.n	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11eca:	683b      	ldr	r3, [r7, #0]
   11ecc:	2b01      	cmp	r3, #1
   11ece:	d102      	bne.n	11ed6 <AddModifyRecordBeginWithCkecksum+0x29a>
   11ed0:	68bb      	ldr	r3, [r7, #8]
   11ed2:	61fb      	str	r3, [r7, #28]
   11ed4:	e001      	b.n	11eda <AddModifyRecordBeginWithCkecksum+0x29e>
   11ed6:	2300      	movs	r3, #0
   11ed8:	61fb      	str	r3, [r7, #28]
   11eda:	69fb      	ldr	r3, [r7, #28]
   11edc:	2b00      	cmp	r3, #0
   11ede:	f2c0 8086 	blt.w	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11ee2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   11ee4:	f1a3 0210 	sub.w	r2, r3, #16
   11ee8:	69fb      	ldr	r3, [r7, #28]
   11eea:	1ad3      	subs	r3, r2, r3
   11eec:	2b00      	cmp	r3, #0
   11eee:	db7e      	blt.n	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11ef0:	68bb      	ldr	r3, [r7, #8]
   11ef2:	68f8      	ldr	r0, [r7, #12]
   11ef4:	4619      	mov	r1, r3
   11ef6:	2201      	movs	r2, #1
   11ef8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   11efa:	f005 ff4d 	bl	17d98 <FS_write>
   11efe:	6278      	str	r0, [r7, #36]	; 0x24
   11f00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11f02:	2b01      	cmp	r3, #1
   11f04:	d005      	beq.n	11f12 <AddModifyRecordBeginWithCkecksum+0x2d6>
   11f06:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11f08:	2b00      	cmp	r3, #0
   11f0a:	d111      	bne.n	11f30 <AddModifyRecordBeginWithCkecksum+0x2f4>
   11f0c:	68bb      	ldr	r3, [r7, #8]
   11f0e:	2b00      	cmp	r3, #0
   11f10:	d10e      	bne.n	11f30 <AddModifyRecordBeginWithCkecksum+0x2f4>
   11f12:	69fb      	ldr	r3, [r7, #28]
   11f14:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   11f16:	18d2      	adds	r2, r2, r3
   11f18:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   11f1a:	f1a3 0110 	sub.w	r1, r3, #16
   11f1e:	69fb      	ldr	r3, [r7, #28]
   11f20:	1acb      	subs	r3, r1, r3
   11f22:	4610      	mov	r0, r2
   11f24:	4619      	mov	r1, r3
   11f26:	2201      	movs	r2, #1
   11f28:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   11f2a:	f005 ff35 	bl	17d98 <FS_write>
   11f2e:	6278      	str	r0, [r7, #36]	; 0x24
   11f30:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11f32:	2b01      	cmp	r3, #1
   11f34:	d008      	beq.n	11f48 <AddModifyRecordBeginWithCkecksum+0x30c>
   11f36:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11f38:	2b00      	cmp	r3, #0
   11f3a:	d158      	bne.n	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11f3c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   11f3e:	f1a3 0210 	sub.w	r2, r3, #16
   11f42:	69fb      	ldr	r3, [r7, #28]
   11f44:	429a      	cmp	r2, r3
   11f46:	d152      	bne.n	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11f48:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   11f4c:	4618      	mov	r0, r3
   11f4e:	f004 feed 	bl	16d2c <md5_init>
   11f52:	68bb      	ldr	r3, [r7, #8]
   11f54:	f107 023c 	add.w	r2, r7, #60	; 0x3c
   11f58:	4610      	mov	r0, r2
   11f5a:	68f9      	ldr	r1, [r7, #12]
   11f5c:	461a      	mov	r2, r3
   11f5e:	f004 ff1f 	bl	16da0 <md5_append>
   11f62:	69fb      	ldr	r3, [r7, #28]
   11f64:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   11f66:	18d2      	adds	r2, r2, r3
   11f68:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   11f6a:	f1a3 0110 	sub.w	r1, r3, #16
   11f6e:	69fb      	ldr	r3, [r7, #28]
   11f70:	1acb      	subs	r3, r1, r3
   11f72:	f107 013c 	add.w	r1, r7, #60	; 0x3c
   11f76:	4608      	mov	r0, r1
   11f78:	4611      	mov	r1, r2
   11f7a:	461a      	mov	r2, r3
   11f7c:	f004 ff10 	bl	16da0 <md5_append>
   11f80:	f107 023c 	add.w	r2, r7, #60	; 0x3c
   11f84:	f107 0394 	add.w	r3, r7, #148	; 0x94
   11f88:	4610      	mov	r0, r2
   11f8a:	4619      	mov	r1, r3
   11f8c:	f004 ff94 	bl	16eb8 <md5_finish>
   11f90:	f107 0394 	add.w	r3, r7, #148	; 0x94
   11f94:	4618      	mov	r0, r3
   11f96:	2110      	movs	r1, #16
   11f98:	2201      	movs	r2, #1
   11f9a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   11f9c:	f005 fefc 	bl	17d98 <FS_write>
   11fa0:	6278      	str	r0, [r7, #36]	; 0x24
   11fa2:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   11fa4:	f005 fd1a 	bl	179dc <FS_close>
   11fa8:	63b8      	str	r0, [r7, #56]	; 0x38
   11faa:	2300      	movs	r3, #0
   11fac:	62bb      	str	r3, [r7, #40]	; 0x28
   11fae:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
   11fb2:	4618      	mov	r0, r3
   11fb4:	f005 fe98 	bl	17ce8 <FS_unlink>
   11fb8:	63b8      	str	r0, [r7, #56]	; 0x38
   11fba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   11fbc:	2b02      	cmp	r3, #2
   11fbe:	d116      	bne.n	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11fc0:	6af8      	ldr	r0, [r7, #44]	; 0x2c
   11fc2:	f005 fd0b 	bl	179dc <FS_close>
   11fc6:	63b8      	str	r0, [r7, #56]	; 0x38
   11fc8:	2300      	movs	r3, #0
   11fca:	62fb      	str	r3, [r7, #44]	; 0x2c
   11fcc:	f107 02c8 	add.w	r2, r7, #200	; 0xc8
   11fd0:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
   11fd4:	4610      	mov	r0, r2
   11fd6:	4619      	mov	r1, r3
   11fd8:	f005 fe32 	bl	17c40 <FS_rename>
   11fdc:	63b8      	str	r0, [r7, #56]	; 0x38
   11fde:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   11fe0:	2b02      	cmp	r3, #2
   11fe2:	d104      	bne.n	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11fe4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11fe6:	2b01      	cmp	r3, #1
   11fe8:	d101      	bne.n	11fee <AddModifyRecordBeginWithCkecksum+0x3b2>
   11fea:	230a      	movs	r3, #10
   11fec:	623b      	str	r3, [r7, #32]
   11fee:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   11ff0:	2b00      	cmp	r3, #0
   11ff2:	d007      	beq.n	12004 <AddModifyRecordBeginWithCkecksum+0x3c8>
   11ff4:	6af8      	ldr	r0, [r7, #44]	; 0x2c
   11ff6:	f005 fcf1 	bl	179dc <FS_close>
   11ffa:	2300      	movs	r3, #0
   11ffc:	62fb      	str	r3, [r7, #44]	; 0x2c
   11ffe:	e001      	b.n	12004 <AddModifyRecordBeginWithCkecksum+0x3c8>
   12000:	2318      	movs	r3, #24
   12002:	623b      	str	r3, [r7, #32]
   12004:	6abb      	ldr	r3, [r7, #40]	; 0x28
   12006:	2b00      	cmp	r3, #0
   12008:	d004      	beq.n	12014 <AddModifyRecordBeginWithCkecksum+0x3d8>
   1200a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   1200c:	f005 fce6 	bl	179dc <FS_close>
   12010:	2300      	movs	r3, #0
   12012:	62bb      	str	r3, [r7, #40]	; 0x28
   12014:	6b38      	ldr	r0, [r7, #48]	; 0x30
   12016:	f005 ff73 	bl	17f00 <PageFree>
   1201a:	6a3b      	ldr	r3, [r7, #32]
   1201c:	4618      	mov	r0, r3
   1201e:	4b07      	ldr	r3, [pc, #28]	; (1203c <AddModifyRecordBeginWithCkecksum+0x400>)
   12020:	58e3      	ldr	r3, [r4, r3]
   12022:	f8d7 20ec 	ldr.w	r2, [r7, #236]	; 0xec
   12026:	681b      	ldr	r3, [r3, #0]
   12028:	429a      	cmp	r2, r3
   1202a:	d001      	beq.n	12030 <AddModifyRecordBeginWithCkecksum+0x3f4>
   1202c:	f7f6 ff60 	bl	8ef0 <__stack_chk_fail>
   12030:	f107 07f4 	add.w	r7, r7, #244	; 0xf4
   12034:	46bd      	mov	sp, r7
   12036:	bd90      	pop	{r4, r7, pc}
   12038:	000124bc 	.word	0x000124bc
   1203c:	000000a0 	.word	0x000000a0
   12040:	0000981c 	.word	0x0000981c
   12044:	00009820 	.word	0x00009820
   12048:	000097d0 	.word	0x000097d0
   1204c:	000097e4 	.word	0x000097e4
   12050:	000097b2 	.word	0x000097b2
   12054:	000000b4 	.word	0x000000b4

00012058 <AddModifyRecordMiddle>:
   12058:	b590      	push	{r4, r7, lr}
   1205a:	b0a7      	sub	sp, #156	; 0x9c
   1205c:	af00      	add	r7, sp, #0
   1205e:	61f8      	str	r0, [r7, #28]
   12060:	61b9      	str	r1, [r7, #24]
   12062:	617a      	str	r2, [r7, #20]
   12064:	613b      	str	r3, [r7, #16]
   12066:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
   1206a:	60fb      	str	r3, [r7, #12]
   1206c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
   12070:	60bb      	str	r3, [r7, #8]
   12072:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
   12076:	607b      	str	r3, [r7, #4]
   12078:	4cf5      	ldr	r4, [pc, #980]	; (12450 <AddModifyRecordMiddle+0x3f8>)
   1207a:	447c      	add	r4, pc
   1207c:	4bf5      	ldr	r3, [pc, #980]	; (12454 <AddModifyRecordMiddle+0x3fc>)
   1207e:	58e3      	ldr	r3, [r4, r3]
   12080:	681b      	ldr	r3, [r3, #0]
   12082:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
   12086:	2318      	movs	r3, #24
   12088:	62bb      	str	r3, [r7, #40]	; 0x28
   1208a:	2300      	movs	r3, #0
   1208c:	643b      	str	r3, [r7, #64]	; 0x40
   1208e:	2300      	movs	r3, #0
   12090:	63bb      	str	r3, [r7, #56]	; 0x38
   12092:	2300      	movs	r3, #0
   12094:	63fb      	str	r3, [r7, #60]	; 0x3c
   12096:	f107 034c 	add.w	r3, r7, #76	; 0x4c
   1209a:	4618      	mov	r0, r3
   1209c:	4bee      	ldr	r3, [pc, #952]	; (12458 <AddModifyRecordMiddle+0x400>)
   1209e:	447b      	add	r3, pc
   120a0:	4619      	mov	r1, r3
   120a2:	69fa      	ldr	r2, [r7, #28]
   120a4:	69bb      	ldr	r3, [r7, #24]
   120a6:	f7f6 edb2 	blx	8c0c <_init+0x13c>
   120aa:	f107 034c 	add.w	r3, r7, #76	; 0x4c
   120ae:	4618      	mov	r0, r3
   120b0:	4bea      	ldr	r3, [pc, #936]	; (1245c <AddModifyRecordMiddle+0x404>)
   120b2:	447b      	add	r3, pc
   120b4:	4619      	mov	r1, r3
   120b6:	f005 fd6d 	bl	17b94 <FS_open>
   120ba:	63b8      	str	r0, [r7, #56]	; 0x38
   120bc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   120be:	2b00      	cmp	r3, #0
   120c0:	d102      	bne.n	120c8 <AddModifyRecordMiddle+0x70>
   120c2:	2313      	movs	r3, #19
   120c4:	62bb      	str	r3, [r7, #40]	; 0x28
   120c6:	e1b3      	b.n	12430 <AddModifyRecordMiddle+0x3d8>
   120c8:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   120ca:	f005 fd0d 	bl	17ae8 <FS_length>
   120ce:	6478      	str	r0, [r7, #68]	; 0x44
   120d0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
   120d2:	4618      	mov	r0, r3
   120d4:	f005 feea 	bl	17eac <PageAlloc>
   120d8:	6438      	str	r0, [r7, #64]	; 0x40
   120da:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   120dc:	2b00      	cmp	r3, #0
   120de:	f000 819a 	beq.w	12416 <AddModifyRecordMiddle+0x3be>
   120e2:	f107 0370 	add.w	r3, r7, #112	; 0x70
   120e6:	4618      	mov	r0, r3
   120e8:	4bdd      	ldr	r3, [pc, #884]	; (12460 <AddModifyRecordMiddle+0x408>)
   120ea:	447b      	add	r3, pc
   120ec:	4619      	mov	r1, r3
   120ee:	69fa      	ldr	r2, [r7, #28]
   120f0:	4bdc      	ldr	r3, [pc, #880]	; (12464 <AddModifyRecordMiddle+0x40c>)
   120f2:	447b      	add	r3, pc
   120f4:	f7f6 ed8a 	blx	8c0c <_init+0x13c>
   120f8:	f107 0370 	add.w	r3, r7, #112	; 0x70
   120fc:	4618      	mov	r0, r3
   120fe:	f005 fcc7 	bl	17a90 <FS_exist>
   12102:	64b8      	str	r0, [r7, #72]	; 0x48
   12104:	6cbb      	ldr	r3, [r7, #72]	; 0x48
   12106:	2b02      	cmp	r3, #2
   12108:	d104      	bne.n	12114 <AddModifyRecordMiddle+0xbc>
   1210a:	f107 0370 	add.w	r3, r7, #112	; 0x70
   1210e:	4618      	mov	r0, r3
   12110:	f005 fdea 	bl	17ce8 <FS_unlink>
   12114:	f107 0370 	add.w	r3, r7, #112	; 0x70
   12118:	4618      	mov	r0, r3
   1211a:	4bd3      	ldr	r3, [pc, #844]	; (12468 <AddModifyRecordMiddle+0x410>)
   1211c:	447b      	add	r3, pc
   1211e:	4619      	mov	r1, r3
   12120:	f005 fd38 	bl	17b94 <FS_open>
   12124:	63f8      	str	r0, [r7, #60]	; 0x3c
   12126:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   12128:	2100      	movs	r1, #0
   1212a:	2200      	movs	r2, #0
   1212c:	f005 fdb2 	bl	17c94 <FS_seek>
   12130:	64b8      	str	r0, [r7, #72]	; 0x48
   12132:	6cbb      	ldr	r3, [r7, #72]	; 0x48
   12134:	2b02      	cmp	r3, #2
   12136:	f040 8165 	bne.w	12404 <AddModifyRecordMiddle+0x3ac>
   1213a:	6c38      	ldr	r0, [r7, #64]	; 0x40
   1213c:	6c79      	ldr	r1, [r7, #68]	; 0x44
   1213e:	2201      	movs	r2, #1
   12140:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   12142:	f005 fd51 	bl	17be8 <FS_read>
   12146:	62f8      	str	r0, [r7, #44]	; 0x2c
   12148:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   1214a:	2b01      	cmp	r3, #1
   1214c:	d007      	beq.n	1215e <AddModifyRecordMiddle+0x106>
   1214e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12150:	2b00      	cmp	r3, #0
   12152:	f040 8157 	bne.w	12404 <AddModifyRecordMiddle+0x3ac>
   12156:	6c7b      	ldr	r3, [r7, #68]	; 0x44
   12158:	2b00      	cmp	r3, #0
   1215a:	f040 8153 	bne.w	12404 <AddModifyRecordMiddle+0x3ac>
   1215e:	4bc3      	ldr	r3, [pc, #780]	; (1246c <AddModifyRecordMiddle+0x414>)
   12160:	58e3      	ldr	r3, [r4, r3]
   12162:	461a      	mov	r2, r3
   12164:	68bb      	ldr	r3, [r7, #8]
   12166:	212c      	movs	r1, #44	; 0x2c
   12168:	fb01 f303 	mul.w	r3, r1, r3
   1216c:	18d3      	adds	r3, r2, r3
   1216e:	3328      	adds	r3, #40	; 0x28
   12170:	681b      	ldr	r3, [r3, #0]
   12172:	2b01      	cmp	r3, #1
   12174:	f040 80ca 	bne.w	1230c <AddModifyRecordMiddle+0x2b4>
   12178:	2300      	movs	r3, #0
   1217a:	633b      	str	r3, [r7, #48]	; 0x30
   1217c:	2300      	movs	r3, #0
   1217e:	637b      	str	r3, [r7, #52]	; 0x34
   12180:	e01d      	b.n	121be <AddModifyRecordMiddle+0x166>
   12182:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   12184:	6c7b      	ldr	r3, [r7, #68]	; 0x44
   12186:	429a      	cmp	r2, r3
   12188:	da13      	bge.n	121b2 <AddModifyRecordMiddle+0x15a>
   1218a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   1218c:	2b00      	cmp	r3, #0
   1218e:	db10      	blt.n	121b2 <AddModifyRecordMiddle+0x15a>
   12190:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12192:	6c3a      	ldr	r2, [r7, #64]	; 0x40
   12194:	18d3      	adds	r3, r2, r3
   12196:	f107 0220 	add.w	r2, r7, #32
   1219a:	4610      	mov	r0, r2
   1219c:	4619      	mov	r1, r3
   1219e:	2204      	movs	r2, #4
   121a0:	f7f6 ed16 	blx	8bd0 <_init+0x100>
   121a4:	6a3b      	ldr	r3, [r7, #32]
   121a6:	461a      	mov	r2, r3
   121a8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   121aa:	18d3      	adds	r3, r2, r3
   121ac:	3304      	adds	r3, #4
   121ae:	633b      	str	r3, [r7, #48]	; 0x30
   121b0:	e002      	b.n	121b8 <AddModifyRecordMiddle+0x160>
   121b2:	f04f 33ff 	mov.w	r3, #4294967295
   121b6:	633b      	str	r3, [r7, #48]	; 0x30
   121b8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   121ba:	3301      	adds	r3, #1
   121bc:	637b      	str	r3, [r7, #52]	; 0x34
   121be:	6b7a      	ldr	r2, [r7, #52]	; 0x34
   121c0:	68fb      	ldr	r3, [r7, #12]
   121c2:	429a      	cmp	r2, r3
   121c4:	da02      	bge.n	121cc <AddModifyRecordMiddle+0x174>
   121c6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   121c8:	2b00      	cmp	r3, #0
   121ca:	dada      	bge.n	12182 <AddModifyRecordMiddle+0x12a>
   121cc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   121ce:	6c7b      	ldr	r3, [r7, #68]	; 0x44
   121d0:	429a      	cmp	r2, r3
   121d2:	f300 8098 	bgt.w	12306 <AddModifyRecordMiddle+0x2ae>
   121d6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   121d8:	2b00      	cmp	r3, #0
   121da:	f2c0 8094 	blt.w	12306 <AddModifyRecordMiddle+0x2ae>
   121de:	687b      	ldr	r3, [r7, #4]
   121e0:	2b01      	cmp	r3, #1
   121e2:	d10d      	bne.n	12200 <AddModifyRecordMiddle+0x1a8>
   121e4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   121e6:	6c3a      	ldr	r2, [r7, #64]	; 0x40
   121e8:	18d3      	adds	r3, r2, r3
   121ea:	f107 0220 	add.w	r2, r7, #32
   121ee:	4610      	mov	r0, r2
   121f0:	4619      	mov	r1, r3
   121f2:	2204      	movs	r2, #4
   121f4:	f7f6 ecec 	blx	8bd0 <_init+0x100>
   121f8:	6a3b      	ldr	r3, [r7, #32]
   121fa:	3304      	adds	r3, #4
   121fc:	627b      	str	r3, [r7, #36]	; 0x24
   121fe:	e001      	b.n	12204 <AddModifyRecordMiddle+0x1ac>
   12200:	2300      	movs	r3, #0
   12202:	627b      	str	r3, [r7, #36]	; 0x24
   12204:	693b      	ldr	r3, [r7, #16]
   12206:	2b00      	cmp	r3, #0
   12208:	f2c0 80fb 	blt.w	12402 <AddModifyRecordMiddle+0x3aa>
   1220c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   1220e:	2b00      	cmp	r3, #0
   12210:	f2c0 80f7 	blt.w	12402 <AddModifyRecordMiddle+0x3aa>
   12214:	6c7a      	ldr	r2, [r7, #68]	; 0x44
   12216:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12218:	1ad2      	subs	r2, r2, r3
   1221a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1221c:	1ad3      	subs	r3, r2, r3
   1221e:	2b00      	cmp	r3, #0
   12220:	f2c0 80ef 	blt.w	12402 <AddModifyRecordMiddle+0x3aa>
   12224:	6c38      	ldr	r0, [r7, #64]	; 0x40
   12226:	6b39      	ldr	r1, [r7, #48]	; 0x30
   12228:	2201      	movs	r2, #1
   1222a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   1222c:	f005 fdb4 	bl	17d98 <FS_write>
   12230:	62f8      	str	r0, [r7, #44]	; 0x2c
   12232:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12234:	2b01      	cmp	r3, #1
   12236:	d005      	beq.n	12244 <AddModifyRecordMiddle+0x1ec>
   12238:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   1223a:	2b00      	cmp	r3, #0
   1223c:	d10b      	bne.n	12256 <AddModifyRecordMiddle+0x1fe>
   1223e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12240:	2b00      	cmp	r3, #0
   12242:	d108      	bne.n	12256 <AddModifyRecordMiddle+0x1fe>
   12244:	f107 0310 	add.w	r3, r7, #16
   12248:	4618      	mov	r0, r3
   1224a:	2104      	movs	r1, #4
   1224c:	2201      	movs	r2, #1
   1224e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12250:	f005 fda2 	bl	17d98 <FS_write>
   12254:	62f8      	str	r0, [r7, #44]	; 0x2c
   12256:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12258:	2b01      	cmp	r3, #1
   1225a:	d107      	bne.n	1226c <AddModifyRecordMiddle+0x214>
   1225c:	693b      	ldr	r3, [r7, #16]
   1225e:	6978      	ldr	r0, [r7, #20]
   12260:	4619      	mov	r1, r3
   12262:	2201      	movs	r2, #1
   12264:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12266:	f005 fd97 	bl	17d98 <FS_write>
   1226a:	62f8      	str	r0, [r7, #44]	; 0x2c
   1226c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   1226e:	2b01      	cmp	r3, #1
   12270:	d005      	beq.n	1227e <AddModifyRecordMiddle+0x226>
   12272:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12274:	2b00      	cmp	r3, #0
   12276:	d113      	bne.n	122a0 <AddModifyRecordMiddle+0x248>
   12278:	693b      	ldr	r3, [r7, #16]
   1227a:	2b00      	cmp	r3, #0
   1227c:	d110      	bne.n	122a0 <AddModifyRecordMiddle+0x248>
   1227e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   12280:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12282:	18d3      	adds	r3, r2, r3
   12284:	6c3a      	ldr	r2, [r7, #64]	; 0x40
   12286:	18d2      	adds	r2, r2, r3
   12288:	6c79      	ldr	r1, [r7, #68]	; 0x44
   1228a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   1228c:	1ac9      	subs	r1, r1, r3
   1228e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12290:	1acb      	subs	r3, r1, r3
   12292:	4610      	mov	r0, r2
   12294:	4619      	mov	r1, r3
   12296:	2201      	movs	r2, #1
   12298:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   1229a:	f005 fd7d 	bl	17d98 <FS_write>
   1229e:	62f8      	str	r0, [r7, #44]	; 0x2c
   122a0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   122a2:	2b01      	cmp	r3, #1
   122a4:	d00a      	beq.n	122bc <AddModifyRecordMiddle+0x264>
   122a6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   122a8:	2b00      	cmp	r3, #0
   122aa:	f040 80aa 	bne.w	12402 <AddModifyRecordMiddle+0x3aa>
   122ae:	6c7a      	ldr	r2, [r7, #68]	; 0x44
   122b0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   122b2:	1ad2      	subs	r2, r2, r3
   122b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   122b6:	429a      	cmp	r2, r3
   122b8:	f040 80a3 	bne.w	12402 <AddModifyRecordMiddle+0x3aa>
   122bc:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   122be:	f005 fb8d 	bl	179dc <FS_close>
   122c2:	2300      	movs	r3, #0
   122c4:	63bb      	str	r3, [r7, #56]	; 0x38
   122c6:	f107 034c 	add.w	r3, r7, #76	; 0x4c
   122ca:	4618      	mov	r0, r3
   122cc:	f005 fd0c 	bl	17ce8 <FS_unlink>
   122d0:	64b8      	str	r0, [r7, #72]	; 0x48
   122d2:	6cbb      	ldr	r3, [r7, #72]	; 0x48
   122d4:	2b02      	cmp	r3, #2
   122d6:	f040 8094 	bne.w	12402 <AddModifyRecordMiddle+0x3aa>
   122da:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
   122dc:	f005 fb7e 	bl	179dc <FS_close>
   122e0:	2300      	movs	r3, #0
   122e2:	63fb      	str	r3, [r7, #60]	; 0x3c
   122e4:	f107 0270 	add.w	r2, r7, #112	; 0x70
   122e8:	f107 034c 	add.w	r3, r7, #76	; 0x4c
   122ec:	4610      	mov	r0, r2
   122ee:	4619      	mov	r1, r3
   122f0:	f005 fca6 	bl	17c40 <FS_rename>
   122f4:	64b8      	str	r0, [r7, #72]	; 0x48
   122f6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
   122f8:	2b02      	cmp	r3, #2
   122fa:	f040 8082 	bne.w	12402 <AddModifyRecordMiddle+0x3aa>
   122fe:	230a      	movs	r3, #10
   12300:	62bb      	str	r3, [r7, #40]	; 0x28
   12302:	bf00      	nop
   12304:	e07d      	b.n	12402 <AddModifyRecordMiddle+0x3aa>
   12306:	2318      	movs	r3, #24
   12308:	62bb      	str	r3, [r7, #40]	; 0x28
   1230a:	e07b      	b.n	12404 <AddModifyRecordMiddle+0x3ac>
   1230c:	687b      	ldr	r3, [r7, #4]
   1230e:	2b01      	cmp	r3, #1
   12310:	d102      	bne.n	12318 <AddModifyRecordMiddle+0x2c0>
   12312:	693b      	ldr	r3, [r7, #16]
   12314:	627b      	str	r3, [r7, #36]	; 0x24
   12316:	e001      	b.n	1231c <AddModifyRecordMiddle+0x2c4>
   12318:	2300      	movs	r3, #0
   1231a:	627b      	str	r3, [r7, #36]	; 0x24
   1231c:	693a      	ldr	r2, [r7, #16]
   1231e:	68fb      	ldr	r3, [r7, #12]
   12320:	fb02 f303 	mul.w	r3, r2, r3
   12324:	633b      	str	r3, [r7, #48]	; 0x30
   12326:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   12328:	6c7b      	ldr	r3, [r7, #68]	; 0x44
   1232a:	429a      	cmp	r2, r3
   1232c:	dc6a      	bgt.n	12404 <AddModifyRecordMiddle+0x3ac>
   1232e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12330:	2b00      	cmp	r3, #0
   12332:	db67      	blt.n	12404 <AddModifyRecordMiddle+0x3ac>
   12334:	6c7a      	ldr	r2, [r7, #68]	; 0x44
   12336:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12338:	1ad2      	subs	r2, r2, r3
   1233a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1233c:	1ad3      	subs	r3, r2, r3
   1233e:	2b00      	cmp	r3, #0
   12340:	db60      	blt.n	12404 <AddModifyRecordMiddle+0x3ac>
   12342:	6c38      	ldr	r0, [r7, #64]	; 0x40
   12344:	6b39      	ldr	r1, [r7, #48]	; 0x30
   12346:	2201      	movs	r2, #1
   12348:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   1234a:	f005 fd25 	bl	17d98 <FS_write>
   1234e:	62f8      	str	r0, [r7, #44]	; 0x2c
   12350:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12352:	2b01      	cmp	r3, #1
   12354:	d005      	beq.n	12362 <AddModifyRecordMiddle+0x30a>
   12356:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12358:	2b00      	cmp	r3, #0
   1235a:	d10a      	bne.n	12372 <AddModifyRecordMiddle+0x31a>
   1235c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   1235e:	2b00      	cmp	r3, #0
   12360:	d107      	bne.n	12372 <AddModifyRecordMiddle+0x31a>
   12362:	693b      	ldr	r3, [r7, #16]
   12364:	6978      	ldr	r0, [r7, #20]
   12366:	4619      	mov	r1, r3
   12368:	2201      	movs	r2, #1
   1236a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   1236c:	f005 fd14 	bl	17d98 <FS_write>
   12370:	62f8      	str	r0, [r7, #44]	; 0x2c
   12372:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12374:	2b01      	cmp	r3, #1
   12376:	d005      	beq.n	12384 <AddModifyRecordMiddle+0x32c>
   12378:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   1237a:	2b00      	cmp	r3, #0
   1237c:	d113      	bne.n	123a6 <AddModifyRecordMiddle+0x34e>
   1237e:	693b      	ldr	r3, [r7, #16]
   12380:	2b00      	cmp	r3, #0
   12382:	d110      	bne.n	123a6 <AddModifyRecordMiddle+0x34e>
   12384:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   12386:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12388:	18d3      	adds	r3, r2, r3
   1238a:	6c3a      	ldr	r2, [r7, #64]	; 0x40
   1238c:	18d2      	adds	r2, r2, r3
   1238e:	6c79      	ldr	r1, [r7, #68]	; 0x44
   12390:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12392:	1ac9      	subs	r1, r1, r3
   12394:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12396:	1acb      	subs	r3, r1, r3
   12398:	4610      	mov	r0, r2
   1239a:	4619      	mov	r1, r3
   1239c:	2201      	movs	r2, #1
   1239e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   123a0:	f005 fcfa 	bl	17d98 <FS_write>
   123a4:	62f8      	str	r0, [r7, #44]	; 0x2c
   123a6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   123a8:	2b01      	cmp	r3, #1
   123aa:	d008      	beq.n	123be <AddModifyRecordMiddle+0x366>
   123ac:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   123ae:	2b00      	cmp	r3, #0
   123b0:	d128      	bne.n	12404 <AddModifyRecordMiddle+0x3ac>
   123b2:	6c7a      	ldr	r2, [r7, #68]	; 0x44
   123b4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   123b6:	1ad2      	subs	r2, r2, r3
   123b8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   123ba:	429a      	cmp	r2, r3
   123bc:	d122      	bne.n	12404 <AddModifyRecordMiddle+0x3ac>
   123be:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   123c0:	f005 fb0c 	bl	179dc <FS_close>
   123c4:	2300      	movs	r3, #0
   123c6:	63bb      	str	r3, [r7, #56]	; 0x38
   123c8:	f107 034c 	add.w	r3, r7, #76	; 0x4c
   123cc:	4618      	mov	r0, r3
   123ce:	f005 fc8b 	bl	17ce8 <FS_unlink>
   123d2:	64b8      	str	r0, [r7, #72]	; 0x48
   123d4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
   123d6:	2b02      	cmp	r3, #2
   123d8:	d114      	bne.n	12404 <AddModifyRecordMiddle+0x3ac>
   123da:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
   123dc:	f005 fafe 	bl	179dc <FS_close>
   123e0:	2300      	movs	r3, #0
   123e2:	63fb      	str	r3, [r7, #60]	; 0x3c
   123e4:	f107 0270 	add.w	r2, r7, #112	; 0x70
   123e8:	f107 034c 	add.w	r3, r7, #76	; 0x4c
   123ec:	4610      	mov	r0, r2
   123ee:	4619      	mov	r1, r3
   123f0:	f005 fc26 	bl	17c40 <FS_rename>
   123f4:	64b8      	str	r0, [r7, #72]	; 0x48
   123f6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
   123f8:	2b02      	cmp	r3, #2
   123fa:	d103      	bne.n	12404 <AddModifyRecordMiddle+0x3ac>
   123fc:	230a      	movs	r3, #10
   123fe:	62bb      	str	r3, [r7, #40]	; 0x28
   12400:	e000      	b.n	12404 <AddModifyRecordMiddle+0x3ac>
   12402:	bf00      	nop
   12404:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12406:	2b00      	cmp	r3, #0
   12408:	d007      	beq.n	1241a <AddModifyRecordMiddle+0x3c2>
   1240a:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
   1240c:	f005 fae6 	bl	179dc <FS_close>
   12410:	2300      	movs	r3, #0
   12412:	63fb      	str	r3, [r7, #60]	; 0x3c
   12414:	e001      	b.n	1241a <AddModifyRecordMiddle+0x3c2>
   12416:	2318      	movs	r3, #24
   12418:	62bb      	str	r3, [r7, #40]	; 0x28
   1241a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   1241c:	2b00      	cmp	r3, #0
   1241e:	d004      	beq.n	1242a <AddModifyRecordMiddle+0x3d2>
   12420:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   12422:	f005 fadb 	bl	179dc <FS_close>
   12426:	2300      	movs	r3, #0
   12428:	63bb      	str	r3, [r7, #56]	; 0x38
   1242a:	6c38      	ldr	r0, [r7, #64]	; 0x40
   1242c:	f005 fd68 	bl	17f00 <PageFree>
   12430:	6abb      	ldr	r3, [r7, #40]	; 0x28
   12432:	4618      	mov	r0, r3
   12434:	4b07      	ldr	r3, [pc, #28]	; (12454 <AddModifyRecordMiddle+0x3fc>)
   12436:	58e3      	ldr	r3, [r4, r3]
   12438:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
   1243c:	681b      	ldr	r3, [r3, #0]
   1243e:	429a      	cmp	r2, r3
   12440:	d001      	beq.n	12446 <AddModifyRecordMiddle+0x3ee>
   12442:	f7f6 fd55 	bl	8ef0 <__stack_chk_fail>
   12446:	f107 079c 	add.w	r7, r7, #156	; 0x9c
   1244a:	46bd      	mov	sp, r7
   1244c:	bd90      	pop	{r4, r7, pc}
   1244e:	bf00      	nop
   12450:	0001209a 	.word	0x0001209a
   12454:	000000a0 	.word	0x000000a0
   12458:	000093fa 	.word	0x000093fa
   1245c:	000093fe 	.word	0x000093fe
   12460:	000093ae 	.word	0x000093ae
   12464:	000093c2 	.word	0x000093c2
   12468:	00009390 	.word	0x00009390
   1246c:	000000b4 	.word	0x000000b4

00012470 <AddModifyRecordMiddleWithCkecksum>:
   12470:	b590      	push	{r4, r7, lr}
   12472:	b0c1      	sub	sp, #260	; 0x104
   12474:	af00      	add	r7, sp, #0
   12476:	61f8      	str	r0, [r7, #28]
   12478:	61b9      	str	r1, [r7, #24]
   1247a:	617a      	str	r2, [r7, #20]
   1247c:	613b      	str	r3, [r7, #16]
   1247e:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
   12482:	60fb      	str	r3, [r7, #12]
   12484:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
   12488:	60bb      	str	r3, [r7, #8]
   1248a:	f8d7 3118 	ldr.w	r3, [r7, #280]	; 0x118
   1248e:	607b      	str	r3, [r7, #4]
   12490:	f8df 44ec 	ldr.w	r4, [pc, #1260]	; 12980 <AddModifyRecordMiddleWithCkecksum+0x510>
   12494:	447c      	add	r4, pc
   12496:	f8df 34ec 	ldr.w	r3, [pc, #1260]	; 12984 <AddModifyRecordMiddleWithCkecksum+0x514>
   1249a:	58e3      	ldr	r3, [r4, r3]
   1249c:	681b      	ldr	r3, [r3, #0]
   1249e:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
   124a2:	2318      	movs	r3, #24
   124a4:	62bb      	str	r3, [r7, #40]	; 0x28
   124a6:	2300      	movs	r3, #0
   124a8:	643b      	str	r3, [r7, #64]	; 0x40
   124aa:	2300      	movs	r3, #0
   124ac:	63bb      	str	r3, [r7, #56]	; 0x38
   124ae:	2300      	movs	r3, #0
   124b0:	63fb      	str	r3, [r7, #60]	; 0x3c
   124b2:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
   124b6:	4618      	mov	r0, r3
   124b8:	f8df 34cc 	ldr.w	r3, [pc, #1228]	; 12988 <AddModifyRecordMiddleWithCkecksum+0x518>
   124bc:	447b      	add	r3, pc
   124be:	4619      	mov	r1, r3
   124c0:	69fa      	ldr	r2, [r7, #28]
   124c2:	69bb      	ldr	r3, [r7, #24]
   124c4:	f7f6 eba2 	blx	8c0c <_init+0x13c>
   124c8:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
   124cc:	4618      	mov	r0, r3
   124ce:	f8df 34bc 	ldr.w	r3, [pc, #1212]	; 1298c <AddModifyRecordMiddleWithCkecksum+0x51c>
   124d2:	447b      	add	r3, pc
   124d4:	4619      	mov	r1, r3
   124d6:	f005 fb5d 	bl	17b94 <FS_open>
   124da:	63b8      	str	r0, [r7, #56]	; 0x38
   124dc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   124de:	2b00      	cmp	r3, #0
   124e0:	d102      	bne.n	124e8 <AddModifyRecordMiddleWithCkecksum+0x78>
   124e2:	2313      	movs	r3, #19
   124e4:	62bb      	str	r3, [r7, #40]	; 0x28
   124e6:	e23b      	b.n	12960 <AddModifyRecordMiddleWithCkecksum+0x4f0>
   124e8:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   124ea:	f005 fafd 	bl	17ae8 <FS_length>
   124ee:	6478      	str	r0, [r7, #68]	; 0x44
   124f0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
   124f2:	4618      	mov	r0, r3
   124f4:	f005 fcda 	bl	17eac <PageAlloc>
   124f8:	6438      	str	r0, [r7, #64]	; 0x40
   124fa:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   124fc:	2b00      	cmp	r3, #0
   124fe:	f000 8222 	beq.w	12946 <AddModifyRecordMiddleWithCkecksum+0x4d6>
   12502:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
   12506:	4618      	mov	r0, r3
   12508:	f8df 3484 	ldr.w	r3, [pc, #1156]	; 12990 <AddModifyRecordMiddleWithCkecksum+0x520>
   1250c:	447b      	add	r3, pc
   1250e:	4619      	mov	r1, r3
   12510:	69fa      	ldr	r2, [r7, #28]
   12512:	f8df 3480 	ldr.w	r3, [pc, #1152]	; 12994 <AddModifyRecordMiddleWithCkecksum+0x524>
   12516:	447b      	add	r3, pc
   12518:	f7f6 eb78 	blx	8c0c <_init+0x13c>
   1251c:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
   12520:	4618      	mov	r0, r3
   12522:	f005 fab5 	bl	17a90 <FS_exist>
   12526:	64b8      	str	r0, [r7, #72]	; 0x48
   12528:	6cbb      	ldr	r3, [r7, #72]	; 0x48
   1252a:	2b02      	cmp	r3, #2
   1252c:	d104      	bne.n	12538 <AddModifyRecordMiddleWithCkecksum+0xc8>
   1252e:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
   12532:	4618      	mov	r0, r3
   12534:	f005 fbd8 	bl	17ce8 <FS_unlink>
   12538:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
   1253c:	4618      	mov	r0, r3
   1253e:	f8df 3458 	ldr.w	r3, [pc, #1112]	; 12998 <AddModifyRecordMiddleWithCkecksum+0x528>
   12542:	447b      	add	r3, pc
   12544:	4619      	mov	r1, r3
   12546:	f005 fb25 	bl	17b94 <FS_open>
   1254a:	63f8      	str	r0, [r7, #60]	; 0x3c
   1254c:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   1254e:	2100      	movs	r1, #0
   12550:	2200      	movs	r2, #0
   12552:	f005 fb9f 	bl	17c94 <FS_seek>
   12556:	64b8      	str	r0, [r7, #72]	; 0x48
   12558:	6cbb      	ldr	r3, [r7, #72]	; 0x48
   1255a:	2b02      	cmp	r3, #2
   1255c:	f040 81ea 	bne.w	12934 <AddModifyRecordMiddleWithCkecksum+0x4c4>
   12560:	6c38      	ldr	r0, [r7, #64]	; 0x40
   12562:	6c79      	ldr	r1, [r7, #68]	; 0x44
   12564:	2201      	movs	r2, #1
   12566:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   12568:	f005 fb3e 	bl	17be8 <FS_read>
   1256c:	62f8      	str	r0, [r7, #44]	; 0x2c
   1256e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12570:	2b01      	cmp	r3, #1
   12572:	d007      	beq.n	12584 <AddModifyRecordMiddleWithCkecksum+0x114>
   12574:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12576:	2b00      	cmp	r3, #0
   12578:	f040 81dc 	bne.w	12934 <AddModifyRecordMiddleWithCkecksum+0x4c4>
   1257c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
   1257e:	2b00      	cmp	r3, #0
   12580:	f040 81d8 	bne.w	12934 <AddModifyRecordMiddleWithCkecksum+0x4c4>
   12584:	f8df 3414 	ldr.w	r3, [pc, #1044]	; 1299c <AddModifyRecordMiddleWithCkecksum+0x52c>
   12588:	58e3      	ldr	r3, [r4, r3]
   1258a:	461a      	mov	r2, r3
   1258c:	68bb      	ldr	r3, [r7, #8]
   1258e:	212c      	movs	r1, #44	; 0x2c
   12590:	fb01 f303 	mul.w	r3, r1, r3
   12594:	18d3      	adds	r3, r2, r3
   12596:	3328      	adds	r3, #40	; 0x28
   12598:	681b      	ldr	r3, [r3, #0]
   1259a:	2b01      	cmp	r3, #1
   1259c:	f040 810c 	bne.w	127b8 <AddModifyRecordMiddleWithCkecksum+0x348>
   125a0:	2300      	movs	r3, #0
   125a2:	633b      	str	r3, [r7, #48]	; 0x30
   125a4:	2300      	movs	r3, #0
   125a6:	637b      	str	r3, [r7, #52]	; 0x34
   125a8:	e01d      	b.n	125e6 <AddModifyRecordMiddleWithCkecksum+0x176>
   125aa:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   125ac:	6c7b      	ldr	r3, [r7, #68]	; 0x44
   125ae:	429a      	cmp	r2, r3
   125b0:	da13      	bge.n	125da <AddModifyRecordMiddleWithCkecksum+0x16a>
   125b2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   125b4:	2b00      	cmp	r3, #0
   125b6:	db10      	blt.n	125da <AddModifyRecordMiddleWithCkecksum+0x16a>
   125b8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   125ba:	6c3a      	ldr	r2, [r7, #64]	; 0x40
   125bc:	18d3      	adds	r3, r2, r3
   125be:	f107 0220 	add.w	r2, r7, #32
   125c2:	4610      	mov	r0, r2
   125c4:	4619      	mov	r1, r3
   125c6:	2204      	movs	r2, #4
   125c8:	f7f6 eb02 	blx	8bd0 <_init+0x100>
   125cc:	6a3b      	ldr	r3, [r7, #32]
   125ce:	461a      	mov	r2, r3
   125d0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   125d2:	18d3      	adds	r3, r2, r3
   125d4:	3304      	adds	r3, #4
   125d6:	633b      	str	r3, [r7, #48]	; 0x30
   125d8:	e002      	b.n	125e0 <AddModifyRecordMiddleWithCkecksum+0x170>
   125da:	f04f 33ff 	mov.w	r3, #4294967295
   125de:	633b      	str	r3, [r7, #48]	; 0x30
   125e0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   125e2:	3301      	adds	r3, #1
   125e4:	637b      	str	r3, [r7, #52]	; 0x34
   125e6:	6b7a      	ldr	r2, [r7, #52]	; 0x34
   125e8:	68fb      	ldr	r3, [r7, #12]
   125ea:	429a      	cmp	r2, r3
   125ec:	da02      	bge.n	125f4 <AddModifyRecordMiddleWithCkecksum+0x184>
   125ee:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   125f0:	2b00      	cmp	r3, #0
   125f2:	dada      	bge.n	125aa <AddModifyRecordMiddleWithCkecksum+0x13a>
   125f4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   125f6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
   125f8:	429a      	cmp	r2, r3
   125fa:	f300 80da 	bgt.w	127b2 <AddModifyRecordMiddleWithCkecksum+0x342>
   125fe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12600:	2b00      	cmp	r3, #0
   12602:	f2c0 80d6 	blt.w	127b2 <AddModifyRecordMiddleWithCkecksum+0x342>
   12606:	687b      	ldr	r3, [r7, #4]
   12608:	2b01      	cmp	r3, #1
   1260a:	d10d      	bne.n	12628 <AddModifyRecordMiddleWithCkecksum+0x1b8>
   1260c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   1260e:	6c3a      	ldr	r2, [r7, #64]	; 0x40
   12610:	18d3      	adds	r3, r2, r3
   12612:	f107 0220 	add.w	r2, r7, #32
   12616:	4610      	mov	r0, r2
   12618:	4619      	mov	r1, r3
   1261a:	2204      	movs	r2, #4
   1261c:	f7f6 ead8 	blx	8bd0 <_init+0x100>
   12620:	6a3b      	ldr	r3, [r7, #32]
   12622:	3304      	adds	r3, #4
   12624:	627b      	str	r3, [r7, #36]	; 0x24
   12626:	e001      	b.n	1262c <AddModifyRecordMiddleWithCkecksum+0x1bc>
   12628:	2300      	movs	r3, #0
   1262a:	627b      	str	r3, [r7, #36]	; 0x24
   1262c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1262e:	2b00      	cmp	r3, #0
   12630:	f2c0 817f 	blt.w	12932 <AddModifyRecordMiddleWithCkecksum+0x4c2>
   12634:	6c7a      	ldr	r2, [r7, #68]	; 0x44
   12636:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12638:	1ad3      	subs	r3, r2, r3
   1263a:	f1a3 0210 	sub.w	r2, r3, #16
   1263e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12640:	1ad3      	subs	r3, r2, r3
   12642:	2b00      	cmp	r3, #0
   12644:	f2c0 8175 	blt.w	12932 <AddModifyRecordMiddleWithCkecksum+0x4c2>
   12648:	6c38      	ldr	r0, [r7, #64]	; 0x40
   1264a:	6b39      	ldr	r1, [r7, #48]	; 0x30
   1264c:	2201      	movs	r2, #1
   1264e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12650:	f005 fba2 	bl	17d98 <FS_write>
   12654:	62f8      	str	r0, [r7, #44]	; 0x2c
   12656:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12658:	2b01      	cmp	r3, #1
   1265a:	d005      	beq.n	12668 <AddModifyRecordMiddleWithCkecksum+0x1f8>
   1265c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   1265e:	2b00      	cmp	r3, #0
   12660:	d10b      	bne.n	1267a <AddModifyRecordMiddleWithCkecksum+0x20a>
   12662:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12664:	2b00      	cmp	r3, #0
   12666:	d108      	bne.n	1267a <AddModifyRecordMiddleWithCkecksum+0x20a>
   12668:	f107 0310 	add.w	r3, r7, #16
   1266c:	4618      	mov	r0, r3
   1266e:	2104      	movs	r1, #4
   12670:	2201      	movs	r2, #1
   12672:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12674:	f005 fb90 	bl	17d98 <FS_write>
   12678:	62f8      	str	r0, [r7, #44]	; 0x2c
   1267a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   1267c:	2b01      	cmp	r3, #1
   1267e:	d107      	bne.n	12690 <AddModifyRecordMiddleWithCkecksum+0x220>
   12680:	693b      	ldr	r3, [r7, #16]
   12682:	6978      	ldr	r0, [r7, #20]
   12684:	4619      	mov	r1, r3
   12686:	2201      	movs	r2, #1
   12688:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   1268a:	f005 fb85 	bl	17d98 <FS_write>
   1268e:	62f8      	str	r0, [r7, #44]	; 0x2c
   12690:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12692:	2b01      	cmp	r3, #1
   12694:	d005      	beq.n	126a2 <AddModifyRecordMiddleWithCkecksum+0x232>
   12696:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12698:	2b00      	cmp	r3, #0
   1269a:	d115      	bne.n	126c8 <AddModifyRecordMiddleWithCkecksum+0x258>
   1269c:	693b      	ldr	r3, [r7, #16]
   1269e:	2b00      	cmp	r3, #0
   126a0:	d112      	bne.n	126c8 <AddModifyRecordMiddleWithCkecksum+0x258>
   126a2:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   126a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   126a6:	18d3      	adds	r3, r2, r3
   126a8:	6c3a      	ldr	r2, [r7, #64]	; 0x40
   126aa:	18d2      	adds	r2, r2, r3
   126ac:	6c79      	ldr	r1, [r7, #68]	; 0x44
   126ae:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   126b0:	1acb      	subs	r3, r1, r3
   126b2:	f1a3 0110 	sub.w	r1, r3, #16
   126b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   126b8:	1acb      	subs	r3, r1, r3
   126ba:	4610      	mov	r0, r2
   126bc:	4619      	mov	r1, r3
   126be:	2201      	movs	r2, #1
   126c0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   126c2:	f005 fb69 	bl	17d98 <FS_write>
   126c6:	62f8      	str	r0, [r7, #44]	; 0x2c
   126c8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   126ca:	2b01      	cmp	r3, #1
   126cc:	d00c      	beq.n	126e8 <AddModifyRecordMiddleWithCkecksum+0x278>
   126ce:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   126d0:	2b00      	cmp	r3, #0
   126d2:	f040 812e 	bne.w	12932 <AddModifyRecordMiddleWithCkecksum+0x4c2>
   126d6:	6c7a      	ldr	r2, [r7, #68]	; 0x44
   126d8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   126da:	1ad3      	subs	r3, r2, r3
   126dc:	f1a3 0210 	sub.w	r2, r3, #16
   126e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   126e2:	429a      	cmp	r2, r3
   126e4:	f040 8125 	bne.w	12932 <AddModifyRecordMiddleWithCkecksum+0x4c2>
   126e8:	f107 034c 	add.w	r3, r7, #76	; 0x4c
   126ec:	4618      	mov	r0, r3
   126ee:	f004 fb1d 	bl	16d2c <md5_init>
   126f2:	f107 034c 	add.w	r3, r7, #76	; 0x4c
   126f6:	4618      	mov	r0, r3
   126f8:	6c39      	ldr	r1, [r7, #64]	; 0x40
   126fa:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   126fc:	f004 fb50 	bl	16da0 <md5_append>
   12700:	f107 024c 	add.w	r2, r7, #76	; 0x4c
   12704:	f107 0310 	add.w	r3, r7, #16
   12708:	4610      	mov	r0, r2
   1270a:	4619      	mov	r1, r3
   1270c:	2204      	movs	r2, #4
   1270e:	f004 fb47 	bl	16da0 <md5_append>
   12712:	693b      	ldr	r3, [r7, #16]
   12714:	f107 024c 	add.w	r2, r7, #76	; 0x4c
   12718:	4610      	mov	r0, r2
   1271a:	6979      	ldr	r1, [r7, #20]
   1271c:	461a      	mov	r2, r3
   1271e:	f004 fb3f 	bl	16da0 <md5_append>
   12722:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   12724:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12726:	18d3      	adds	r3, r2, r3
   12728:	6c3a      	ldr	r2, [r7, #64]	; 0x40
   1272a:	18d2      	adds	r2, r2, r3
   1272c:	6c79      	ldr	r1, [r7, #68]	; 0x44
   1272e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12730:	1acb      	subs	r3, r1, r3
   12732:	f1a3 0110 	sub.w	r1, r3, #16
   12736:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12738:	1acb      	subs	r3, r1, r3
   1273a:	f107 014c 	add.w	r1, r7, #76	; 0x4c
   1273e:	4608      	mov	r0, r1
   12740:	4611      	mov	r1, r2
   12742:	461a      	mov	r2, r3
   12744:	f004 fb2c 	bl	16da0 <md5_append>
   12748:	f107 024c 	add.w	r2, r7, #76	; 0x4c
   1274c:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
   12750:	4610      	mov	r0, r2
   12752:	4619      	mov	r1, r3
   12754:	f004 fbb0 	bl	16eb8 <md5_finish>
   12758:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
   1275c:	4618      	mov	r0, r3
   1275e:	2110      	movs	r1, #16
   12760:	2201      	movs	r2, #1
   12762:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12764:	f005 fb18 	bl	17d98 <FS_write>
   12768:	62f8      	str	r0, [r7, #44]	; 0x2c
   1276a:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   1276c:	f005 f936 	bl	179dc <FS_close>
   12770:	2300      	movs	r3, #0
   12772:	63bb      	str	r3, [r7, #56]	; 0x38
   12774:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
   12778:	4618      	mov	r0, r3
   1277a:	f005 fab5 	bl	17ce8 <FS_unlink>
   1277e:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
   12780:	f005 f92c 	bl	179dc <FS_close>
   12784:	2300      	movs	r3, #0
   12786:	63fb      	str	r3, [r7, #60]	; 0x3c
   12788:	f107 02d8 	add.w	r2, r7, #216	; 0xd8
   1278c:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
   12790:	4610      	mov	r0, r2
   12792:	4619      	mov	r1, r3
   12794:	f005 fa54 	bl	17c40 <FS_rename>
   12798:	64b8      	str	r0, [r7, #72]	; 0x48
   1279a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
   1279c:	2b02      	cmp	r3, #2
   1279e:	f040 80c8 	bne.w	12932 <AddModifyRecordMiddleWithCkecksum+0x4c2>
   127a2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   127a4:	2b01      	cmp	r3, #1
   127a6:	f040 80c4 	bne.w	12932 <AddModifyRecordMiddleWithCkecksum+0x4c2>
   127aa:	230a      	movs	r3, #10
   127ac:	62bb      	str	r3, [r7, #40]	; 0x28
   127ae:	bf00      	nop
   127b0:	e0bf      	b.n	12932 <AddModifyRecordMiddleWithCkecksum+0x4c2>
   127b2:	2318      	movs	r3, #24
   127b4:	62bb      	str	r3, [r7, #40]	; 0x28
   127b6:	e0bd      	b.n	12934 <AddModifyRecordMiddleWithCkecksum+0x4c4>
   127b8:	687b      	ldr	r3, [r7, #4]
   127ba:	2b01      	cmp	r3, #1
   127bc:	d102      	bne.n	127c4 <AddModifyRecordMiddleWithCkecksum+0x354>
   127be:	693b      	ldr	r3, [r7, #16]
   127c0:	627b      	str	r3, [r7, #36]	; 0x24
   127c2:	e001      	b.n	127c8 <AddModifyRecordMiddleWithCkecksum+0x358>
   127c4:	2300      	movs	r3, #0
   127c6:	627b      	str	r3, [r7, #36]	; 0x24
   127c8:	693a      	ldr	r2, [r7, #16]
   127ca:	68fb      	ldr	r3, [r7, #12]
   127cc:	fb02 f303 	mul.w	r3, r2, r3
   127d0:	633b      	str	r3, [r7, #48]	; 0x30
   127d2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
   127d4:	f1a3 0210 	sub.w	r2, r3, #16
   127d8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   127da:	429a      	cmp	r2, r3
   127dc:	f2c0 80aa 	blt.w	12934 <AddModifyRecordMiddleWithCkecksum+0x4c4>
   127e0:	693b      	ldr	r3, [r7, #16]
   127e2:	2b00      	cmp	r3, #0
   127e4:	f2c0 80a6 	blt.w	12934 <AddModifyRecordMiddleWithCkecksum+0x4c4>
   127e8:	6c7a      	ldr	r2, [r7, #68]	; 0x44
   127ea:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   127ec:	1ad3      	subs	r3, r2, r3
   127ee:	f1a3 0210 	sub.w	r2, r3, #16
   127f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   127f4:	1ad3      	subs	r3, r2, r3
   127f6:	2b00      	cmp	r3, #0
   127f8:	f2c0 809c 	blt.w	12934 <AddModifyRecordMiddleWithCkecksum+0x4c4>
   127fc:	6c38      	ldr	r0, [r7, #64]	; 0x40
   127fe:	6b39      	ldr	r1, [r7, #48]	; 0x30
   12800:	2201      	movs	r2, #1
   12802:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12804:	f005 fac8 	bl	17d98 <FS_write>
   12808:	62f8      	str	r0, [r7, #44]	; 0x2c
   1280a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   1280c:	2b01      	cmp	r3, #1
   1280e:	d005      	beq.n	1281c <AddModifyRecordMiddleWithCkecksum+0x3ac>
   12810:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12812:	2b00      	cmp	r3, #0
   12814:	d10a      	bne.n	1282c <AddModifyRecordMiddleWithCkecksum+0x3bc>
   12816:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12818:	2b00      	cmp	r3, #0
   1281a:	d107      	bne.n	1282c <AddModifyRecordMiddleWithCkecksum+0x3bc>
   1281c:	693b      	ldr	r3, [r7, #16]
   1281e:	6978      	ldr	r0, [r7, #20]
   12820:	4619      	mov	r1, r3
   12822:	2201      	movs	r2, #1
   12824:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12826:	f005 fab7 	bl	17d98 <FS_write>
   1282a:	62f8      	str	r0, [r7, #44]	; 0x2c
   1282c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   1282e:	2b01      	cmp	r3, #1
   12830:	d005      	beq.n	1283e <AddModifyRecordMiddleWithCkecksum+0x3ce>
   12832:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12834:	2b00      	cmp	r3, #0
   12836:	d115      	bne.n	12864 <AddModifyRecordMiddleWithCkecksum+0x3f4>
   12838:	693b      	ldr	r3, [r7, #16]
   1283a:	2b00      	cmp	r3, #0
   1283c:	d112      	bne.n	12864 <AddModifyRecordMiddleWithCkecksum+0x3f4>
   1283e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   12840:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12842:	18d3      	adds	r3, r2, r3
   12844:	6c3a      	ldr	r2, [r7, #64]	; 0x40
   12846:	18d2      	adds	r2, r2, r3
   12848:	6c79      	ldr	r1, [r7, #68]	; 0x44
   1284a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   1284c:	1acb      	subs	r3, r1, r3
   1284e:	f1a3 0110 	sub.w	r1, r3, #16
   12852:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12854:	1acb      	subs	r3, r1, r3
   12856:	4610      	mov	r0, r2
   12858:	4619      	mov	r1, r3
   1285a:	2201      	movs	r2, #1
   1285c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   1285e:	f005 fa9b 	bl	17d98 <FS_write>
   12862:	62f8      	str	r0, [r7, #44]	; 0x2c
   12864:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12866:	2b01      	cmp	r3, #1
   12868:	d00a      	beq.n	12880 <AddModifyRecordMiddleWithCkecksum+0x410>
   1286a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   1286c:	2b00      	cmp	r3, #0
   1286e:	d161      	bne.n	12934 <AddModifyRecordMiddleWithCkecksum+0x4c4>
   12870:	6c7a      	ldr	r2, [r7, #68]	; 0x44
   12872:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12874:	1ad3      	subs	r3, r2, r3
   12876:	f1a3 0210 	sub.w	r2, r3, #16
   1287a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1287c:	429a      	cmp	r2, r3
   1287e:	d159      	bne.n	12934 <AddModifyRecordMiddleWithCkecksum+0x4c4>
   12880:	f107 034c 	add.w	r3, r7, #76	; 0x4c
   12884:	4618      	mov	r0, r3
   12886:	f004 fa51 	bl	16d2c <md5_init>
   1288a:	f107 034c 	add.w	r3, r7, #76	; 0x4c
   1288e:	4618      	mov	r0, r3
   12890:	6c39      	ldr	r1, [r7, #64]	; 0x40
   12892:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   12894:	f004 fa84 	bl	16da0 <md5_append>
   12898:	693b      	ldr	r3, [r7, #16]
   1289a:	f107 024c 	add.w	r2, r7, #76	; 0x4c
   1289e:	4610      	mov	r0, r2
   128a0:	6979      	ldr	r1, [r7, #20]
   128a2:	461a      	mov	r2, r3
   128a4:	f004 fa7c 	bl	16da0 <md5_append>
   128a8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
   128aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   128ac:	18d3      	adds	r3, r2, r3
   128ae:	6c3a      	ldr	r2, [r7, #64]	; 0x40
   128b0:	18d2      	adds	r2, r2, r3
   128b2:	6c79      	ldr	r1, [r7, #68]	; 0x44
   128b4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   128b6:	1acb      	subs	r3, r1, r3
   128b8:	f1a3 0110 	sub.w	r1, r3, #16
   128bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   128be:	1acb      	subs	r3, r1, r3
   128c0:	f107 014c 	add.w	r1, r7, #76	; 0x4c
   128c4:	4608      	mov	r0, r1
   128c6:	4611      	mov	r1, r2
   128c8:	461a      	mov	r2, r3
   128ca:	f004 fa69 	bl	16da0 <md5_append>
   128ce:	f107 024c 	add.w	r2, r7, #76	; 0x4c
   128d2:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
   128d6:	4610      	mov	r0, r2
   128d8:	4619      	mov	r1, r3
   128da:	f004 faed 	bl	16eb8 <md5_finish>
   128de:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
   128e2:	4618      	mov	r0, r3
   128e4:	2110      	movs	r1, #16
   128e6:	2201      	movs	r2, #1
   128e8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   128ea:	f005 fa55 	bl	17d98 <FS_write>
   128ee:	62f8      	str	r0, [r7, #44]	; 0x2c
   128f0:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   128f2:	f005 f873 	bl	179dc <FS_close>
   128f6:	2300      	movs	r3, #0
   128f8:	63bb      	str	r3, [r7, #56]	; 0x38
   128fa:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
   128fe:	4618      	mov	r0, r3
   12900:	f005 f9f2 	bl	17ce8 <FS_unlink>
   12904:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
   12906:	f005 f869 	bl	179dc <FS_close>
   1290a:	2300      	movs	r3, #0
   1290c:	63fb      	str	r3, [r7, #60]	; 0x3c
   1290e:	f107 02d8 	add.w	r2, r7, #216	; 0xd8
   12912:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
   12916:	4610      	mov	r0, r2
   12918:	4619      	mov	r1, r3
   1291a:	f005 f991 	bl	17c40 <FS_rename>
   1291e:	64b8      	str	r0, [r7, #72]	; 0x48
   12920:	6cbb      	ldr	r3, [r7, #72]	; 0x48
   12922:	2b02      	cmp	r3, #2
   12924:	d106      	bne.n	12934 <AddModifyRecordMiddleWithCkecksum+0x4c4>
   12926:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12928:	2b01      	cmp	r3, #1
   1292a:	d103      	bne.n	12934 <AddModifyRecordMiddleWithCkecksum+0x4c4>
   1292c:	230a      	movs	r3, #10
   1292e:	62bb      	str	r3, [r7, #40]	; 0x28
   12930:	e000      	b.n	12934 <AddModifyRecordMiddleWithCkecksum+0x4c4>
   12932:	bf00      	nop
   12934:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12936:	2b00      	cmp	r3, #0
   12938:	d007      	beq.n	1294a <AddModifyRecordMiddleWithCkecksum+0x4da>
   1293a:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
   1293c:	f005 f84e 	bl	179dc <FS_close>
   12940:	2300      	movs	r3, #0
   12942:	63fb      	str	r3, [r7, #60]	; 0x3c
   12944:	e001      	b.n	1294a <AddModifyRecordMiddleWithCkecksum+0x4da>
   12946:	2318      	movs	r3, #24
   12948:	62bb      	str	r3, [r7, #40]	; 0x28
   1294a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   1294c:	2b00      	cmp	r3, #0
   1294e:	d004      	beq.n	1295a <AddModifyRecordMiddleWithCkecksum+0x4ea>
   12950:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   12952:	f005 f843 	bl	179dc <FS_close>
   12956:	2300      	movs	r3, #0
   12958:	63bb      	str	r3, [r7, #56]	; 0x38
   1295a:	6c38      	ldr	r0, [r7, #64]	; 0x40
   1295c:	f005 fad0 	bl	17f00 <PageFree>
   12960:	6abb      	ldr	r3, [r7, #40]	; 0x28
   12962:	4618      	mov	r0, r3
   12964:	4b07      	ldr	r3, [pc, #28]	; (12984 <AddModifyRecordMiddleWithCkecksum+0x514>)
   12966:	58e3      	ldr	r3, [r4, r3]
   12968:	f8d7 20fc 	ldr.w	r2, [r7, #252]	; 0xfc
   1296c:	681b      	ldr	r3, [r3, #0]
   1296e:	429a      	cmp	r2, r3
   12970:	d001      	beq.n	12976 <AddModifyRecordMiddleWithCkecksum+0x506>
   12972:	f7f6 fabd 	bl	8ef0 <__stack_chk_fail>
   12976:	f507 7782 	add.w	r7, r7, #260	; 0x104
   1297a:	46bd      	mov	sp, r7
   1297c:	bd90      	pop	{r4, r7, pc}
   1297e:	bf00      	nop
   12980:	00011c80 	.word	0x00011c80
   12984:	000000a0 	.word	0x000000a0
   12988:	00008fdc 	.word	0x00008fdc
   1298c:	00008fde 	.word	0x00008fde
   12990:	00008f8c 	.word	0x00008f8c
   12994:	00008f9e 	.word	0x00008f9e
   12998:	00008f6a 	.word	0x00008f6a
   1299c:	000000b4 	.word	0x000000b4

000129a0 <AddModifyRecordEnd>:
   129a0:	b590      	push	{r4, r7, lr}
   129a2:	b0a5      	sub	sp, #148	; 0x94
   129a4:	af00      	add	r7, sp, #0
   129a6:	6178      	str	r0, [r7, #20]
   129a8:	6139      	str	r1, [r7, #16]
   129aa:	60fa      	str	r2, [r7, #12]
   129ac:	60bb      	str	r3, [r7, #8]
   129ae:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
   129b2:	607b      	str	r3, [r7, #4]
   129b4:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
   129b8:	603b      	str	r3, [r7, #0]
   129ba:	f8df 446c 	ldr.w	r4, [pc, #1132]	; 12e28 <AddModifyRecordEnd+0x488>
   129be:	447c      	add	r4, pc
   129c0:	f8df 3468 	ldr.w	r3, [pc, #1128]	; 12e2c <AddModifyRecordEnd+0x48c>
   129c4:	58e3      	ldr	r3, [r4, r3]
   129c6:	681b      	ldr	r3, [r3, #0]
   129c8:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
   129cc:	2300      	movs	r3, #0
   129ce:	61fb      	str	r3, [r7, #28]
   129d0:	2318      	movs	r3, #24
   129d2:	623b      	str	r3, [r7, #32]
   129d4:	2300      	movs	r3, #0
   129d6:	637b      	str	r3, [r7, #52]	; 0x34
   129d8:	2300      	movs	r3, #0
   129da:	62fb      	str	r3, [r7, #44]	; 0x2c
   129dc:	2300      	movs	r3, #0
   129de:	633b      	str	r3, [r7, #48]	; 0x30
   129e0:	f107 0344 	add.w	r3, r7, #68	; 0x44
   129e4:	4618      	mov	r0, r3
   129e6:	f8df 3448 	ldr.w	r3, [pc, #1096]	; 12e30 <AddModifyRecordEnd+0x490>
   129ea:	447b      	add	r3, pc
   129ec:	4619      	mov	r1, r3
   129ee:	697a      	ldr	r2, [r7, #20]
   129f0:	693b      	ldr	r3, [r7, #16]
   129f2:	f7f6 e90c 	blx	8c0c <_init+0x13c>
   129f6:	f107 0344 	add.w	r3, r7, #68	; 0x44
   129fa:	4618      	mov	r0, r3
   129fc:	f8df 3434 	ldr.w	r3, [pc, #1076]	; 12e34 <AddModifyRecordEnd+0x494>
   12a00:	447b      	add	r3, pc
   12a02:	4619      	mov	r1, r3
   12a04:	f005 f8c6 	bl	17b94 <FS_open>
   12a08:	62f8      	str	r0, [r7, #44]	; 0x2c
   12a0a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12a0c:	2b00      	cmp	r3, #0
   12a0e:	d102      	bne.n	12a16 <AddModifyRecordEnd+0x76>
   12a10:	2313      	movs	r3, #19
   12a12:	623b      	str	r3, [r7, #32]
   12a14:	e1f8      	b.n	12e08 <AddModifyRecordEnd+0x468>
   12a16:	6af8      	ldr	r0, [r7, #44]	; 0x2c
   12a18:	f005 f866 	bl	17ae8 <FS_length>
   12a1c:	63b8      	str	r0, [r7, #56]	; 0x38
   12a1e:	6af8      	ldr	r0, [r7, #44]	; 0x2c
   12a20:	2100      	movs	r1, #0
   12a22:	2200      	movs	r2, #0
   12a24:	f005 f936 	bl	17c94 <FS_seek>
   12a28:	63f8      	str	r0, [r7, #60]	; 0x3c
   12a2a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12a2c:	2b02      	cmp	r3, #2
   12a2e:	f040 81e3 	bne.w	12df8 <AddModifyRecordEnd+0x458>
   12a32:	f8df 3404 	ldr.w	r3, [pc, #1028]	; 12e38 <AddModifyRecordEnd+0x498>
   12a36:	58e3      	ldr	r3, [r4, r3]
   12a38:	461a      	mov	r2, r3
   12a3a:	687b      	ldr	r3, [r7, #4]
   12a3c:	212c      	movs	r1, #44	; 0x2c
   12a3e:	fb01 f303 	mul.w	r3, r1, r3
   12a42:	18d3      	adds	r3, r2, r3
   12a44:	3328      	adds	r3, #40	; 0x28
   12a46:	681b      	ldr	r3, [r3, #0]
   12a48:	2b01      	cmp	r3, #1
   12a4a:	f040 8100 	bne.w	12c4e <AddModifyRecordEnd+0x2ae>
   12a4e:	683b      	ldr	r3, [r7, #0]
   12a50:	2b01      	cmp	r3, #1
   12a52:	f040 80c6 	bne.w	12be2 <AddModifyRecordEnd+0x242>
   12a56:	2300      	movs	r3, #0
   12a58:	62bb      	str	r3, [r7, #40]	; 0x28
   12a5a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   12a5c:	4618      	mov	r0, r3
   12a5e:	f005 fa25 	bl	17eac <PageAlloc>
   12a62:	6378      	str	r0, [r7, #52]	; 0x34
   12a64:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   12a66:	2b00      	cmp	r3, #0
   12a68:	f000 80b7 	beq.w	12bda <AddModifyRecordEnd+0x23a>
   12a6c:	6b78      	ldr	r0, [r7, #52]	; 0x34
   12a6e:	6bb9      	ldr	r1, [r7, #56]	; 0x38
   12a70:	2201      	movs	r2, #1
   12a72:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12a74:	f005 f8b8 	bl	17be8 <FS_read>
   12a78:	6278      	str	r0, [r7, #36]	; 0x24
   12a7a:	e00f      	b.n	12a9c <AddModifyRecordEnd+0xfc>
   12a7c:	6abb      	ldr	r3, [r7, #40]	; 0x28
   12a7e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
   12a80:	18d3      	adds	r3, r2, r3
   12a82:	f107 021c 	add.w	r2, r7, #28
   12a86:	4610      	mov	r0, r2
   12a88:	4619      	mov	r1, r3
   12a8a:	2204      	movs	r2, #4
   12a8c:	f7f6 e8a0 	blx	8bd0 <_init+0x100>
   12a90:	69fb      	ldr	r3, [r7, #28]
   12a92:	461a      	mov	r2, r3
   12a94:	6abb      	ldr	r3, [r7, #40]	; 0x28
   12a96:	18d3      	adds	r3, r2, r3
   12a98:	3304      	adds	r3, #4
   12a9a:	62bb      	str	r3, [r7, #40]	; 0x28
   12a9c:	6aba      	ldr	r2, [r7, #40]	; 0x28
   12a9e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   12aa0:	429a      	cmp	r2, r3
   12aa2:	dbeb      	blt.n	12a7c <AddModifyRecordEnd+0xdc>
   12aa4:	69fb      	ldr	r3, [r7, #28]
   12aa6:	3304      	adds	r3, #4
   12aa8:	643b      	str	r3, [r7, #64]	; 0x40
   12aaa:	6bba      	ldr	r2, [r7, #56]	; 0x38
   12aac:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   12aae:	1ad3      	subs	r3, r2, r3
   12ab0:	2b00      	cmp	r3, #0
   12ab2:	f2c0 8092 	blt.w	12bda <AddModifyRecordEnd+0x23a>
   12ab6:	68bb      	ldr	r3, [r7, #8]
   12ab8:	2b00      	cmp	r3, #0
   12aba:	f2c0 808e 	blt.w	12bda <AddModifyRecordEnd+0x23a>
   12abe:	f107 0368 	add.w	r3, r7, #104	; 0x68
   12ac2:	4618      	mov	r0, r3
   12ac4:	4bdd      	ldr	r3, [pc, #884]	; (12e3c <AddModifyRecordEnd+0x49c>)
   12ac6:	447b      	add	r3, pc
   12ac8:	4619      	mov	r1, r3
   12aca:	697a      	ldr	r2, [r7, #20]
   12acc:	4bdc      	ldr	r3, [pc, #880]	; (12e40 <AddModifyRecordEnd+0x4a0>)
   12ace:	447b      	add	r3, pc
   12ad0:	f7f6 e89c 	blx	8c0c <_init+0x13c>
   12ad4:	f107 0368 	add.w	r3, r7, #104	; 0x68
   12ad8:	4618      	mov	r0, r3
   12ada:	f004 ffd9 	bl	17a90 <FS_exist>
   12ade:	63f8      	str	r0, [r7, #60]	; 0x3c
   12ae0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12ae2:	2b02      	cmp	r3, #2
   12ae4:	d104      	bne.n	12af0 <AddModifyRecordEnd+0x150>
   12ae6:	f107 0368 	add.w	r3, r7, #104	; 0x68
   12aea:	4618      	mov	r0, r3
   12aec:	f005 f8fc 	bl	17ce8 <FS_unlink>
   12af0:	f107 0368 	add.w	r3, r7, #104	; 0x68
   12af4:	4618      	mov	r0, r3
   12af6:	4bd3      	ldr	r3, [pc, #844]	; (12e44 <AddModifyRecordEnd+0x4a4>)
   12af8:	447b      	add	r3, pc
   12afa:	4619      	mov	r1, r3
   12afc:	f005 f84a 	bl	17b94 <FS_open>
   12b00:	6338      	str	r0, [r7, #48]	; 0x30
   12b02:	6af8      	ldr	r0, [r7, #44]	; 0x2c
   12b04:	2100      	movs	r1, #0
   12b06:	2200      	movs	r2, #0
   12b08:	f005 f8c4 	bl	17c94 <FS_seek>
   12b0c:	63f8      	str	r0, [r7, #60]	; 0x3c
   12b0e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12b10:	2b02      	cmp	r3, #2
   12b12:	d15a      	bne.n	12bca <AddModifyRecordEnd+0x22a>
   12b14:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12b16:	2b01      	cmp	r3, #1
   12b18:	d005      	beq.n	12b26 <AddModifyRecordEnd+0x186>
   12b1a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12b1c:	2b00      	cmp	r3, #0
   12b1e:	d154      	bne.n	12bca <AddModifyRecordEnd+0x22a>
   12b20:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   12b22:	2b00      	cmp	r3, #0
   12b24:	d151      	bne.n	12bca <AddModifyRecordEnd+0x22a>
   12b26:	6bba      	ldr	r2, [r7, #56]	; 0x38
   12b28:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   12b2a:	1ad3      	subs	r3, r2, r3
   12b2c:	6b78      	ldr	r0, [r7, #52]	; 0x34
   12b2e:	4619      	mov	r1, r3
   12b30:	2201      	movs	r2, #1
   12b32:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12b34:	f005 f930 	bl	17d98 <FS_write>
   12b38:	6278      	str	r0, [r7, #36]	; 0x24
   12b3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12b3c:	2b01      	cmp	r3, #1
   12b3e:	d006      	beq.n	12b4e <AddModifyRecordEnd+0x1ae>
   12b40:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12b42:	2b00      	cmp	r3, #0
   12b44:	d10c      	bne.n	12b60 <AddModifyRecordEnd+0x1c0>
   12b46:	6bba      	ldr	r2, [r7, #56]	; 0x38
   12b48:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   12b4a:	429a      	cmp	r2, r3
   12b4c:	d108      	bne.n	12b60 <AddModifyRecordEnd+0x1c0>
   12b4e:	f107 0308 	add.w	r3, r7, #8
   12b52:	4618      	mov	r0, r3
   12b54:	2104      	movs	r1, #4
   12b56:	2201      	movs	r2, #1
   12b58:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12b5a:	f005 f91d 	bl	17d98 <FS_write>
   12b5e:	6278      	str	r0, [r7, #36]	; 0x24
   12b60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12b62:	2b01      	cmp	r3, #1
   12b64:	d107      	bne.n	12b76 <AddModifyRecordEnd+0x1d6>
   12b66:	68bb      	ldr	r3, [r7, #8]
   12b68:	68f8      	ldr	r0, [r7, #12]
   12b6a:	4619      	mov	r1, r3
   12b6c:	2201      	movs	r2, #1
   12b6e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12b70:	f005 f912 	bl	17d98 <FS_write>
   12b74:	6278      	str	r0, [r7, #36]	; 0x24
   12b76:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12b78:	2b01      	cmp	r3, #1
   12b7a:	d005      	beq.n	12b88 <AddModifyRecordEnd+0x1e8>
   12b7c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12b7e:	2b00      	cmp	r3, #0
   12b80:	d123      	bne.n	12bca <AddModifyRecordEnd+0x22a>
   12b82:	68bb      	ldr	r3, [r7, #8]
   12b84:	2b00      	cmp	r3, #0
   12b86:	d120      	bne.n	12bca <AddModifyRecordEnd+0x22a>
   12b88:	6af8      	ldr	r0, [r7, #44]	; 0x2c
   12b8a:	f004 ff27 	bl	179dc <FS_close>
   12b8e:	2300      	movs	r3, #0
   12b90:	62fb      	str	r3, [r7, #44]	; 0x2c
   12b92:	f107 0344 	add.w	r3, r7, #68	; 0x44
   12b96:	4618      	mov	r0, r3
   12b98:	f005 f8a6 	bl	17ce8 <FS_unlink>
   12b9c:	63f8      	str	r0, [r7, #60]	; 0x3c
   12b9e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12ba0:	2b02      	cmp	r3, #2
   12ba2:	d112      	bne.n	12bca <AddModifyRecordEnd+0x22a>
   12ba4:	6b38      	ldr	r0, [r7, #48]	; 0x30
   12ba6:	f004 ff19 	bl	179dc <FS_close>
   12baa:	2300      	movs	r3, #0
   12bac:	633b      	str	r3, [r7, #48]	; 0x30
   12bae:	f107 0268 	add.w	r2, r7, #104	; 0x68
   12bb2:	f107 0344 	add.w	r3, r7, #68	; 0x44
   12bb6:	4610      	mov	r0, r2
   12bb8:	4619      	mov	r1, r3
   12bba:	f005 f841 	bl	17c40 <FS_rename>
   12bbe:	63f8      	str	r0, [r7, #60]	; 0x3c
   12bc0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12bc2:	2b02      	cmp	r3, #2
   12bc4:	d101      	bne.n	12bca <AddModifyRecordEnd+0x22a>
   12bc6:	230a      	movs	r3, #10
   12bc8:	623b      	str	r3, [r7, #32]
   12bca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12bcc:	2b00      	cmp	r3, #0
   12bce:	d004      	beq.n	12bda <AddModifyRecordEnd+0x23a>
   12bd0:	6b38      	ldr	r0, [r7, #48]	; 0x30
   12bd2:	f004 ff03 	bl	179dc <FS_close>
   12bd6:	2300      	movs	r3, #0
   12bd8:	633b      	str	r3, [r7, #48]	; 0x30
   12bda:	6b78      	ldr	r0, [r7, #52]	; 0x34
   12bdc:	f005 f990 	bl	17f00 <PageFree>
   12be0:	e10a      	b.n	12df8 <AddModifyRecordEnd+0x458>
   12be2:	f107 0344 	add.w	r3, r7, #68	; 0x44
   12be6:	4618      	mov	r0, r3
   12be8:	4b97      	ldr	r3, [pc, #604]	; (12e48 <AddModifyRecordEnd+0x4a8>)
   12bea:	447b      	add	r3, pc
   12bec:	4619      	mov	r1, r3
   12bee:	f004 ffd1 	bl	17b94 <FS_open>
   12bf2:	62f8      	str	r0, [r7, #44]	; 0x2c
   12bf4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12bf6:	2b00      	cmp	r3, #0
   12bf8:	d102      	bne.n	12c00 <AddModifyRecordEnd+0x260>
   12bfa:	2313      	movs	r3, #19
   12bfc:	623b      	str	r3, [r7, #32]
   12bfe:	e0fb      	b.n	12df8 <AddModifyRecordEnd+0x458>
   12c00:	f107 0308 	add.w	r3, r7, #8
   12c04:	4618      	mov	r0, r3
   12c06:	2104      	movs	r1, #4
   12c08:	2201      	movs	r2, #1
   12c0a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12c0c:	f005 f8c4 	bl	17d98 <FS_write>
   12c10:	6278      	str	r0, [r7, #36]	; 0x24
   12c12:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12c14:	2b01      	cmp	r3, #1
   12c16:	d107      	bne.n	12c28 <AddModifyRecordEnd+0x288>
   12c18:	68bb      	ldr	r3, [r7, #8]
   12c1a:	68f8      	ldr	r0, [r7, #12]
   12c1c:	4619      	mov	r1, r3
   12c1e:	2201      	movs	r2, #1
   12c20:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12c22:	f005 f8b9 	bl	17d98 <FS_write>
   12c26:	6278      	str	r0, [r7, #36]	; 0x24
   12c28:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12c2a:	2b01      	cmp	r3, #1
   12c2c:	d007      	beq.n	12c3e <AddModifyRecordEnd+0x29e>
   12c2e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12c30:	2b00      	cmp	r3, #0
   12c32:	f040 80e1 	bne.w	12df8 <AddModifyRecordEnd+0x458>
   12c36:	68bb      	ldr	r3, [r7, #8]
   12c38:	2b00      	cmp	r3, #0
   12c3a:	f040 80dd 	bne.w	12df8 <AddModifyRecordEnd+0x458>
   12c3e:	6af8      	ldr	r0, [r7, #44]	; 0x2c
   12c40:	f004 fecc 	bl	179dc <FS_close>
   12c44:	2300      	movs	r3, #0
   12c46:	62fb      	str	r3, [r7, #44]	; 0x2c
   12c48:	230a      	movs	r3, #10
   12c4a:	623b      	str	r3, [r7, #32]
   12c4c:	e0d4      	b.n	12df8 <AddModifyRecordEnd+0x458>
   12c4e:	683b      	ldr	r3, [r7, #0]
   12c50:	2b01      	cmp	r3, #1
   12c52:	f040 80a5 	bne.w	12da0 <AddModifyRecordEnd+0x400>
   12c56:	68bb      	ldr	r3, [r7, #8]
   12c58:	643b      	str	r3, [r7, #64]	; 0x40
   12c5a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   12c5c:	2b00      	cmp	r3, #0
   12c5e:	f2c0 80cb 	blt.w	12df8 <AddModifyRecordEnd+0x458>
   12c62:	6bba      	ldr	r2, [r7, #56]	; 0x38
   12c64:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   12c66:	1ad3      	subs	r3, r2, r3
   12c68:	2b00      	cmp	r3, #0
   12c6a:	f2c0 80c5 	blt.w	12df8 <AddModifyRecordEnd+0x458>
   12c6e:	68bb      	ldr	r3, [r7, #8]
   12c70:	2b00      	cmp	r3, #0
   12c72:	f2c0 80c1 	blt.w	12df8 <AddModifyRecordEnd+0x458>
   12c76:	f107 0368 	add.w	r3, r7, #104	; 0x68
   12c7a:	4618      	mov	r0, r3
   12c7c:	4b73      	ldr	r3, [pc, #460]	; (12e4c <AddModifyRecordEnd+0x4ac>)
   12c7e:	447b      	add	r3, pc
   12c80:	4619      	mov	r1, r3
   12c82:	697a      	ldr	r2, [r7, #20]
   12c84:	4b72      	ldr	r3, [pc, #456]	; (12e50 <AddModifyRecordEnd+0x4b0>)
   12c86:	447b      	add	r3, pc
   12c88:	f7f5 efc0 	blx	8c0c <_init+0x13c>
   12c8c:	f107 0368 	add.w	r3, r7, #104	; 0x68
   12c90:	4618      	mov	r0, r3
   12c92:	f004 fefd 	bl	17a90 <FS_exist>
   12c96:	63f8      	str	r0, [r7, #60]	; 0x3c
   12c98:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12c9a:	2b02      	cmp	r3, #2
   12c9c:	d104      	bne.n	12ca8 <AddModifyRecordEnd+0x308>
   12c9e:	f107 0368 	add.w	r3, r7, #104	; 0x68
   12ca2:	4618      	mov	r0, r3
   12ca4:	f005 f820 	bl	17ce8 <FS_unlink>
   12ca8:	f107 0368 	add.w	r3, r7, #104	; 0x68
   12cac:	4618      	mov	r0, r3
   12cae:	4b69      	ldr	r3, [pc, #420]	; (12e54 <AddModifyRecordEnd+0x4b4>)
   12cb0:	447b      	add	r3, pc
   12cb2:	4619      	mov	r1, r3
   12cb4:	f004 ff6e 	bl	17b94 <FS_open>
   12cb8:	6338      	str	r0, [r7, #48]	; 0x30
   12cba:	6af8      	ldr	r0, [r7, #44]	; 0x2c
   12cbc:	2100      	movs	r1, #0
   12cbe:	2200      	movs	r2, #0
   12cc0:	f004 ffe8 	bl	17c94 <FS_seek>
   12cc4:	63f8      	str	r0, [r7, #60]	; 0x3c
   12cc6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12cc8:	2b02      	cmp	r3, #2
   12cca:	d160      	bne.n	12d8e <AddModifyRecordEnd+0x3ee>
   12ccc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   12cce:	4618      	mov	r0, r3
   12cd0:	f005 f8ec 	bl	17eac <PageAlloc>
   12cd4:	6378      	str	r0, [r7, #52]	; 0x34
   12cd6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   12cd8:	2b00      	cmp	r3, #0
   12cda:	d055      	beq.n	12d88 <AddModifyRecordEnd+0x3e8>
   12cdc:	6b78      	ldr	r0, [r7, #52]	; 0x34
   12cde:	6bb9      	ldr	r1, [r7, #56]	; 0x38
   12ce0:	2201      	movs	r2, #1
   12ce2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12ce4:	f004 ff80 	bl	17be8 <FS_read>
   12ce8:	6278      	str	r0, [r7, #36]	; 0x24
   12cea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12cec:	2b01      	cmp	r3, #1
   12cee:	d005      	beq.n	12cfc <AddModifyRecordEnd+0x35c>
   12cf0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12cf2:	2b00      	cmp	r3, #0
   12cf4:	d148      	bne.n	12d88 <AddModifyRecordEnd+0x3e8>
   12cf6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   12cf8:	2b00      	cmp	r3, #0
   12cfa:	d145      	bne.n	12d88 <AddModifyRecordEnd+0x3e8>
   12cfc:	6bba      	ldr	r2, [r7, #56]	; 0x38
   12cfe:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   12d00:	1ad3      	subs	r3, r2, r3
   12d02:	6b78      	ldr	r0, [r7, #52]	; 0x34
   12d04:	4619      	mov	r1, r3
   12d06:	2201      	movs	r2, #1
   12d08:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12d0a:	f005 f845 	bl	17d98 <FS_write>
   12d0e:	6278      	str	r0, [r7, #36]	; 0x24
   12d10:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12d12:	2b01      	cmp	r3, #1
   12d14:	d006      	beq.n	12d24 <AddModifyRecordEnd+0x384>
   12d16:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12d18:	2b00      	cmp	r3, #0
   12d1a:	d10b      	bne.n	12d34 <AddModifyRecordEnd+0x394>
   12d1c:	6bba      	ldr	r2, [r7, #56]	; 0x38
   12d1e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   12d20:	429a      	cmp	r2, r3
   12d22:	d107      	bne.n	12d34 <AddModifyRecordEnd+0x394>
   12d24:	68bb      	ldr	r3, [r7, #8]
   12d26:	68f8      	ldr	r0, [r7, #12]
   12d28:	4619      	mov	r1, r3
   12d2a:	2201      	movs	r2, #1
   12d2c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12d2e:	f005 f833 	bl	17d98 <FS_write>
   12d32:	6278      	str	r0, [r7, #36]	; 0x24
   12d34:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12d36:	2b01      	cmp	r3, #1
   12d38:	d005      	beq.n	12d46 <AddModifyRecordEnd+0x3a6>
   12d3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12d3c:	2b00      	cmp	r3, #0
   12d3e:	d123      	bne.n	12d88 <AddModifyRecordEnd+0x3e8>
   12d40:	68bb      	ldr	r3, [r7, #8]
   12d42:	2b00      	cmp	r3, #0
   12d44:	d120      	bne.n	12d88 <AddModifyRecordEnd+0x3e8>
   12d46:	6af8      	ldr	r0, [r7, #44]	; 0x2c
   12d48:	f004 fe48 	bl	179dc <FS_close>
   12d4c:	2300      	movs	r3, #0
   12d4e:	62fb      	str	r3, [r7, #44]	; 0x2c
   12d50:	f107 0344 	add.w	r3, r7, #68	; 0x44
   12d54:	4618      	mov	r0, r3
   12d56:	f004 ffc7 	bl	17ce8 <FS_unlink>
   12d5a:	63f8      	str	r0, [r7, #60]	; 0x3c
   12d5c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12d5e:	2b02      	cmp	r3, #2
   12d60:	d112      	bne.n	12d88 <AddModifyRecordEnd+0x3e8>
   12d62:	6b38      	ldr	r0, [r7, #48]	; 0x30
   12d64:	f004 fe3a 	bl	179dc <FS_close>
   12d68:	2300      	movs	r3, #0
   12d6a:	633b      	str	r3, [r7, #48]	; 0x30
   12d6c:	f107 0268 	add.w	r2, r7, #104	; 0x68
   12d70:	f107 0344 	add.w	r3, r7, #68	; 0x44
   12d74:	4610      	mov	r0, r2
   12d76:	4619      	mov	r1, r3
   12d78:	f004 ff62 	bl	17c40 <FS_rename>
   12d7c:	63f8      	str	r0, [r7, #60]	; 0x3c
   12d7e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12d80:	2b02      	cmp	r3, #2
   12d82:	d101      	bne.n	12d88 <AddModifyRecordEnd+0x3e8>
   12d84:	230a      	movs	r3, #10
   12d86:	623b      	str	r3, [r7, #32]
   12d88:	6b78      	ldr	r0, [r7, #52]	; 0x34
   12d8a:	f005 f8b9 	bl	17f00 <PageFree>
   12d8e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12d90:	2b00      	cmp	r3, #0
   12d92:	d031      	beq.n	12df8 <AddModifyRecordEnd+0x458>
   12d94:	6b38      	ldr	r0, [r7, #48]	; 0x30
   12d96:	f004 fe21 	bl	179dc <FS_close>
   12d9a:	2300      	movs	r3, #0
   12d9c:	633b      	str	r3, [r7, #48]	; 0x30
   12d9e:	e02b      	b.n	12df8 <AddModifyRecordEnd+0x458>
   12da0:	6af8      	ldr	r0, [r7, #44]	; 0x2c
   12da2:	f004 fe1b 	bl	179dc <FS_close>
   12da6:	2300      	movs	r3, #0
   12da8:	62fb      	str	r3, [r7, #44]	; 0x2c
   12daa:	f107 0344 	add.w	r3, r7, #68	; 0x44
   12dae:	4618      	mov	r0, r3
   12db0:	4b29      	ldr	r3, [pc, #164]	; (12e58 <AddModifyRecordEnd+0x4b8>)
   12db2:	447b      	add	r3, pc
   12db4:	4619      	mov	r1, r3
   12db6:	f004 feed 	bl	17b94 <FS_open>
   12dba:	62f8      	str	r0, [r7, #44]	; 0x2c
   12dbc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12dbe:	2b00      	cmp	r3, #0
   12dc0:	d102      	bne.n	12dc8 <AddModifyRecordEnd+0x428>
   12dc2:	2313      	movs	r3, #19
   12dc4:	623b      	str	r3, [r7, #32]
   12dc6:	e017      	b.n	12df8 <AddModifyRecordEnd+0x458>
   12dc8:	68bb      	ldr	r3, [r7, #8]
   12dca:	68f8      	ldr	r0, [r7, #12]
   12dcc:	4619      	mov	r1, r3
   12dce:	2201      	movs	r2, #1
   12dd0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12dd2:	f004 ffe1 	bl	17d98 <FS_write>
   12dd6:	6278      	str	r0, [r7, #36]	; 0x24
   12dd8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12dda:	2b01      	cmp	r3, #1
   12ddc:	d005      	beq.n	12dea <AddModifyRecordEnd+0x44a>
   12dde:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   12de0:	2b00      	cmp	r3, #0
   12de2:	d109      	bne.n	12df8 <AddModifyRecordEnd+0x458>
   12de4:	68bb      	ldr	r3, [r7, #8]
   12de6:	2b00      	cmp	r3, #0
   12de8:	d106      	bne.n	12df8 <AddModifyRecordEnd+0x458>
   12dea:	6af8      	ldr	r0, [r7, #44]	; 0x2c
   12dec:	f004 fdf6 	bl	179dc <FS_close>
   12df0:	2300      	movs	r3, #0
   12df2:	62fb      	str	r3, [r7, #44]	; 0x2c
   12df4:	230a      	movs	r3, #10
   12df6:	623b      	str	r3, [r7, #32]
   12df8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12dfa:	2b00      	cmp	r3, #0
   12dfc:	d004      	beq.n	12e08 <AddModifyRecordEnd+0x468>
   12dfe:	6af8      	ldr	r0, [r7, #44]	; 0x2c
   12e00:	f004 fdec 	bl	179dc <FS_close>
   12e04:	2300      	movs	r3, #0
   12e06:	62fb      	str	r3, [r7, #44]	; 0x2c
   12e08:	6a3b      	ldr	r3, [r7, #32]
   12e0a:	4618      	mov	r0, r3
   12e0c:	4b07      	ldr	r3, [pc, #28]	; (12e2c <AddModifyRecordEnd+0x48c>)
   12e0e:	58e3      	ldr	r3, [r4, r3]
   12e10:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
   12e14:	681b      	ldr	r3, [r3, #0]
   12e16:	429a      	cmp	r2, r3
   12e18:	d001      	beq.n	12e1e <AddModifyRecordEnd+0x47e>
   12e1a:	f7f6 f869 	bl	8ef0 <__stack_chk_fail>
   12e1e:	f107 0794 	add.w	r7, r7, #148	; 0x94
   12e22:	46bd      	mov	sp, r7
   12e24:	bd90      	pop	{r4, r7, pc}
   12e26:	bf00      	nop
   12e28:	00011756 	.word	0x00011756
   12e2c:	000000a0 	.word	0x000000a0
   12e30:	00008aae 	.word	0x00008aae
   12e34:	00008ab0 	.word	0x00008ab0
   12e38:	000000b4 	.word	0x000000b4
   12e3c:	000089d2 	.word	0x000089d2
   12e40:	000089e6 	.word	0x000089e6
   12e44:	000089b4 	.word	0x000089b4
   12e48:	000088c2 	.word	0x000088c2
   12e4c:	0000881a 	.word	0x0000881a
   12e50:	0000882e 	.word	0x0000882e
   12e54:	000087fc 	.word	0x000087fc
   12e58:	000086fa 	.word	0x000086fa

00012e5c <AddModifyRecordEndWithCkecksum>:
   12e5c:	b590      	push	{r4, r7, lr}
   12e5e:	b0bf      	sub	sp, #252	; 0xfc
   12e60:	af00      	add	r7, sp, #0
   12e62:	6178      	str	r0, [r7, #20]
   12e64:	6139      	str	r1, [r7, #16]
   12e66:	60fa      	str	r2, [r7, #12]
   12e68:	60bb      	str	r3, [r7, #8]
   12e6a:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
   12e6e:	607b      	str	r3, [r7, #4]
   12e70:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
   12e74:	603b      	str	r3, [r7, #0]
   12e76:	4cf7      	ldr	r4, [pc, #988]	; (13254 <AddModifyRecordEndWithCkecksum+0x3f8>)
   12e78:	447c      	add	r4, pc
   12e7a:	4bf7      	ldr	r3, [pc, #988]	; (13258 <AddModifyRecordEndWithCkecksum+0x3fc>)
   12e7c:	58e3      	ldr	r3, [r4, r3]
   12e7e:	681b      	ldr	r3, [r3, #0]
   12e80:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
   12e84:	2300      	movs	r3, #0
   12e86:	61fb      	str	r3, [r7, #28]
   12e88:	2318      	movs	r3, #24
   12e8a:	627b      	str	r3, [r7, #36]	; 0x24
   12e8c:	2300      	movs	r3, #0
   12e8e:	63bb      	str	r3, [r7, #56]	; 0x38
   12e90:	2300      	movs	r3, #0
   12e92:	633b      	str	r3, [r7, #48]	; 0x30
   12e94:	2300      	movs	r3, #0
   12e96:	637b      	str	r3, [r7, #52]	; 0x34
   12e98:	f107 03ac 	add.w	r3, r7, #172	; 0xac
   12e9c:	4618      	mov	r0, r3
   12e9e:	4bef      	ldr	r3, [pc, #956]	; (1325c <AddModifyRecordEndWithCkecksum+0x400>)
   12ea0:	447b      	add	r3, pc
   12ea2:	4619      	mov	r1, r3
   12ea4:	697a      	ldr	r2, [r7, #20]
   12ea6:	693b      	ldr	r3, [r7, #16]
   12ea8:	f7f5 eeb0 	blx	8c0c <_init+0x13c>
   12eac:	f107 03ac 	add.w	r3, r7, #172	; 0xac
   12eb0:	4618      	mov	r0, r3
   12eb2:	4beb      	ldr	r3, [pc, #940]	; (13260 <AddModifyRecordEndWithCkecksum+0x404>)
   12eb4:	447b      	add	r3, pc
   12eb6:	4619      	mov	r1, r3
   12eb8:	f004 fe6c 	bl	17b94 <FS_open>
   12ebc:	6338      	str	r0, [r7, #48]	; 0x30
   12ebe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12ec0:	2b00      	cmp	r3, #0
   12ec2:	d102      	bne.n	12eca <AddModifyRecordEndWithCkecksum+0x6e>
   12ec4:	2313      	movs	r3, #19
   12ec6:	627b      	str	r3, [r7, #36]	; 0x24
   12ec8:	e1b4      	b.n	13234 <AddModifyRecordEndWithCkecksum+0x3d8>
   12eca:	6b38      	ldr	r0, [r7, #48]	; 0x30
   12ecc:	f004 fe0c 	bl	17ae8 <FS_length>
   12ed0:	63f8      	str	r0, [r7, #60]	; 0x3c
   12ed2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12ed4:	4618      	mov	r0, r3
   12ed6:	f004 ffe9 	bl	17eac <PageAlloc>
   12eda:	63b8      	str	r0, [r7, #56]	; 0x38
   12edc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   12ede:	2b00      	cmp	r3, #0
   12ee0:	f000 819b 	beq.w	1321a <AddModifyRecordEndWithCkecksum+0x3be>
   12ee4:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
   12ee8:	4618      	mov	r0, r3
   12eea:	4bde      	ldr	r3, [pc, #888]	; (13264 <AddModifyRecordEndWithCkecksum+0x408>)
   12eec:	447b      	add	r3, pc
   12eee:	4619      	mov	r1, r3
   12ef0:	697a      	ldr	r2, [r7, #20]
   12ef2:	4bdd      	ldr	r3, [pc, #884]	; (13268 <AddModifyRecordEndWithCkecksum+0x40c>)
   12ef4:	447b      	add	r3, pc
   12ef6:	f7f5 ee8a 	blx	8c0c <_init+0x13c>
   12efa:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
   12efe:	4618      	mov	r0, r3
   12f00:	f004 fdc6 	bl	17a90 <FS_exist>
   12f04:	6438      	str	r0, [r7, #64]	; 0x40
   12f06:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   12f08:	2b02      	cmp	r3, #2
   12f0a:	d104      	bne.n	12f16 <AddModifyRecordEndWithCkecksum+0xba>
   12f0c:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
   12f10:	4618      	mov	r0, r3
   12f12:	f004 fee9 	bl	17ce8 <FS_unlink>
   12f16:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
   12f1a:	4618      	mov	r0, r3
   12f1c:	4bd3      	ldr	r3, [pc, #844]	; (1326c <AddModifyRecordEndWithCkecksum+0x410>)
   12f1e:	447b      	add	r3, pc
   12f20:	4619      	mov	r1, r3
   12f22:	f004 fe37 	bl	17b94 <FS_open>
   12f26:	6378      	str	r0, [r7, #52]	; 0x34
   12f28:	6b38      	ldr	r0, [r7, #48]	; 0x30
   12f2a:	2100      	movs	r1, #0
   12f2c:	2200      	movs	r2, #0
   12f2e:	f004 feb1 	bl	17c94 <FS_seek>
   12f32:	6438      	str	r0, [r7, #64]	; 0x40
   12f34:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   12f36:	2b02      	cmp	r3, #2
   12f38:	f040 8166 	bne.w	13208 <AddModifyRecordEndWithCkecksum+0x3ac>
   12f3c:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   12f3e:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
   12f40:	2201      	movs	r2, #1
   12f42:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   12f44:	f004 fe50 	bl	17be8 <FS_read>
   12f48:	62b8      	str	r0, [r7, #40]	; 0x28
   12f4a:	6abb      	ldr	r3, [r7, #40]	; 0x28
   12f4c:	2b01      	cmp	r3, #1
   12f4e:	d007      	beq.n	12f60 <AddModifyRecordEndWithCkecksum+0x104>
   12f50:	6abb      	ldr	r3, [r7, #40]	; 0x28
   12f52:	2b00      	cmp	r3, #0
   12f54:	f040 8158 	bne.w	13208 <AddModifyRecordEndWithCkecksum+0x3ac>
   12f58:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12f5a:	2b00      	cmp	r3, #0
   12f5c:	f040 8154 	bne.w	13208 <AddModifyRecordEndWithCkecksum+0x3ac>
   12f60:	4bc3      	ldr	r3, [pc, #780]	; (13270 <AddModifyRecordEndWithCkecksum+0x414>)
   12f62:	58e3      	ldr	r3, [r4, r3]
   12f64:	461a      	mov	r2, r3
   12f66:	687b      	ldr	r3, [r7, #4]
   12f68:	212c      	movs	r1, #44	; 0x2c
   12f6a:	fb01 f303 	mul.w	r3, r1, r3
   12f6e:	18d3      	adds	r3, r2, r3
   12f70:	3328      	adds	r3, #40	; 0x28
   12f72:	681b      	ldr	r3, [r3, #0]
   12f74:	2b01      	cmp	r3, #1
   12f76:	f040 80bf 	bne.w	130f8 <AddModifyRecordEndWithCkecksum+0x29c>
   12f7a:	2300      	movs	r3, #0
   12f7c:	62fb      	str	r3, [r7, #44]	; 0x2c
   12f7e:	e00f      	b.n	12fa0 <AddModifyRecordEndWithCkecksum+0x144>
   12f80:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12f82:	6bba      	ldr	r2, [r7, #56]	; 0x38
   12f84:	18d3      	adds	r3, r2, r3
   12f86:	f107 021c 	add.w	r2, r7, #28
   12f8a:	4610      	mov	r0, r2
   12f8c:	4619      	mov	r1, r3
   12f8e:	2204      	movs	r2, #4
   12f90:	f7f5 ee1e 	blx	8bd0 <_init+0x100>
   12f94:	69fb      	ldr	r3, [r7, #28]
   12f96:	461a      	mov	r2, r3
   12f98:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12f9a:	18d3      	adds	r3, r2, r3
   12f9c:	3304      	adds	r3, #4
   12f9e:	62fb      	str	r3, [r7, #44]	; 0x2c
   12fa0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12fa2:	f1a3 0210 	sub.w	r2, r3, #16
   12fa6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   12fa8:	429a      	cmp	r2, r3
   12faa:	dce9      	bgt.n	12f80 <AddModifyRecordEndWithCkecksum+0x124>
   12fac:	683b      	ldr	r3, [r7, #0]
   12fae:	2b01      	cmp	r3, #1
   12fb0:	d103      	bne.n	12fba <AddModifyRecordEndWithCkecksum+0x15e>
   12fb2:	69fb      	ldr	r3, [r7, #28]
   12fb4:	3304      	adds	r3, #4
   12fb6:	623b      	str	r3, [r7, #32]
   12fb8:	e001      	b.n	12fbe <AddModifyRecordEndWithCkecksum+0x162>
   12fba:	2300      	movs	r3, #0
   12fbc:	623b      	str	r3, [r7, #32]
   12fbe:	6a3b      	ldr	r3, [r7, #32]
   12fc0:	2b00      	cmp	r3, #0
   12fc2:	f2c0 8121 	blt.w	13208 <AddModifyRecordEndWithCkecksum+0x3ac>
   12fc6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12fc8:	f1a3 0210 	sub.w	r2, r3, #16
   12fcc:	6a3b      	ldr	r3, [r7, #32]
   12fce:	1ad3      	subs	r3, r2, r3
   12fd0:	2b00      	cmp	r3, #0
   12fd2:	f2c0 8119 	blt.w	13208 <AddModifyRecordEndWithCkecksum+0x3ac>
   12fd6:	68bb      	ldr	r3, [r7, #8]
   12fd8:	2b00      	cmp	r3, #0
   12fda:	f2c0 8115 	blt.w	13208 <AddModifyRecordEndWithCkecksum+0x3ac>
   12fde:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   12fe0:	f1a3 0210 	sub.w	r2, r3, #16
   12fe4:	6a3b      	ldr	r3, [r7, #32]
   12fe6:	1ad3      	subs	r3, r2, r3
   12fe8:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   12fea:	4619      	mov	r1, r3
   12fec:	2201      	movs	r2, #1
   12fee:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   12ff0:	f004 fed2 	bl	17d98 <FS_write>
   12ff4:	62b8      	str	r0, [r7, #40]	; 0x28
   12ff6:	6abb      	ldr	r3, [r7, #40]	; 0x28
   12ff8:	2b01      	cmp	r3, #1
   12ffa:	d008      	beq.n	1300e <AddModifyRecordEndWithCkecksum+0x1b2>
   12ffc:	6abb      	ldr	r3, [r7, #40]	; 0x28
   12ffe:	2b00      	cmp	r3, #0
   13000:	d10e      	bne.n	13020 <AddModifyRecordEndWithCkecksum+0x1c4>
   13002:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   13004:	f1a3 0210 	sub.w	r2, r3, #16
   13008:	6a3b      	ldr	r3, [r7, #32]
   1300a:	429a      	cmp	r2, r3
   1300c:	d108      	bne.n	13020 <AddModifyRecordEndWithCkecksum+0x1c4>
   1300e:	f107 0308 	add.w	r3, r7, #8
   13012:	4618      	mov	r0, r3
   13014:	2104      	movs	r1, #4
   13016:	2201      	movs	r2, #1
   13018:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   1301a:	f004 febd 	bl	17d98 <FS_write>
   1301e:	62b8      	str	r0, [r7, #40]	; 0x28
   13020:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13022:	2b01      	cmp	r3, #1
   13024:	d107      	bne.n	13036 <AddModifyRecordEndWithCkecksum+0x1da>
   13026:	68bb      	ldr	r3, [r7, #8]
   13028:	68f8      	ldr	r0, [r7, #12]
   1302a:	4619      	mov	r1, r3
   1302c:	2201      	movs	r2, #1
   1302e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   13030:	f004 feb2 	bl	17d98 <FS_write>
   13034:	62b8      	str	r0, [r7, #40]	; 0x28
   13036:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13038:	2b01      	cmp	r3, #1
   1303a:	d007      	beq.n	1304c <AddModifyRecordEndWithCkecksum+0x1f0>
   1303c:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1303e:	2b00      	cmp	r3, #0
   13040:	f040 80e2 	bne.w	13208 <AddModifyRecordEndWithCkecksum+0x3ac>
   13044:	68bb      	ldr	r3, [r7, #8]
   13046:	2b00      	cmp	r3, #0
   13048:	f040 80de 	bne.w	13208 <AddModifyRecordEndWithCkecksum+0x3ac>
   1304c:	f107 0344 	add.w	r3, r7, #68	; 0x44
   13050:	4618      	mov	r0, r3
   13052:	f003 fe6b 	bl	16d2c <md5_init>
   13056:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   13058:	f1a3 0210 	sub.w	r2, r3, #16
   1305c:	6a3b      	ldr	r3, [r7, #32]
   1305e:	1ad3      	subs	r3, r2, r3
   13060:	f107 0244 	add.w	r2, r7, #68	; 0x44
   13064:	4610      	mov	r0, r2
   13066:	6bb9      	ldr	r1, [r7, #56]	; 0x38
   13068:	461a      	mov	r2, r3
   1306a:	f003 fe99 	bl	16da0 <md5_append>
   1306e:	f107 0244 	add.w	r2, r7, #68	; 0x44
   13072:	f107 0308 	add.w	r3, r7, #8
   13076:	4610      	mov	r0, r2
   13078:	4619      	mov	r1, r3
   1307a:	2204      	movs	r2, #4
   1307c:	f003 fe90 	bl	16da0 <md5_append>
   13080:	68bb      	ldr	r3, [r7, #8]
   13082:	f107 0244 	add.w	r2, r7, #68	; 0x44
   13086:	4610      	mov	r0, r2
   13088:	68f9      	ldr	r1, [r7, #12]
   1308a:	461a      	mov	r2, r3
   1308c:	f003 fe88 	bl	16da0 <md5_append>
   13090:	f107 0244 	add.w	r2, r7, #68	; 0x44
   13094:	f107 039c 	add.w	r3, r7, #156	; 0x9c
   13098:	4610      	mov	r0, r2
   1309a:	4619      	mov	r1, r3
   1309c:	f003 ff0c 	bl	16eb8 <md5_finish>
   130a0:	f107 039c 	add.w	r3, r7, #156	; 0x9c
   130a4:	4618      	mov	r0, r3
   130a6:	2110      	movs	r1, #16
   130a8:	2201      	movs	r2, #1
   130aa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   130ac:	f004 fe74 	bl	17d98 <FS_write>
   130b0:	62b8      	str	r0, [r7, #40]	; 0x28
   130b2:	6b38      	ldr	r0, [r7, #48]	; 0x30
   130b4:	f004 fc92 	bl	179dc <FS_close>
   130b8:	2300      	movs	r3, #0
   130ba:	633b      	str	r3, [r7, #48]	; 0x30
   130bc:	f107 03ac 	add.w	r3, r7, #172	; 0xac
   130c0:	4618      	mov	r0, r3
   130c2:	f004 fe11 	bl	17ce8 <FS_unlink>
   130c6:	6b78      	ldr	r0, [r7, #52]	; 0x34
   130c8:	f004 fc88 	bl	179dc <FS_close>
   130cc:	2300      	movs	r3, #0
   130ce:	637b      	str	r3, [r7, #52]	; 0x34
   130d0:	f107 02d0 	add.w	r2, r7, #208	; 0xd0
   130d4:	f107 03ac 	add.w	r3, r7, #172	; 0xac
   130d8:	4610      	mov	r0, r2
   130da:	4619      	mov	r1, r3
   130dc:	f004 fdb0 	bl	17c40 <FS_rename>
   130e0:	6438      	str	r0, [r7, #64]	; 0x40
   130e2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   130e4:	2b02      	cmp	r3, #2
   130e6:	f040 808f 	bne.w	13208 <AddModifyRecordEndWithCkecksum+0x3ac>
   130ea:	6abb      	ldr	r3, [r7, #40]	; 0x28
   130ec:	2b01      	cmp	r3, #1
   130ee:	f040 808b 	bne.w	13208 <AddModifyRecordEndWithCkecksum+0x3ac>
   130f2:	230a      	movs	r3, #10
   130f4:	627b      	str	r3, [r7, #36]	; 0x24
   130f6:	e087      	b.n	13208 <AddModifyRecordEndWithCkecksum+0x3ac>
   130f8:	683b      	ldr	r3, [r7, #0]
   130fa:	2b01      	cmp	r3, #1
   130fc:	d102      	bne.n	13104 <AddModifyRecordEndWithCkecksum+0x2a8>
   130fe:	68bb      	ldr	r3, [r7, #8]
   13100:	623b      	str	r3, [r7, #32]
   13102:	e001      	b.n	13108 <AddModifyRecordEndWithCkecksum+0x2ac>
   13104:	2300      	movs	r3, #0
   13106:	623b      	str	r3, [r7, #32]
   13108:	6a3b      	ldr	r3, [r7, #32]
   1310a:	2b00      	cmp	r3, #0
   1310c:	db7c      	blt.n	13208 <AddModifyRecordEndWithCkecksum+0x3ac>
   1310e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   13110:	f1a3 0210 	sub.w	r2, r3, #16
   13114:	6a3b      	ldr	r3, [r7, #32]
   13116:	1ad3      	subs	r3, r2, r3
   13118:	2b00      	cmp	r3, #0
   1311a:	db75      	blt.n	13208 <AddModifyRecordEndWithCkecksum+0x3ac>
   1311c:	68bb      	ldr	r3, [r7, #8]
   1311e:	2b00      	cmp	r3, #0
   13120:	db72      	blt.n	13208 <AddModifyRecordEndWithCkecksum+0x3ac>
   13122:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   13124:	f1a3 0210 	sub.w	r2, r3, #16
   13128:	6a3b      	ldr	r3, [r7, #32]
   1312a:	1ad3      	subs	r3, r2, r3
   1312c:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   1312e:	4619      	mov	r1, r3
   13130:	2201      	movs	r2, #1
   13132:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   13134:	f004 fe30 	bl	17d98 <FS_write>
   13138:	62b8      	str	r0, [r7, #40]	; 0x28
   1313a:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1313c:	2b01      	cmp	r3, #1
   1313e:	d008      	beq.n	13152 <AddModifyRecordEndWithCkecksum+0x2f6>
   13140:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13142:	2b00      	cmp	r3, #0
   13144:	d10d      	bne.n	13162 <AddModifyRecordEndWithCkecksum+0x306>
   13146:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   13148:	f1a3 0210 	sub.w	r2, r3, #16
   1314c:	6a3b      	ldr	r3, [r7, #32]
   1314e:	429a      	cmp	r2, r3
   13150:	d107      	bne.n	13162 <AddModifyRecordEndWithCkecksum+0x306>
   13152:	68bb      	ldr	r3, [r7, #8]
   13154:	68f8      	ldr	r0, [r7, #12]
   13156:	4619      	mov	r1, r3
   13158:	2201      	movs	r2, #1
   1315a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   1315c:	f004 fe1c 	bl	17d98 <FS_write>
   13160:	62b8      	str	r0, [r7, #40]	; 0x28
   13162:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13164:	2b01      	cmp	r3, #1
   13166:	d005      	beq.n	13174 <AddModifyRecordEndWithCkecksum+0x318>
   13168:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1316a:	2b00      	cmp	r3, #0
   1316c:	d14c      	bne.n	13208 <AddModifyRecordEndWithCkecksum+0x3ac>
   1316e:	68bb      	ldr	r3, [r7, #8]
   13170:	2b00      	cmp	r3, #0
   13172:	d149      	bne.n	13208 <AddModifyRecordEndWithCkecksum+0x3ac>
   13174:	f107 0344 	add.w	r3, r7, #68	; 0x44
   13178:	4618      	mov	r0, r3
   1317a:	f003 fdd7 	bl	16d2c <md5_init>
   1317e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   13180:	f1a3 0210 	sub.w	r2, r3, #16
   13184:	6a3b      	ldr	r3, [r7, #32]
   13186:	1ad3      	subs	r3, r2, r3
   13188:	f107 0244 	add.w	r2, r7, #68	; 0x44
   1318c:	4610      	mov	r0, r2
   1318e:	6bb9      	ldr	r1, [r7, #56]	; 0x38
   13190:	461a      	mov	r2, r3
   13192:	f003 fe05 	bl	16da0 <md5_append>
   13196:	68bb      	ldr	r3, [r7, #8]
   13198:	f107 0244 	add.w	r2, r7, #68	; 0x44
   1319c:	4610      	mov	r0, r2
   1319e:	68f9      	ldr	r1, [r7, #12]
   131a0:	461a      	mov	r2, r3
   131a2:	f003 fdfd 	bl	16da0 <md5_append>
   131a6:	f107 0244 	add.w	r2, r7, #68	; 0x44
   131aa:	f107 039c 	add.w	r3, r7, #156	; 0x9c
   131ae:	4610      	mov	r0, r2
   131b0:	4619      	mov	r1, r3
   131b2:	f003 fe81 	bl	16eb8 <md5_finish>
   131b6:	f107 039c 	add.w	r3, r7, #156	; 0x9c
   131ba:	4618      	mov	r0, r3
   131bc:	2110      	movs	r1, #16
   131be:	2201      	movs	r2, #1
   131c0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   131c2:	f004 fde9 	bl	17d98 <FS_write>
   131c6:	62b8      	str	r0, [r7, #40]	; 0x28
   131c8:	6b38      	ldr	r0, [r7, #48]	; 0x30
   131ca:	f004 fc07 	bl	179dc <FS_close>
   131ce:	2300      	movs	r3, #0
   131d0:	633b      	str	r3, [r7, #48]	; 0x30
   131d2:	f107 03ac 	add.w	r3, r7, #172	; 0xac
   131d6:	4618      	mov	r0, r3
   131d8:	f004 fd86 	bl	17ce8 <FS_unlink>
   131dc:	6b78      	ldr	r0, [r7, #52]	; 0x34
   131de:	f004 fbfd 	bl	179dc <FS_close>
   131e2:	2300      	movs	r3, #0
   131e4:	637b      	str	r3, [r7, #52]	; 0x34
   131e6:	f107 02d0 	add.w	r2, r7, #208	; 0xd0
   131ea:	f107 03ac 	add.w	r3, r7, #172	; 0xac
   131ee:	4610      	mov	r0, r2
   131f0:	4619      	mov	r1, r3
   131f2:	f004 fd25 	bl	17c40 <FS_rename>
   131f6:	6438      	str	r0, [r7, #64]	; 0x40
   131f8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   131fa:	2b02      	cmp	r3, #2
   131fc:	d104      	bne.n	13208 <AddModifyRecordEndWithCkecksum+0x3ac>
   131fe:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13200:	2b01      	cmp	r3, #1
   13202:	d101      	bne.n	13208 <AddModifyRecordEndWithCkecksum+0x3ac>
   13204:	230a      	movs	r3, #10
   13206:	627b      	str	r3, [r7, #36]	; 0x24
   13208:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   1320a:	2b00      	cmp	r3, #0
   1320c:	d007      	beq.n	1321e <AddModifyRecordEndWithCkecksum+0x3c2>
   1320e:	6b78      	ldr	r0, [r7, #52]	; 0x34
   13210:	f004 fbe4 	bl	179dc <FS_close>
   13214:	2300      	movs	r3, #0
   13216:	637b      	str	r3, [r7, #52]	; 0x34
   13218:	e001      	b.n	1321e <AddModifyRecordEndWithCkecksum+0x3c2>
   1321a:	2318      	movs	r3, #24
   1321c:	627b      	str	r3, [r7, #36]	; 0x24
   1321e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   13220:	2b00      	cmp	r3, #0
   13222:	d004      	beq.n	1322e <AddModifyRecordEndWithCkecksum+0x3d2>
   13224:	6b38      	ldr	r0, [r7, #48]	; 0x30
   13226:	f004 fbd9 	bl	179dc <FS_close>
   1322a:	2300      	movs	r3, #0
   1322c:	633b      	str	r3, [r7, #48]	; 0x30
   1322e:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   13230:	f004 fe66 	bl	17f00 <PageFree>
   13234:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   13236:	4618      	mov	r0, r3
   13238:	4b07      	ldr	r3, [pc, #28]	; (13258 <AddModifyRecordEndWithCkecksum+0x3fc>)
   1323a:	58e3      	ldr	r3, [r4, r3]
   1323c:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
   13240:	681b      	ldr	r3, [r3, #0]
   13242:	429a      	cmp	r2, r3
   13244:	d001      	beq.n	1324a <AddModifyRecordEndWithCkecksum+0x3ee>
   13246:	f7f5 fe53 	bl	8ef0 <__stack_chk_fail>
   1324a:	f107 07fc 	add.w	r7, r7, #252	; 0xfc
   1324e:	46bd      	mov	sp, r7
   13250:	bd90      	pop	{r4, r7, pc}
   13252:	bf00      	nop
   13254:	0001129c 	.word	0x0001129c
   13258:	000000a0 	.word	0x000000a0
   1325c:	000085f8 	.word	0x000085f8
   13260:	000085fc 	.word	0x000085fc
   13264:	000085ac 	.word	0x000085ac
   13268:	000085c0 	.word	0x000085c0
   1326c:	0000858e 	.word	0x0000858e
   13270:	000000b4 	.word	0x000000b4

00013274 <DeleteRecordBegin>:
   13274:	b590      	push	{r4, r7, lr}
   13276:	b0a1      	sub	sp, #132	; 0x84
   13278:	af00      	add	r7, sp, #0
   1327a:	60f8      	str	r0, [r7, #12]
   1327c:	60b9      	str	r1, [r7, #8]
   1327e:	607a      	str	r2, [r7, #4]
   13280:	603b      	str	r3, [r7, #0]
   13282:	4c91      	ldr	r4, [pc, #580]	; (134c8 <DeleteRecordBegin+0x254>)
   13284:	447c      	add	r4, pc
   13286:	4b91      	ldr	r3, [pc, #580]	; (134cc <DeleteRecordBegin+0x258>)
   13288:	58e3      	ldr	r3, [r4, r3]
   1328a:	681b      	ldr	r3, [r3, #0]
   1328c:	67fb      	str	r3, [r7, #124]	; 0x7c
   1328e:	231a      	movs	r3, #26
   13290:	61bb      	str	r3, [r7, #24]
   13292:	2300      	movs	r3, #0
   13294:	627b      	str	r3, [r7, #36]	; 0x24
   13296:	2300      	movs	r3, #0
   13298:	61fb      	str	r3, [r7, #28]
   1329a:	2300      	movs	r3, #0
   1329c:	623b      	str	r3, [r7, #32]
   1329e:	f107 0334 	add.w	r3, r7, #52	; 0x34
   132a2:	4618      	mov	r0, r3
   132a4:	4b8a      	ldr	r3, [pc, #552]	; (134d0 <DeleteRecordBegin+0x25c>)
   132a6:	447b      	add	r3, pc
   132a8:	4619      	mov	r1, r3
   132aa:	68fa      	ldr	r2, [r7, #12]
   132ac:	68bb      	ldr	r3, [r7, #8]
   132ae:	f7f5 ecae 	blx	8c0c <_init+0x13c>
   132b2:	f107 0334 	add.w	r3, r7, #52	; 0x34
   132b6:	4618      	mov	r0, r3
   132b8:	4b86      	ldr	r3, [pc, #536]	; (134d4 <DeleteRecordBegin+0x260>)
   132ba:	447b      	add	r3, pc
   132bc:	4619      	mov	r1, r3
   132be:	f004 fc69 	bl	17b94 <FS_open>
   132c2:	61f8      	str	r0, [r7, #28]
   132c4:	69fb      	ldr	r3, [r7, #28]
   132c6:	2b00      	cmp	r3, #0
   132c8:	d102      	bne.n	132d0 <DeleteRecordBegin+0x5c>
   132ca:	2313      	movs	r3, #19
   132cc:	61bb      	str	r3, [r7, #24]
   132ce:	e0ec      	b.n	134aa <DeleteRecordBegin+0x236>
   132d0:	69f8      	ldr	r0, [r7, #28]
   132d2:	f004 fc09 	bl	17ae8 <FS_length>
   132d6:	62b8      	str	r0, [r7, #40]	; 0x28
   132d8:	6abb      	ldr	r3, [r7, #40]	; 0x28
   132da:	4618      	mov	r0, r3
   132dc:	f004 fde6 	bl	17eac <PageAlloc>
   132e0:	6278      	str	r0, [r7, #36]	; 0x24
   132e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   132e4:	2b00      	cmp	r3, #0
   132e6:	f000 80d3 	beq.w	13490 <DeleteRecordBegin+0x21c>
   132ea:	f107 0358 	add.w	r3, r7, #88	; 0x58
   132ee:	4618      	mov	r0, r3
   132f0:	4b79      	ldr	r3, [pc, #484]	; (134d8 <DeleteRecordBegin+0x264>)
   132f2:	447b      	add	r3, pc
   132f4:	4619      	mov	r1, r3
   132f6:	68fa      	ldr	r2, [r7, #12]
   132f8:	4b78      	ldr	r3, [pc, #480]	; (134dc <DeleteRecordBegin+0x268>)
   132fa:	447b      	add	r3, pc
   132fc:	f7f5 ec86 	blx	8c0c <_init+0x13c>
   13300:	f107 0358 	add.w	r3, r7, #88	; 0x58
   13304:	4618      	mov	r0, r3
   13306:	f004 fbc3 	bl	17a90 <FS_exist>
   1330a:	62f8      	str	r0, [r7, #44]	; 0x2c
   1330c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   1330e:	2b02      	cmp	r3, #2
   13310:	d104      	bne.n	1331c <DeleteRecordBegin+0xa8>
   13312:	f107 0358 	add.w	r3, r7, #88	; 0x58
   13316:	4618      	mov	r0, r3
   13318:	f004 fce6 	bl	17ce8 <FS_unlink>
   1331c:	f107 0358 	add.w	r3, r7, #88	; 0x58
   13320:	4618      	mov	r0, r3
   13322:	4b6f      	ldr	r3, [pc, #444]	; (134e0 <DeleteRecordBegin+0x26c>)
   13324:	447b      	add	r3, pc
   13326:	4619      	mov	r1, r3
   13328:	f004 fc34 	bl	17b94 <FS_open>
   1332c:	6238      	str	r0, [r7, #32]
   1332e:	69f8      	ldr	r0, [r7, #28]
   13330:	2100      	movs	r1, #0
   13332:	2200      	movs	r2, #0
   13334:	f004 fcae 	bl	17c94 <FS_seek>
   13338:	62f8      	str	r0, [r7, #44]	; 0x2c
   1333a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   1333c:	2b02      	cmp	r3, #2
   1333e:	f040 809e 	bne.w	1347e <DeleteRecordBegin+0x20a>
   13342:	6a78      	ldr	r0, [r7, #36]	; 0x24
   13344:	6ab9      	ldr	r1, [r7, #40]	; 0x28
   13346:	2201      	movs	r2, #1
   13348:	69fb      	ldr	r3, [r7, #28]
   1334a:	f004 fc4d 	bl	17be8 <FS_read>
   1334e:	6338      	str	r0, [r7, #48]	; 0x30
   13350:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   13352:	2b01      	cmp	r3, #1
   13354:	d007      	beq.n	13366 <DeleteRecordBegin+0xf2>
   13356:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   13358:	2b00      	cmp	r3, #0
   1335a:	f040 8090 	bne.w	1347e <DeleteRecordBegin+0x20a>
   1335e:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13360:	2b00      	cmp	r3, #0
   13362:	f040 808c 	bne.w	1347e <DeleteRecordBegin+0x20a>
   13366:	4b5f      	ldr	r3, [pc, #380]	; (134e4 <DeleteRecordBegin+0x270>)
   13368:	58e3      	ldr	r3, [r4, r3]
   1336a:	461a      	mov	r2, r3
   1336c:	683b      	ldr	r3, [r7, #0]
   1336e:	212c      	movs	r1, #44	; 0x2c
   13370:	fb01 f303 	mul.w	r3, r1, r3
   13374:	18d3      	adds	r3, r2, r3
   13376:	3328      	adds	r3, #40	; 0x28
   13378:	681b      	ldr	r3, [r3, #0]
   1337a:	2b01      	cmp	r3, #1
   1337c:	d142      	bne.n	13404 <DeleteRecordBegin+0x190>
   1337e:	f107 0314 	add.w	r3, r7, #20
   13382:	4618      	mov	r0, r3
   13384:	6a79      	ldr	r1, [r7, #36]	; 0x24
   13386:	2204      	movs	r2, #4
   13388:	f7f5 ec22 	blx	8bd0 <_init+0x100>
   1338c:	697b      	ldr	r3, [r7, #20]
   1338e:	3304      	adds	r3, #4
   13390:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   13392:	18d2      	adds	r2, r2, r3
   13394:	697b      	ldr	r3, [r7, #20]
   13396:	6ab9      	ldr	r1, [r7, #40]	; 0x28
   13398:	1acb      	subs	r3, r1, r3
   1339a:	3b04      	subs	r3, #4
   1339c:	4610      	mov	r0, r2
   1339e:	4619      	mov	r1, r3
   133a0:	2201      	movs	r2, #1
   133a2:	6a3b      	ldr	r3, [r7, #32]
   133a4:	f004 fcf8 	bl	17d98 <FS_write>
   133a8:	6338      	str	r0, [r7, #48]	; 0x30
   133aa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   133ac:	2b01      	cmp	r3, #1
   133ae:	d007      	beq.n	133c0 <DeleteRecordBegin+0x14c>
   133b0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   133b2:	2b00      	cmp	r3, #0
   133b4:	d163      	bne.n	1347e <DeleteRecordBegin+0x20a>
   133b6:	697b      	ldr	r3, [r7, #20]
   133b8:	6aba      	ldr	r2, [r7, #40]	; 0x28
   133ba:	1ad3      	subs	r3, r2, r3
   133bc:	2b04      	cmp	r3, #4
   133be:	d15e      	bne.n	1347e <DeleteRecordBegin+0x20a>
   133c0:	69f8      	ldr	r0, [r7, #28]
   133c2:	f004 fb0b 	bl	179dc <FS_close>
   133c6:	2300      	movs	r3, #0
   133c8:	61fb      	str	r3, [r7, #28]
   133ca:	f107 0334 	add.w	r3, r7, #52	; 0x34
   133ce:	4618      	mov	r0, r3
   133d0:	f004 fc8a 	bl	17ce8 <FS_unlink>
   133d4:	62f8      	str	r0, [r7, #44]	; 0x2c
   133d6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   133d8:	2b02      	cmp	r3, #2
   133da:	d150      	bne.n	1347e <DeleteRecordBegin+0x20a>
   133dc:	6a38      	ldr	r0, [r7, #32]
   133de:	f004 fafd 	bl	179dc <FS_close>
   133e2:	2300      	movs	r3, #0
   133e4:	623b      	str	r3, [r7, #32]
   133e6:	f107 0258 	add.w	r2, r7, #88	; 0x58
   133ea:	f107 0334 	add.w	r3, r7, #52	; 0x34
   133ee:	4610      	mov	r0, r2
   133f0:	4619      	mov	r1, r3
   133f2:	f004 fc25 	bl	17c40 <FS_rename>
   133f6:	62f8      	str	r0, [r7, #44]	; 0x2c
   133f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   133fa:	2b02      	cmp	r3, #2
   133fc:	d13f      	bne.n	1347e <DeleteRecordBegin+0x20a>
   133fe:	230a      	movs	r3, #10
   13400:	61bb      	str	r3, [r7, #24]
   13402:	e03c      	b.n	1347e <DeleteRecordBegin+0x20a>
   13404:	6aba      	ldr	r2, [r7, #40]	; 0x28
   13406:	687b      	ldr	r3, [r7, #4]
   13408:	1ad3      	subs	r3, r2, r3
   1340a:	2b00      	cmp	r3, #0
   1340c:	db37      	blt.n	1347e <DeleteRecordBegin+0x20a>
   1340e:	687b      	ldr	r3, [r7, #4]
   13410:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   13412:	18d2      	adds	r2, r2, r3
   13414:	6ab9      	ldr	r1, [r7, #40]	; 0x28
   13416:	687b      	ldr	r3, [r7, #4]
   13418:	1acb      	subs	r3, r1, r3
   1341a:	4610      	mov	r0, r2
   1341c:	4619      	mov	r1, r3
   1341e:	2201      	movs	r2, #1
   13420:	6a3b      	ldr	r3, [r7, #32]
   13422:	f004 fcb9 	bl	17d98 <FS_write>
   13426:	6338      	str	r0, [r7, #48]	; 0x30
   13428:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   1342a:	2b01      	cmp	r3, #1
   1342c:	d006      	beq.n	1343c <DeleteRecordBegin+0x1c8>
   1342e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   13430:	2b00      	cmp	r3, #0
   13432:	d124      	bne.n	1347e <DeleteRecordBegin+0x20a>
   13434:	6aba      	ldr	r2, [r7, #40]	; 0x28
   13436:	687b      	ldr	r3, [r7, #4]
   13438:	429a      	cmp	r2, r3
   1343a:	d120      	bne.n	1347e <DeleteRecordBegin+0x20a>
   1343c:	69f8      	ldr	r0, [r7, #28]
   1343e:	f004 facd 	bl	179dc <FS_close>
   13442:	2300      	movs	r3, #0
   13444:	61fb      	str	r3, [r7, #28]
   13446:	f107 0334 	add.w	r3, r7, #52	; 0x34
   1344a:	4618      	mov	r0, r3
   1344c:	f004 fc4c 	bl	17ce8 <FS_unlink>
   13450:	62f8      	str	r0, [r7, #44]	; 0x2c
   13452:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   13454:	2b02      	cmp	r3, #2
   13456:	d112      	bne.n	1347e <DeleteRecordBegin+0x20a>
   13458:	6a38      	ldr	r0, [r7, #32]
   1345a:	f004 fabf 	bl	179dc <FS_close>
   1345e:	2300      	movs	r3, #0
   13460:	623b      	str	r3, [r7, #32]
   13462:	f107 0258 	add.w	r2, r7, #88	; 0x58
   13466:	f107 0334 	add.w	r3, r7, #52	; 0x34
   1346a:	4610      	mov	r0, r2
   1346c:	4619      	mov	r1, r3
   1346e:	f004 fbe7 	bl	17c40 <FS_rename>
   13472:	62f8      	str	r0, [r7, #44]	; 0x2c
   13474:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   13476:	2b02      	cmp	r3, #2
   13478:	d101      	bne.n	1347e <DeleteRecordBegin+0x20a>
   1347a:	230a      	movs	r3, #10
   1347c:	61bb      	str	r3, [r7, #24]
   1347e:	6a3b      	ldr	r3, [r7, #32]
   13480:	2b00      	cmp	r3, #0
   13482:	d007      	beq.n	13494 <DeleteRecordBegin+0x220>
   13484:	6a38      	ldr	r0, [r7, #32]
   13486:	f004 faa9 	bl	179dc <FS_close>
   1348a:	2300      	movs	r3, #0
   1348c:	623b      	str	r3, [r7, #32]
   1348e:	e001      	b.n	13494 <DeleteRecordBegin+0x220>
   13490:	231a      	movs	r3, #26
   13492:	61bb      	str	r3, [r7, #24]
   13494:	69fb      	ldr	r3, [r7, #28]
   13496:	2b00      	cmp	r3, #0
   13498:	d004      	beq.n	134a4 <DeleteRecordBegin+0x230>
   1349a:	69f8      	ldr	r0, [r7, #28]
   1349c:	f004 fa9e 	bl	179dc <FS_close>
   134a0:	2300      	movs	r3, #0
   134a2:	61fb      	str	r3, [r7, #28]
   134a4:	6a78      	ldr	r0, [r7, #36]	; 0x24
   134a6:	f004 fd2b 	bl	17f00 <PageFree>
   134aa:	69bb      	ldr	r3, [r7, #24]
   134ac:	4618      	mov	r0, r3
   134ae:	4b07      	ldr	r3, [pc, #28]	; (134cc <DeleteRecordBegin+0x258>)
   134b0:	58e3      	ldr	r3, [r4, r3]
   134b2:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
   134b4:	681b      	ldr	r3, [r3, #0]
   134b6:	429a      	cmp	r2, r3
   134b8:	d001      	beq.n	134be <DeleteRecordBegin+0x24a>
   134ba:	f7f5 fd19 	bl	8ef0 <__stack_chk_fail>
   134be:	f107 0784 	add.w	r7, r7, #132	; 0x84
   134c2:	46bd      	mov	sp, r7
   134c4:	bd90      	pop	{r4, r7, pc}
   134c6:	bf00      	nop
   134c8:	00010e90 	.word	0x00010e90
   134cc:	000000a0 	.word	0x000000a0
   134d0:	000081f2 	.word	0x000081f2
   134d4:	000081f6 	.word	0x000081f6
   134d8:	000081a6 	.word	0x000081a6
   134dc:	000081ba 	.word	0x000081ba
   134e0:	00008188 	.word	0x00008188
   134e4:	000000b4 	.word	0x000000b4

000134e8 <DeleteRecordBeginWithCkecksum>:
   134e8:	b590      	push	{r4, r7, lr}
   134ea:	b0bb      	sub	sp, #236	; 0xec
   134ec:	af00      	add	r7, sp, #0
   134ee:	60f8      	str	r0, [r7, #12]
   134f0:	60b9      	str	r1, [r7, #8]
   134f2:	607a      	str	r2, [r7, #4]
   134f4:	603b      	str	r3, [r7, #0]
   134f6:	4cc0      	ldr	r4, [pc, #768]	; (137f8 <DeleteRecordBeginWithCkecksum+0x310>)
   134f8:	447c      	add	r4, pc
   134fa:	4bc0      	ldr	r3, [pc, #768]	; (137fc <DeleteRecordBeginWithCkecksum+0x314>)
   134fc:	58e3      	ldr	r3, [r4, r3]
   134fe:	681b      	ldr	r3, [r3, #0]
   13500:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
   13504:	231a      	movs	r3, #26
   13506:	61bb      	str	r3, [r7, #24]
   13508:	2300      	movs	r3, #0
   1350a:	627b      	str	r3, [r7, #36]	; 0x24
   1350c:	2300      	movs	r3, #0
   1350e:	61fb      	str	r3, [r7, #28]
   13510:	2300      	movs	r3, #0
   13512:	623b      	str	r3, [r7, #32]
   13514:	f107 039c 	add.w	r3, r7, #156	; 0x9c
   13518:	4618      	mov	r0, r3
   1351a:	4bb9      	ldr	r3, [pc, #740]	; (13800 <DeleteRecordBeginWithCkecksum+0x318>)
   1351c:	447b      	add	r3, pc
   1351e:	4619      	mov	r1, r3
   13520:	68fa      	ldr	r2, [r7, #12]
   13522:	68bb      	ldr	r3, [r7, #8]
   13524:	f7f5 eb72 	blx	8c0c <_init+0x13c>
   13528:	f107 039c 	add.w	r3, r7, #156	; 0x9c
   1352c:	4618      	mov	r0, r3
   1352e:	4bb5      	ldr	r3, [pc, #724]	; (13804 <DeleteRecordBeginWithCkecksum+0x31c>)
   13530:	447b      	add	r3, pc
   13532:	4619      	mov	r1, r3
   13534:	f004 fb2e 	bl	17b94 <FS_open>
   13538:	61f8      	str	r0, [r7, #28]
   1353a:	69fb      	ldr	r3, [r7, #28]
   1353c:	2b00      	cmp	r3, #0
   1353e:	d102      	bne.n	13546 <DeleteRecordBeginWithCkecksum+0x5e>
   13540:	2313      	movs	r3, #19
   13542:	61bb      	str	r3, [r7, #24]
   13544:	e149      	b.n	137da <DeleteRecordBeginWithCkecksum+0x2f2>
   13546:	69f8      	ldr	r0, [r7, #28]
   13548:	f004 face 	bl	17ae8 <FS_length>
   1354c:	62b8      	str	r0, [r7, #40]	; 0x28
   1354e:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13550:	4618      	mov	r0, r3
   13552:	f004 fcab 	bl	17eac <PageAlloc>
   13556:	6278      	str	r0, [r7, #36]	; 0x24
   13558:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1355a:	2b00      	cmp	r3, #0
   1355c:	f000 8130 	beq.w	137c0 <DeleteRecordBeginWithCkecksum+0x2d8>
   13560:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
   13564:	4618      	mov	r0, r3
   13566:	4ba8      	ldr	r3, [pc, #672]	; (13808 <DeleteRecordBeginWithCkecksum+0x320>)
   13568:	447b      	add	r3, pc
   1356a:	4619      	mov	r1, r3
   1356c:	68fa      	ldr	r2, [r7, #12]
   1356e:	4ba7      	ldr	r3, [pc, #668]	; (1380c <DeleteRecordBeginWithCkecksum+0x324>)
   13570:	447b      	add	r3, pc
   13572:	f7f5 eb4c 	blx	8c0c <_init+0x13c>
   13576:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
   1357a:	4618      	mov	r0, r3
   1357c:	f004 fa88 	bl	17a90 <FS_exist>
   13580:	62f8      	str	r0, [r7, #44]	; 0x2c
   13582:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   13584:	2b02      	cmp	r3, #2
   13586:	d104      	bne.n	13592 <DeleteRecordBeginWithCkecksum+0xaa>
   13588:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
   1358c:	4618      	mov	r0, r3
   1358e:	f004 fbab 	bl	17ce8 <FS_unlink>
   13592:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
   13596:	4618      	mov	r0, r3
   13598:	4b9d      	ldr	r3, [pc, #628]	; (13810 <DeleteRecordBeginWithCkecksum+0x328>)
   1359a:	447b      	add	r3, pc
   1359c:	4619      	mov	r1, r3
   1359e:	f004 faf9 	bl	17b94 <FS_open>
   135a2:	6238      	str	r0, [r7, #32]
   135a4:	69f8      	ldr	r0, [r7, #28]
   135a6:	2100      	movs	r1, #0
   135a8:	2200      	movs	r2, #0
   135aa:	f004 fb73 	bl	17c94 <FS_seek>
   135ae:	62f8      	str	r0, [r7, #44]	; 0x2c
   135b0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   135b2:	2b02      	cmp	r3, #2
   135b4:	f040 80fb 	bne.w	137ae <DeleteRecordBeginWithCkecksum+0x2c6>
   135b8:	6a78      	ldr	r0, [r7, #36]	; 0x24
   135ba:	6ab9      	ldr	r1, [r7, #40]	; 0x28
   135bc:	2201      	movs	r2, #1
   135be:	69fb      	ldr	r3, [r7, #28]
   135c0:	f004 fb12 	bl	17be8 <FS_read>
   135c4:	6338      	str	r0, [r7, #48]	; 0x30
   135c6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   135c8:	2b01      	cmp	r3, #1
   135ca:	d007      	beq.n	135dc <DeleteRecordBeginWithCkecksum+0xf4>
   135cc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   135ce:	2b00      	cmp	r3, #0
   135d0:	f040 80ed 	bne.w	137ae <DeleteRecordBeginWithCkecksum+0x2c6>
   135d4:	6abb      	ldr	r3, [r7, #40]	; 0x28
   135d6:	2b00      	cmp	r3, #0
   135d8:	f040 80e9 	bne.w	137ae <DeleteRecordBeginWithCkecksum+0x2c6>
   135dc:	4b8d      	ldr	r3, [pc, #564]	; (13814 <DeleteRecordBeginWithCkecksum+0x32c>)
   135de:	58e3      	ldr	r3, [r4, r3]
   135e0:	461a      	mov	r2, r3
   135e2:	683b      	ldr	r3, [r7, #0]
   135e4:	212c      	movs	r1, #44	; 0x2c
   135e6:	fb01 f303 	mul.w	r3, r1, r3
   135ea:	18d3      	adds	r3, r2, r3
   135ec:	3328      	adds	r3, #40	; 0x28
   135ee:	681b      	ldr	r3, [r3, #0]
   135f0:	2b01      	cmp	r3, #1
   135f2:	d175      	bne.n	136e0 <DeleteRecordBeginWithCkecksum+0x1f8>
   135f4:	f107 0314 	add.w	r3, r7, #20
   135f8:	4618      	mov	r0, r3
   135fa:	6a79      	ldr	r1, [r7, #36]	; 0x24
   135fc:	2204      	movs	r2, #4
   135fe:	f7f5 eae8 	blx	8bd0 <_init+0x100>
   13602:	697b      	ldr	r3, [r7, #20]
   13604:	2b00      	cmp	r3, #0
   13606:	f2c0 80d2 	blt.w	137ae <DeleteRecordBeginWithCkecksum+0x2c6>
   1360a:	697b      	ldr	r3, [r7, #20]
   1360c:	3304      	adds	r3, #4
   1360e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   13610:	18d2      	adds	r2, r2, r3
   13612:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13614:	f1a3 0110 	sub.w	r1, r3, #16
   13618:	697b      	ldr	r3, [r7, #20]
   1361a:	1acb      	subs	r3, r1, r3
   1361c:	3b04      	subs	r3, #4
   1361e:	4610      	mov	r0, r2
   13620:	4619      	mov	r1, r3
   13622:	2201      	movs	r2, #1
   13624:	6a3b      	ldr	r3, [r7, #32]
   13626:	f004 fbb7 	bl	17d98 <FS_write>
   1362a:	6338      	str	r0, [r7, #48]	; 0x30
   1362c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   1362e:	2b01      	cmp	r3, #1
   13630:	d00b      	beq.n	1364a <DeleteRecordBeginWithCkecksum+0x162>
   13632:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   13634:	2b00      	cmp	r3, #0
   13636:	f040 80ba 	bne.w	137ae <DeleteRecordBeginWithCkecksum+0x2c6>
   1363a:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1363c:	f1a3 0210 	sub.w	r2, r3, #16
   13640:	697b      	ldr	r3, [r7, #20]
   13642:	1ad3      	subs	r3, r2, r3
   13644:	2b04      	cmp	r3, #4
   13646:	f040 80b2 	bne.w	137ae <DeleteRecordBeginWithCkecksum+0x2c6>
   1364a:	f107 0334 	add.w	r3, r7, #52	; 0x34
   1364e:	4618      	mov	r0, r3
   13650:	f003 fb6c 	bl	16d2c <md5_init>
   13654:	697b      	ldr	r3, [r7, #20]
   13656:	3304      	adds	r3, #4
   13658:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   1365a:	18d2      	adds	r2, r2, r3
   1365c:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1365e:	f1a3 0110 	sub.w	r1, r3, #16
   13662:	697b      	ldr	r3, [r7, #20]
   13664:	1acb      	subs	r3, r1, r3
   13666:	3b04      	subs	r3, #4
   13668:	f107 0134 	add.w	r1, r7, #52	; 0x34
   1366c:	4608      	mov	r0, r1
   1366e:	4611      	mov	r1, r2
   13670:	461a      	mov	r2, r3
   13672:	f003 fb95 	bl	16da0 <md5_append>
   13676:	f107 0234 	add.w	r2, r7, #52	; 0x34
   1367a:	f107 038c 	add.w	r3, r7, #140	; 0x8c
   1367e:	4610      	mov	r0, r2
   13680:	4619      	mov	r1, r3
   13682:	f003 fc19 	bl	16eb8 <md5_finish>
   13686:	f107 038c 	add.w	r3, r7, #140	; 0x8c
   1368a:	4618      	mov	r0, r3
   1368c:	2110      	movs	r1, #16
   1368e:	2201      	movs	r2, #1
   13690:	6a3b      	ldr	r3, [r7, #32]
   13692:	f004 fb81 	bl	17d98 <FS_write>
   13696:	6338      	str	r0, [r7, #48]	; 0x30
   13698:	69f8      	ldr	r0, [r7, #28]
   1369a:	f004 f99f 	bl	179dc <FS_close>
   1369e:	62f8      	str	r0, [r7, #44]	; 0x2c
   136a0:	2300      	movs	r3, #0
   136a2:	61fb      	str	r3, [r7, #28]
   136a4:	f107 039c 	add.w	r3, r7, #156	; 0x9c
   136a8:	4618      	mov	r0, r3
   136aa:	f004 fb1d 	bl	17ce8 <FS_unlink>
   136ae:	62f8      	str	r0, [r7, #44]	; 0x2c
   136b0:	6a38      	ldr	r0, [r7, #32]
   136b2:	f004 f993 	bl	179dc <FS_close>
   136b6:	62f8      	str	r0, [r7, #44]	; 0x2c
   136b8:	2300      	movs	r3, #0
   136ba:	623b      	str	r3, [r7, #32]
   136bc:	f107 02c0 	add.w	r2, r7, #192	; 0xc0
   136c0:	f107 039c 	add.w	r3, r7, #156	; 0x9c
   136c4:	4610      	mov	r0, r2
   136c6:	4619      	mov	r1, r3
   136c8:	f004 faba 	bl	17c40 <FS_rename>
   136cc:	62f8      	str	r0, [r7, #44]	; 0x2c
   136ce:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   136d0:	2b02      	cmp	r3, #2
   136d2:	d16c      	bne.n	137ae <DeleteRecordBeginWithCkecksum+0x2c6>
   136d4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   136d6:	2b01      	cmp	r3, #1
   136d8:	d169      	bne.n	137ae <DeleteRecordBeginWithCkecksum+0x2c6>
   136da:	230a      	movs	r3, #10
   136dc:	61bb      	str	r3, [r7, #24]
   136de:	e066      	b.n	137ae <DeleteRecordBeginWithCkecksum+0x2c6>
   136e0:	6abb      	ldr	r3, [r7, #40]	; 0x28
   136e2:	f1a3 0210 	sub.w	r2, r3, #16
   136e6:	687b      	ldr	r3, [r7, #4]
   136e8:	1ad3      	subs	r3, r2, r3
   136ea:	2b00      	cmp	r3, #0
   136ec:	db5f      	blt.n	137ae <DeleteRecordBeginWithCkecksum+0x2c6>
   136ee:	687b      	ldr	r3, [r7, #4]
   136f0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   136f2:	18d2      	adds	r2, r2, r3
   136f4:	6abb      	ldr	r3, [r7, #40]	; 0x28
   136f6:	f1a3 0110 	sub.w	r1, r3, #16
   136fa:	687b      	ldr	r3, [r7, #4]
   136fc:	1acb      	subs	r3, r1, r3
   136fe:	4610      	mov	r0, r2
   13700:	4619      	mov	r1, r3
   13702:	2201      	movs	r2, #1
   13704:	6a3b      	ldr	r3, [r7, #32]
   13706:	f004 fb47 	bl	17d98 <FS_write>
   1370a:	6338      	str	r0, [r7, #48]	; 0x30
   1370c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   1370e:	2b01      	cmp	r3, #1
   13710:	d008      	beq.n	13724 <DeleteRecordBeginWithCkecksum+0x23c>
   13712:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   13714:	2b00      	cmp	r3, #0
   13716:	d14a      	bne.n	137ae <DeleteRecordBeginWithCkecksum+0x2c6>
   13718:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1371a:	f1a3 0210 	sub.w	r2, r3, #16
   1371e:	687b      	ldr	r3, [r7, #4]
   13720:	429a      	cmp	r2, r3
   13722:	d144      	bne.n	137ae <DeleteRecordBeginWithCkecksum+0x2c6>
   13724:	f107 0334 	add.w	r3, r7, #52	; 0x34
   13728:	4618      	mov	r0, r3
   1372a:	f003 faff 	bl	16d2c <md5_init>
   1372e:	687b      	ldr	r3, [r7, #4]
   13730:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   13732:	18d2      	adds	r2, r2, r3
   13734:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13736:	f1a3 0110 	sub.w	r1, r3, #16
   1373a:	687b      	ldr	r3, [r7, #4]
   1373c:	1acb      	subs	r3, r1, r3
   1373e:	f107 0134 	add.w	r1, r7, #52	; 0x34
   13742:	4608      	mov	r0, r1
   13744:	4611      	mov	r1, r2
   13746:	461a      	mov	r2, r3
   13748:	f003 fb2a 	bl	16da0 <md5_append>
   1374c:	f107 0234 	add.w	r2, r7, #52	; 0x34
   13750:	f107 038c 	add.w	r3, r7, #140	; 0x8c
   13754:	4610      	mov	r0, r2
   13756:	4619      	mov	r1, r3
   13758:	f003 fbae 	bl	16eb8 <md5_finish>
   1375c:	f107 038c 	add.w	r3, r7, #140	; 0x8c
   13760:	4618      	mov	r0, r3
   13762:	2110      	movs	r1, #16
   13764:	2201      	movs	r2, #1
   13766:	6a3b      	ldr	r3, [r7, #32]
   13768:	f004 fb16 	bl	17d98 <FS_write>
   1376c:	6338      	str	r0, [r7, #48]	; 0x30
   1376e:	69f8      	ldr	r0, [r7, #28]
   13770:	f004 f934 	bl	179dc <FS_close>
   13774:	2300      	movs	r3, #0
   13776:	61fb      	str	r3, [r7, #28]
   13778:	f107 039c 	add.w	r3, r7, #156	; 0x9c
   1377c:	4618      	mov	r0, r3
   1377e:	f004 fab3 	bl	17ce8 <FS_unlink>
   13782:	6a38      	ldr	r0, [r7, #32]
   13784:	f004 f92a 	bl	179dc <FS_close>
   13788:	2300      	movs	r3, #0
   1378a:	623b      	str	r3, [r7, #32]
   1378c:	f107 02c0 	add.w	r2, r7, #192	; 0xc0
   13790:	f107 039c 	add.w	r3, r7, #156	; 0x9c
   13794:	4610      	mov	r0, r2
   13796:	4619      	mov	r1, r3
   13798:	f004 fa52 	bl	17c40 <FS_rename>
   1379c:	62f8      	str	r0, [r7, #44]	; 0x2c
   1379e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   137a0:	2b02      	cmp	r3, #2
   137a2:	d104      	bne.n	137ae <DeleteRecordBeginWithCkecksum+0x2c6>
   137a4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   137a6:	2b01      	cmp	r3, #1
   137a8:	d101      	bne.n	137ae <DeleteRecordBeginWithCkecksum+0x2c6>
   137aa:	230a      	movs	r3, #10
   137ac:	61bb      	str	r3, [r7, #24]
   137ae:	6a3b      	ldr	r3, [r7, #32]
   137b0:	2b00      	cmp	r3, #0
   137b2:	d007      	beq.n	137c4 <DeleteRecordBeginWithCkecksum+0x2dc>
   137b4:	6a38      	ldr	r0, [r7, #32]
   137b6:	f004 f911 	bl	179dc <FS_close>
   137ba:	2300      	movs	r3, #0
   137bc:	623b      	str	r3, [r7, #32]
   137be:	e001      	b.n	137c4 <DeleteRecordBeginWithCkecksum+0x2dc>
   137c0:	231a      	movs	r3, #26
   137c2:	61bb      	str	r3, [r7, #24]
   137c4:	69fb      	ldr	r3, [r7, #28]
   137c6:	2b00      	cmp	r3, #0
   137c8:	d004      	beq.n	137d4 <DeleteRecordBeginWithCkecksum+0x2ec>
   137ca:	69f8      	ldr	r0, [r7, #28]
   137cc:	f004 f906 	bl	179dc <FS_close>
   137d0:	2300      	movs	r3, #0
   137d2:	61fb      	str	r3, [r7, #28]
   137d4:	6a78      	ldr	r0, [r7, #36]	; 0x24
   137d6:	f004 fb93 	bl	17f00 <PageFree>
   137da:	69bb      	ldr	r3, [r7, #24]
   137dc:	4618      	mov	r0, r3
   137de:	4b07      	ldr	r3, [pc, #28]	; (137fc <DeleteRecordBeginWithCkecksum+0x314>)
   137e0:	58e3      	ldr	r3, [r4, r3]
   137e2:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
   137e6:	681b      	ldr	r3, [r3, #0]
   137e8:	429a      	cmp	r2, r3
   137ea:	d001      	beq.n	137f0 <DeleteRecordBeginWithCkecksum+0x308>
   137ec:	f7f5 fb80 	bl	8ef0 <__stack_chk_fail>
   137f0:	f107 07ec 	add.w	r7, r7, #236	; 0xec
   137f4:	46bd      	mov	sp, r7
   137f6:	bd90      	pop	{r4, r7, pc}
   137f8:	00010c1c 	.word	0x00010c1c
   137fc:	000000a0 	.word	0x000000a0
   13800:	00007f7c 	.word	0x00007f7c
   13804:	00007f80 	.word	0x00007f80
   13808:	00007f30 	.word	0x00007f30
   1380c:	00007f44 	.word	0x00007f44
   13810:	00007f12 	.word	0x00007f12
   13814:	000000b4 	.word	0x000000b4

00013818 <DeleteRecordMiddle>:
   13818:	b590      	push	{r4, r7, lr}
   1381a:	b0a5      	sub	sp, #148	; 0x94
   1381c:	af00      	add	r7, sp, #0
   1381e:	6178      	str	r0, [r7, #20]
   13820:	6139      	str	r1, [r7, #16]
   13822:	60fa      	str	r2, [r7, #12]
   13824:	60bb      	str	r3, [r7, #8]
   13826:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
   1382a:	607b      	str	r3, [r7, #4]
   1382c:	4cc2      	ldr	r4, [pc, #776]	; (13b38 <DeleteRecordMiddle+0x320>)
   1382e:	447c      	add	r4, pc
   13830:	4bc2      	ldr	r3, [pc, #776]	; (13b3c <DeleteRecordMiddle+0x324>)
   13832:	58e3      	ldr	r3, [r4, r3]
   13834:	681b      	ldr	r3, [r3, #0]
   13836:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
   1383a:	231a      	movs	r3, #26
   1383c:	623b      	str	r3, [r7, #32]
   1383e:	2300      	movs	r3, #0
   13840:	63bb      	str	r3, [r7, #56]	; 0x38
   13842:	2300      	movs	r3, #0
   13844:	633b      	str	r3, [r7, #48]	; 0x30
   13846:	2300      	movs	r3, #0
   13848:	637b      	str	r3, [r7, #52]	; 0x34
   1384a:	f107 0344 	add.w	r3, r7, #68	; 0x44
   1384e:	4618      	mov	r0, r3
   13850:	4bbb      	ldr	r3, [pc, #748]	; (13b40 <DeleteRecordMiddle+0x328>)
   13852:	447b      	add	r3, pc
   13854:	4619      	mov	r1, r3
   13856:	697a      	ldr	r2, [r7, #20]
   13858:	693b      	ldr	r3, [r7, #16]
   1385a:	f7f5 e9d8 	blx	8c0c <_init+0x13c>
   1385e:	f107 0344 	add.w	r3, r7, #68	; 0x44
   13862:	4618      	mov	r0, r3
   13864:	4bb7      	ldr	r3, [pc, #732]	; (13b44 <DeleteRecordMiddle+0x32c>)
   13866:	447b      	add	r3, pc
   13868:	4619      	mov	r1, r3
   1386a:	f004 f993 	bl	17b94 <FS_open>
   1386e:	6338      	str	r0, [r7, #48]	; 0x30
   13870:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   13872:	2b00      	cmp	r3, #0
   13874:	d102      	bne.n	1387c <DeleteRecordMiddle+0x64>
   13876:	2313      	movs	r3, #19
   13878:	623b      	str	r3, [r7, #32]
   1387a:	e14d      	b.n	13b18 <DeleteRecordMiddle+0x300>
   1387c:	6b38      	ldr	r0, [r7, #48]	; 0x30
   1387e:	f004 f933 	bl	17ae8 <FS_length>
   13882:	63f8      	str	r0, [r7, #60]	; 0x3c
   13884:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   13886:	4618      	mov	r0, r3
   13888:	f004 fb10 	bl	17eac <PageAlloc>
   1388c:	63b8      	str	r0, [r7, #56]	; 0x38
   1388e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   13890:	2b00      	cmp	r3, #0
   13892:	f000 8134 	beq.w	13afe <DeleteRecordMiddle+0x2e6>
   13896:	f107 0368 	add.w	r3, r7, #104	; 0x68
   1389a:	4618      	mov	r0, r3
   1389c:	4baa      	ldr	r3, [pc, #680]	; (13b48 <DeleteRecordMiddle+0x330>)
   1389e:	447b      	add	r3, pc
   138a0:	4619      	mov	r1, r3
   138a2:	697a      	ldr	r2, [r7, #20]
   138a4:	4ba9      	ldr	r3, [pc, #676]	; (13b4c <DeleteRecordMiddle+0x334>)
   138a6:	447b      	add	r3, pc
   138a8:	f7f5 e9b0 	blx	8c0c <_init+0x13c>
   138ac:	f107 0368 	add.w	r3, r7, #104	; 0x68
   138b0:	4618      	mov	r0, r3
   138b2:	f004 f8ed 	bl	17a90 <FS_exist>
   138b6:	6438      	str	r0, [r7, #64]	; 0x40
   138b8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   138ba:	2b02      	cmp	r3, #2
   138bc:	d104      	bne.n	138c8 <DeleteRecordMiddle+0xb0>
   138be:	f107 0368 	add.w	r3, r7, #104	; 0x68
   138c2:	4618      	mov	r0, r3
   138c4:	f004 fa10 	bl	17ce8 <FS_unlink>
   138c8:	f107 0368 	add.w	r3, r7, #104	; 0x68
   138cc:	4618      	mov	r0, r3
   138ce:	4ba0      	ldr	r3, [pc, #640]	; (13b50 <DeleteRecordMiddle+0x338>)
   138d0:	447b      	add	r3, pc
   138d2:	4619      	mov	r1, r3
   138d4:	f004 f95e 	bl	17b94 <FS_open>
   138d8:	6378      	str	r0, [r7, #52]	; 0x34
   138da:	6b38      	ldr	r0, [r7, #48]	; 0x30
   138dc:	2100      	movs	r1, #0
   138de:	2200      	movs	r2, #0
   138e0:	f004 f9d8 	bl	17c94 <FS_seek>
   138e4:	6438      	str	r0, [r7, #64]	; 0x40
   138e6:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   138e8:	2b02      	cmp	r3, #2
   138ea:	f040 80ff 	bne.w	13aec <DeleteRecordMiddle+0x2d4>
   138ee:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   138f0:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
   138f2:	2201      	movs	r2, #1
   138f4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   138f6:	f004 f977 	bl	17be8 <FS_read>
   138fa:	6278      	str	r0, [r7, #36]	; 0x24
   138fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   138fe:	2b01      	cmp	r3, #1
   13900:	d007      	beq.n	13912 <DeleteRecordMiddle+0xfa>
   13902:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   13904:	2b00      	cmp	r3, #0
   13906:	f040 80f1 	bne.w	13aec <DeleteRecordMiddle+0x2d4>
   1390a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   1390c:	2b00      	cmp	r3, #0
   1390e:	f040 80ed 	bne.w	13aec <DeleteRecordMiddle+0x2d4>
   13912:	4b90      	ldr	r3, [pc, #576]	; (13b54 <DeleteRecordMiddle+0x33c>)
   13914:	58e3      	ldr	r3, [r4, r3]
   13916:	461a      	mov	r2, r3
   13918:	687b      	ldr	r3, [r7, #4]
   1391a:	212c      	movs	r1, #44	; 0x2c
   1391c:	fb01 f303 	mul.w	r3, r1, r3
   13920:	18d3      	adds	r3, r2, r3
   13922:	3328      	adds	r3, #40	; 0x28
   13924:	681b      	ldr	r3, [r3, #0]
   13926:	2b01      	cmp	r3, #1
   13928:	f040 8086 	bne.w	13a38 <DeleteRecordMiddle+0x220>
   1392c:	2300      	movs	r3, #0
   1392e:	62bb      	str	r3, [r7, #40]	; 0x28
   13930:	2300      	movs	r3, #0
   13932:	62fb      	str	r3, [r7, #44]	; 0x2c
   13934:	e01d      	b.n	13972 <DeleteRecordMiddle+0x15a>
   13936:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13938:	2b00      	cmp	r3, #0
   1393a:	db14      	blt.n	13966 <DeleteRecordMiddle+0x14e>
   1393c:	6aba      	ldr	r2, [r7, #40]	; 0x28
   1393e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   13940:	429a      	cmp	r2, r3
   13942:	da10      	bge.n	13966 <DeleteRecordMiddle+0x14e>
   13944:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13946:	6bba      	ldr	r2, [r7, #56]	; 0x38
   13948:	18d3      	adds	r3, r2, r3
   1394a:	f107 021c 	add.w	r2, r7, #28
   1394e:	4610      	mov	r0, r2
   13950:	4619      	mov	r1, r3
   13952:	2204      	movs	r2, #4
   13954:	f7f5 e93c 	blx	8bd0 <_init+0x100>
   13958:	69fb      	ldr	r3, [r7, #28]
   1395a:	461a      	mov	r2, r3
   1395c:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1395e:	18d3      	adds	r3, r2, r3
   13960:	3304      	adds	r3, #4
   13962:	62bb      	str	r3, [r7, #40]	; 0x28
   13964:	e002      	b.n	1396c <DeleteRecordMiddle+0x154>
   13966:	f04f 33ff 	mov.w	r3, #4294967295
   1396a:	62bb      	str	r3, [r7, #40]	; 0x28
   1396c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   1396e:	3301      	adds	r3, #1
   13970:	62fb      	str	r3, [r7, #44]	; 0x2c
   13972:	6afa      	ldr	r2, [r7, #44]	; 0x2c
   13974:	68bb      	ldr	r3, [r7, #8]
   13976:	429a      	cmp	r2, r3
   13978:	da02      	bge.n	13980 <DeleteRecordMiddle+0x168>
   1397a:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1397c:	2b00      	cmp	r3, #0
   1397e:	dada      	bge.n	13936 <DeleteRecordMiddle+0x11e>
   13980:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13982:	2b00      	cmp	r3, #0
   13984:	f2c0 80b2 	blt.w	13aec <DeleteRecordMiddle+0x2d4>
   13988:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1398a:	6bba      	ldr	r2, [r7, #56]	; 0x38
   1398c:	18d3      	adds	r3, r2, r3
   1398e:	f107 021c 	add.w	r2, r7, #28
   13992:	4610      	mov	r0, r2
   13994:	4619      	mov	r1, r3
   13996:	2204      	movs	r2, #4
   13998:	f7f5 e91a 	blx	8bd0 <_init+0x100>
   1399c:	69fb      	ldr	r3, [r7, #28]
   1399e:	2b00      	cmp	r3, #0
   139a0:	f340 80a4 	ble.w	13aec <DeleteRecordMiddle+0x2d4>
   139a4:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   139a6:	6ab9      	ldr	r1, [r7, #40]	; 0x28
   139a8:	2201      	movs	r2, #1
   139aa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   139ac:	f004 f9f4 	bl	17d98 <FS_write>
   139b0:	6278      	str	r0, [r7, #36]	; 0x24
   139b2:	6aba      	ldr	r2, [r7, #40]	; 0x28
   139b4:	69fb      	ldr	r3, [r7, #28]
   139b6:	18d3      	adds	r3, r2, r3
   139b8:	3304      	adds	r3, #4
   139ba:	6bba      	ldr	r2, [r7, #56]	; 0x38
   139bc:	18d2      	adds	r2, r2, r3
   139be:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
   139c0:	6abb      	ldr	r3, [r7, #40]	; 0x28
   139c2:	1ac9      	subs	r1, r1, r3
   139c4:	69fb      	ldr	r3, [r7, #28]
   139c6:	1acb      	subs	r3, r1, r3
   139c8:	3b04      	subs	r3, #4
   139ca:	4610      	mov	r0, r2
   139cc:	4619      	mov	r1, r3
   139ce:	2201      	movs	r2, #1
   139d0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   139d2:	f004 f9e1 	bl	17d98 <FS_write>
   139d6:	6278      	str	r0, [r7, #36]	; 0x24
   139d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   139da:	2b01      	cmp	r3, #1
   139dc:	d00a      	beq.n	139f4 <DeleteRecordMiddle+0x1dc>
   139de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   139e0:	2b00      	cmp	r3, #0
   139e2:	f040 8083 	bne.w	13aec <DeleteRecordMiddle+0x2d4>
   139e6:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
   139e8:	6abb      	ldr	r3, [r7, #40]	; 0x28
   139ea:	1ad2      	subs	r2, r2, r3
   139ec:	69fb      	ldr	r3, [r7, #28]
   139ee:	1ad3      	subs	r3, r2, r3
   139f0:	2b04      	cmp	r3, #4
   139f2:	d17b      	bne.n	13aec <DeleteRecordMiddle+0x2d4>
   139f4:	6b38      	ldr	r0, [r7, #48]	; 0x30
   139f6:	f003 fff1 	bl	179dc <FS_close>
   139fa:	2300      	movs	r3, #0
   139fc:	633b      	str	r3, [r7, #48]	; 0x30
   139fe:	f107 0344 	add.w	r3, r7, #68	; 0x44
   13a02:	4618      	mov	r0, r3
   13a04:	f004 f970 	bl	17ce8 <FS_unlink>
   13a08:	6438      	str	r0, [r7, #64]	; 0x40
   13a0a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   13a0c:	2b02      	cmp	r3, #2
   13a0e:	d16d      	bne.n	13aec <DeleteRecordMiddle+0x2d4>
   13a10:	6b78      	ldr	r0, [r7, #52]	; 0x34
   13a12:	f003 ffe3 	bl	179dc <FS_close>
   13a16:	2300      	movs	r3, #0
   13a18:	637b      	str	r3, [r7, #52]	; 0x34
   13a1a:	f107 0268 	add.w	r2, r7, #104	; 0x68
   13a1e:	f107 0344 	add.w	r3, r7, #68	; 0x44
   13a22:	4610      	mov	r0, r2
   13a24:	4619      	mov	r1, r3
   13a26:	f004 f90b 	bl	17c40 <FS_rename>
   13a2a:	6438      	str	r0, [r7, #64]	; 0x40
   13a2c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   13a2e:	2b02      	cmp	r3, #2
   13a30:	d15c      	bne.n	13aec <DeleteRecordMiddle+0x2d4>
   13a32:	230a      	movs	r3, #10
   13a34:	623b      	str	r3, [r7, #32]
   13a36:	e059      	b.n	13aec <DeleteRecordMiddle+0x2d4>
   13a38:	68bb      	ldr	r3, [r7, #8]
   13a3a:	68fa      	ldr	r2, [r7, #12]
   13a3c:	fb02 f303 	mul.w	r3, r2, r3
   13a40:	62bb      	str	r3, [r7, #40]	; 0x28
   13a42:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
   13a44:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13a46:	1ad2      	subs	r2, r2, r3
   13a48:	68fb      	ldr	r3, [r7, #12]
   13a4a:	1ad3      	subs	r3, r2, r3
   13a4c:	2b00      	cmp	r3, #0
   13a4e:	db4d      	blt.n	13aec <DeleteRecordMiddle+0x2d4>
   13a50:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   13a52:	6ab9      	ldr	r1, [r7, #40]	; 0x28
   13a54:	2201      	movs	r2, #1
   13a56:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   13a58:	f004 f99e 	bl	17d98 <FS_write>
   13a5c:	6278      	str	r0, [r7, #36]	; 0x24
   13a5e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   13a60:	2b01      	cmp	r3, #1
   13a62:	d005      	beq.n	13a70 <DeleteRecordMiddle+0x258>
   13a64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   13a66:	2b00      	cmp	r3, #0
   13a68:	d113      	bne.n	13a92 <DeleteRecordMiddle+0x27a>
   13a6a:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13a6c:	2b00      	cmp	r3, #0
   13a6e:	d110      	bne.n	13a92 <DeleteRecordMiddle+0x27a>
   13a70:	6aba      	ldr	r2, [r7, #40]	; 0x28
   13a72:	68fb      	ldr	r3, [r7, #12]
   13a74:	18d3      	adds	r3, r2, r3
   13a76:	6bba      	ldr	r2, [r7, #56]	; 0x38
   13a78:	18d2      	adds	r2, r2, r3
   13a7a:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
   13a7c:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13a7e:	1ac9      	subs	r1, r1, r3
   13a80:	68fb      	ldr	r3, [r7, #12]
   13a82:	1acb      	subs	r3, r1, r3
   13a84:	4610      	mov	r0, r2
   13a86:	4619      	mov	r1, r3
   13a88:	2201      	movs	r2, #1
   13a8a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   13a8c:	f004 f984 	bl	17d98 <FS_write>
   13a90:	6278      	str	r0, [r7, #36]	; 0x24
   13a92:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   13a94:	2b01      	cmp	r3, #1
   13a96:	d008      	beq.n	13aaa <DeleteRecordMiddle+0x292>
   13a98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   13a9a:	2b00      	cmp	r3, #0
   13a9c:	d126      	bne.n	13aec <DeleteRecordMiddle+0x2d4>
   13a9e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
   13aa0:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13aa2:	1ad2      	subs	r2, r2, r3
   13aa4:	68fb      	ldr	r3, [r7, #12]
   13aa6:	429a      	cmp	r2, r3
   13aa8:	d120      	bne.n	13aec <DeleteRecordMiddle+0x2d4>
   13aaa:	6b38      	ldr	r0, [r7, #48]	; 0x30
   13aac:	f003 ff96 	bl	179dc <FS_close>
   13ab0:	2300      	movs	r3, #0
   13ab2:	633b      	str	r3, [r7, #48]	; 0x30
   13ab4:	f107 0344 	add.w	r3, r7, #68	; 0x44
   13ab8:	4618      	mov	r0, r3
   13aba:	f004 f915 	bl	17ce8 <FS_unlink>
   13abe:	6438      	str	r0, [r7, #64]	; 0x40
   13ac0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   13ac2:	2b02      	cmp	r3, #2
   13ac4:	d112      	bne.n	13aec <DeleteRecordMiddle+0x2d4>
   13ac6:	6b78      	ldr	r0, [r7, #52]	; 0x34
   13ac8:	f003 ff88 	bl	179dc <FS_close>
   13acc:	2300      	movs	r3, #0
   13ace:	637b      	str	r3, [r7, #52]	; 0x34
   13ad0:	f107 0268 	add.w	r2, r7, #104	; 0x68
   13ad4:	f107 0344 	add.w	r3, r7, #68	; 0x44
   13ad8:	4610      	mov	r0, r2
   13ada:	4619      	mov	r1, r3
   13adc:	f004 f8b0 	bl	17c40 <FS_rename>
   13ae0:	6438      	str	r0, [r7, #64]	; 0x40
   13ae2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   13ae4:	2b02      	cmp	r3, #2
   13ae6:	d101      	bne.n	13aec <DeleteRecordMiddle+0x2d4>
   13ae8:	230a      	movs	r3, #10
   13aea:	623b      	str	r3, [r7, #32]
   13aec:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   13aee:	2b00      	cmp	r3, #0
   13af0:	d007      	beq.n	13b02 <DeleteRecordMiddle+0x2ea>
   13af2:	6b78      	ldr	r0, [r7, #52]	; 0x34
   13af4:	f003 ff72 	bl	179dc <FS_close>
   13af8:	2300      	movs	r3, #0
   13afa:	637b      	str	r3, [r7, #52]	; 0x34
   13afc:	e001      	b.n	13b02 <DeleteRecordMiddle+0x2ea>
   13afe:	231a      	movs	r3, #26
   13b00:	623b      	str	r3, [r7, #32]
   13b02:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   13b04:	2b00      	cmp	r3, #0
   13b06:	d004      	beq.n	13b12 <DeleteRecordMiddle+0x2fa>
   13b08:	6b38      	ldr	r0, [r7, #48]	; 0x30
   13b0a:	f003 ff67 	bl	179dc <FS_close>
   13b0e:	2300      	movs	r3, #0
   13b10:	633b      	str	r3, [r7, #48]	; 0x30
   13b12:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   13b14:	f004 f9f4 	bl	17f00 <PageFree>
   13b18:	6a3b      	ldr	r3, [r7, #32]
   13b1a:	4618      	mov	r0, r3
   13b1c:	4b07      	ldr	r3, [pc, #28]	; (13b3c <DeleteRecordMiddle+0x324>)
   13b1e:	58e3      	ldr	r3, [r4, r3]
   13b20:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
   13b24:	681b      	ldr	r3, [r3, #0]
   13b26:	429a      	cmp	r2, r3
   13b28:	d001      	beq.n	13b2e <DeleteRecordMiddle+0x316>
   13b2a:	f7f5 f9e1 	bl	8ef0 <__stack_chk_fail>
   13b2e:	f107 0794 	add.w	r7, r7, #148	; 0x94
   13b32:	46bd      	mov	sp, r7
   13b34:	bd90      	pop	{r4, r7, pc}
   13b36:	bf00      	nop
   13b38:	000108e6 	.word	0x000108e6
   13b3c:	000000a0 	.word	0x000000a0
   13b40:	00007c46 	.word	0x00007c46
   13b44:	00007c4a 	.word	0x00007c4a
   13b48:	00007bfa 	.word	0x00007bfa
   13b4c:	00007c0e 	.word	0x00007c0e
   13b50:	00007bdc 	.word	0x00007bdc
   13b54:	000000b4 	.word	0x000000b4

00013b58 <DeleteRecordMiddleWithCkecksum>:
   13b58:	b590      	push	{r4, r7, lr}
   13b5a:	b0bf      	sub	sp, #252	; 0xfc
   13b5c:	af00      	add	r7, sp, #0
   13b5e:	6178      	str	r0, [r7, #20]
   13b60:	6139      	str	r1, [r7, #16]
   13b62:	60fa      	str	r2, [r7, #12]
   13b64:	60bb      	str	r3, [r7, #8]
   13b66:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
   13b6a:	607b      	str	r3, [r7, #4]
   13b6c:	4cfd      	ldr	r4, [pc, #1012]	; (13f64 <DeleteRecordMiddleWithCkecksum+0x40c>)
   13b6e:	447c      	add	r4, pc
   13b70:	4bfd      	ldr	r3, [pc, #1012]	; (13f68 <DeleteRecordMiddleWithCkecksum+0x410>)
   13b72:	58e3      	ldr	r3, [r4, r3]
   13b74:	681b      	ldr	r3, [r3, #0]
   13b76:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
   13b7a:	231a      	movs	r3, #26
   13b7c:	623b      	str	r3, [r7, #32]
   13b7e:	2300      	movs	r3, #0
   13b80:	63bb      	str	r3, [r7, #56]	; 0x38
   13b82:	2300      	movs	r3, #0
   13b84:	633b      	str	r3, [r7, #48]	; 0x30
   13b86:	2300      	movs	r3, #0
   13b88:	637b      	str	r3, [r7, #52]	; 0x34
   13b8a:	f107 03ac 	add.w	r3, r7, #172	; 0xac
   13b8e:	4618      	mov	r0, r3
   13b90:	4bf6      	ldr	r3, [pc, #984]	; (13f6c <DeleteRecordMiddleWithCkecksum+0x414>)
   13b92:	447b      	add	r3, pc
   13b94:	4619      	mov	r1, r3
   13b96:	697a      	ldr	r2, [r7, #20]
   13b98:	693b      	ldr	r3, [r7, #16]
   13b9a:	f7f5 e838 	blx	8c0c <_init+0x13c>
   13b9e:	f107 03ac 	add.w	r3, r7, #172	; 0xac
   13ba2:	4618      	mov	r0, r3
   13ba4:	4bf2      	ldr	r3, [pc, #968]	; (13f70 <DeleteRecordMiddleWithCkecksum+0x418>)
   13ba6:	447b      	add	r3, pc
   13ba8:	4619      	mov	r1, r3
   13baa:	f003 fff3 	bl	17b94 <FS_open>
   13bae:	6338      	str	r0, [r7, #48]	; 0x30
   13bb0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   13bb2:	2b00      	cmp	r3, #0
   13bb4:	d102      	bne.n	13bbc <DeleteRecordMiddleWithCkecksum+0x64>
   13bb6:	2313      	movs	r3, #19
   13bb8:	623b      	str	r3, [r7, #32]
   13bba:	e1c4      	b.n	13f46 <DeleteRecordMiddleWithCkecksum+0x3ee>
   13bbc:	6b38      	ldr	r0, [r7, #48]	; 0x30
   13bbe:	f003 ff93 	bl	17ae8 <FS_length>
   13bc2:	63f8      	str	r0, [r7, #60]	; 0x3c
   13bc4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   13bc6:	4618      	mov	r0, r3
   13bc8:	f004 f970 	bl	17eac <PageAlloc>
   13bcc:	63b8      	str	r0, [r7, #56]	; 0x38
   13bce:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   13bd0:	2b00      	cmp	r3, #0
   13bd2:	f000 81ab 	beq.w	13f2c <DeleteRecordMiddleWithCkecksum+0x3d4>
   13bd6:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
   13bda:	4618      	mov	r0, r3
   13bdc:	4be5      	ldr	r3, [pc, #916]	; (13f74 <DeleteRecordMiddleWithCkecksum+0x41c>)
   13bde:	447b      	add	r3, pc
   13be0:	4619      	mov	r1, r3
   13be2:	697a      	ldr	r2, [r7, #20]
   13be4:	4be4      	ldr	r3, [pc, #912]	; (13f78 <DeleteRecordMiddleWithCkecksum+0x420>)
   13be6:	447b      	add	r3, pc
   13be8:	f7f5 e810 	blx	8c0c <_init+0x13c>
   13bec:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
   13bf0:	4618      	mov	r0, r3
   13bf2:	f003 ff4d 	bl	17a90 <FS_exist>
   13bf6:	6438      	str	r0, [r7, #64]	; 0x40
   13bf8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   13bfa:	2b02      	cmp	r3, #2
   13bfc:	d104      	bne.n	13c08 <DeleteRecordMiddleWithCkecksum+0xb0>
   13bfe:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
   13c02:	4618      	mov	r0, r3
   13c04:	f004 f870 	bl	17ce8 <FS_unlink>
   13c08:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
   13c0c:	4618      	mov	r0, r3
   13c0e:	4bdb      	ldr	r3, [pc, #876]	; (13f7c <DeleteRecordMiddleWithCkecksum+0x424>)
   13c10:	447b      	add	r3, pc
   13c12:	4619      	mov	r1, r3
   13c14:	f003 ffbe 	bl	17b94 <FS_open>
   13c18:	6378      	str	r0, [r7, #52]	; 0x34
   13c1a:	6b38      	ldr	r0, [r7, #48]	; 0x30
   13c1c:	2100      	movs	r1, #0
   13c1e:	2200      	movs	r2, #0
   13c20:	f004 f838 	bl	17c94 <FS_seek>
   13c24:	6438      	str	r0, [r7, #64]	; 0x40
   13c26:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   13c28:	2b02      	cmp	r3, #2
   13c2a:	f040 8176 	bne.w	13f1a <DeleteRecordMiddleWithCkecksum+0x3c2>
   13c2e:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   13c30:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
   13c32:	2201      	movs	r2, #1
   13c34:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   13c36:	f003 ffd7 	bl	17be8 <FS_read>
   13c3a:	6278      	str	r0, [r7, #36]	; 0x24
   13c3c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   13c3e:	2b01      	cmp	r3, #1
   13c40:	d007      	beq.n	13c52 <DeleteRecordMiddleWithCkecksum+0xfa>
   13c42:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   13c44:	2b00      	cmp	r3, #0
   13c46:	f040 8168 	bne.w	13f1a <DeleteRecordMiddleWithCkecksum+0x3c2>
   13c4a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   13c4c:	2b00      	cmp	r3, #0
   13c4e:	f040 8164 	bne.w	13f1a <DeleteRecordMiddleWithCkecksum+0x3c2>
   13c52:	4bcb      	ldr	r3, [pc, #812]	; (13f80 <DeleteRecordMiddleWithCkecksum+0x428>)
   13c54:	58e3      	ldr	r3, [r4, r3]
   13c56:	461a      	mov	r2, r3
   13c58:	687b      	ldr	r3, [r7, #4]
   13c5a:	212c      	movs	r1, #44	; 0x2c
   13c5c:	fb01 f303 	mul.w	r3, r1, r3
   13c60:	18d3      	adds	r3, r2, r3
   13c62:	3328      	adds	r3, #40	; 0x28
   13c64:	681b      	ldr	r3, [r3, #0]
   13c66:	2b01      	cmp	r3, #1
   13c68:	f040 80c7 	bne.w	13dfa <DeleteRecordMiddleWithCkecksum+0x2a2>
   13c6c:	2300      	movs	r3, #0
   13c6e:	62bb      	str	r3, [r7, #40]	; 0x28
   13c70:	2300      	movs	r3, #0
   13c72:	62fb      	str	r3, [r7, #44]	; 0x2c
   13c74:	e01d      	b.n	13cb2 <DeleteRecordMiddleWithCkecksum+0x15a>
   13c76:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13c78:	2b00      	cmp	r3, #0
   13c7a:	db14      	blt.n	13ca6 <DeleteRecordMiddleWithCkecksum+0x14e>
   13c7c:	6aba      	ldr	r2, [r7, #40]	; 0x28
   13c7e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   13c80:	429a      	cmp	r2, r3
   13c82:	da10      	bge.n	13ca6 <DeleteRecordMiddleWithCkecksum+0x14e>
   13c84:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13c86:	6bba      	ldr	r2, [r7, #56]	; 0x38
   13c88:	18d3      	adds	r3, r2, r3
   13c8a:	f107 021c 	add.w	r2, r7, #28
   13c8e:	4610      	mov	r0, r2
   13c90:	4619      	mov	r1, r3
   13c92:	2204      	movs	r2, #4
   13c94:	f7f4 ef9c 	blx	8bd0 <_init+0x100>
   13c98:	69fb      	ldr	r3, [r7, #28]
   13c9a:	461a      	mov	r2, r3
   13c9c:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13c9e:	18d3      	adds	r3, r2, r3
   13ca0:	3304      	adds	r3, #4
   13ca2:	62bb      	str	r3, [r7, #40]	; 0x28
   13ca4:	e002      	b.n	13cac <DeleteRecordMiddleWithCkecksum+0x154>
   13ca6:	f04f 33ff 	mov.w	r3, #4294967295
   13caa:	62bb      	str	r3, [r7, #40]	; 0x28
   13cac:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   13cae:	3301      	adds	r3, #1
   13cb0:	62fb      	str	r3, [r7, #44]	; 0x2c
   13cb2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
   13cb4:	68bb      	ldr	r3, [r7, #8]
   13cb6:	429a      	cmp	r2, r3
   13cb8:	da02      	bge.n	13cc0 <DeleteRecordMiddleWithCkecksum+0x168>
   13cba:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13cbc:	2b00      	cmp	r3, #0
   13cbe:	dada      	bge.n	13c76 <DeleteRecordMiddleWithCkecksum+0x11e>
   13cc0:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13cc2:	2b00      	cmp	r3, #0
   13cc4:	f2c0 8129 	blt.w	13f1a <DeleteRecordMiddleWithCkecksum+0x3c2>
   13cc8:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13cca:	6bba      	ldr	r2, [r7, #56]	; 0x38
   13ccc:	18d3      	adds	r3, r2, r3
   13cce:	f107 021c 	add.w	r2, r7, #28
   13cd2:	4610      	mov	r0, r2
   13cd4:	4619      	mov	r1, r3
   13cd6:	2204      	movs	r2, #4
   13cd8:	f7f4 ef7a 	blx	8bd0 <_init+0x100>
   13cdc:	69fb      	ldr	r3, [r7, #28]
   13cde:	2b00      	cmp	r3, #0
   13ce0:	f340 811b 	ble.w	13f1a <DeleteRecordMiddleWithCkecksum+0x3c2>
   13ce4:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   13ce6:	6ab9      	ldr	r1, [r7, #40]	; 0x28
   13ce8:	2201      	movs	r2, #1
   13cea:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   13cec:	f004 f854 	bl	17d98 <FS_write>
   13cf0:	6278      	str	r0, [r7, #36]	; 0x24
   13cf2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   13cf4:	2b01      	cmp	r3, #1
   13cf6:	d005      	beq.n	13d04 <DeleteRecordMiddleWithCkecksum+0x1ac>
   13cf8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   13cfa:	2b00      	cmp	r3, #0
   13cfc:	d117      	bne.n	13d2e <DeleteRecordMiddleWithCkecksum+0x1d6>
   13cfe:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13d00:	2b00      	cmp	r3, #0
   13d02:	d114      	bne.n	13d2e <DeleteRecordMiddleWithCkecksum+0x1d6>
   13d04:	6aba      	ldr	r2, [r7, #40]	; 0x28
   13d06:	69fb      	ldr	r3, [r7, #28]
   13d08:	18d3      	adds	r3, r2, r3
   13d0a:	3304      	adds	r3, #4
   13d0c:	6bba      	ldr	r2, [r7, #56]	; 0x38
   13d0e:	18d2      	adds	r2, r2, r3
   13d10:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
   13d12:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13d14:	1acb      	subs	r3, r1, r3
   13d16:	f1a3 0110 	sub.w	r1, r3, #16
   13d1a:	69fb      	ldr	r3, [r7, #28]
   13d1c:	1acb      	subs	r3, r1, r3
   13d1e:	3b04      	subs	r3, #4
   13d20:	4610      	mov	r0, r2
   13d22:	4619      	mov	r1, r3
   13d24:	2201      	movs	r2, #1
   13d26:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   13d28:	f004 f836 	bl	17d98 <FS_write>
   13d2c:	6278      	str	r0, [r7, #36]	; 0x24
   13d2e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   13d30:	2b01      	cmp	r3, #1
   13d32:	d00d      	beq.n	13d50 <DeleteRecordMiddleWithCkecksum+0x1f8>
   13d34:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   13d36:	2b00      	cmp	r3, #0
   13d38:	f040 80ef 	bne.w	13f1a <DeleteRecordMiddleWithCkecksum+0x3c2>
   13d3c:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
   13d3e:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13d40:	1ad3      	subs	r3, r2, r3
   13d42:	f1a3 0210 	sub.w	r2, r3, #16
   13d46:	69fb      	ldr	r3, [r7, #28]
   13d48:	1ad3      	subs	r3, r2, r3
   13d4a:	2b04      	cmp	r3, #4
   13d4c:	f040 80e5 	bne.w	13f1a <DeleteRecordMiddleWithCkecksum+0x3c2>
   13d50:	f107 0344 	add.w	r3, r7, #68	; 0x44
   13d54:	4618      	mov	r0, r3
   13d56:	f002 ffe9 	bl	16d2c <md5_init>
   13d5a:	f107 0344 	add.w	r3, r7, #68	; 0x44
   13d5e:	4618      	mov	r0, r3
   13d60:	6bb9      	ldr	r1, [r7, #56]	; 0x38
   13d62:	6aba      	ldr	r2, [r7, #40]	; 0x28
   13d64:	f003 f81c 	bl	16da0 <md5_append>
   13d68:	6aba      	ldr	r2, [r7, #40]	; 0x28
   13d6a:	69fb      	ldr	r3, [r7, #28]
   13d6c:	18d3      	adds	r3, r2, r3
   13d6e:	3304      	adds	r3, #4
   13d70:	6bba      	ldr	r2, [r7, #56]	; 0x38
   13d72:	18d2      	adds	r2, r2, r3
   13d74:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
   13d76:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13d78:	1acb      	subs	r3, r1, r3
   13d7a:	f1a3 0110 	sub.w	r1, r3, #16
   13d7e:	69fb      	ldr	r3, [r7, #28]
   13d80:	1acb      	subs	r3, r1, r3
   13d82:	3b04      	subs	r3, #4
   13d84:	f107 0144 	add.w	r1, r7, #68	; 0x44
   13d88:	4608      	mov	r0, r1
   13d8a:	4611      	mov	r1, r2
   13d8c:	461a      	mov	r2, r3
   13d8e:	f003 f807 	bl	16da0 <md5_append>
   13d92:	f107 0244 	add.w	r2, r7, #68	; 0x44
   13d96:	f107 039c 	add.w	r3, r7, #156	; 0x9c
   13d9a:	4610      	mov	r0, r2
   13d9c:	4619      	mov	r1, r3
   13d9e:	f003 f88b 	bl	16eb8 <md5_finish>
   13da2:	f107 039c 	add.w	r3, r7, #156	; 0x9c
   13da6:	4618      	mov	r0, r3
   13da8:	2110      	movs	r1, #16
   13daa:	2201      	movs	r2, #1
   13dac:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   13dae:	f003 fff3 	bl	17d98 <FS_write>
   13db2:	6278      	str	r0, [r7, #36]	; 0x24
   13db4:	6b38      	ldr	r0, [r7, #48]	; 0x30
   13db6:	f003 fe11 	bl	179dc <FS_close>
   13dba:	2300      	movs	r3, #0
   13dbc:	633b      	str	r3, [r7, #48]	; 0x30
   13dbe:	f107 03ac 	add.w	r3, r7, #172	; 0xac
   13dc2:	4618      	mov	r0, r3
   13dc4:	f003 ff90 	bl	17ce8 <FS_unlink>
   13dc8:	6b78      	ldr	r0, [r7, #52]	; 0x34
   13dca:	f003 fe07 	bl	179dc <FS_close>
   13dce:	2300      	movs	r3, #0
   13dd0:	637b      	str	r3, [r7, #52]	; 0x34
   13dd2:	f107 02d0 	add.w	r2, r7, #208	; 0xd0
   13dd6:	f107 03ac 	add.w	r3, r7, #172	; 0xac
   13dda:	4610      	mov	r0, r2
   13ddc:	4619      	mov	r1, r3
   13dde:	f003 ff2f 	bl	17c40 <FS_rename>
   13de2:	6438      	str	r0, [r7, #64]	; 0x40
   13de4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   13de6:	2b02      	cmp	r3, #2
   13de8:	f040 8097 	bne.w	13f1a <DeleteRecordMiddleWithCkecksum+0x3c2>
   13dec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   13dee:	2b01      	cmp	r3, #1
   13df0:	f040 8093 	bne.w	13f1a <DeleteRecordMiddleWithCkecksum+0x3c2>
   13df4:	230a      	movs	r3, #10
   13df6:	623b      	str	r3, [r7, #32]
   13df8:	e08f      	b.n	13f1a <DeleteRecordMiddleWithCkecksum+0x3c2>
   13dfa:	68bb      	ldr	r3, [r7, #8]
   13dfc:	68fa      	ldr	r2, [r7, #12]
   13dfe:	fb02 f303 	mul.w	r3, r2, r3
   13e02:	62bb      	str	r3, [r7, #40]	; 0x28
   13e04:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
   13e06:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13e08:	1ad2      	subs	r2, r2, r3
   13e0a:	68fb      	ldr	r3, [r7, #12]
   13e0c:	1ad3      	subs	r3, r2, r3
   13e0e:	3b10      	subs	r3, #16
   13e10:	2b00      	cmp	r3, #0
   13e12:	f2c0 8082 	blt.w	13f1a <DeleteRecordMiddleWithCkecksum+0x3c2>
   13e16:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13e18:	2b00      	cmp	r3, #0
   13e1a:	db7e      	blt.n	13f1a <DeleteRecordMiddleWithCkecksum+0x3c2>
   13e1c:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   13e1e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
   13e20:	2201      	movs	r2, #1
   13e22:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   13e24:	f003 ffb8 	bl	17d98 <FS_write>
   13e28:	6278      	str	r0, [r7, #36]	; 0x24
   13e2a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   13e2c:	2b01      	cmp	r3, #1
   13e2e:	d005      	beq.n	13e3c <DeleteRecordMiddleWithCkecksum+0x2e4>
   13e30:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   13e32:	2b00      	cmp	r3, #0
   13e34:	d114      	bne.n	13e60 <DeleteRecordMiddleWithCkecksum+0x308>
   13e36:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13e38:	2b00      	cmp	r3, #0
   13e3a:	d111      	bne.n	13e60 <DeleteRecordMiddleWithCkecksum+0x308>
   13e3c:	6aba      	ldr	r2, [r7, #40]	; 0x28
   13e3e:	68fb      	ldr	r3, [r7, #12]
   13e40:	18d3      	adds	r3, r2, r3
   13e42:	6bba      	ldr	r2, [r7, #56]	; 0x38
   13e44:	18d2      	adds	r2, r2, r3
   13e46:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
   13e48:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13e4a:	1ac9      	subs	r1, r1, r3
   13e4c:	68fb      	ldr	r3, [r7, #12]
   13e4e:	1acb      	subs	r3, r1, r3
   13e50:	3b10      	subs	r3, #16
   13e52:	4610      	mov	r0, r2
   13e54:	4619      	mov	r1, r3
   13e56:	2201      	movs	r2, #1
   13e58:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   13e5a:	f003 ff9d 	bl	17d98 <FS_write>
   13e5e:	6278      	str	r0, [r7, #36]	; 0x24
   13e60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   13e62:	2b01      	cmp	r3, #1
   13e64:	d009      	beq.n	13e7a <DeleteRecordMiddleWithCkecksum+0x322>
   13e66:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   13e68:	2b00      	cmp	r3, #0
   13e6a:	d156      	bne.n	13f1a <DeleteRecordMiddleWithCkecksum+0x3c2>
   13e6c:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
   13e6e:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13e70:	1ad2      	subs	r2, r2, r3
   13e72:	68fb      	ldr	r3, [r7, #12]
   13e74:	1ad3      	subs	r3, r2, r3
   13e76:	2b10      	cmp	r3, #16
   13e78:	d14f      	bne.n	13f1a <DeleteRecordMiddleWithCkecksum+0x3c2>
   13e7a:	f107 0344 	add.w	r3, r7, #68	; 0x44
   13e7e:	4618      	mov	r0, r3
   13e80:	f002 ff54 	bl	16d2c <md5_init>
   13e84:	f107 0344 	add.w	r3, r7, #68	; 0x44
   13e88:	4618      	mov	r0, r3
   13e8a:	6bb9      	ldr	r1, [r7, #56]	; 0x38
   13e8c:	6aba      	ldr	r2, [r7, #40]	; 0x28
   13e8e:	f002 ff87 	bl	16da0 <md5_append>
   13e92:	6aba      	ldr	r2, [r7, #40]	; 0x28
   13e94:	68fb      	ldr	r3, [r7, #12]
   13e96:	18d3      	adds	r3, r2, r3
   13e98:	6bba      	ldr	r2, [r7, #56]	; 0x38
   13e9a:	18d2      	adds	r2, r2, r3
   13e9c:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
   13e9e:	6abb      	ldr	r3, [r7, #40]	; 0x28
   13ea0:	1acb      	subs	r3, r1, r3
   13ea2:	f1a3 0110 	sub.w	r1, r3, #16
   13ea6:	68fb      	ldr	r3, [r7, #12]
   13ea8:	1acb      	subs	r3, r1, r3
   13eaa:	f107 0144 	add.w	r1, r7, #68	; 0x44
   13eae:	4608      	mov	r0, r1
   13eb0:	4611      	mov	r1, r2
   13eb2:	461a      	mov	r2, r3
   13eb4:	f002 ff74 	bl	16da0 <md5_append>
   13eb8:	f107 0244 	add.w	r2, r7, #68	; 0x44
   13ebc:	f107 039c 	add.w	r3, r7, #156	; 0x9c
   13ec0:	4610      	mov	r0, r2
   13ec2:	4619      	mov	r1, r3
   13ec4:	f002 fff8 	bl	16eb8 <md5_finish>
   13ec8:	f107 039c 	add.w	r3, r7, #156	; 0x9c
   13ecc:	4618      	mov	r0, r3
   13ece:	2110      	movs	r1, #16
   13ed0:	2201      	movs	r2, #1
   13ed2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   13ed4:	f003 ff60 	bl	17d98 <FS_write>
   13ed8:	6278      	str	r0, [r7, #36]	; 0x24
   13eda:	6b38      	ldr	r0, [r7, #48]	; 0x30
   13edc:	f003 fd7e 	bl	179dc <FS_close>
   13ee0:	2300      	movs	r3, #0
   13ee2:	633b      	str	r3, [r7, #48]	; 0x30
   13ee4:	f107 03ac 	add.w	r3, r7, #172	; 0xac
   13ee8:	4618      	mov	r0, r3
   13eea:	f003 fefd 	bl	17ce8 <FS_unlink>
   13eee:	6b78      	ldr	r0, [r7, #52]	; 0x34
   13ef0:	f003 fd74 	bl	179dc <FS_close>
   13ef4:	2300      	movs	r3, #0
   13ef6:	637b      	str	r3, [r7, #52]	; 0x34
   13ef8:	f107 02d0 	add.w	r2, r7, #208	; 0xd0
   13efc:	f107 03ac 	add.w	r3, r7, #172	; 0xac
   13f00:	4610      	mov	r0, r2
   13f02:	4619      	mov	r1, r3
   13f04:	f003 fe9c 	bl	17c40 <FS_rename>
   13f08:	6438      	str	r0, [r7, #64]	; 0x40
   13f0a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   13f0c:	2b02      	cmp	r3, #2
   13f0e:	d104      	bne.n	13f1a <DeleteRecordMiddleWithCkecksum+0x3c2>
   13f10:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   13f12:	2b01      	cmp	r3, #1
   13f14:	d101      	bne.n	13f1a <DeleteRecordMiddleWithCkecksum+0x3c2>
   13f16:	230a      	movs	r3, #10
   13f18:	623b      	str	r3, [r7, #32]
   13f1a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   13f1c:	2b00      	cmp	r3, #0
   13f1e:	d007      	beq.n	13f30 <DeleteRecordMiddleWithCkecksum+0x3d8>
   13f20:	6b78      	ldr	r0, [r7, #52]	; 0x34
   13f22:	f003 fd5b 	bl	179dc <FS_close>
   13f26:	2300      	movs	r3, #0
   13f28:	637b      	str	r3, [r7, #52]	; 0x34
   13f2a:	e001      	b.n	13f30 <DeleteRecordMiddleWithCkecksum+0x3d8>
   13f2c:	231a      	movs	r3, #26
   13f2e:	623b      	str	r3, [r7, #32]
   13f30:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   13f32:	2b00      	cmp	r3, #0
   13f34:	d004      	beq.n	13f40 <DeleteRecordMiddleWithCkecksum+0x3e8>
   13f36:	6b38      	ldr	r0, [r7, #48]	; 0x30
   13f38:	f003 fd50 	bl	179dc <FS_close>
   13f3c:	2300      	movs	r3, #0
   13f3e:	633b      	str	r3, [r7, #48]	; 0x30
   13f40:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   13f42:	f003 ffdd 	bl	17f00 <PageFree>
   13f46:	6a3b      	ldr	r3, [r7, #32]
   13f48:	4618      	mov	r0, r3
   13f4a:	4b07      	ldr	r3, [pc, #28]	; (13f68 <DeleteRecordMiddleWithCkecksum+0x410>)
   13f4c:	58e3      	ldr	r3, [r4, r3]
   13f4e:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
   13f52:	681b      	ldr	r3, [r3, #0]
   13f54:	429a      	cmp	r2, r3
   13f56:	d001      	beq.n	13f5c <DeleteRecordMiddleWithCkecksum+0x404>
   13f58:	f7f4 ffca 	bl	8ef0 <__stack_chk_fail>
   13f5c:	f107 07fc 	add.w	r7, r7, #252	; 0xfc
   13f60:	46bd      	mov	sp, r7
   13f62:	bd90      	pop	{r4, r7, pc}
   13f64:	000105a6 	.word	0x000105a6
   13f68:	000000a0 	.word	0x000000a0
   13f6c:	00007906 	.word	0x00007906
   13f70:	0000790a 	.word	0x0000790a
   13f74:	000078ba 	.word	0x000078ba
   13f78:	000078ce 	.word	0x000078ce
   13f7c:	0000789c 	.word	0x0000789c
   13f80:	000000b4 	.word	0x000000b4

00013f84 <DeleteRecordEnd>:
   13f84:	b590      	push	{r4, r7, lr}
   13f86:	b0a3      	sub	sp, #140	; 0x8c
   13f88:	af00      	add	r7, sp, #0
   13f8a:	60f8      	str	r0, [r7, #12]
   13f8c:	60b9      	str	r1, [r7, #8]
   13f8e:	607a      	str	r2, [r7, #4]
   13f90:	603b      	str	r3, [r7, #0]
   13f92:	4cc0      	ldr	r4, [pc, #768]	; (14294 <DeleteRecordEnd+0x310>)
   13f94:	447c      	add	r4, pc
   13f96:	4bc0      	ldr	r3, [pc, #768]	; (14298 <DeleteRecordEnd+0x314>)
   13f98:	58e3      	ldr	r3, [r4, r3]
   13f9a:	681b      	ldr	r3, [r3, #0]
   13f9c:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
   13fa0:	231a      	movs	r3, #26
   13fa2:	61bb      	str	r3, [r7, #24]
   13fa4:	2300      	movs	r3, #0
   13fa6:	62bb      	str	r3, [r7, #40]	; 0x28
   13fa8:	2300      	movs	r3, #0
   13faa:	623b      	str	r3, [r7, #32]
   13fac:	2300      	movs	r3, #0
   13fae:	627b      	str	r3, [r7, #36]	; 0x24
   13fb0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   13fb4:	4618      	mov	r0, r3
   13fb6:	4bb9      	ldr	r3, [pc, #740]	; (1429c <DeleteRecordEnd+0x318>)
   13fb8:	447b      	add	r3, pc
   13fba:	4619      	mov	r1, r3
   13fbc:	68fa      	ldr	r2, [r7, #12]
   13fbe:	68bb      	ldr	r3, [r7, #8]
   13fc0:	f7f4 ee24 	blx	8c0c <_init+0x13c>
   13fc4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   13fc8:	4618      	mov	r0, r3
   13fca:	4bb5      	ldr	r3, [pc, #724]	; (142a0 <DeleteRecordEnd+0x31c>)
   13fcc:	447b      	add	r3, pc
   13fce:	4619      	mov	r1, r3
   13fd0:	f003 fde0 	bl	17b94 <FS_open>
   13fd4:	6238      	str	r0, [r7, #32]
   13fd6:	6a3b      	ldr	r3, [r7, #32]
   13fd8:	2b00      	cmp	r3, #0
   13fda:	d102      	bne.n	13fe2 <DeleteRecordEnd+0x5e>
   13fdc:	2313      	movs	r3, #19
   13fde:	61bb      	str	r3, [r7, #24]
   13fe0:	e148      	b.n	14274 <DeleteRecordEnd+0x2f0>
   13fe2:	6a38      	ldr	r0, [r7, #32]
   13fe4:	f003 fd80 	bl	17ae8 <FS_length>
   13fe8:	62f8      	str	r0, [r7, #44]	; 0x2c
   13fea:	6a38      	ldr	r0, [r7, #32]
   13fec:	2100      	movs	r1, #0
   13fee:	2200      	movs	r2, #0
   13ff0:	f003 fe50 	bl	17c94 <FS_seek>
   13ff4:	6338      	str	r0, [r7, #48]	; 0x30
   13ff6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   13ff8:	2b02      	cmp	r3, #2
   13ffa:	f040 8133 	bne.w	14264 <DeleteRecordEnd+0x2e0>
   13ffe:	4ba9      	ldr	r3, [pc, #676]	; (142a4 <DeleteRecordEnd+0x320>)
   14000:	58e3      	ldr	r3, [r4, r3]
   14002:	461a      	mov	r2, r3
   14004:	683b      	ldr	r3, [r7, #0]
   14006:	212c      	movs	r1, #44	; 0x2c
   14008:	fb01 f303 	mul.w	r3, r1, r3
   1400c:	18d3      	adds	r3, r2, r3
   1400e:	3328      	adds	r3, #40	; 0x28
   14010:	681b      	ldr	r3, [r3, #0]
   14012:	2b01      	cmp	r3, #1
   14014:	f040 80a6 	bne.w	14164 <DeleteRecordEnd+0x1e0>
   14018:	f107 0360 	add.w	r3, r7, #96	; 0x60
   1401c:	4618      	mov	r0, r3
   1401e:	4ba2      	ldr	r3, [pc, #648]	; (142a8 <DeleteRecordEnd+0x324>)
   14020:	447b      	add	r3, pc
   14022:	4619      	mov	r1, r3
   14024:	68fa      	ldr	r2, [r7, #12]
   14026:	4ba1      	ldr	r3, [pc, #644]	; (142ac <DeleteRecordEnd+0x328>)
   14028:	447b      	add	r3, pc
   1402a:	f7f4 edf0 	blx	8c0c <_init+0x13c>
   1402e:	f107 0360 	add.w	r3, r7, #96	; 0x60
   14032:	4618      	mov	r0, r3
   14034:	f003 fd2c 	bl	17a90 <FS_exist>
   14038:	6338      	str	r0, [r7, #48]	; 0x30
   1403a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   1403c:	2b02      	cmp	r3, #2
   1403e:	d104      	bne.n	1404a <DeleteRecordEnd+0xc6>
   14040:	f107 0360 	add.w	r3, r7, #96	; 0x60
   14044:	4618      	mov	r0, r3
   14046:	f003 fe4f 	bl	17ce8 <FS_unlink>
   1404a:	f107 0360 	add.w	r3, r7, #96	; 0x60
   1404e:	4618      	mov	r0, r3
   14050:	4b97      	ldr	r3, [pc, #604]	; (142b0 <DeleteRecordEnd+0x32c>)
   14052:	447b      	add	r3, pc
   14054:	4619      	mov	r1, r3
   14056:	f003 fd9d 	bl	17b94 <FS_open>
   1405a:	6278      	str	r0, [r7, #36]	; 0x24
   1405c:	6a38      	ldr	r0, [r7, #32]
   1405e:	2100      	movs	r1, #0
   14060:	2200      	movs	r2, #0
   14062:	f003 fe17 	bl	17c94 <FS_seek>
   14066:	6338      	str	r0, [r7, #48]	; 0x30
   14068:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   1406a:	2b02      	cmp	r3, #2
   1406c:	d170      	bne.n	14150 <DeleteRecordEnd+0x1cc>
   1406e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   14070:	4618      	mov	r0, r3
   14072:	f003 ff1b 	bl	17eac <PageAlloc>
   14076:	62b8      	str	r0, [r7, #40]	; 0x28
   14078:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1407a:	2b00      	cmp	r3, #0
   1407c:	d065      	beq.n	1414a <DeleteRecordEnd+0x1c6>
   1407e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   14080:	6af9      	ldr	r1, [r7, #44]	; 0x2c
   14082:	2201      	movs	r2, #1
   14084:	6a3b      	ldr	r3, [r7, #32]
   14086:	f003 fdaf 	bl	17be8 <FS_read>
   1408a:	6378      	str	r0, [r7, #52]	; 0x34
   1408c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   1408e:	2b01      	cmp	r3, #1
   14090:	d005      	beq.n	1409e <DeleteRecordEnd+0x11a>
   14092:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   14094:	2b00      	cmp	r3, #0
   14096:	d158      	bne.n	1414a <DeleteRecordEnd+0x1c6>
   14098:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   1409a:	2b00      	cmp	r3, #0
   1409c:	d155      	bne.n	1414a <DeleteRecordEnd+0x1c6>
   1409e:	2300      	movs	r3, #0
   140a0:	61fb      	str	r3, [r7, #28]
   140a2:	2300      	movs	r3, #0
   140a4:	617b      	str	r3, [r7, #20]
   140a6:	e00f      	b.n	140c8 <DeleteRecordEnd+0x144>
   140a8:	69fb      	ldr	r3, [r7, #28]
   140aa:	6aba      	ldr	r2, [r7, #40]	; 0x28
   140ac:	18d3      	adds	r3, r2, r3
   140ae:	f107 0214 	add.w	r2, r7, #20
   140b2:	4610      	mov	r0, r2
   140b4:	4619      	mov	r1, r3
   140b6:	2204      	movs	r2, #4
   140b8:	f7f4 ed8a 	blx	8bd0 <_init+0x100>
   140bc:	697b      	ldr	r3, [r7, #20]
   140be:	461a      	mov	r2, r3
   140c0:	69fb      	ldr	r3, [r7, #28]
   140c2:	18d3      	adds	r3, r2, r3
   140c4:	3304      	adds	r3, #4
   140c6:	61fb      	str	r3, [r7, #28]
   140c8:	69fa      	ldr	r2, [r7, #28]
   140ca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   140cc:	429a      	cmp	r2, r3
   140ce:	dbeb      	blt.n	140a8 <DeleteRecordEnd+0x124>
   140d0:	697b      	ldr	r3, [r7, #20]
   140d2:	3304      	adds	r3, #4
   140d4:	63bb      	str	r3, [r7, #56]	; 0x38
   140d6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
   140d8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   140da:	1ad3      	subs	r3, r2, r3
   140dc:	2b00      	cmp	r3, #0
   140de:	db34      	blt.n	1414a <DeleteRecordEnd+0x1c6>
   140e0:	6afa      	ldr	r2, [r7, #44]	; 0x2c
   140e2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   140e4:	1ad3      	subs	r3, r2, r3
   140e6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   140e8:	4619      	mov	r1, r3
   140ea:	2201      	movs	r2, #1
   140ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   140ee:	f003 fe53 	bl	17d98 <FS_write>
   140f2:	6378      	str	r0, [r7, #52]	; 0x34
   140f4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   140f6:	2b01      	cmp	r3, #1
   140f8:	d006      	beq.n	14108 <DeleteRecordEnd+0x184>
   140fa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   140fc:	2b00      	cmp	r3, #0
   140fe:	d124      	bne.n	1414a <DeleteRecordEnd+0x1c6>
   14100:	6afa      	ldr	r2, [r7, #44]	; 0x2c
   14102:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   14104:	429a      	cmp	r2, r3
   14106:	d120      	bne.n	1414a <DeleteRecordEnd+0x1c6>
   14108:	6a38      	ldr	r0, [r7, #32]
   1410a:	f003 fc67 	bl	179dc <FS_close>
   1410e:	2300      	movs	r3, #0
   14110:	623b      	str	r3, [r7, #32]
   14112:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   14116:	4618      	mov	r0, r3
   14118:	f003 fde6 	bl	17ce8 <FS_unlink>
   1411c:	6338      	str	r0, [r7, #48]	; 0x30
   1411e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   14120:	2b02      	cmp	r3, #2
   14122:	d112      	bne.n	1414a <DeleteRecordEnd+0x1c6>
   14124:	6a78      	ldr	r0, [r7, #36]	; 0x24
   14126:	f003 fc59 	bl	179dc <FS_close>
   1412a:	2300      	movs	r3, #0
   1412c:	627b      	str	r3, [r7, #36]	; 0x24
   1412e:	f107 0260 	add.w	r2, r7, #96	; 0x60
   14132:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   14136:	4610      	mov	r0, r2
   14138:	4619      	mov	r1, r3
   1413a:	f003 fd81 	bl	17c40 <FS_rename>
   1413e:	6338      	str	r0, [r7, #48]	; 0x30
   14140:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   14142:	2b02      	cmp	r3, #2
   14144:	d101      	bne.n	1414a <DeleteRecordEnd+0x1c6>
   14146:	230a      	movs	r3, #10
   14148:	61bb      	str	r3, [r7, #24]
   1414a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   1414c:	f003 fed8 	bl	17f00 <PageFree>
   14150:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   14152:	2b00      	cmp	r3, #0
   14154:	f000 8086 	beq.w	14264 <DeleteRecordEnd+0x2e0>
   14158:	6a78      	ldr	r0, [r7, #36]	; 0x24
   1415a:	f003 fc3f 	bl	179dc <FS_close>
   1415e:	2300      	movs	r3, #0
   14160:	627b      	str	r3, [r7, #36]	; 0x24
   14162:	e07f      	b.n	14264 <DeleteRecordEnd+0x2e0>
   14164:	687b      	ldr	r3, [r7, #4]
   14166:	63bb      	str	r3, [r7, #56]	; 0x38
   14168:	f107 0360 	add.w	r3, r7, #96	; 0x60
   1416c:	4618      	mov	r0, r3
   1416e:	4b51      	ldr	r3, [pc, #324]	; (142b4 <DeleteRecordEnd+0x330>)
   14170:	447b      	add	r3, pc
   14172:	4619      	mov	r1, r3
   14174:	68fa      	ldr	r2, [r7, #12]
   14176:	4b50      	ldr	r3, [pc, #320]	; (142b8 <DeleteRecordEnd+0x334>)
   14178:	447b      	add	r3, pc
   1417a:	f7f4 ed48 	blx	8c0c <_init+0x13c>
   1417e:	f107 0360 	add.w	r3, r7, #96	; 0x60
   14182:	4618      	mov	r0, r3
   14184:	f003 fc84 	bl	17a90 <FS_exist>
   14188:	6338      	str	r0, [r7, #48]	; 0x30
   1418a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   1418c:	2b02      	cmp	r3, #2
   1418e:	d104      	bne.n	1419a <DeleteRecordEnd+0x216>
   14190:	f107 0360 	add.w	r3, r7, #96	; 0x60
   14194:	4618      	mov	r0, r3
   14196:	f003 fda7 	bl	17ce8 <FS_unlink>
   1419a:	f107 0360 	add.w	r3, r7, #96	; 0x60
   1419e:	4618      	mov	r0, r3
   141a0:	4b46      	ldr	r3, [pc, #280]	; (142bc <DeleteRecordEnd+0x338>)
   141a2:	447b      	add	r3, pc
   141a4:	4619      	mov	r1, r3
   141a6:	f003 fcf5 	bl	17b94 <FS_open>
   141aa:	6278      	str	r0, [r7, #36]	; 0x24
   141ac:	6a38      	ldr	r0, [r7, #32]
   141ae:	2100      	movs	r1, #0
   141b0:	2200      	movs	r2, #0
   141b2:	f003 fd6f 	bl	17c94 <FS_seek>
   141b6:	6338      	str	r0, [r7, #48]	; 0x30
   141b8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   141ba:	2b02      	cmp	r3, #2
   141bc:	d14a      	bne.n	14254 <DeleteRecordEnd+0x2d0>
   141be:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   141c0:	4618      	mov	r0, r3
   141c2:	f003 fe73 	bl	17eac <PageAlloc>
   141c6:	62b8      	str	r0, [r7, #40]	; 0x28
   141c8:	6abb      	ldr	r3, [r7, #40]	; 0x28
   141ca:	2b00      	cmp	r3, #0
   141cc:	d03f      	beq.n	1424e <DeleteRecordEnd+0x2ca>
   141ce:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   141d0:	6af9      	ldr	r1, [r7, #44]	; 0x2c
   141d2:	2201      	movs	r2, #1
   141d4:	6a3b      	ldr	r3, [r7, #32]
   141d6:	f003 fd07 	bl	17be8 <FS_read>
   141da:	6378      	str	r0, [r7, #52]	; 0x34
   141dc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   141de:	2b01      	cmp	r3, #1
   141e0:	d005      	beq.n	141ee <DeleteRecordEnd+0x26a>
   141e2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   141e4:	2b00      	cmp	r3, #0
   141e6:	d132      	bne.n	1424e <DeleteRecordEnd+0x2ca>
   141e8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   141ea:	2b00      	cmp	r3, #0
   141ec:	d12f      	bne.n	1424e <DeleteRecordEnd+0x2ca>
   141ee:	6afa      	ldr	r2, [r7, #44]	; 0x2c
   141f0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   141f2:	1ad3      	subs	r3, r2, r3
   141f4:	2b00      	cmp	r3, #0
   141f6:	db2a      	blt.n	1424e <DeleteRecordEnd+0x2ca>
   141f8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
   141fa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   141fc:	1ad3      	subs	r3, r2, r3
   141fe:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   14200:	4619      	mov	r1, r3
   14202:	2201      	movs	r2, #1
   14204:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   14206:	f003 fdc7 	bl	17d98 <FS_write>
   1420a:	6378      	str	r0, [r7, #52]	; 0x34
   1420c:	6a38      	ldr	r0, [r7, #32]
   1420e:	f003 fbe5 	bl	179dc <FS_close>
   14212:	2300      	movs	r3, #0
   14214:	623b      	str	r3, [r7, #32]
   14216:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   1421a:	4618      	mov	r0, r3
   1421c:	f003 fd64 	bl	17ce8 <FS_unlink>
   14220:	6338      	str	r0, [r7, #48]	; 0x30
   14222:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   14224:	2b02      	cmp	r3, #2
   14226:	d112      	bne.n	1424e <DeleteRecordEnd+0x2ca>
   14228:	6a78      	ldr	r0, [r7, #36]	; 0x24
   1422a:	f003 fbd7 	bl	179dc <FS_close>
   1422e:	2300      	movs	r3, #0
   14230:	627b      	str	r3, [r7, #36]	; 0x24
   14232:	f107 0260 	add.w	r2, r7, #96	; 0x60
   14236:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   1423a:	4610      	mov	r0, r2
   1423c:	4619      	mov	r1, r3
   1423e:	f003 fcff 	bl	17c40 <FS_rename>
   14242:	6338      	str	r0, [r7, #48]	; 0x30
   14244:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   14246:	2b02      	cmp	r3, #2
   14248:	d101      	bne.n	1424e <DeleteRecordEnd+0x2ca>
   1424a:	230a      	movs	r3, #10
   1424c:	61bb      	str	r3, [r7, #24]
   1424e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   14250:	f003 fe56 	bl	17f00 <PageFree>
   14254:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   14256:	2b00      	cmp	r3, #0
   14258:	d004      	beq.n	14264 <DeleteRecordEnd+0x2e0>
   1425a:	6a78      	ldr	r0, [r7, #36]	; 0x24
   1425c:	f003 fbbe 	bl	179dc <FS_close>
   14260:	2300      	movs	r3, #0
   14262:	627b      	str	r3, [r7, #36]	; 0x24
   14264:	6a3b      	ldr	r3, [r7, #32]
   14266:	2b00      	cmp	r3, #0
   14268:	d004      	beq.n	14274 <DeleteRecordEnd+0x2f0>
   1426a:	6a38      	ldr	r0, [r7, #32]
   1426c:	f003 fbb6 	bl	179dc <FS_close>
   14270:	2300      	movs	r3, #0
   14272:	623b      	str	r3, [r7, #32]
   14274:	69bb      	ldr	r3, [r7, #24]
   14276:	4618      	mov	r0, r3
   14278:	4b07      	ldr	r3, [pc, #28]	; (14298 <DeleteRecordEnd+0x314>)
   1427a:	58e3      	ldr	r3, [r4, r3]
   1427c:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
   14280:	681b      	ldr	r3, [r3, #0]
   14282:	429a      	cmp	r2, r3
   14284:	d001      	beq.n	1428a <DeleteRecordEnd+0x306>
   14286:	f7f4 fe33 	bl	8ef0 <__stack_chk_fail>
   1428a:	f107 078c 	add.w	r7, r7, #140	; 0x8c
   1428e:	46bd      	mov	sp, r7
   14290:	bd90      	pop	{r4, r7, pc}
   14292:	bf00      	nop
   14294:	00010180 	.word	0x00010180
   14298:	000000a0 	.word	0x000000a0
   1429c:	000074e0 	.word	0x000074e0
   142a0:	000074e4 	.word	0x000074e4
   142a4:	000000b4 	.word	0x000000b4
   142a8:	00007478 	.word	0x00007478
   142ac:	0000748c 	.word	0x0000748c
   142b0:	0000745a 	.word	0x0000745a
   142b4:	00007328 	.word	0x00007328
   142b8:	0000733c 	.word	0x0000733c
   142bc:	0000730a 	.word	0x0000730a

000142c0 <DeleteRecordEndWithCkecksum>:
   142c0:	b590      	push	{r4, r7, lr}
   142c2:	b0bd      	sub	sp, #244	; 0xf4
   142c4:	af00      	add	r7, sp, #0
   142c6:	60f8      	str	r0, [r7, #12]
   142c8:	60b9      	str	r1, [r7, #8]
   142ca:	607a      	str	r2, [r7, #4]
   142cc:	603b      	str	r3, [r7, #0]
   142ce:	4cc7      	ldr	r4, [pc, #796]	; (145ec <DeleteRecordEndWithCkecksum+0x32c>)
   142d0:	447c      	add	r4, pc
   142d2:	4bc7      	ldr	r3, [pc, #796]	; (145f0 <DeleteRecordEndWithCkecksum+0x330>)
   142d4:	58e3      	ldr	r3, [r4, r3]
   142d6:	681b      	ldr	r3, [r3, #0]
   142d8:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
   142dc:	231a      	movs	r3, #26
   142de:	61bb      	str	r3, [r7, #24]
   142e0:	2300      	movs	r3, #0
   142e2:	62bb      	str	r3, [r7, #40]	; 0x28
   142e4:	2300      	movs	r3, #0
   142e6:	623b      	str	r3, [r7, #32]
   142e8:	2300      	movs	r3, #0
   142ea:	627b      	str	r3, [r7, #36]	; 0x24
   142ec:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
   142f0:	4618      	mov	r0, r3
   142f2:	4bc0      	ldr	r3, [pc, #768]	; (145f4 <DeleteRecordEndWithCkecksum+0x334>)
   142f4:	447b      	add	r3, pc
   142f6:	4619      	mov	r1, r3
   142f8:	68fa      	ldr	r2, [r7, #12]
   142fa:	68bb      	ldr	r3, [r7, #8]
   142fc:	f7f4 ec86 	blx	8c0c <_init+0x13c>
   14300:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
   14304:	4618      	mov	r0, r3
   14306:	4bbc      	ldr	r3, [pc, #752]	; (145f8 <DeleteRecordEndWithCkecksum+0x338>)
   14308:	447b      	add	r3, pc
   1430a:	4619      	mov	r1, r3
   1430c:	f003 fc42 	bl	17b94 <FS_open>
   14310:	6238      	str	r0, [r7, #32]
   14312:	6a3b      	ldr	r3, [r7, #32]
   14314:	2b00      	cmp	r3, #0
   14316:	d102      	bne.n	1431e <DeleteRecordEndWithCkecksum+0x5e>
   14318:	2313      	movs	r3, #19
   1431a:	61bb      	str	r3, [r7, #24]
   1431c:	e157      	b.n	145ce <DeleteRecordEndWithCkecksum+0x30e>
   1431e:	6a38      	ldr	r0, [r7, #32]
   14320:	f003 fbe2 	bl	17ae8 <FS_length>
   14324:	62f8      	str	r0, [r7, #44]	; 0x2c
   14326:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   14328:	4618      	mov	r0, r3
   1432a:	f003 fdbf 	bl	17eac <PageAlloc>
   1432e:	62b8      	str	r0, [r7, #40]	; 0x28
   14330:	6abb      	ldr	r3, [r7, #40]	; 0x28
   14332:	2b00      	cmp	r3, #0
   14334:	f000 813e 	beq.w	145b4 <DeleteRecordEndWithCkecksum+0x2f4>
   14338:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
   1433c:	4618      	mov	r0, r3
   1433e:	4baf      	ldr	r3, [pc, #700]	; (145fc <DeleteRecordEndWithCkecksum+0x33c>)
   14340:	447b      	add	r3, pc
   14342:	4619      	mov	r1, r3
   14344:	68fa      	ldr	r2, [r7, #12]
   14346:	4bae      	ldr	r3, [pc, #696]	; (14600 <DeleteRecordEndWithCkecksum+0x340>)
   14348:	447b      	add	r3, pc
   1434a:	f7f4 ec60 	blx	8c0c <_init+0x13c>
   1434e:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
   14352:	4618      	mov	r0, r3
   14354:	f003 fb9c 	bl	17a90 <FS_exist>
   14358:	6338      	str	r0, [r7, #48]	; 0x30
   1435a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   1435c:	2b02      	cmp	r3, #2
   1435e:	d104      	bne.n	1436a <DeleteRecordEndWithCkecksum+0xaa>
   14360:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
   14364:	4618      	mov	r0, r3
   14366:	f003 fcbf 	bl	17ce8 <FS_unlink>
   1436a:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
   1436e:	4618      	mov	r0, r3
   14370:	4ba4      	ldr	r3, [pc, #656]	; (14604 <DeleteRecordEndWithCkecksum+0x344>)
   14372:	447b      	add	r3, pc
   14374:	4619      	mov	r1, r3
   14376:	f003 fc0d 	bl	17b94 <FS_open>
   1437a:	6278      	str	r0, [r7, #36]	; 0x24
   1437c:	6a38      	ldr	r0, [r7, #32]
   1437e:	2100      	movs	r1, #0
   14380:	2200      	movs	r2, #0
   14382:	f003 fc87 	bl	17c94 <FS_seek>
   14386:	6338      	str	r0, [r7, #48]	; 0x30
   14388:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   1438a:	2b02      	cmp	r3, #2
   1438c:	f040 8109 	bne.w	145a2 <DeleteRecordEndWithCkecksum+0x2e2>
   14390:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   14392:	6af9      	ldr	r1, [r7, #44]	; 0x2c
   14394:	2201      	movs	r2, #1
   14396:	6a3b      	ldr	r3, [r7, #32]
   14398:	f003 fc26 	bl	17be8 <FS_read>
   1439c:	6378      	str	r0, [r7, #52]	; 0x34
   1439e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   143a0:	2b01      	cmp	r3, #1
   143a2:	d007      	beq.n	143b4 <DeleteRecordEndWithCkecksum+0xf4>
   143a4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   143a6:	2b00      	cmp	r3, #0
   143a8:	f040 80fb 	bne.w	145a2 <DeleteRecordEndWithCkecksum+0x2e2>
   143ac:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   143ae:	2b00      	cmp	r3, #0
   143b0:	f040 80f7 	bne.w	145a2 <DeleteRecordEndWithCkecksum+0x2e2>
   143b4:	4b94      	ldr	r3, [pc, #592]	; (14608 <DeleteRecordEndWithCkecksum+0x348>)
   143b6:	58e3      	ldr	r3, [r4, r3]
   143b8:	461a      	mov	r2, r3
   143ba:	683b      	ldr	r3, [r7, #0]
   143bc:	212c      	movs	r1, #44	; 0x2c
   143be:	fb01 f303 	mul.w	r3, r1, r3
   143c2:	18d3      	adds	r3, r2, r3
   143c4:	3328      	adds	r3, #40	; 0x28
   143c6:	681b      	ldr	r3, [r3, #0]
   143c8:	2b01      	cmp	r3, #1
   143ca:	f040 8087 	bne.w	144dc <DeleteRecordEndWithCkecksum+0x21c>
   143ce:	2300      	movs	r3, #0
   143d0:	61fb      	str	r3, [r7, #28]
   143d2:	2300      	movs	r3, #0
   143d4:	617b      	str	r3, [r7, #20]
   143d6:	e00f      	b.n	143f8 <DeleteRecordEndWithCkecksum+0x138>
   143d8:	69fb      	ldr	r3, [r7, #28]
   143da:	6aba      	ldr	r2, [r7, #40]	; 0x28
   143dc:	18d3      	adds	r3, r2, r3
   143de:	f107 0214 	add.w	r2, r7, #20
   143e2:	4610      	mov	r0, r2
   143e4:	4619      	mov	r1, r3
   143e6:	2204      	movs	r2, #4
   143e8:	f7f4 ebf2 	blx	8bd0 <_init+0x100>
   143ec:	697b      	ldr	r3, [r7, #20]
   143ee:	461a      	mov	r2, r3
   143f0:	69fb      	ldr	r3, [r7, #28]
   143f2:	18d3      	adds	r3, r2, r3
   143f4:	3304      	adds	r3, #4
   143f6:	61fb      	str	r3, [r7, #28]
   143f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   143fa:	f1a3 0210 	sub.w	r2, r3, #16
   143fe:	69fb      	ldr	r3, [r7, #28]
   14400:	429a      	cmp	r2, r3
   14402:	dce9      	bgt.n	143d8 <DeleteRecordEndWithCkecksum+0x118>
   14404:	697b      	ldr	r3, [r7, #20]
   14406:	3304      	adds	r3, #4
   14408:	63bb      	str	r3, [r7, #56]	; 0x38
   1440a:	697b      	ldr	r3, [r7, #20]
   1440c:	2b00      	cmp	r3, #0
   1440e:	f2c0 80c8 	blt.w	145a2 <DeleteRecordEndWithCkecksum+0x2e2>
   14412:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   14414:	f1a3 0210 	sub.w	r2, r3, #16
   14418:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   1441a:	1ad3      	subs	r3, r2, r3
   1441c:	2b00      	cmp	r3, #0
   1441e:	f2c0 80c0 	blt.w	145a2 <DeleteRecordEndWithCkecksum+0x2e2>
   14422:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   14424:	f1a3 0210 	sub.w	r2, r3, #16
   14428:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   1442a:	1ad3      	subs	r3, r2, r3
   1442c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   1442e:	4619      	mov	r1, r3
   14430:	2201      	movs	r2, #1
   14432:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   14434:	f003 fcb0 	bl	17d98 <FS_write>
   14438:	6378      	str	r0, [r7, #52]	; 0x34
   1443a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   1443c:	2b01      	cmp	r3, #1
   1443e:	d00a      	beq.n	14456 <DeleteRecordEndWithCkecksum+0x196>
   14440:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   14442:	2b00      	cmp	r3, #0
   14444:	f040 80ad 	bne.w	145a2 <DeleteRecordEndWithCkecksum+0x2e2>
   14448:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   1444a:	f1a3 0210 	sub.w	r2, r3, #16
   1444e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   14450:	429a      	cmp	r2, r3
   14452:	f040 80a6 	bne.w	145a2 <DeleteRecordEndWithCkecksum+0x2e2>
   14456:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   1445a:	4618      	mov	r0, r3
   1445c:	f002 fc66 	bl	16d2c <md5_init>
   14460:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   14462:	f1a3 0210 	sub.w	r2, r3, #16
   14466:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   14468:	1ad3      	subs	r3, r2, r3
   1446a:	f107 023c 	add.w	r2, r7, #60	; 0x3c
   1446e:	4610      	mov	r0, r2
   14470:	6ab9      	ldr	r1, [r7, #40]	; 0x28
   14472:	461a      	mov	r2, r3
   14474:	f002 fc94 	bl	16da0 <md5_append>
   14478:	f107 023c 	add.w	r2, r7, #60	; 0x3c
   1447c:	f107 0394 	add.w	r3, r7, #148	; 0x94
   14480:	4610      	mov	r0, r2
   14482:	4619      	mov	r1, r3
   14484:	f002 fd18 	bl	16eb8 <md5_finish>
   14488:	f107 0394 	add.w	r3, r7, #148	; 0x94
   1448c:	4618      	mov	r0, r3
   1448e:	2110      	movs	r1, #16
   14490:	2201      	movs	r2, #1
   14492:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   14494:	f003 fc80 	bl	17d98 <FS_write>
   14498:	6378      	str	r0, [r7, #52]	; 0x34
   1449a:	6a38      	ldr	r0, [r7, #32]
   1449c:	f003 fa9e 	bl	179dc <FS_close>
   144a0:	2300      	movs	r3, #0
   144a2:	623b      	str	r3, [r7, #32]
   144a4:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
   144a8:	4618      	mov	r0, r3
   144aa:	f003 fc1d 	bl	17ce8 <FS_unlink>
   144ae:	6a78      	ldr	r0, [r7, #36]	; 0x24
   144b0:	f003 fa94 	bl	179dc <FS_close>
   144b4:	2300      	movs	r3, #0
   144b6:	627b      	str	r3, [r7, #36]	; 0x24
   144b8:	f107 02c8 	add.w	r2, r7, #200	; 0xc8
   144bc:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
   144c0:	4610      	mov	r0, r2
   144c2:	4619      	mov	r1, r3
   144c4:	f003 fbbc 	bl	17c40 <FS_rename>
   144c8:	6338      	str	r0, [r7, #48]	; 0x30
   144ca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   144cc:	2b02      	cmp	r3, #2
   144ce:	d168      	bne.n	145a2 <DeleteRecordEndWithCkecksum+0x2e2>
   144d0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   144d2:	2b01      	cmp	r3, #1
   144d4:	d165      	bne.n	145a2 <DeleteRecordEndWithCkecksum+0x2e2>
   144d6:	230a      	movs	r3, #10
   144d8:	61bb      	str	r3, [r7, #24]
   144da:	e062      	b.n	145a2 <DeleteRecordEndWithCkecksum+0x2e2>
   144dc:	687b      	ldr	r3, [r7, #4]
   144de:	63bb      	str	r3, [r7, #56]	; 0x38
   144e0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   144e2:	f1a3 0210 	sub.w	r2, r3, #16
   144e6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   144e8:	1ad3      	subs	r3, r2, r3
   144ea:	2b00      	cmp	r3, #0
   144ec:	db59      	blt.n	145a2 <DeleteRecordEndWithCkecksum+0x2e2>
   144ee:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   144f0:	f1a3 0210 	sub.w	r2, r3, #16
   144f4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   144f6:	1ad3      	subs	r3, r2, r3
   144f8:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   144fa:	4619      	mov	r1, r3
   144fc:	2201      	movs	r2, #1
   144fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   14500:	f003 fc4a 	bl	17d98 <FS_write>
   14504:	6378      	str	r0, [r7, #52]	; 0x34
   14506:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   14508:	2b01      	cmp	r3, #1
   1450a:	d008      	beq.n	1451e <DeleteRecordEndWithCkecksum+0x25e>
   1450c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   1450e:	2b00      	cmp	r3, #0
   14510:	d147      	bne.n	145a2 <DeleteRecordEndWithCkecksum+0x2e2>
   14512:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   14514:	f1a3 0210 	sub.w	r2, r3, #16
   14518:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   1451a:	429a      	cmp	r2, r3
   1451c:	d141      	bne.n	145a2 <DeleteRecordEndWithCkecksum+0x2e2>
   1451e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   14522:	4618      	mov	r0, r3
   14524:	f002 fc02 	bl	16d2c <md5_init>
   14528:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   1452a:	f1a3 0210 	sub.w	r2, r3, #16
   1452e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   14530:	1ad3      	subs	r3, r2, r3
   14532:	f107 023c 	add.w	r2, r7, #60	; 0x3c
   14536:	4610      	mov	r0, r2
   14538:	6ab9      	ldr	r1, [r7, #40]	; 0x28
   1453a:	461a      	mov	r2, r3
   1453c:	f002 fc30 	bl	16da0 <md5_append>
   14540:	f107 023c 	add.w	r2, r7, #60	; 0x3c
   14544:	f107 0394 	add.w	r3, r7, #148	; 0x94
   14548:	4610      	mov	r0, r2
   1454a:	4619      	mov	r1, r3
   1454c:	f002 fcb4 	bl	16eb8 <md5_finish>
   14550:	f107 0394 	add.w	r3, r7, #148	; 0x94
   14554:	4618      	mov	r0, r3
   14556:	2110      	movs	r1, #16
   14558:	2201      	movs	r2, #1
   1455a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1455c:	f003 fc1c 	bl	17d98 <FS_write>
   14560:	6378      	str	r0, [r7, #52]	; 0x34
   14562:	6a38      	ldr	r0, [r7, #32]
   14564:	f003 fa3a 	bl	179dc <FS_close>
   14568:	2300      	movs	r3, #0
   1456a:	623b      	str	r3, [r7, #32]
   1456c:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
   14570:	4618      	mov	r0, r3
   14572:	f003 fbb9 	bl	17ce8 <FS_unlink>
   14576:	6a78      	ldr	r0, [r7, #36]	; 0x24
   14578:	f003 fa30 	bl	179dc <FS_close>
   1457c:	2300      	movs	r3, #0
   1457e:	627b      	str	r3, [r7, #36]	; 0x24
   14580:	f107 02c8 	add.w	r2, r7, #200	; 0xc8
   14584:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
   14588:	4610      	mov	r0, r2
   1458a:	4619      	mov	r1, r3
   1458c:	f003 fb58 	bl	17c40 <FS_rename>
   14590:	6338      	str	r0, [r7, #48]	; 0x30
   14592:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   14594:	2b02      	cmp	r3, #2
   14596:	d104      	bne.n	145a2 <DeleteRecordEndWithCkecksum+0x2e2>
   14598:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   1459a:	2b01      	cmp	r3, #1
   1459c:	d101      	bne.n	145a2 <DeleteRecordEndWithCkecksum+0x2e2>
   1459e:	230a      	movs	r3, #10
   145a0:	61bb      	str	r3, [r7, #24]
   145a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   145a4:	2b00      	cmp	r3, #0
   145a6:	d007      	beq.n	145b8 <DeleteRecordEndWithCkecksum+0x2f8>
   145a8:	6a78      	ldr	r0, [r7, #36]	; 0x24
   145aa:	f003 fa17 	bl	179dc <FS_close>
   145ae:	2300      	movs	r3, #0
   145b0:	627b      	str	r3, [r7, #36]	; 0x24
   145b2:	e001      	b.n	145b8 <DeleteRecordEndWithCkecksum+0x2f8>
   145b4:	231a      	movs	r3, #26
   145b6:	61bb      	str	r3, [r7, #24]
   145b8:	6a3b      	ldr	r3, [r7, #32]
   145ba:	2b00      	cmp	r3, #0
   145bc:	d004      	beq.n	145c8 <DeleteRecordEndWithCkecksum+0x308>
   145be:	6a38      	ldr	r0, [r7, #32]
   145c0:	f003 fa0c 	bl	179dc <FS_close>
   145c4:	2300      	movs	r3, #0
   145c6:	623b      	str	r3, [r7, #32]
   145c8:	6ab8      	ldr	r0, [r7, #40]	; 0x28
   145ca:	f003 fc99 	bl	17f00 <PageFree>
   145ce:	69bb      	ldr	r3, [r7, #24]
   145d0:	4618      	mov	r0, r3
   145d2:	4b07      	ldr	r3, [pc, #28]	; (145f0 <DeleteRecordEndWithCkecksum+0x330>)
   145d4:	58e3      	ldr	r3, [r4, r3]
   145d6:	f8d7 20ec 	ldr.w	r2, [r7, #236]	; 0xec
   145da:	681b      	ldr	r3, [r3, #0]
   145dc:	429a      	cmp	r2, r3
   145de:	d001      	beq.n	145e4 <DeleteRecordEndWithCkecksum+0x324>
   145e0:	f7f4 fc86 	bl	8ef0 <__stack_chk_fail>
   145e4:	f107 07f4 	add.w	r7, r7, #244	; 0xf4
   145e8:	46bd      	mov	sp, r7
   145ea:	bd90      	pop	{r4, r7, pc}
   145ec:	0000fe44 	.word	0x0000fe44
   145f0:	000000a0 	.word	0x000000a0
   145f4:	000071a4 	.word	0x000071a4
   145f8:	000071a8 	.word	0x000071a8
   145fc:	00007158 	.word	0x00007158
   14600:	0000716c 	.word	0x0000716c
   14604:	0000713a 	.word	0x0000713a
   14608:	000000b4 	.word	0x000000b4

0001460c <IsFileEmpty>:
   1460c:	b580      	push	{r7, lr}
   1460e:	b084      	sub	sp, #16
   14610:	af00      	add	r7, sp, #0
   14612:	6078      	str	r0, [r7, #4]
   14614:	6039      	str	r1, [r7, #0]
   14616:	4b11      	ldr	r3, [pc, #68]	; (1465c <IsFileEmpty+0x50>)
   14618:	447b      	add	r3, pc
   1461a:	4a11      	ldr	r2, [pc, #68]	; (14660 <IsFileEmpty+0x54>)
   1461c:	589a      	ldr	r2, [r3, r2]
   1461e:	6812      	ldr	r2, [r2, #0]
   14620:	60fa      	str	r2, [r7, #12]
   14622:	683a      	ldr	r2, [r7, #0]
   14624:	2a00      	cmp	r2, #0
   14626:	d102      	bne.n	1462e <IsFileEmpty+0x22>
   14628:	687a      	ldr	r2, [r7, #4]
   1462a:	2a00      	cmp	r2, #0
   1462c:	dc05      	bgt.n	1463a <IsFileEmpty+0x2e>
   1462e:	683a      	ldr	r2, [r7, #0]
   14630:	2a01      	cmp	r2, #1
   14632:	d104      	bne.n	1463e <IsFileEmpty+0x32>
   14634:	687a      	ldr	r2, [r7, #4]
   14636:	2a10      	cmp	r2, #16
   14638:	dd01      	ble.n	1463e <IsFileEmpty+0x32>
   1463a:	2200      	movs	r2, #0
   1463c:	e000      	b.n	14640 <IsFileEmpty+0x34>
   1463e:	2201      	movs	r2, #1
   14640:	4610      	mov	r0, r2
   14642:	4a07      	ldr	r2, [pc, #28]	; (14660 <IsFileEmpty+0x54>)
   14644:	589b      	ldr	r3, [r3, r2]
   14646:	68fa      	ldr	r2, [r7, #12]
   14648:	681b      	ldr	r3, [r3, #0]
   1464a:	429a      	cmp	r2, r3
   1464c:	d001      	beq.n	14652 <IsFileEmpty+0x46>
   1464e:	f7f4 fc4f 	bl	8ef0 <__stack_chk_fail>
   14652:	f107 0710 	add.w	r7, r7, #16
   14656:	46bd      	mov	sp, r7
   14658:	bd80      	pop	{r7, pc}
   1465a:	bf00      	nop
   1465c:	0000fafc 	.word	0x0000fafc
   14660:	000000a0 	.word	0x000000a0

00014664 <FMG_Init>:
   14664:	b590      	push	{r4, r7, lr}
   14666:	b09f      	sub	sp, #124	; 0x7c
   14668:	af00      	add	r7, sp, #0
   1466a:	4c71      	ldr	r4, [pc, #452]	; (14830 <FMG_Init+0x1cc>)
   1466c:	447c      	add	r4, pc
   1466e:	4b71      	ldr	r3, [pc, #452]	; (14834 <FMG_Init+0x1d0>)
   14670:	58e3      	ldr	r3, [r4, r3]
   14672:	681b      	ldr	r3, [r3, #0]
   14674:	677b      	str	r3, [r7, #116]	; 0x74
   14676:	2300      	movs	r3, #0
   14678:	60bb      	str	r3, [r7, #8]
   1467a:	f107 0350 	add.w	r3, r7, #80	; 0x50
   1467e:	4618      	mov	r0, r3
   14680:	2100      	movs	r1, #0
   14682:	2223      	movs	r2, #35	; 0x23
   14684:	f7f4 ea52 	blx	8b2c <_init+0x5c>
   14688:	4b6b      	ldr	r3, [pc, #428]	; (14838 <FMG_Init+0x1d4>)
   1468a:	447b      	add	r3, pc
   1468c:	4618      	mov	r0, r3
   1468e:	2100      	movs	r1, #0
   14690:	2211      	movs	r2, #17
   14692:	f7f4 ea4c 	blx	8b2c <_init+0x5c>
   14696:	f003 f975 	bl	17984 <ApplicationGetCurrent>
   1469a:	4603      	mov	r3, r0
   1469c:	461a      	mov	r2, r3
   1469e:	f107 0318 	add.w	r3, r7, #24
   146a2:	2001      	movs	r0, #1
   146a4:	4611      	mov	r1, r2
   146a6:	461a      	mov	r2, r3
   146a8:	f003 fbd4 	bl	17e54 <ObjectGetInfo>
   146ac:	f8b7 3044 	ldrh.w	r3, [r7, #68]	; 0x44
   146b0:	4a62      	ldr	r2, [pc, #392]	; (1483c <FMG_Init+0x1d8>)
   146b2:	447a      	add	r2, pc
   146b4:	4610      	mov	r0, r2
   146b6:	4a62      	ldr	r2, [pc, #392]	; (14840 <FMG_Init+0x1dc>)
   146b8:	447a      	add	r2, pc
   146ba:	4611      	mov	r1, r2
   146bc:	4a61      	ldr	r2, [pc, #388]	; (14844 <FMG_Init+0x1e0>)
   146be:	447a      	add	r2, pc
   146c0:	f7f4 eaa4 	blx	8c0c <_init+0x13c>
   146c4:	4b60      	ldr	r3, [pc, #384]	; (14848 <FMG_Init+0x1e4>)
   146c6:	447b      	add	r3, pc
   146c8:	4618      	mov	r0, r3
   146ca:	f44f 31c8 	mov.w	r1, #102400	; 0x19000
   146ce:	221e      	movs	r2, #30
   146d0:	f7fc ffd8 	bl	11684 <CreateOrMountDisk>
   146d4:	60f8      	str	r0, [r7, #12]
   146d6:	68fb      	ldr	r3, [r7, #12]
   146d8:	2b02      	cmp	r3, #2
   146da:	d003      	beq.n	146e4 <FMG_Init+0x80>
   146dc:	68fb      	ldr	r3, [r7, #12]
   146de:	2b06      	cmp	r3, #6
   146e0:	f040 8093 	bne.w	1480a <FMG_Init+0x1a6>
   146e4:	231f      	movs	r3, #31
   146e6:	603b      	str	r3, [r7, #0]
   146e8:	f107 0350 	add.w	r3, r7, #80	; 0x50
   146ec:	4618      	mov	r0, r3
   146ee:	4b57      	ldr	r3, [pc, #348]	; (1484c <FMG_Init+0x1e8>)
   146f0:	447b      	add	r3, pc
   146f2:	4619      	mov	r1, r3
   146f4:	4b56      	ldr	r3, [pc, #344]	; (14850 <FMG_Init+0x1ec>)
   146f6:	447b      	add	r3, pc
   146f8:	461a      	mov	r2, r3
   146fa:	4b56      	ldr	r3, [pc, #344]	; (14854 <FMG_Init+0x1f0>)
   146fc:	447b      	add	r3, pc
   146fe:	f7f4 ea86 	blx	8c0c <_init+0x13c>
   14702:	f107 0350 	add.w	r3, r7, #80	; 0x50
   14706:	4618      	mov	r0, r3
   14708:	f003 f9c2 	bl	17a90 <FS_exist>
   1470c:	60f8      	str	r0, [r7, #12]
   1470e:	68fb      	ldr	r3, [r7, #12]
   14710:	2b02      	cmp	r3, #2
   14712:	d169      	bne.n	147e8 <FMG_Init+0x184>
   14714:	f107 0350 	add.w	r3, r7, #80	; 0x50
   14718:	4618      	mov	r0, r3
   1471a:	4b4f      	ldr	r3, [pc, #316]	; (14858 <FMG_Init+0x1f4>)
   1471c:	447b      	add	r3, pc
   1471e:	4619      	mov	r1, r3
   14720:	f003 fa38 	bl	17b94 <FS_open>
   14724:	60b8      	str	r0, [r7, #8]
   14726:	68bb      	ldr	r3, [r7, #8]
   14728:	2b00      	cmp	r3, #0
   1472a:	d071      	beq.n	14810 <FMG_Init+0x1ac>
   1472c:	68b8      	ldr	r0, [r7, #8]
   1472e:	2100      	movs	r1, #0
   14730:	2200      	movs	r2, #0
   14732:	f003 faaf 	bl	17c94 <FS_seek>
   14736:	4b49      	ldr	r3, [pc, #292]	; (1485c <FMG_Init+0x1f8>)
   14738:	58e3      	ldr	r3, [r4, r3]
   1473a:	4618      	mov	r0, r3
   1473c:	f241 1134 	movw	r1, #4404	; 0x1134
   14740:	2201      	movs	r2, #1
   14742:	68bb      	ldr	r3, [r7, #8]
   14744:	f003 fa50 	bl	17be8 <FS_read>
   14748:	6138      	str	r0, [r7, #16]
   1474a:	693b      	ldr	r3, [r7, #16]
   1474c:	2b01      	cmp	r3, #1
   1474e:	d101      	bne.n	14754 <FMG_Init+0xf0>
   14750:	231e      	movs	r3, #30
   14752:	603b      	str	r3, [r7, #0]
   14754:	68b8      	ldr	r0, [r7, #8]
   14756:	f003 f941 	bl	179dc <FS_close>
   1475a:	2300      	movs	r3, #0
   1475c:	60bb      	str	r3, [r7, #8]
   1475e:	4b3f      	ldr	r3, [pc, #252]	; (1485c <FMG_Init+0x1f8>)
   14760:	58e3      	ldr	r3, [r4, r3]
   14762:	681b      	ldr	r3, [r3, #0]
   14764:	617b      	str	r3, [r7, #20]
   14766:	2300      	movs	r3, #0
   14768:	607b      	str	r3, [r7, #4]
   1476a:	e038      	b.n	147de <FMG_Init+0x17a>
   1476c:	687b      	ldr	r3, [r7, #4]
   1476e:	222c      	movs	r2, #44	; 0x2c
   14770:	fb02 f203 	mul.w	r2, r2, r3
   14774:	4b39      	ldr	r3, [pc, #228]	; (1485c <FMG_Init+0x1f8>)
   14776:	58e3      	ldr	r3, [r4, r3]
   14778:	18d3      	adds	r3, r2, r3
   1477a:	1d1a      	adds	r2, r3, #4
   1477c:	687b      	ldr	r3, [r7, #4]
   1477e:	212c      	movs	r1, #44	; 0x2c
   14780:	fb01 f303 	mul.w	r3, r1, r3
   14784:	f103 0110 	add.w	r1, r3, #16
   14788:	4b34      	ldr	r3, [pc, #208]	; (1485c <FMG_Init+0x1f8>)
   1478a:	58e3      	ldr	r3, [r4, r3]
   1478c:	18cb      	adds	r3, r1, r3
   1478e:	3305      	adds	r3, #5
   14790:	f107 0150 	add.w	r1, r7, #80	; 0x50
   14794:	4608      	mov	r0, r1
   14796:	4932      	ldr	r1, [pc, #200]	; (14860 <FMG_Init+0x1fc>)
   14798:	4479      	add	r1, pc
   1479a:	f7f4 ea38 	blx	8c0c <_init+0x13c>
   1479e:	f107 0350 	add.w	r3, r7, #80	; 0x50
   147a2:	4618      	mov	r0, r3
   147a4:	4b2f      	ldr	r3, [pc, #188]	; (14864 <FMG_Init+0x200>)
   147a6:	447b      	add	r3, pc
   147a8:	4619      	mov	r1, r3
   147aa:	f003 f9f3 	bl	17b94 <FS_open>
   147ae:	60b8      	str	r0, [r7, #8]
   147b0:	f107 0350 	add.w	r3, r7, #80	; 0x50
   147b4:	4618      	mov	r0, r3
   147b6:	f003 f96b 	bl	17a90 <FS_exist>
   147ba:	60f8      	str	r0, [r7, #12]
   147bc:	68bb      	ldr	r3, [r7, #8]
   147be:	2b00      	cmp	r3, #0
   147c0:	d105      	bne.n	147ce <FMG_Init+0x16a>
   147c2:	4b29      	ldr	r3, [pc, #164]	; (14868 <FMG_Init+0x204>)
   147c4:	447b      	add	r3, pc
   147c6:	4618      	mov	r0, r3
   147c8:	f003 fd42 	bl	18250 <upload_diagnostic_txt>
   147cc:	e004      	b.n	147d8 <FMG_Init+0x174>
   147ce:	68b8      	ldr	r0, [r7, #8]
   147d0:	f003 f904 	bl	179dc <FS_close>
   147d4:	2300      	movs	r3, #0
   147d6:	60bb      	str	r3, [r7, #8]
   147d8:	687b      	ldr	r3, [r7, #4]
   147da:	3301      	adds	r3, #1
   147dc:	607b      	str	r3, [r7, #4]
   147de:	687a      	ldr	r2, [r7, #4]
   147e0:	697b      	ldr	r3, [r7, #20]
   147e2:	429a      	cmp	r2, r3
   147e4:	dbc2      	blt.n	1476c <FMG_Init+0x108>
   147e6:	e00f      	b.n	14808 <FMG_Init+0x1a4>
   147e8:	4b1c      	ldr	r3, [pc, #112]	; (1485c <FMG_Init+0x1f8>)
   147ea:	58e3      	ldr	r3, [r4, r3]
   147ec:	2200      	movs	r2, #0
   147ee:	601a      	str	r2, [r3, #0]
   147f0:	4b1a      	ldr	r3, [pc, #104]	; (1485c <FMG_Init+0x1f8>)
   147f2:	58e3      	ldr	r3, [r4, r3]
   147f4:	1d18      	adds	r0, r3, #4
   147f6:	2100      	movs	r1, #0
   147f8:	f241 1230 	movw	r2, #4400	; 0x1130
   147fc:	f7f4 e996 	blx	8b2c <_init+0x5c>
   14800:	f7fc ff86 	bl	11710 <SaveMangementFile>
   14804:	6038      	str	r0, [r7, #0]
   14806:	e003      	b.n	14810 <FMG_Init+0x1ac>
   14808:	e002      	b.n	14810 <FMG_Init+0x1ac>
   1480a:	231f      	movs	r3, #31
   1480c:	603b      	str	r3, [r7, #0]
   1480e:	e000      	b.n	14812 <FMG_Init+0x1ae>
   14810:	bf00      	nop
   14812:	683b      	ldr	r3, [r7, #0]
   14814:	4618      	mov	r0, r3
   14816:	4b07      	ldr	r3, [pc, #28]	; (14834 <FMG_Init+0x1d0>)
   14818:	58e3      	ldr	r3, [r4, r3]
   1481a:	6f7a      	ldr	r2, [r7, #116]	; 0x74
   1481c:	681b      	ldr	r3, [r3, #0]
   1481e:	429a      	cmp	r2, r3
   14820:	d001      	beq.n	14826 <FMG_Init+0x1c2>
   14822:	f7f4 fb65 	bl	8ef0 <__stack_chk_fail>
   14826:	f107 077c 	add.w	r7, r7, #124	; 0x7c
   1482a:	46bd      	mov	sp, r7
   1482c:	bd90      	pop	{r4, r7, pc}
   1482e:	bf00      	nop
   14830:	0000faa8 	.word	0x0000faa8
   14834:	000000a0 	.word	0x000000a0
   14838:	000103c2 	.word	0x000103c2
   1483c:	0001039a 	.word	0x0001039a
   14840:	00006e00 	.word	0x00006e00
   14844:	00006e02 	.word	0x00006e02
   14848:	00010386 	.word	0x00010386
   1484c:	00006da8 	.word	0x00006da8
   14850:	00010356 	.word	0x00010356
   14854:	00006da4 	.word	0x00006da4
   14858:	00006d94 	.word	0x00006d94
   1485c:	000000b4 	.word	0x000000b4
   14860:	00006d00 	.word	0x00006d00
   14864:	00006d06 	.word	0x00006d06
   14868:	00006d00 	.word	0x00006d00

0001486c <FMG_GetFileDescription>:
   1486c:	b590      	push	{r4, r7, lr}
   1486e:	b085      	sub	sp, #20
   14870:	af00      	add	r7, sp, #0
   14872:	6078      	str	r0, [r7, #4]
   14874:	4c10      	ldr	r4, [pc, #64]	; (148b8 <FMG_GetFileDescription+0x4c>)
   14876:	447c      	add	r4, pc
   14878:	4b10      	ldr	r3, [pc, #64]	; (148bc <FMG_GetFileDescription+0x50>)
   1487a:	58e3      	ldr	r3, [r4, r3]
   1487c:	681b      	ldr	r3, [r3, #0]
   1487e:	60fb      	str	r3, [r7, #12]
   14880:	687b      	ldr	r3, [r7, #4]
   14882:	2b00      	cmp	r3, #0
   14884:	d009      	beq.n	1489a <FMG_GetFileDescription+0x2e>
   14886:	6878      	ldr	r0, [r7, #4]
   14888:	4b0d      	ldr	r3, [pc, #52]	; (148c0 <FMG_GetFileDescription+0x54>)
   1488a:	58e3      	ldr	r3, [r4, r3]
   1488c:	4619      	mov	r1, r3
   1488e:	f241 1234 	movw	r2, #4404	; 0x1134
   14892:	f7f4 e99e 	blx	8bd0 <_init+0x100>
   14896:	2301      	movs	r3, #1
   14898:	e000      	b.n	1489c <FMG_GetFileDescription+0x30>
   1489a:	2300      	movs	r3, #0
   1489c:	4618      	mov	r0, r3
   1489e:	4b07      	ldr	r3, [pc, #28]	; (148bc <FMG_GetFileDescription+0x50>)
   148a0:	58e3      	ldr	r3, [r4, r3]
   148a2:	68fa      	ldr	r2, [r7, #12]
   148a4:	681b      	ldr	r3, [r3, #0]
   148a6:	429a      	cmp	r2, r3
   148a8:	d001      	beq.n	148ae <FMG_GetFileDescription+0x42>
   148aa:	f7f4 fb21 	bl	8ef0 <__stack_chk_fail>
   148ae:	f107 0714 	add.w	r7, r7, #20
   148b2:	46bd      	mov	sp, r7
   148b4:	bd90      	pop	{r4, r7, pc}
   148b6:	bf00      	nop
   148b8:	0000f89e 	.word	0x0000f89e
   148bc:	000000a0 	.word	0x000000a0
   148c0:	000000b4 	.word	0x000000b4

000148c4 <FMG_CreateFile>:
   148c4:	b590      	push	{r4, r7, lr}
   148c6:	b0ab      	sub	sp, #172	; 0xac
   148c8:	af00      	add	r7, sp, #0
   148ca:	60f8      	str	r0, [r7, #12]
   148cc:	60b9      	str	r1, [r7, #8]
   148ce:	607a      	str	r2, [r7, #4]
   148d0:	603b      	str	r3, [r7, #0]
   148d2:	4c66      	ldr	r4, [pc, #408]	; (14a6c <FMG_CreateFile+0x1a8>)
   148d4:	447c      	add	r4, pc
   148d6:	4b66      	ldr	r3, [pc, #408]	; (14a70 <FMG_CreateFile+0x1ac>)
   148d8:	58e3      	ldr	r3, [r4, r3]
   148da:	681b      	ldr	r3, [r3, #0]
   148dc:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
   148e0:	2300      	movs	r3, #0
   148e2:	613b      	str	r3, [r7, #16]
   148e4:	f107 0370 	add.w	r3, r7, #112	; 0x70
   148e8:	4618      	mov	r0, r3
   148ea:	2100      	movs	r1, #0
   148ec:	2210      	movs	r2, #16
   148ee:	f7f4 e91e 	blx	8b2c <_init+0x5c>
   148f2:	4b60      	ldr	r3, [pc, #384]	; (14a74 <FMG_CreateFile+0x1b0>)
   148f4:	58e3      	ldr	r3, [r4, r3]
   148f6:	681b      	ldr	r3, [r3, #0]
   148f8:	2b64      	cmp	r3, #100	; 0x64
   148fa:	d901      	bls.n	14900 <FMG_CreateFile+0x3c>
   148fc:	2316      	movs	r3, #22
   148fe:	e0a6      	b.n	14a4e <FMG_CreateFile+0x18a>
   14900:	687b      	ldr	r3, [r7, #4]
   14902:	2b00      	cmp	r3, #0
   14904:	d004      	beq.n	14910 <FMG_CreateFile+0x4c>
   14906:	687b      	ldr	r3, [r7, #4]
   14908:	2b01      	cmp	r3, #1
   1490a:	d001      	beq.n	14910 <FMG_CreateFile+0x4c>
   1490c:	230d      	movs	r3, #13
   1490e:	e09e      	b.n	14a4e <FMG_CreateFile+0x18a>
   14910:	683b      	ldr	r3, [r7, #0]
   14912:	2b00      	cmp	r3, #0
   14914:	d004      	beq.n	14920 <FMG_CreateFile+0x5c>
   14916:	683b      	ldr	r3, [r7, #0]
   14918:	2b01      	cmp	r3, #1
   1491a:	d001      	beq.n	14920 <FMG_CreateFile+0x5c>
   1491c:	230e      	movs	r3, #14
   1491e:	e096      	b.n	14a4e <FMG_CreateFile+0x18a>
   14920:	f107 0380 	add.w	r3, r7, #128	; 0x80
   14924:	4618      	mov	r0, r3
   14926:	4b54      	ldr	r3, [pc, #336]	; (14a78 <FMG_CreateFile+0x1b4>)
   14928:	447b      	add	r3, pc
   1492a:	4619      	mov	r1, r3
   1492c:	68fa      	ldr	r2, [r7, #12]
   1492e:	68bb      	ldr	r3, [r7, #8]
   14930:	f7f4 e96c 	blx	8c0c <_init+0x13c>
   14934:	f107 0380 	add.w	r3, r7, #128	; 0x80
   14938:	4618      	mov	r0, r3
   1493a:	f003 f8a9 	bl	17a90 <FS_exist>
   1493e:	6178      	str	r0, [r7, #20]
   14940:	697b      	ldr	r3, [r7, #20]
   14942:	2b02      	cmp	r3, #2
   14944:	d101      	bne.n	1494a <FMG_CreateFile+0x86>
   14946:	230c      	movs	r3, #12
   14948:	e081      	b.n	14a4e <FMG_CreateFile+0x18a>
   1494a:	f107 0380 	add.w	r3, r7, #128	; 0x80
   1494e:	4618      	mov	r0, r3
   14950:	4b4a      	ldr	r3, [pc, #296]	; (14a7c <FMG_CreateFile+0x1b8>)
   14952:	447b      	add	r3, pc
   14954:	4619      	mov	r1, r3
   14956:	f003 f91d 	bl	17b94 <FS_open>
   1495a:	6138      	str	r0, [r7, #16]
   1495c:	693b      	ldr	r3, [r7, #16]
   1495e:	2b00      	cmp	r3, #0
   14960:	d101      	bne.n	14966 <FMG_CreateFile+0xa2>
   14962:	2314      	movs	r3, #20
   14964:	e073      	b.n	14a4e <FMG_CreateFile+0x18a>
   14966:	683b      	ldr	r3, [r7, #0]
   14968:	2b01      	cmp	r3, #1
   1496a:	d11d      	bne.n	149a8 <FMG_CreateFile+0xe4>
   1496c:	f107 0318 	add.w	r3, r7, #24
   14970:	4618      	mov	r0, r3
   14972:	f002 f9db 	bl	16d2c <md5_init>
   14976:	f107 0318 	add.w	r3, r7, #24
   1497a:	4618      	mov	r0, r3
   1497c:	4b40      	ldr	r3, [pc, #256]	; (14a80 <FMG_CreateFile+0x1bc>)
   1497e:	447b      	add	r3, pc
   14980:	4619      	mov	r1, r3
   14982:	2200      	movs	r2, #0
   14984:	f002 fa0c 	bl	16da0 <md5_append>
   14988:	f107 0218 	add.w	r2, r7, #24
   1498c:	f107 0370 	add.w	r3, r7, #112	; 0x70
   14990:	4610      	mov	r0, r2
   14992:	4619      	mov	r1, r3
   14994:	f002 fa90 	bl	16eb8 <md5_finish>
   14998:	f107 0370 	add.w	r3, r7, #112	; 0x70
   1499c:	4618      	mov	r0, r3
   1499e:	2110      	movs	r1, #16
   149a0:	2201      	movs	r2, #1
   149a2:	693b      	ldr	r3, [r7, #16]
   149a4:	f003 f9f8 	bl	17d98 <FS_write>
   149a8:	6938      	ldr	r0, [r7, #16]
   149aa:	f003 f817 	bl	179dc <FS_close>
   149ae:	2300      	movs	r3, #0
   149b0:	613b      	str	r3, [r7, #16]
   149b2:	4b30      	ldr	r3, [pc, #192]	; (14a74 <FMG_CreateFile+0x1b0>)
   149b4:	58e3      	ldr	r3, [r4, r3]
   149b6:	681b      	ldr	r3, [r3, #0]
   149b8:	4a2e      	ldr	r2, [pc, #184]	; (14a74 <FMG_CreateFile+0x1b0>)
   149ba:	58a2      	ldr	r2, [r4, r2]
   149bc:	212c      	movs	r1, #44	; 0x2c
   149be:	fb01 f303 	mul.w	r3, r1, r3
   149c2:	18d3      	adds	r3, r2, r3
   149c4:	3328      	adds	r3, #40	; 0x28
   149c6:	687a      	ldr	r2, [r7, #4]
   149c8:	601a      	str	r2, [r3, #0]
   149ca:	4b2a      	ldr	r3, [pc, #168]	; (14a74 <FMG_CreateFile+0x1b0>)
   149cc:	58e3      	ldr	r3, [r4, r3]
   149ce:	681b      	ldr	r3, [r3, #0]
   149d0:	4a28      	ldr	r2, [pc, #160]	; (14a74 <FMG_CreateFile+0x1b0>)
   149d2:	58a2      	ldr	r2, [r4, r2]
   149d4:	212c      	movs	r1, #44	; 0x2c
   149d6:	fb01 f303 	mul.w	r3, r1, r3
   149da:	18d3      	adds	r3, r2, r3
   149dc:	332c      	adds	r3, #44	; 0x2c
   149de:	683a      	ldr	r2, [r7, #0]
   149e0:	601a      	str	r2, [r3, #0]
   149e2:	4b24      	ldr	r3, [pc, #144]	; (14a74 <FMG_CreateFile+0x1b0>)
   149e4:	58e3      	ldr	r3, [r4, r3]
   149e6:	681b      	ldr	r3, [r3, #0]
   149e8:	222c      	movs	r2, #44	; 0x2c
   149ea:	fb02 f303 	mul.w	r3, r2, r3
   149ee:	f103 0210 	add.w	r2, r3, #16
   149f2:	4b20      	ldr	r3, [pc, #128]	; (14a74 <FMG_CreateFile+0x1b0>)
   149f4:	58e3      	ldr	r3, [r4, r3]
   149f6:	18d3      	adds	r3, r2, r3
   149f8:	3305      	adds	r3, #5
   149fa:	4618      	mov	r0, r3
   149fc:	68b9      	ldr	r1, [r7, #8]
   149fe:	f7f4 e8c2 	blx	8b84 <_init+0xb4>
   14a02:	4b1c      	ldr	r3, [pc, #112]	; (14a74 <FMG_CreateFile+0x1b0>)
   14a04:	58e3      	ldr	r3, [r4, r3]
   14a06:	681b      	ldr	r3, [r3, #0]
   14a08:	222c      	movs	r2, #44	; 0x2c
   14a0a:	fb02 f203 	mul.w	r2, r2, r3
   14a0e:	4b19      	ldr	r3, [pc, #100]	; (14a74 <FMG_CreateFile+0x1b0>)
   14a10:	58e3      	ldr	r3, [r4, r3]
   14a12:	18d3      	adds	r3, r2, r3
   14a14:	3304      	adds	r3, #4
   14a16:	4618      	mov	r0, r3
   14a18:	68f9      	ldr	r1, [r7, #12]
   14a1a:	f7f4 e8b4 	blx	8b84 <_init+0xb4>
   14a1e:	4b15      	ldr	r3, [pc, #84]	; (14a74 <FMG_CreateFile+0x1b0>)
   14a20:	58e3      	ldr	r3, [r4, r3]
   14a22:	681b      	ldr	r3, [r3, #0]
   14a24:	1c5a      	adds	r2, r3, #1
   14a26:	4b13      	ldr	r3, [pc, #76]	; (14a74 <FMG_CreateFile+0x1b0>)
   14a28:	58e3      	ldr	r3, [r4, r3]
   14a2a:	601a      	str	r2, [r3, #0]
   14a2c:	4b15      	ldr	r3, [pc, #84]	; (14a84 <FMG_CreateFile+0x1c0>)
   14a2e:	447b      	add	r3, pc
   14a30:	4618      	mov	r0, r3
   14a32:	f44f 31c8 	mov.w	r1, #102400	; 0x19000
   14a36:	221e      	movs	r2, #30
   14a38:	f7fc fe24 	bl	11684 <CreateOrMountDisk>
   14a3c:	6178      	str	r0, [r7, #20]
   14a3e:	f7fc fe67 	bl	11710 <SaveMangementFile>
   14a42:	4603      	mov	r3, r0
   14a44:	2b0a      	cmp	r3, #10
   14a46:	d001      	beq.n	14a4c <FMG_CreateFile+0x188>
   14a48:	2317      	movs	r3, #23
   14a4a:	e000      	b.n	14a4e <FMG_CreateFile+0x18a>
   14a4c:	230a      	movs	r3, #10
   14a4e:	4618      	mov	r0, r3
   14a50:	4b07      	ldr	r3, [pc, #28]	; (14a70 <FMG_CreateFile+0x1ac>)
   14a52:	58e3      	ldr	r3, [r4, r3]
   14a54:	f8d7 20a4 	ldr.w	r2, [r7, #164]	; 0xa4
   14a58:	681b      	ldr	r3, [r3, #0]
   14a5a:	429a      	cmp	r2, r3
   14a5c:	d001      	beq.n	14a62 <FMG_CreateFile+0x19e>
   14a5e:	f7f4 fa47 	bl	8ef0 <__stack_chk_fail>
   14a62:	f107 07ac 	add.w	r7, r7, #172	; 0xac
   14a66:	46bd      	mov	sp, r7
   14a68:	bd90      	pop	{r4, r7, pc}
   14a6a:	bf00      	nop
   14a6c:	0000f840 	.word	0x0000f840
   14a70:	000000a0 	.word	0x000000a0
   14a74:	000000b4 	.word	0x000000b4
   14a78:	00006b70 	.word	0x00006b70
   14a7c:	00006b5a 	.word	0x00006b5a
   14a80:	00006b6a 	.word	0x00006b6a
   14a84:	0001001e 	.word	0x0001001e

00014a88 <FMG_DeleteFile>:
   14a88:	b590      	push	{r4, r7, lr}
   14a8a:	b091      	sub	sp, #68	; 0x44
   14a8c:	af00      	add	r7, sp, #0
   14a8e:	6078      	str	r0, [r7, #4]
   14a90:	6039      	str	r1, [r7, #0]
   14a92:	4c30      	ldr	r4, [pc, #192]	; (14b54 <FMG_DeleteFile+0xcc>)
   14a94:	447c      	add	r4, pc
   14a96:	4b30      	ldr	r3, [pc, #192]	; (14b58 <FMG_DeleteFile+0xd0>)
   14a98:	58e3      	ldr	r3, [r4, r3]
   14a9a:	681b      	ldr	r3, [r3, #0]
   14a9c:	63fb      	str	r3, [r7, #60]	; 0x3c
   14a9e:	4b2f      	ldr	r3, [pc, #188]	; (14b5c <FMG_DeleteFile+0xd4>)
   14aa0:	58e3      	ldr	r3, [r4, r3]
   14aa2:	681b      	ldr	r3, [r3, #0]
   14aa4:	2b00      	cmp	r3, #0
   14aa6:	d101      	bne.n	14aac <FMG_DeleteFile+0x24>
   14aa8:	2316      	movs	r3, #22
   14aaa:	e045      	b.n	14b38 <FMG_DeleteFile+0xb0>
   14aac:	6878      	ldr	r0, [r7, #4]
   14aae:	6839      	ldr	r1, [r7, #0]
   14ab0:	f7fc fe90 	bl	117d4 <ExtraireFileID>
   14ab4:	60f8      	str	r0, [r7, #12]
   14ab6:	68fb      	ldr	r3, [r7, #12]
   14ab8:	2b00      	cmp	r3, #0
   14aba:	da01      	bge.n	14ac0 <FMG_DeleteFile+0x38>
   14abc:	230b      	movs	r3, #11
   14abe:	e03b      	b.n	14b38 <FMG_DeleteFile+0xb0>
   14ac0:	f107 0318 	add.w	r3, r7, #24
   14ac4:	4618      	mov	r0, r3
   14ac6:	4b26      	ldr	r3, [pc, #152]	; (14b60 <FMG_DeleteFile+0xd8>)
   14ac8:	447b      	add	r3, pc
   14aca:	4619      	mov	r1, r3
   14acc:	687a      	ldr	r2, [r7, #4]
   14ace:	683b      	ldr	r3, [r7, #0]
   14ad0:	f7f4 e89c 	blx	8c0c <_init+0x13c>
   14ad4:	f107 0318 	add.w	r3, r7, #24
   14ad8:	4618      	mov	r0, r3
   14ada:	f002 ffd9 	bl	17a90 <FS_exist>
   14ade:	6138      	str	r0, [r7, #16]
   14ae0:	f107 0318 	add.w	r3, r7, #24
   14ae4:	4618      	mov	r0, r3
   14ae6:	f003 f8ff 	bl	17ce8 <FS_unlink>
   14aea:	6178      	str	r0, [r7, #20]
   14aec:	697b      	ldr	r3, [r7, #20]
   14aee:	2b02      	cmp	r3, #2
   14af0:	d005      	beq.n	14afe <FMG_DeleteFile+0x76>
   14af2:	697b      	ldr	r3, [r7, #20]
   14af4:	2b00      	cmp	r3, #0
   14af6:	d11e      	bne.n	14b36 <FMG_DeleteFile+0xae>
   14af8:	693b      	ldr	r3, [r7, #16]
   14afa:	2b00      	cmp	r3, #0
   14afc:	d11b      	bne.n	14b36 <FMG_DeleteFile+0xae>
   14afe:	68f8      	ldr	r0, [r7, #12]
   14b00:	f7fc febe 	bl	11880 <DeleteFileFromTable>
   14b04:	4b15      	ldr	r3, [pc, #84]	; (14b5c <FMG_DeleteFile+0xd4>)
   14b06:	58e3      	ldr	r3, [r4, r3]
   14b08:	681b      	ldr	r3, [r3, #0]
   14b0a:	1e5a      	subs	r2, r3, #1
   14b0c:	4b13      	ldr	r3, [pc, #76]	; (14b5c <FMG_DeleteFile+0xd4>)
   14b0e:	58e3      	ldr	r3, [r4, r3]
   14b10:	601a      	str	r2, [r3, #0]
   14b12:	4b14      	ldr	r3, [pc, #80]	; (14b64 <FMG_DeleteFile+0xdc>)
   14b14:	447b      	add	r3, pc
   14b16:	4618      	mov	r0, r3
   14b18:	f44f 31c8 	mov.w	r1, #102400	; 0x19000
   14b1c:	221e      	movs	r2, #30
   14b1e:	f7fc fdb1 	bl	11684 <CreateOrMountDisk>
   14b22:	6178      	str	r0, [r7, #20]
   14b24:	f7fc fdf4 	bl	11710 <SaveMangementFile>
   14b28:	4603      	mov	r3, r0
   14b2a:	2b0a      	cmp	r3, #10
   14b2c:	d001      	beq.n	14b32 <FMG_DeleteFile+0xaa>
   14b2e:	2317      	movs	r3, #23
   14b30:	e002      	b.n	14b38 <FMG_DeleteFile+0xb0>
   14b32:	230a      	movs	r3, #10
   14b34:	e000      	b.n	14b38 <FMG_DeleteFile+0xb0>
   14b36:	2315      	movs	r3, #21
   14b38:	4618      	mov	r0, r3
   14b3a:	4b07      	ldr	r3, [pc, #28]	; (14b58 <FMG_DeleteFile+0xd0>)
   14b3c:	58e3      	ldr	r3, [r4, r3]
   14b3e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
   14b40:	681b      	ldr	r3, [r3, #0]
   14b42:	429a      	cmp	r2, r3
   14b44:	d001      	beq.n	14b4a <FMG_DeleteFile+0xc2>
   14b46:	f7f4 f9d3 	bl	8ef0 <__stack_chk_fail>
   14b4a:	f107 0744 	add.w	r7, r7, #68	; 0x44
   14b4e:	46bd      	mov	sp, r7
   14b50:	bd90      	pop	{r4, r7, pc}
   14b52:	bf00      	nop
   14b54:	0000f680 	.word	0x0000f680
   14b58:	000000a0 	.word	0x000000a0
   14b5c:	000000b4 	.word	0x000000b4
   14b60:	000069d0 	.word	0x000069d0
   14b64:	0000ff38 	.word	0x0000ff38

00014b68 <FMG_CreateFileType>:
   14b68:	b590      	push	{r4, r7, lr}
   14b6a:	b0ab      	sub	sp, #172	; 0xac
   14b6c:	af00      	add	r7, sp, #0
   14b6e:	60f8      	str	r0, [r7, #12]
   14b70:	60b9      	str	r1, [r7, #8]
   14b72:	607a      	str	r2, [r7, #4]
   14b74:	4c7a      	ldr	r4, [pc, #488]	; (14d60 <FMG_CreateFileType+0x1f8>)
   14b76:	447c      	add	r4, pc
   14b78:	4b7a      	ldr	r3, [pc, #488]	; (14d64 <FMG_CreateFileType+0x1fc>)
   14b7a:	58e3      	ldr	r3, [r4, r3]
   14b7c:	681b      	ldr	r3, [r3, #0]
   14b7e:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
   14b82:	2300      	movs	r3, #0
   14b84:	613b      	str	r3, [r7, #16]
   14b86:	f107 0370 	add.w	r3, r7, #112	; 0x70
   14b8a:	4618      	mov	r0, r3
   14b8c:	2100      	movs	r1, #0
   14b8e:	2210      	movs	r2, #16
   14b90:	f7f3 efcc 	blx	8b2c <_init+0x5c>
   14b94:	68fb      	ldr	r3, [r7, #12]
   14b96:	2b00      	cmp	r3, #0
   14b98:	d007      	beq.n	14baa <FMG_CreateFileType+0x42>
   14b9a:	68fb      	ldr	r3, [r7, #12]
   14b9c:	2b01      	cmp	r3, #1
   14b9e:	d004      	beq.n	14baa <FMG_CreateFileType+0x42>
   14ba0:	68fb      	ldr	r3, [r7, #12]
   14ba2:	2b02      	cmp	r3, #2
   14ba4:	d001      	beq.n	14baa <FMG_CreateFileType+0x42>
   14ba6:	230f      	movs	r3, #15
   14ba8:	e0cb      	b.n	14d42 <FMG_CreateFileType+0x1da>
   14baa:	4b6f      	ldr	r3, [pc, #444]	; (14d68 <FMG_CreateFileType+0x200>)
   14bac:	58e3      	ldr	r3, [r4, r3]
   14bae:	681b      	ldr	r3, [r3, #0]
   14bb0:	2b64      	cmp	r3, #100	; 0x64
   14bb2:	d901      	bls.n	14bb8 <FMG_CreateFileType+0x50>
   14bb4:	2316      	movs	r3, #22
   14bb6:	e0c4      	b.n	14d42 <FMG_CreateFileType+0x1da>
   14bb8:	68bb      	ldr	r3, [r7, #8]
   14bba:	2b00      	cmp	r3, #0
   14bbc:	d004      	beq.n	14bc8 <FMG_CreateFileType+0x60>
   14bbe:	68bb      	ldr	r3, [r7, #8]
   14bc0:	2b01      	cmp	r3, #1
   14bc2:	d001      	beq.n	14bc8 <FMG_CreateFileType+0x60>
   14bc4:	230d      	movs	r3, #13
   14bc6:	e0bc      	b.n	14d42 <FMG_CreateFileType+0x1da>
   14bc8:	687b      	ldr	r3, [r7, #4]
   14bca:	2b00      	cmp	r3, #0
   14bcc:	d004      	beq.n	14bd8 <FMG_CreateFileType+0x70>
   14bce:	687b      	ldr	r3, [r7, #4]
   14bd0:	2b01      	cmp	r3, #1
   14bd2:	d001      	beq.n	14bd8 <FMG_CreateFileType+0x70>
   14bd4:	230e      	movs	r3, #14
   14bd6:	e0b4      	b.n	14d42 <FMG_CreateFileType+0x1da>
   14bd8:	4b64      	ldr	r3, [pc, #400]	; (14d6c <FMG_CreateFileType+0x204>)
   14bda:	447b      	add	r3, pc
   14bdc:	4618      	mov	r0, r3
   14bde:	f44f 31c8 	mov.w	r1, #102400	; 0x19000
   14be2:	221e      	movs	r2, #30
   14be4:	f7fc fd4e 	bl	11684 <CreateOrMountDisk>
   14be8:	6178      	str	r0, [r7, #20]
   14bea:	697b      	ldr	r3, [r7, #20]
   14bec:	2b02      	cmp	r3, #2
   14bee:	d003      	beq.n	14bf8 <FMG_CreateFileType+0x90>
   14bf0:	697b      	ldr	r3, [r7, #20]
   14bf2:	2b06      	cmp	r3, #6
   14bf4:	f040 80a4 	bne.w	14d40 <FMG_CreateFileType+0x1d8>
   14bf8:	4b5d      	ldr	r3, [pc, #372]	; (14d70 <FMG_CreateFileType+0x208>)
   14bfa:	58e3      	ldr	r3, [r4, r3]
   14bfc:	68fa      	ldr	r2, [r7, #12]
   14bfe:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   14c02:	f107 0280 	add.w	r2, r7, #128	; 0x80
   14c06:	4610      	mov	r0, r2
   14c08:	4a5a      	ldr	r2, [pc, #360]	; (14d74 <FMG_CreateFileType+0x20c>)
   14c0a:	447a      	add	r2, pc
   14c0c:	4611      	mov	r1, r2
   14c0e:	4a5a      	ldr	r2, [pc, #360]	; (14d78 <FMG_CreateFileType+0x210>)
   14c10:	447a      	add	r2, pc
   14c12:	f7f3 effc 	blx	8c0c <_init+0x13c>
   14c16:	f107 0380 	add.w	r3, r7, #128	; 0x80
   14c1a:	4618      	mov	r0, r3
   14c1c:	f002 ff38 	bl	17a90 <FS_exist>
   14c20:	6178      	str	r0, [r7, #20]
   14c22:	697b      	ldr	r3, [r7, #20]
   14c24:	2b02      	cmp	r3, #2
   14c26:	d101      	bne.n	14c2c <FMG_CreateFileType+0xc4>
   14c28:	230c      	movs	r3, #12
   14c2a:	e08a      	b.n	14d42 <FMG_CreateFileType+0x1da>
   14c2c:	f107 0380 	add.w	r3, r7, #128	; 0x80
   14c30:	4618      	mov	r0, r3
   14c32:	4b52      	ldr	r3, [pc, #328]	; (14d7c <FMG_CreateFileType+0x214>)
   14c34:	447b      	add	r3, pc
   14c36:	4619      	mov	r1, r3
   14c38:	f002 ffac 	bl	17b94 <FS_open>
   14c3c:	6138      	str	r0, [r7, #16]
   14c3e:	693b      	ldr	r3, [r7, #16]
   14c40:	2b00      	cmp	r3, #0
   14c42:	d101      	bne.n	14c48 <FMG_CreateFileType+0xe0>
   14c44:	2314      	movs	r3, #20
   14c46:	e07c      	b.n	14d42 <FMG_CreateFileType+0x1da>
   14c48:	687b      	ldr	r3, [r7, #4]
   14c4a:	2b01      	cmp	r3, #1
   14c4c:	d11d      	bne.n	14c8a <FMG_CreateFileType+0x122>
   14c4e:	f107 0318 	add.w	r3, r7, #24
   14c52:	4618      	mov	r0, r3
   14c54:	f002 f86a 	bl	16d2c <md5_init>
   14c58:	f107 0318 	add.w	r3, r7, #24
   14c5c:	4618      	mov	r0, r3
   14c5e:	4b48      	ldr	r3, [pc, #288]	; (14d80 <FMG_CreateFileType+0x218>)
   14c60:	447b      	add	r3, pc
   14c62:	4619      	mov	r1, r3
   14c64:	2200      	movs	r2, #0
   14c66:	f002 f89b 	bl	16da0 <md5_append>
   14c6a:	f107 0218 	add.w	r2, r7, #24
   14c6e:	f107 0370 	add.w	r3, r7, #112	; 0x70
   14c72:	4610      	mov	r0, r2
   14c74:	4619      	mov	r1, r3
   14c76:	f002 f91f 	bl	16eb8 <md5_finish>
   14c7a:	f107 0370 	add.w	r3, r7, #112	; 0x70
   14c7e:	4618      	mov	r0, r3
   14c80:	2110      	movs	r1, #16
   14c82:	2201      	movs	r2, #1
   14c84:	693b      	ldr	r3, [r7, #16]
   14c86:	f003 f887 	bl	17d98 <FS_write>
   14c8a:	6938      	ldr	r0, [r7, #16]
   14c8c:	f002 fea6 	bl	179dc <FS_close>
   14c90:	2300      	movs	r3, #0
   14c92:	613b      	str	r3, [r7, #16]
   14c94:	4b34      	ldr	r3, [pc, #208]	; (14d68 <FMG_CreateFileType+0x200>)
   14c96:	58e3      	ldr	r3, [r4, r3]
   14c98:	681b      	ldr	r3, [r3, #0]
   14c9a:	4a33      	ldr	r2, [pc, #204]	; (14d68 <FMG_CreateFileType+0x200>)
   14c9c:	58a2      	ldr	r2, [r4, r2]
   14c9e:	212c      	movs	r1, #44	; 0x2c
   14ca0:	fb01 f303 	mul.w	r3, r1, r3
   14ca4:	18d3      	adds	r3, r2, r3
   14ca6:	3328      	adds	r3, #40	; 0x28
   14ca8:	68ba      	ldr	r2, [r7, #8]
   14caa:	601a      	str	r2, [r3, #0]
   14cac:	4b2e      	ldr	r3, [pc, #184]	; (14d68 <FMG_CreateFileType+0x200>)
   14cae:	58e3      	ldr	r3, [r4, r3]
   14cb0:	681b      	ldr	r3, [r3, #0]
   14cb2:	4a2d      	ldr	r2, [pc, #180]	; (14d68 <FMG_CreateFileType+0x200>)
   14cb4:	58a2      	ldr	r2, [r4, r2]
   14cb6:	212c      	movs	r1, #44	; 0x2c
   14cb8:	fb01 f303 	mul.w	r3, r1, r3
   14cbc:	18d3      	adds	r3, r2, r3
   14cbe:	332c      	adds	r3, #44	; 0x2c
   14cc0:	687a      	ldr	r2, [r7, #4]
   14cc2:	601a      	str	r2, [r3, #0]
   14cc4:	4b28      	ldr	r3, [pc, #160]	; (14d68 <FMG_CreateFileType+0x200>)
   14cc6:	58e3      	ldr	r3, [r4, r3]
   14cc8:	681b      	ldr	r3, [r3, #0]
   14cca:	222c      	movs	r2, #44	; 0x2c
   14ccc:	fb02 f303 	mul.w	r3, r2, r3
   14cd0:	f103 0210 	add.w	r2, r3, #16
   14cd4:	4b24      	ldr	r3, [pc, #144]	; (14d68 <FMG_CreateFileType+0x200>)
   14cd6:	58e3      	ldr	r3, [r4, r3]
   14cd8:	18d3      	adds	r3, r2, r3
   14cda:	1d5a      	adds	r2, r3, #5
   14cdc:	4b24      	ldr	r3, [pc, #144]	; (14d70 <FMG_CreateFileType+0x208>)
   14cde:	58e3      	ldr	r3, [r4, r3]
   14ce0:	68f9      	ldr	r1, [r7, #12]
   14ce2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
   14ce6:	4610      	mov	r0, r2
   14ce8:	4619      	mov	r1, r3
   14cea:	f7f3 ef4c 	blx	8b84 <_init+0xb4>
   14cee:	4b1e      	ldr	r3, [pc, #120]	; (14d68 <FMG_CreateFileType+0x200>)
   14cf0:	58e3      	ldr	r3, [r4, r3]
   14cf2:	681b      	ldr	r3, [r3, #0]
   14cf4:	222c      	movs	r2, #44	; 0x2c
   14cf6:	fb02 f203 	mul.w	r2, r2, r3
   14cfa:	4b1b      	ldr	r3, [pc, #108]	; (14d68 <FMG_CreateFileType+0x200>)
   14cfc:	58e3      	ldr	r3, [r4, r3]
   14cfe:	18d3      	adds	r3, r2, r3
   14d00:	3304      	adds	r3, #4
   14d02:	4618      	mov	r0, r3
   14d04:	4b1f      	ldr	r3, [pc, #124]	; (14d84 <FMG_CreateFileType+0x21c>)
   14d06:	447b      	add	r3, pc
   14d08:	4619      	mov	r1, r3
   14d0a:	f7f3 ef3c 	blx	8b84 <_init+0xb4>
   14d0e:	4b16      	ldr	r3, [pc, #88]	; (14d68 <FMG_CreateFileType+0x200>)
   14d10:	58e3      	ldr	r3, [r4, r3]
   14d12:	681b      	ldr	r3, [r3, #0]
   14d14:	1c5a      	adds	r2, r3, #1
   14d16:	4b14      	ldr	r3, [pc, #80]	; (14d68 <FMG_CreateFileType+0x200>)
   14d18:	58e3      	ldr	r3, [r4, r3]
   14d1a:	601a      	str	r2, [r3, #0]
   14d1c:	4b1a      	ldr	r3, [pc, #104]	; (14d88 <FMG_CreateFileType+0x220>)
   14d1e:	447b      	add	r3, pc
   14d20:	4618      	mov	r0, r3
   14d22:	f44f 31c8 	mov.w	r1, #102400	; 0x19000
   14d26:	221e      	movs	r2, #30
   14d28:	f7fc fcac 	bl	11684 <CreateOrMountDisk>
   14d2c:	6178      	str	r0, [r7, #20]
   14d2e:	f7fc fcef 	bl	11710 <SaveMangementFile>
   14d32:	4603      	mov	r3, r0
   14d34:	2b0a      	cmp	r3, #10
   14d36:	d001      	beq.n	14d3c <FMG_CreateFileType+0x1d4>
   14d38:	2317      	movs	r3, #23
   14d3a:	e002      	b.n	14d42 <FMG_CreateFileType+0x1da>
   14d3c:	230a      	movs	r3, #10
   14d3e:	e000      	b.n	14d42 <FMG_CreateFileType+0x1da>
   14d40:	2312      	movs	r3, #18
   14d42:	4618      	mov	r0, r3
   14d44:	4b07      	ldr	r3, [pc, #28]	; (14d64 <FMG_CreateFileType+0x1fc>)
   14d46:	58e3      	ldr	r3, [r4, r3]
   14d48:	f8d7 20a4 	ldr.w	r2, [r7, #164]	; 0xa4
   14d4c:	681b      	ldr	r3, [r3, #0]
   14d4e:	429a      	cmp	r2, r3
   14d50:	d001      	beq.n	14d56 <FMG_CreateFileType+0x1ee>
   14d52:	f7f4 f8cd 	bl	8ef0 <__stack_chk_fail>
   14d56:	f107 07ac 	add.w	r7, r7, #172	; 0xac
   14d5a:	46bd      	mov	sp, r7
   14d5c:	bd90      	pop	{r4, r7, pc}
   14d5e:	bf00      	nop
   14d60:	0000f59e 	.word	0x0000f59e
   14d64:	000000a0 	.word	0x000000a0
   14d68:	000000b4 	.word	0x000000b4
   14d6c:	0000fe72 	.word	0x0000fe72
   14d70:	0000009c 	.word	0x0000009c
   14d74:	0000688e 	.word	0x0000688e
   14d78:	0000fe3c 	.word	0x0000fe3c
   14d7c:	00006878 	.word	0x00006878
   14d80:	00006888 	.word	0x00006888
   14d84:	0000fd46 	.word	0x0000fd46
   14d88:	0000fd2e 	.word	0x0000fd2e

00014d8c <FMG_DeleteFileType>:
   14d8c:	b590      	push	{r4, r7, lr}
   14d8e:	b08f      	sub	sp, #60	; 0x3c
   14d90:	af00      	add	r7, sp, #0
   14d92:	6078      	str	r0, [r7, #4]
   14d94:	4c39      	ldr	r4, [pc, #228]	; (14e7c <FMG_DeleteFileType+0xf0>)
   14d96:	447c      	add	r4, pc
   14d98:	4b39      	ldr	r3, [pc, #228]	; (14e80 <FMG_DeleteFileType+0xf4>)
   14d9a:	58e3      	ldr	r3, [r4, r3]
   14d9c:	681b      	ldr	r3, [r3, #0]
   14d9e:	637b      	str	r3, [r7, #52]	; 0x34
   14da0:	4b38      	ldr	r3, [pc, #224]	; (14e84 <FMG_DeleteFileType+0xf8>)
   14da2:	58e3      	ldr	r3, [r4, r3]
   14da4:	681b      	ldr	r3, [r3, #0]
   14da6:	2b00      	cmp	r3, #0
   14da8:	d101      	bne.n	14dae <FMG_DeleteFileType+0x22>
   14daa:	2316      	movs	r3, #22
   14dac:	e058      	b.n	14e60 <FMG_DeleteFileType+0xd4>
   14dae:	687b      	ldr	r3, [r7, #4]
   14db0:	2b00      	cmp	r3, #0
   14db2:	d007      	beq.n	14dc4 <FMG_DeleteFileType+0x38>
   14db4:	687b      	ldr	r3, [r7, #4]
   14db6:	2b01      	cmp	r3, #1
   14db8:	d004      	beq.n	14dc4 <FMG_DeleteFileType+0x38>
   14dba:	687b      	ldr	r3, [r7, #4]
   14dbc:	2b02      	cmp	r3, #2
   14dbe:	d001      	beq.n	14dc4 <FMG_DeleteFileType+0x38>
   14dc0:	230f      	movs	r3, #15
   14dc2:	e04d      	b.n	14e60 <FMG_DeleteFileType+0xd4>
   14dc4:	4b30      	ldr	r3, [pc, #192]	; (14e88 <FMG_DeleteFileType+0xfc>)
   14dc6:	58e3      	ldr	r3, [r4, r3]
   14dc8:	687a      	ldr	r2, [r7, #4]
   14dca:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   14dce:	4a2f      	ldr	r2, [pc, #188]	; (14e8c <FMG_DeleteFileType+0x100>)
   14dd0:	447a      	add	r2, pc
   14dd2:	4610      	mov	r0, r2
   14dd4:	4619      	mov	r1, r3
   14dd6:	f7fc fcfd 	bl	117d4 <ExtraireFileID>
   14dda:	60b8      	str	r0, [r7, #8]
   14ddc:	68bb      	ldr	r3, [r7, #8]
   14dde:	2b00      	cmp	r3, #0
   14de0:	da01      	bge.n	14de6 <FMG_DeleteFileType+0x5a>
   14de2:	230b      	movs	r3, #11
   14de4:	e03c      	b.n	14e60 <FMG_DeleteFileType+0xd4>
   14de6:	4b2a      	ldr	r3, [pc, #168]	; (14e90 <FMG_DeleteFileType+0x104>)
   14de8:	447b      	add	r3, pc
   14dea:	4618      	mov	r0, r3
   14dec:	f44f 31c8 	mov.w	r1, #102400	; 0x19000
   14df0:	221e      	movs	r2, #30
   14df2:	f7fc fc47 	bl	11684 <CreateOrMountDisk>
   14df6:	60f8      	str	r0, [r7, #12]
   14df8:	68fb      	ldr	r3, [r7, #12]
   14dfa:	2b02      	cmp	r3, #2
   14dfc:	d002      	beq.n	14e04 <FMG_DeleteFileType+0x78>
   14dfe:	68fb      	ldr	r3, [r7, #12]
   14e00:	2b06      	cmp	r3, #6
   14e02:	d12c      	bne.n	14e5e <FMG_DeleteFileType+0xd2>
   14e04:	4b20      	ldr	r3, [pc, #128]	; (14e88 <FMG_DeleteFileType+0xfc>)
   14e06:	58e3      	ldr	r3, [r4, r3]
   14e08:	687a      	ldr	r2, [r7, #4]
   14e0a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   14e0e:	f107 0210 	add.w	r2, r7, #16
   14e12:	4610      	mov	r0, r2
   14e14:	4a1f      	ldr	r2, [pc, #124]	; (14e94 <FMG_DeleteFileType+0x108>)
   14e16:	447a      	add	r2, pc
   14e18:	4611      	mov	r1, r2
   14e1a:	4a1f      	ldr	r2, [pc, #124]	; (14e98 <FMG_DeleteFileType+0x10c>)
   14e1c:	447a      	add	r2, pc
   14e1e:	f7f3 eef6 	blx	8c0c <_init+0x13c>
   14e22:	f107 0310 	add.w	r3, r7, #16
   14e26:	4618      	mov	r0, r3
   14e28:	f002 ff5e 	bl	17ce8 <FS_unlink>
   14e2c:	60f8      	str	r0, [r7, #12]
   14e2e:	68fb      	ldr	r3, [r7, #12]
   14e30:	2b02      	cmp	r3, #2
   14e32:	d112      	bne.n	14e5a <FMG_DeleteFileType+0xce>
   14e34:	68b8      	ldr	r0, [r7, #8]
   14e36:	f7fc fd23 	bl	11880 <DeleteFileFromTable>
   14e3a:	4b12      	ldr	r3, [pc, #72]	; (14e84 <FMG_DeleteFileType+0xf8>)
   14e3c:	58e3      	ldr	r3, [r4, r3]
   14e3e:	681b      	ldr	r3, [r3, #0]
   14e40:	1e5a      	subs	r2, r3, #1
   14e42:	4b10      	ldr	r3, [pc, #64]	; (14e84 <FMG_DeleteFileType+0xf8>)
   14e44:	58e3      	ldr	r3, [r4, r3]
   14e46:	601a      	str	r2, [r3, #0]
   14e48:	f7fc fc62 	bl	11710 <SaveMangementFile>
   14e4c:	4603      	mov	r3, r0
   14e4e:	2b0a      	cmp	r3, #10
   14e50:	d001      	beq.n	14e56 <FMG_DeleteFileType+0xca>
   14e52:	2317      	movs	r3, #23
   14e54:	e004      	b.n	14e60 <FMG_DeleteFileType+0xd4>
   14e56:	230a      	movs	r3, #10
   14e58:	e002      	b.n	14e60 <FMG_DeleteFileType+0xd4>
   14e5a:	2315      	movs	r3, #21
   14e5c:	e000      	b.n	14e60 <FMG_DeleteFileType+0xd4>
   14e5e:	2312      	movs	r3, #18
   14e60:	4618      	mov	r0, r3
   14e62:	4b07      	ldr	r3, [pc, #28]	; (14e80 <FMG_DeleteFileType+0xf4>)
   14e64:	58e3      	ldr	r3, [r4, r3]
   14e66:	6b7a      	ldr	r2, [r7, #52]	; 0x34
   14e68:	681b      	ldr	r3, [r3, #0]
   14e6a:	429a      	cmp	r2, r3
   14e6c:	d001      	beq.n	14e72 <FMG_DeleteFileType+0xe6>
   14e6e:	f7f4 f83f 	bl	8ef0 <__stack_chk_fail>
   14e72:	f107 073c 	add.w	r7, r7, #60	; 0x3c
   14e76:	46bd      	mov	sp, r7
   14e78:	bd90      	pop	{r4, r7, pc}
   14e7a:	bf00      	nop
   14e7c:	0000f37e 	.word	0x0000f37e
   14e80:	000000a0 	.word	0x000000a0
   14e84:	000000b4 	.word	0x000000b4
   14e88:	0000009c 	.word	0x0000009c
   14e8c:	0000fc7c 	.word	0x0000fc7c
   14e90:	0000fc64 	.word	0x0000fc64
   14e94:	00006682 	.word	0x00006682
   14e98:	0000fc30 	.word	0x0000fc30

00014e9c <FMG_CheckFileCoherence>:
   14e9c:	b5b0      	push	{r4, r5, r7, lr}
   14e9e:	f5ad 6d98 	sub.w	sp, sp, #1216	; 0x4c0
   14ea2:	af00      	add	r7, sp, #0
   14ea4:	1d3b      	adds	r3, r7, #4
   14ea6:	6018      	str	r0, [r3, #0]
   14ea8:	463b      	mov	r3, r7
   14eaa:	6019      	str	r1, [r3, #0]
   14eac:	4c88      	ldr	r4, [pc, #544]	; (150d0 <FMG_CheckFileCoherence+0x234>)
   14eae:	447c      	add	r4, pc
   14eb0:	4b88      	ldr	r3, [pc, #544]	; (150d4 <FMG_CheckFileCoherence+0x238>)
   14eb2:	58e3      	ldr	r3, [r4, r3]
   14eb4:	681b      	ldr	r3, [r3, #0]
   14eb6:	f8c7 34bc 	str.w	r3, [r7, #1212]	; 0x4bc
   14eba:	f107 0314 	add.w	r3, r7, #20
   14ebe:	2200      	movs	r2, #0
   14ec0:	601a      	str	r2, [r3, #0]
   14ec2:	f107 03bc 	add.w	r3, r7, #188	; 0xbc
   14ec6:	4618      	mov	r0, r3
   14ec8:	2100      	movs	r1, #0
   14eca:	f44f 6280 	mov.w	r2, #1024	; 0x400
   14ece:	f7f3 ee2e 	blx	8b2c <_init+0x5c>
   14ed2:	f107 0388 	add.w	r3, r7, #136	; 0x88
   14ed6:	4618      	mov	r0, r3
   14ed8:	2100      	movs	r1, #0
   14eda:	2210      	movs	r2, #16
   14edc:	f7f3 ee26 	blx	8b2c <_init+0x5c>
   14ee0:	f107 0198 	add.w	r1, r7, #152	; 0x98
   14ee4:	1d3a      	adds	r2, r7, #4
   14ee6:	463b      	mov	r3, r7
   14ee8:	4608      	mov	r0, r1
   14eea:	497b      	ldr	r1, [pc, #492]	; (150d8 <FMG_CheckFileCoherence+0x23c>)
   14eec:	4479      	add	r1, pc
   14eee:	6812      	ldr	r2, [r2, #0]
   14ef0:	681b      	ldr	r3, [r3, #0]
   14ef2:	f7f3 ee8c 	blx	8c0c <_init+0x13c>
   14ef6:	f107 0514 	add.w	r5, r7, #20
   14efa:	f107 0398 	add.w	r3, r7, #152	; 0x98
   14efe:	4618      	mov	r0, r3
   14f00:	4b76      	ldr	r3, [pc, #472]	; (150dc <FMG_CheckFileCoherence+0x240>)
   14f02:	447b      	add	r3, pc
   14f04:	4619      	mov	r1, r3
   14f06:	f002 fe45 	bl	17b94 <FS_open>
   14f0a:	6028      	str	r0, [r5, #0]
   14f0c:	f107 0314 	add.w	r3, r7, #20
   14f10:	681b      	ldr	r3, [r3, #0]
   14f12:	2b00      	cmp	r3, #0
   14f14:	d101      	bne.n	14f1a <FMG_CheckFileCoherence+0x7e>
   14f16:	2313      	movs	r3, #19
   14f18:	e0cb      	b.n	150b2 <FMG_CheckFileCoherence+0x216>
   14f1a:	f107 0518 	add.w	r5, r7, #24
   14f1e:	f107 0314 	add.w	r3, r7, #20
   14f22:	6818      	ldr	r0, [r3, #0]
   14f24:	f002 fde0 	bl	17ae8 <FS_length>
   14f28:	6028      	str	r0, [r5, #0]
   14f2a:	f107 0318 	add.w	r3, r7, #24
   14f2e:	681b      	ldr	r3, [r3, #0]
   14f30:	f1b3 3fff 	cmp.w	r3, #4294967295
   14f34:	d101      	bne.n	14f3a <FMG_CheckFileCoherence+0x9e>
   14f36:	231c      	movs	r3, #28
   14f38:	e0bb      	b.n	150b2 <FMG_CheckFileCoherence+0x216>
   14f3a:	f107 0320 	add.w	r3, r7, #32
   14f3e:	4618      	mov	r0, r3
   14f40:	f001 fef4 	bl	16d2c <md5_init>
   14f44:	f107 030c 	add.w	r3, r7, #12
   14f48:	2200      	movs	r2, #0
   14f4a:	601a      	str	r2, [r3, #0]
   14f4c:	f107 0310 	add.w	r3, r7, #16
   14f50:	2200      	movs	r2, #0
   14f52:	601a      	str	r2, [r3, #0]
   14f54:	e072      	b.n	1503c <FMG_CheckFileCoherence+0x1a0>
   14f56:	f107 030c 	add.w	r3, r7, #12
   14f5a:	f107 010c 	add.w	r1, r7, #12
   14f5e:	f107 021c 	add.w	r2, r7, #28
   14f62:	6809      	ldr	r1, [r1, #0]
   14f64:	6812      	ldr	r2, [r2, #0]
   14f66:	188a      	adds	r2, r1, r2
   14f68:	601a      	str	r2, [r3, #0]
   14f6a:	f107 0318 	add.w	r3, r7, #24
   14f6e:	681b      	ldr	r3, [r3, #0]
   14f70:	f1a3 0210 	sub.w	r2, r3, #16
   14f74:	f107 030c 	add.w	r3, r7, #12
   14f78:	681b      	ldr	r3, [r3, #0]
   14f7a:	429a      	cmp	r2, r3
   14f7c:	da4d      	bge.n	1501a <FMG_CheckFileCoherence+0x17e>
   14f7e:	f107 031c 	add.w	r3, r7, #28
   14f82:	681b      	ldr	r3, [r3, #0]
   14f84:	3b10      	subs	r3, #16
   14f86:	2b00      	cmp	r3, #0
   14f88:	db30      	blt.n	14fec <FMG_CheckFileCoherence+0x150>
   14f8a:	f107 0318 	add.w	r3, r7, #24
   14f8e:	681b      	ldr	r3, [r3, #0]
   14f90:	f1c3 0110 	rsb	r1, r3, #16
   14f94:	f107 0310 	add.w	r3, r7, #16
   14f98:	f107 020c 	add.w	r2, r7, #12
   14f9c:	6812      	ldr	r2, [r2, #0]
   14f9e:	188a      	adds	r2, r1, r2
   14fa0:	601a      	str	r2, [r3, #0]
   14fa2:	f107 021c 	add.w	r2, r7, #28
   14fa6:	f107 0310 	add.w	r3, r7, #16
   14faa:	6812      	ldr	r2, [r2, #0]
   14fac:	681b      	ldr	r3, [r3, #0]
   14fae:	1ad3      	subs	r3, r2, r3
   14fb0:	f107 02bc 	add.w	r2, r7, #188	; 0xbc
   14fb4:	18d2      	adds	r2, r2, r3
   14fb6:	f107 0310 	add.w	r3, r7, #16
   14fba:	681b      	ldr	r3, [r3, #0]
   14fbc:	f107 0188 	add.w	r1, r7, #136	; 0x88
   14fc0:	4608      	mov	r0, r1
   14fc2:	4611      	mov	r1, r2
   14fc4:	461a      	mov	r2, r3
   14fc6:	f7f3 ee04 	blx	8bd0 <_init+0x100>
   14fca:	f107 021c 	add.w	r2, r7, #28
   14fce:	f107 0310 	add.w	r3, r7, #16
   14fd2:	6812      	ldr	r2, [r2, #0]
   14fd4:	681b      	ldr	r3, [r3, #0]
   14fd6:	1ad3      	subs	r3, r2, r3
   14fd8:	f107 0120 	add.w	r1, r7, #32
   14fdc:	f107 02bc 	add.w	r2, r7, #188	; 0xbc
   14fe0:	4608      	mov	r0, r1
   14fe2:	4611      	mov	r1, r2
   14fe4:	461a      	mov	r2, r3
   14fe6:	f001 fedb 	bl	16da0 <md5_append>
   14fea:	e027      	b.n	1503c <FMG_CheckFileCoherence+0x1a0>
   14fec:	f107 0288 	add.w	r2, r7, #136	; 0x88
   14ff0:	f107 0310 	add.w	r3, r7, #16
   14ff4:	681b      	ldr	r3, [r3, #0]
   14ff6:	18d1      	adds	r1, r2, r3
   14ff8:	f107 031c 	add.w	r3, r7, #28
   14ffc:	681b      	ldr	r3, [r3, #0]
   14ffe:	f107 02bc 	add.w	r2, r7, #188	; 0xbc
   15002:	4608      	mov	r0, r1
   15004:	4611      	mov	r1, r2
   15006:	461a      	mov	r2, r3
   15008:	f7f3 ede2 	blx	8bd0 <_init+0x100>
   1500c:	f107 0310 	add.w	r3, r7, #16
   15010:	f107 0210 	add.w	r2, r7, #16
   15014:	6812      	ldr	r2, [r2, #0]
   15016:	601a      	str	r2, [r3, #0]
   15018:	e010      	b.n	1503c <FMG_CheckFileCoherence+0x1a0>
   1501a:	f107 0120 	add.w	r1, r7, #32
   1501e:	f107 02bc 	add.w	r2, r7, #188	; 0xbc
   15022:	f107 031c 	add.w	r3, r7, #28
   15026:	4608      	mov	r0, r1
   15028:	4611      	mov	r1, r2
   1502a:	681a      	ldr	r2, [r3, #0]
   1502c:	f001 feb8 	bl	16da0 <md5_append>
   15030:	f107 0310 	add.w	r3, r7, #16
   15034:	f107 0210 	add.w	r2, r7, #16
   15038:	6812      	ldr	r2, [r2, #0]
   1503a:	601a      	str	r2, [r3, #0]
   1503c:	f107 051c 	add.w	r5, r7, #28
   15040:	f107 02bc 	add.w	r2, r7, #188	; 0xbc
   15044:	f107 0314 	add.w	r3, r7, #20
   15048:	4610      	mov	r0, r2
   1504a:	2101      	movs	r1, #1
   1504c:	f44f 6280 	mov.w	r2, #1024	; 0x400
   15050:	681b      	ldr	r3, [r3, #0]
   15052:	f002 fdc9 	bl	17be8 <FS_read>
   15056:	6028      	str	r0, [r5, #0]
   15058:	f107 031c 	add.w	r3, r7, #28
   1505c:	681b      	ldr	r3, [r3, #0]
   1505e:	2b00      	cmp	r3, #0
   15060:	f47f af79 	bne.w	14f56 <FMG_CheckFileCoherence+0xba>
   15064:	f107 030c 	add.w	r3, r7, #12
   15068:	681b      	ldr	r3, [r3, #0]
   1506a:	2b00      	cmp	r3, #0
   1506c:	d101      	bne.n	15072 <FMG_CheckFileCoherence+0x1d6>
   1506e:	231b      	movs	r3, #27
   15070:	e01f      	b.n	150b2 <FMG_CheckFileCoherence+0x216>
   15072:	f107 0220 	add.w	r2, r7, #32
   15076:	f107 0378 	add.w	r3, r7, #120	; 0x78
   1507a:	4610      	mov	r0, r2
   1507c:	4619      	mov	r1, r3
   1507e:	f001 ff1b 	bl	16eb8 <md5_finish>
   15082:	f107 0314 	add.w	r3, r7, #20
   15086:	6818      	ldr	r0, [r3, #0]
   15088:	f002 fca8 	bl	179dc <FS_close>
   1508c:	f107 0314 	add.w	r3, r7, #20
   15090:	2200      	movs	r2, #0
   15092:	601a      	str	r2, [r3, #0]
   15094:	f107 0278 	add.w	r2, r7, #120	; 0x78
   15098:	f107 0388 	add.w	r3, r7, #136	; 0x88
   1509c:	4610      	mov	r0, r2
   1509e:	4619      	mov	r1, r3
   150a0:	2210      	movs	r2, #16
   150a2:	f7f3 edd4 	blx	8c4c <_init+0x17c>
   150a6:	4603      	mov	r3, r0
   150a8:	2b00      	cmp	r3, #0
   150aa:	d101      	bne.n	150b0 <FMG_CheckFileCoherence+0x214>
   150ac:	230a      	movs	r3, #10
   150ae:	e000      	b.n	150b2 <FMG_CheckFileCoherence+0x216>
   150b0:	231c      	movs	r3, #28
   150b2:	4618      	mov	r0, r3
   150b4:	4b07      	ldr	r3, [pc, #28]	; (150d4 <FMG_CheckFileCoherence+0x238>)
   150b6:	58e3      	ldr	r3, [r4, r3]
   150b8:	f8d7 24bc 	ldr.w	r2, [r7, #1212]	; 0x4bc
   150bc:	681b      	ldr	r3, [r3, #0]
   150be:	429a      	cmp	r2, r3
   150c0:	d001      	beq.n	150c6 <FMG_CheckFileCoherence+0x22a>
   150c2:	f7f3 ff15 	bl	8ef0 <__stack_chk_fail>
   150c6:	f507 6798 	add.w	r7, r7, #1216	; 0x4c0
   150ca:	46bd      	mov	sp, r7
   150cc:	bdb0      	pop	{r4, r5, r7, pc}
   150ce:	bf00      	nop
   150d0:	0000f266 	.word	0x0000f266
   150d4:	000000a0 	.word	0x000000a0
   150d8:	000065ac 	.word	0x000065ac
   150dc:	000065ae 	.word	0x000065ae

000150e0 <FMG_CheckRecordCoherence>:
   150e0:	b590      	push	{r4, r7, lr}
   150e2:	b0a1      	sub	sp, #132	; 0x84
   150e4:	af00      	add	r7, sp, #0
   150e6:	60f8      	str	r0, [r7, #12]
   150e8:	60b9      	str	r1, [r7, #8]
   150ea:	607a      	str	r2, [r7, #4]
   150ec:	4c19      	ldr	r4, [pc, #100]	; (15154 <FMG_CheckRecordCoherence+0x74>)
   150ee:	447c      	add	r4, pc
   150f0:	4b19      	ldr	r3, [pc, #100]	; (15158 <FMG_CheckRecordCoherence+0x78>)
   150f2:	58e3      	ldr	r3, [r4, r3]
   150f4:	681b      	ldr	r3, [r3, #0]
   150f6:	67fb      	str	r3, [r7, #124]	; 0x7c
   150f8:	f107 0314 	add.w	r3, r7, #20
   150fc:	4618      	mov	r0, r3
   150fe:	f001 fe15 	bl	16d2c <md5_init>
   15102:	f107 0314 	add.w	r3, r7, #20
   15106:	4618      	mov	r0, r3
   15108:	68f9      	ldr	r1, [r7, #12]
   1510a:	68ba      	ldr	r2, [r7, #8]
   1510c:	f001 fe48 	bl	16da0 <md5_append>
   15110:	f107 0214 	add.w	r2, r7, #20
   15114:	f107 036c 	add.w	r3, r7, #108	; 0x6c
   15118:	4610      	mov	r0, r2
   1511a:	4619      	mov	r1, r3
   1511c:	f001 fecc 	bl	16eb8 <md5_finish>
   15120:	f107 036c 	add.w	r3, r7, #108	; 0x6c
   15124:	6878      	ldr	r0, [r7, #4]
   15126:	4619      	mov	r1, r3
   15128:	2210      	movs	r2, #16
   1512a:	f7f3 ed90 	blx	8c4c <_init+0x17c>
   1512e:	4603      	mov	r3, r0
   15130:	2b00      	cmp	r3, #0
   15132:	d101      	bne.n	15138 <FMG_CheckRecordCoherence+0x58>
   15134:	230a      	movs	r3, #10
   15136:	e000      	b.n	1513a <FMG_CheckRecordCoherence+0x5a>
   15138:	231d      	movs	r3, #29
   1513a:	4618      	mov	r0, r3
   1513c:	4b06      	ldr	r3, [pc, #24]	; (15158 <FMG_CheckRecordCoherence+0x78>)
   1513e:	58e3      	ldr	r3, [r4, r3]
   15140:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
   15142:	681b      	ldr	r3, [r3, #0]
   15144:	429a      	cmp	r2, r3
   15146:	d001      	beq.n	1514c <FMG_CheckRecordCoherence+0x6c>
   15148:	f7f3 fed2 	bl	8ef0 <__stack_chk_fail>
   1514c:	f107 0784 	add.w	r7, r7, #132	; 0x84
   15150:	46bd      	mov	sp, r7
   15152:	bd90      	pop	{r4, r7, pc}
   15154:	0000f026 	.word	0x0000f026
   15158:	000000a0 	.word	0x000000a0

0001515c <FMG_CalculMD5>:
   1515c:	b5f0      	push	{r4, r5, r6, r7, lr}
   1515e:	b0a1      	sub	sp, #132	; 0x84
   15160:	af00      	add	r7, sp, #0
   15162:	60f8      	str	r0, [r7, #12]
   15164:	60b9      	str	r1, [r7, #8]
   15166:	607a      	str	r2, [r7, #4]
   15168:	4e17      	ldr	r6, [pc, #92]	; (151c8 <FMG_CalculMD5+0x6c>)
   1516a:	447e      	add	r6, pc
   1516c:	4b17      	ldr	r3, [pc, #92]	; (151cc <FMG_CalculMD5+0x70>)
   1516e:	58f3      	ldr	r3, [r6, r3]
   15170:	681b      	ldr	r3, [r3, #0]
   15172:	67fb      	str	r3, [r7, #124]	; 0x7c
   15174:	f107 0314 	add.w	r3, r7, #20
   15178:	4618      	mov	r0, r3
   1517a:	f001 fdd7 	bl	16d2c <md5_init>
   1517e:	f107 0314 	add.w	r3, r7, #20
   15182:	4618      	mov	r0, r3
   15184:	68f9      	ldr	r1, [r7, #12]
   15186:	68ba      	ldr	r2, [r7, #8]
   15188:	f001 fe0a 	bl	16da0 <md5_append>
   1518c:	f107 0214 	add.w	r2, r7, #20
   15190:	f107 036c 	add.w	r3, r7, #108	; 0x6c
   15194:	4610      	mov	r0, r2
   15196:	4619      	mov	r1, r3
   15198:	f001 fe8e 	bl	16eb8 <md5_finish>
   1519c:	687b      	ldr	r3, [r7, #4]
   1519e:	461c      	mov	r4, r3
   151a0:	f107 056c 	add.w	r5, r7, #108	; 0x6c
   151a4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   151a6:	6020      	str	r0, [r4, #0]
   151a8:	6061      	str	r1, [r4, #4]
   151aa:	60a2      	str	r2, [r4, #8]
   151ac:	60e3      	str	r3, [r4, #12]
   151ae:	4b07      	ldr	r3, [pc, #28]	; (151cc <FMG_CalculMD5+0x70>)
   151b0:	58f3      	ldr	r3, [r6, r3]
   151b2:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
   151b4:	681b      	ldr	r3, [r3, #0]
   151b6:	429a      	cmp	r2, r3
   151b8:	d001      	beq.n	151be <FMG_CalculMD5+0x62>
   151ba:	f7f3 fe99 	bl	8ef0 <__stack_chk_fail>
   151be:	f107 0784 	add.w	r7, r7, #132	; 0x84
   151c2:	46bd      	mov	sp, r7
   151c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   151c6:	bf00      	nop
   151c8:	0000efaa 	.word	0x0000efaa
   151cc:	000000a0 	.word	0x000000a0

000151d0 <FMG_AddRecord>:
   151d0:	b590      	push	{r4, r7, lr}
   151d2:	b0a3      	sub	sp, #140	; 0x8c
   151d4:	af04      	add	r7, sp, #16
   151d6:	6178      	str	r0, [r7, #20]
   151d8:	6139      	str	r1, [r7, #16]
   151da:	60fa      	str	r2, [r7, #12]
   151dc:	60bb      	str	r3, [r7, #8]
   151de:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
   151e2:	607b      	str	r3, [r7, #4]
   151e4:	4cb9      	ldr	r4, [pc, #740]	; (154cc <FMG_AddRecord+0x2fc>)
   151e6:	447c      	add	r4, pc
   151e8:	4bb9      	ldr	r3, [pc, #740]	; (154d0 <FMG_AddRecord+0x300>)
   151ea:	58e3      	ldr	r3, [r4, r3]
   151ec:	681b      	ldr	r3, [r3, #0]
   151ee:	677b      	str	r3, [r7, #116]	; 0x74
   151f0:	2318      	movs	r3, #24
   151f2:	61bb      	str	r3, [r7, #24]
   151f4:	2300      	movs	r3, #0
   151f6:	61fb      	str	r3, [r7, #28]
   151f8:	697b      	ldr	r3, [r7, #20]
   151fa:	681b      	ldr	r3, [r3, #0]
   151fc:	2b00      	cmp	r3, #0
   151fe:	d110      	bne.n	15222 <FMG_AddRecord+0x52>
   15200:	697b      	ldr	r3, [r7, #20]
   15202:	3304      	adds	r3, #4
   15204:	f107 0228 	add.w	r2, r7, #40	; 0x28
   15208:	4610      	mov	r0, r2
   1520a:	4619      	mov	r1, r3
   1520c:	f7f3 ecba 	blx	8b84 <_init+0xb4>
   15210:	697b      	ldr	r3, [r7, #20]
   15212:	3315      	adds	r3, #21
   15214:	f107 023c 	add.w	r2, r7, #60	; 0x3c
   15218:	4610      	mov	r0, r2
   1521a:	4619      	mov	r1, r3
   1521c:	f7f3 ecb2 	blx	8b84 <_init+0xb4>
   15220:	e028      	b.n	15274 <FMG_AddRecord+0xa4>
   15222:	697b      	ldr	r3, [r7, #20]
   15224:	681b      	ldr	r3, [r3, #0]
   15226:	2b01      	cmp	r3, #1
   15228:	d122      	bne.n	15270 <FMG_AddRecord+0xa0>
   1522a:	697b      	ldr	r3, [r7, #20]
   1522c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1522e:	2b00      	cmp	r3, #0
   15230:	d009      	beq.n	15246 <FMG_AddRecord+0x76>
   15232:	697b      	ldr	r3, [r7, #20]
   15234:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   15236:	2b01      	cmp	r3, #1
   15238:	d005      	beq.n	15246 <FMG_AddRecord+0x76>
   1523a:	697b      	ldr	r3, [r7, #20]
   1523c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1523e:	2b02      	cmp	r3, #2
   15240:	d001      	beq.n	15246 <FMG_AddRecord+0x76>
   15242:	230f      	movs	r3, #15
   15244:	e135      	b.n	154b2 <FMG_AddRecord+0x2e2>
   15246:	f107 0328 	add.w	r3, r7, #40	; 0x28
   1524a:	4618      	mov	r0, r3
   1524c:	4ba1      	ldr	r3, [pc, #644]	; (154d4 <FMG_AddRecord+0x304>)
   1524e:	447b      	add	r3, pc
   15250:	4619      	mov	r1, r3
   15252:	f7f3 ec98 	blx	8b84 <_init+0xb4>
   15256:	697b      	ldr	r3, [r7, #20]
   15258:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   1525a:	4b9f      	ldr	r3, [pc, #636]	; (154d8 <FMG_AddRecord+0x308>)
   1525c:	58e3      	ldr	r3, [r4, r3]
   1525e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   15262:	f107 023c 	add.w	r2, r7, #60	; 0x3c
   15266:	4610      	mov	r0, r2
   15268:	4619      	mov	r1, r3
   1526a:	f7f3 ec8c 	blx	8b84 <_init+0xb4>
   1526e:	e001      	b.n	15274 <FMG_AddRecord+0xa4>
   15270:	2311      	movs	r3, #17
   15272:	e11e      	b.n	154b2 <FMG_AddRecord+0x2e2>
   15274:	f107 0228 	add.w	r2, r7, #40	; 0x28
   15278:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   1527c:	4610      	mov	r0, r2
   1527e:	4619      	mov	r1, r3
   15280:	f7fc faa8 	bl	117d4 <ExtraireFileID>
   15284:	6238      	str	r0, [r7, #32]
   15286:	6a3b      	ldr	r3, [r7, #32]
   15288:	2b00      	cmp	r3, #0
   1528a:	db33      	blt.n	152f4 <FMG_AddRecord+0x124>
   1528c:	4b93      	ldr	r3, [pc, #588]	; (154dc <FMG_AddRecord+0x30c>)
   1528e:	58e3      	ldr	r3, [r4, r3]
   15290:	461a      	mov	r2, r3
   15292:	6a3b      	ldr	r3, [r7, #32]
   15294:	212c      	movs	r1, #44	; 0x2c
   15296:	fb01 f303 	mul.w	r3, r1, r3
   1529a:	18d3      	adds	r3, r2, r3
   1529c:	3328      	adds	r3, #40	; 0x28
   1529e:	681b      	ldr	r3, [r3, #0]
   152a0:	2b00      	cmp	r3, #0
   152a2:	d00d      	beq.n	152c0 <FMG_AddRecord+0xf0>
   152a4:	4b8d      	ldr	r3, [pc, #564]	; (154dc <FMG_AddRecord+0x30c>)
   152a6:	58e3      	ldr	r3, [r4, r3]
   152a8:	461a      	mov	r2, r3
   152aa:	6a3b      	ldr	r3, [r7, #32]
   152ac:	212c      	movs	r1, #44	; 0x2c
   152ae:	fb01 f303 	mul.w	r3, r1, r3
   152b2:	18d3      	adds	r3, r2, r3
   152b4:	3328      	adds	r3, #40	; 0x28
   152b6:	681b      	ldr	r3, [r3, #0]
   152b8:	2b01      	cmp	r3, #1
   152ba:	d001      	beq.n	152c0 <FMG_AddRecord+0xf0>
   152bc:	230d      	movs	r3, #13
   152be:	e0f8      	b.n	154b2 <FMG_AddRecord+0x2e2>
   152c0:	4b86      	ldr	r3, [pc, #536]	; (154dc <FMG_AddRecord+0x30c>)
   152c2:	58e3      	ldr	r3, [r4, r3]
   152c4:	461a      	mov	r2, r3
   152c6:	6a3b      	ldr	r3, [r7, #32]
   152c8:	212c      	movs	r1, #44	; 0x2c
   152ca:	fb01 f303 	mul.w	r3, r1, r3
   152ce:	18d3      	adds	r3, r2, r3
   152d0:	332c      	adds	r3, #44	; 0x2c
   152d2:	681b      	ldr	r3, [r3, #0]
   152d4:	2b00      	cmp	r3, #0
   152d6:	d00f      	beq.n	152f8 <FMG_AddRecord+0x128>
   152d8:	4b80      	ldr	r3, [pc, #512]	; (154dc <FMG_AddRecord+0x30c>)
   152da:	58e3      	ldr	r3, [r4, r3]
   152dc:	461a      	mov	r2, r3
   152de:	6a3b      	ldr	r3, [r7, #32]
   152e0:	212c      	movs	r1, #44	; 0x2c
   152e2:	fb01 f303 	mul.w	r3, r1, r3
   152e6:	18d3      	adds	r3, r2, r3
   152e8:	332c      	adds	r3, #44	; 0x2c
   152ea:	681b      	ldr	r3, [r3, #0]
   152ec:	2b01      	cmp	r3, #1
   152ee:	d003      	beq.n	152f8 <FMG_AddRecord+0x128>
   152f0:	230e      	movs	r3, #14
   152f2:	e0de      	b.n	154b2 <FMG_AddRecord+0x2e2>
   152f4:	230b      	movs	r3, #11
   152f6:	e0dc      	b.n	154b2 <FMG_AddRecord+0x2e2>
   152f8:	f107 0150 	add.w	r1, r7, #80	; 0x50
   152fc:	f107 0228 	add.w	r2, r7, #40	; 0x28
   15300:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   15304:	4608      	mov	r0, r1
   15306:	4976      	ldr	r1, [pc, #472]	; (154e0 <FMG_AddRecord+0x310>)
   15308:	4479      	add	r1, pc
   1530a:	f7f3 ec80 	blx	8c0c <_init+0x13c>
   1530e:	f107 0350 	add.w	r3, r7, #80	; 0x50
   15312:	4618      	mov	r0, r3
   15314:	f002 fbbc 	bl	17a90 <FS_exist>
   15318:	6278      	str	r0, [r7, #36]	; 0x24
   1531a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1531c:	2b02      	cmp	r3, #2
   1531e:	d001      	beq.n	15324 <FMG_AddRecord+0x154>
   15320:	230b      	movs	r3, #11
   15322:	e0c6      	b.n	154b2 <FMG_AddRecord+0x2e2>
   15324:	4b6d      	ldr	r3, [pc, #436]	; (154dc <FMG_AddRecord+0x30c>)
   15326:	58e3      	ldr	r3, [r4, r3]
   15328:	461a      	mov	r2, r3
   1532a:	6a3b      	ldr	r3, [r7, #32]
   1532c:	212c      	movs	r1, #44	; 0x2c
   1532e:	fb01 f303 	mul.w	r3, r1, r3
   15332:	18d3      	adds	r3, r2, r3
   15334:	332c      	adds	r3, #44	; 0x2c
   15336:	681b      	ldr	r3, [r3, #0]
   15338:	2b01      	cmp	r3, #1
   1533a:	d10c      	bne.n	15356 <FMG_AddRecord+0x186>
   1533c:	f107 0228 	add.w	r2, r7, #40	; 0x28
   15340:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   15344:	4610      	mov	r0, r2
   15346:	4619      	mov	r1, r3
   15348:	f7ff fda8 	bl	14e9c <FMG_CheckFileCoherence>
   1534c:	4603      	mov	r3, r0
   1534e:	2b0a      	cmp	r3, #10
   15350:	d001      	beq.n	15356 <FMG_AddRecord+0x186>
   15352:	231c      	movs	r3, #28
   15354:	e0ad      	b.n	154b2 <FMG_AddRecord+0x2e2>
   15356:	f107 0350 	add.w	r3, r7, #80	; 0x50
   1535a:	4618      	mov	r0, r3
   1535c:	4b61      	ldr	r3, [pc, #388]	; (154e4 <FMG_AddRecord+0x314>)
   1535e:	447b      	add	r3, pc
   15360:	4619      	mov	r1, r3
   15362:	f002 fc17 	bl	17b94 <FS_open>
   15366:	61f8      	str	r0, [r7, #28]
   15368:	69fb      	ldr	r3, [r7, #28]
   1536a:	2b00      	cmp	r3, #0
   1536c:	d102      	bne.n	15374 <FMG_AddRecord+0x1a4>
   1536e:	2313      	movs	r3, #19
   15370:	61bb      	str	r3, [r7, #24]
   15372:	e09d      	b.n	154b0 <FMG_AddRecord+0x2e0>
   15374:	69f8      	ldr	r0, [r7, #28]
   15376:	f002 fb31 	bl	179dc <FS_close>
   1537a:	2300      	movs	r3, #0
   1537c:	61fb      	str	r3, [r7, #28]
   1537e:	68bb      	ldr	r3, [r7, #8]
   15380:	2b01      	cmp	r3, #1
   15382:	d032      	beq.n	153ea <FMG_AddRecord+0x21a>
   15384:	2b01      	cmp	r3, #1
   15386:	d302      	bcc.n	1538e <FMG_AddRecord+0x1be>
   15388:	2b02      	cmp	r3, #2
   1538a:	d060      	beq.n	1544e <FMG_AddRecord+0x27e>
   1538c:	e08d      	b.n	154aa <FMG_AddRecord+0x2da>
   1538e:	4b53      	ldr	r3, [pc, #332]	; (154dc <FMG_AddRecord+0x30c>)
   15390:	58e3      	ldr	r3, [r4, r3]
   15392:	461a      	mov	r2, r3
   15394:	6a3b      	ldr	r3, [r7, #32]
   15396:	212c      	movs	r1, #44	; 0x2c
   15398:	fb01 f303 	mul.w	r3, r1, r3
   1539c:	18d3      	adds	r3, r2, r3
   1539e:	332c      	adds	r3, #44	; 0x2c
   153a0:	681b      	ldr	r3, [r3, #0]
   153a2:	2b01      	cmp	r3, #1
   153a4:	d110      	bne.n	153c8 <FMG_AddRecord+0x1f8>
   153a6:	f107 0228 	add.w	r2, r7, #40	; 0x28
   153aa:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   153ae:	6a39      	ldr	r1, [r7, #32]
   153b0:	9100      	str	r1, [sp, #0]
   153b2:	2102      	movs	r1, #2
   153b4:	9101      	str	r1, [sp, #4]
   153b6:	4610      	mov	r0, r2
   153b8:	4619      	mov	r1, r3
   153ba:	693a      	ldr	r2, [r7, #16]
   153bc:	68fb      	ldr	r3, [r7, #12]
   153be:	f7fc fc3d 	bl	11c3c <AddModifyRecordBeginWithCkecksum>
   153c2:	4603      	mov	r3, r0
   153c4:	61bb      	str	r3, [r7, #24]
   153c6:	e073      	b.n	154b0 <FMG_AddRecord+0x2e0>
   153c8:	f107 0228 	add.w	r2, r7, #40	; 0x28
   153cc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   153d0:	6a39      	ldr	r1, [r7, #32]
   153d2:	9100      	str	r1, [sp, #0]
   153d4:	2102      	movs	r1, #2
   153d6:	9101      	str	r1, [sp, #4]
   153d8:	4610      	mov	r0, r2
   153da:	4619      	mov	r1, r3
   153dc:	693a      	ldr	r2, [r7, #16]
   153de:	68fb      	ldr	r3, [r7, #12]
   153e0:	f7fc fa9c 	bl	1191c <AddModifyRecordBegin>
   153e4:	4603      	mov	r3, r0
   153e6:	61bb      	str	r3, [r7, #24]
   153e8:	e062      	b.n	154b0 <FMG_AddRecord+0x2e0>
   153ea:	4b3c      	ldr	r3, [pc, #240]	; (154dc <FMG_AddRecord+0x30c>)
   153ec:	58e3      	ldr	r3, [r4, r3]
   153ee:	461a      	mov	r2, r3
   153f0:	6a3b      	ldr	r3, [r7, #32]
   153f2:	212c      	movs	r1, #44	; 0x2c
   153f4:	fb01 f303 	mul.w	r3, r1, r3
   153f8:	18d3      	adds	r3, r2, r3
   153fa:	332c      	adds	r3, #44	; 0x2c
   153fc:	681b      	ldr	r3, [r3, #0]
   153fe:	2b01      	cmp	r3, #1
   15400:	d112      	bne.n	15428 <FMG_AddRecord+0x258>
   15402:	f107 0228 	add.w	r2, r7, #40	; 0x28
   15406:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   1540a:	6879      	ldr	r1, [r7, #4]
   1540c:	9100      	str	r1, [sp, #0]
   1540e:	6a39      	ldr	r1, [r7, #32]
   15410:	9101      	str	r1, [sp, #4]
   15412:	2102      	movs	r1, #2
   15414:	9102      	str	r1, [sp, #8]
   15416:	4610      	mov	r0, r2
   15418:	4619      	mov	r1, r3
   1541a:	693a      	ldr	r2, [r7, #16]
   1541c:	68fb      	ldr	r3, [r7, #12]
   1541e:	f7fd f827 	bl	12470 <AddModifyRecordMiddleWithCkecksum>
   15422:	4603      	mov	r3, r0
   15424:	61bb      	str	r3, [r7, #24]
   15426:	e043      	b.n	154b0 <FMG_AddRecord+0x2e0>
   15428:	f107 0228 	add.w	r2, r7, #40	; 0x28
   1542c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   15430:	6879      	ldr	r1, [r7, #4]
   15432:	9100      	str	r1, [sp, #0]
   15434:	6a39      	ldr	r1, [r7, #32]
   15436:	9101      	str	r1, [sp, #4]
   15438:	2102      	movs	r1, #2
   1543a:	9102      	str	r1, [sp, #8]
   1543c:	4610      	mov	r0, r2
   1543e:	4619      	mov	r1, r3
   15440:	693a      	ldr	r2, [r7, #16]
   15442:	68fb      	ldr	r3, [r7, #12]
   15444:	f7fc fe08 	bl	12058 <AddModifyRecordMiddle>
   15448:	4603      	mov	r3, r0
   1544a:	61bb      	str	r3, [r7, #24]
   1544c:	e030      	b.n	154b0 <FMG_AddRecord+0x2e0>
   1544e:	4b23      	ldr	r3, [pc, #140]	; (154dc <FMG_AddRecord+0x30c>)
   15450:	58e3      	ldr	r3, [r4, r3]
   15452:	461a      	mov	r2, r3
   15454:	6a3b      	ldr	r3, [r7, #32]
   15456:	212c      	movs	r1, #44	; 0x2c
   15458:	fb01 f303 	mul.w	r3, r1, r3
   1545c:	18d3      	adds	r3, r2, r3
   1545e:	332c      	adds	r3, #44	; 0x2c
   15460:	681b      	ldr	r3, [r3, #0]
   15462:	2b01      	cmp	r3, #1
   15464:	d110      	bne.n	15488 <FMG_AddRecord+0x2b8>
   15466:	f107 0228 	add.w	r2, r7, #40	; 0x28
   1546a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   1546e:	6a39      	ldr	r1, [r7, #32]
   15470:	9100      	str	r1, [sp, #0]
   15472:	2102      	movs	r1, #2
   15474:	9101      	str	r1, [sp, #4]
   15476:	4610      	mov	r0, r2
   15478:	4619      	mov	r1, r3
   1547a:	693a      	ldr	r2, [r7, #16]
   1547c:	68fb      	ldr	r3, [r7, #12]
   1547e:	f7fd fced 	bl	12e5c <AddModifyRecordEndWithCkecksum>
   15482:	4603      	mov	r3, r0
   15484:	61bb      	str	r3, [r7, #24]
   15486:	e013      	b.n	154b0 <FMG_AddRecord+0x2e0>
   15488:	f107 0228 	add.w	r2, r7, #40	; 0x28
   1548c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   15490:	6a39      	ldr	r1, [r7, #32]
   15492:	9100      	str	r1, [sp, #0]
   15494:	2102      	movs	r1, #2
   15496:	9101      	str	r1, [sp, #4]
   15498:	4610      	mov	r0, r2
   1549a:	4619      	mov	r1, r3
   1549c:	693a      	ldr	r2, [r7, #16]
   1549e:	68fb      	ldr	r3, [r7, #12]
   154a0:	f7fd fa7e 	bl	129a0 <AddModifyRecordEnd>
   154a4:	4603      	mov	r3, r0
   154a6:	61bb      	str	r3, [r7, #24]
   154a8:	e002      	b.n	154b0 <FMG_AddRecord+0x2e0>
   154aa:	2310      	movs	r3, #16
   154ac:	61bb      	str	r3, [r7, #24]
   154ae:	bf00      	nop
   154b0:	69bb      	ldr	r3, [r7, #24]
   154b2:	4618      	mov	r0, r3
   154b4:	4b06      	ldr	r3, [pc, #24]	; (154d0 <FMG_AddRecord+0x300>)
   154b6:	58e3      	ldr	r3, [r4, r3]
   154b8:	6f7a      	ldr	r2, [r7, #116]	; 0x74
   154ba:	681b      	ldr	r3, [r3, #0]
   154bc:	429a      	cmp	r2, r3
   154be:	d001      	beq.n	154c4 <FMG_AddRecord+0x2f4>
   154c0:	f7f3 fd16 	bl	8ef0 <__stack_chk_fail>
   154c4:	f107 077c 	add.w	r7, r7, #124	; 0x7c
   154c8:	46bd      	mov	sp, r7
   154ca:	bd90      	pop	{r4, r7, pc}
   154cc:	0000ef2e 	.word	0x0000ef2e
   154d0:	000000a0 	.word	0x000000a0
   154d4:	0000f7fe 	.word	0x0000f7fe
   154d8:	0000009c 	.word	0x0000009c
   154dc:	000000b4 	.word	0x000000b4
   154e0:	00006190 	.word	0x00006190
   154e4:	0000614e 	.word	0x0000614e

000154e8 <FMG_ModifyRecord>:
   154e8:	b590      	push	{r4, r7, lr}
   154ea:	b0a5      	sub	sp, #148	; 0x94
   154ec:	af04      	add	r7, sp, #16
   154ee:	6178      	str	r0, [r7, #20]
   154f0:	6139      	str	r1, [r7, #16]
   154f2:	60fa      	str	r2, [r7, #12]
   154f4:	60bb      	str	r3, [r7, #8]
   154f6:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
   154fa:	607b      	str	r3, [r7, #4]
   154fc:	4cc6      	ldr	r4, [pc, #792]	; (15818 <FMG_ModifyRecord+0x330>)
   154fe:	447c      	add	r4, pc
   15500:	4bc6      	ldr	r3, [pc, #792]	; (1581c <FMG_ModifyRecord+0x334>)
   15502:	58e3      	ldr	r3, [r4, r3]
   15504:	681b      	ldr	r3, [r3, #0]
   15506:	67fb      	str	r3, [r7, #124]	; 0x7c
   15508:	2318      	movs	r3, #24
   1550a:	61fb      	str	r3, [r7, #28]
   1550c:	2300      	movs	r3, #0
   1550e:	623b      	str	r3, [r7, #32]
   15510:	2300      	movs	r3, #0
   15512:	627b      	str	r3, [r7, #36]	; 0x24
   15514:	697b      	ldr	r3, [r7, #20]
   15516:	681b      	ldr	r3, [r3, #0]
   15518:	2b00      	cmp	r3, #0
   1551a:	d110      	bne.n	1553e <FMG_ModifyRecord+0x56>
   1551c:	697b      	ldr	r3, [r7, #20]
   1551e:	3304      	adds	r3, #4
   15520:	f107 0230 	add.w	r2, r7, #48	; 0x30
   15524:	4610      	mov	r0, r2
   15526:	4619      	mov	r1, r3
   15528:	f7f3 eb2c 	blx	8b84 <_init+0xb4>
   1552c:	697b      	ldr	r3, [r7, #20]
   1552e:	3315      	adds	r3, #21
   15530:	f107 0244 	add.w	r2, r7, #68	; 0x44
   15534:	4610      	mov	r0, r2
   15536:	4619      	mov	r1, r3
   15538:	f7f3 eb24 	blx	8b84 <_init+0xb4>
   1553c:	e028      	b.n	15590 <FMG_ModifyRecord+0xa8>
   1553e:	697b      	ldr	r3, [r7, #20]
   15540:	681b      	ldr	r3, [r3, #0]
   15542:	2b01      	cmp	r3, #1
   15544:	d122      	bne.n	1558c <FMG_ModifyRecord+0xa4>
   15546:	697b      	ldr	r3, [r7, #20]
   15548:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1554a:	2b00      	cmp	r3, #0
   1554c:	d009      	beq.n	15562 <FMG_ModifyRecord+0x7a>
   1554e:	697b      	ldr	r3, [r7, #20]
   15550:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   15552:	2b01      	cmp	r3, #1
   15554:	d005      	beq.n	15562 <FMG_ModifyRecord+0x7a>
   15556:	697b      	ldr	r3, [r7, #20]
   15558:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1555a:	2b02      	cmp	r3, #2
   1555c:	d001      	beq.n	15562 <FMG_ModifyRecord+0x7a>
   1555e:	230f      	movs	r3, #15
   15560:	e14c      	b.n	157fc <FMG_ModifyRecord+0x314>
   15562:	f107 0330 	add.w	r3, r7, #48	; 0x30
   15566:	4618      	mov	r0, r3
   15568:	4bad      	ldr	r3, [pc, #692]	; (15820 <FMG_ModifyRecord+0x338>)
   1556a:	447b      	add	r3, pc
   1556c:	4619      	mov	r1, r3
   1556e:	f7f3 eb0a 	blx	8b84 <_init+0xb4>
   15572:	697b      	ldr	r3, [r7, #20]
   15574:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   15576:	4bab      	ldr	r3, [pc, #684]	; (15824 <FMG_ModifyRecord+0x33c>)
   15578:	58e3      	ldr	r3, [r4, r3]
   1557a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   1557e:	f107 0244 	add.w	r2, r7, #68	; 0x44
   15582:	4610      	mov	r0, r2
   15584:	4619      	mov	r1, r3
   15586:	f7f3 eafe 	blx	8b84 <_init+0xb4>
   1558a:	e001      	b.n	15590 <FMG_ModifyRecord+0xa8>
   1558c:	2311      	movs	r3, #17
   1558e:	e135      	b.n	157fc <FMG_ModifyRecord+0x314>
   15590:	f107 0230 	add.w	r2, r7, #48	; 0x30
   15594:	f107 0344 	add.w	r3, r7, #68	; 0x44
   15598:	4610      	mov	r0, r2
   1559a:	4619      	mov	r1, r3
   1559c:	f7fc f91a 	bl	117d4 <ExtraireFileID>
   155a0:	62b8      	str	r0, [r7, #40]	; 0x28
   155a2:	6abb      	ldr	r3, [r7, #40]	; 0x28
   155a4:	2b00      	cmp	r3, #0
   155a6:	db33      	blt.n	15610 <FMG_ModifyRecord+0x128>
   155a8:	4b9f      	ldr	r3, [pc, #636]	; (15828 <FMG_ModifyRecord+0x340>)
   155aa:	58e3      	ldr	r3, [r4, r3]
   155ac:	461a      	mov	r2, r3
   155ae:	6abb      	ldr	r3, [r7, #40]	; 0x28
   155b0:	212c      	movs	r1, #44	; 0x2c
   155b2:	fb01 f303 	mul.w	r3, r1, r3
   155b6:	18d3      	adds	r3, r2, r3
   155b8:	3328      	adds	r3, #40	; 0x28
   155ba:	681b      	ldr	r3, [r3, #0]
   155bc:	2b00      	cmp	r3, #0
   155be:	d00d      	beq.n	155dc <FMG_ModifyRecord+0xf4>
   155c0:	4b99      	ldr	r3, [pc, #612]	; (15828 <FMG_ModifyRecord+0x340>)
   155c2:	58e3      	ldr	r3, [r4, r3]
   155c4:	461a      	mov	r2, r3
   155c6:	6abb      	ldr	r3, [r7, #40]	; 0x28
   155c8:	212c      	movs	r1, #44	; 0x2c
   155ca:	fb01 f303 	mul.w	r3, r1, r3
   155ce:	18d3      	adds	r3, r2, r3
   155d0:	3328      	adds	r3, #40	; 0x28
   155d2:	681b      	ldr	r3, [r3, #0]
   155d4:	2b01      	cmp	r3, #1
   155d6:	d001      	beq.n	155dc <FMG_ModifyRecord+0xf4>
   155d8:	230d      	movs	r3, #13
   155da:	e10f      	b.n	157fc <FMG_ModifyRecord+0x314>
   155dc:	4b92      	ldr	r3, [pc, #584]	; (15828 <FMG_ModifyRecord+0x340>)
   155de:	58e3      	ldr	r3, [r4, r3]
   155e0:	461a      	mov	r2, r3
   155e2:	6abb      	ldr	r3, [r7, #40]	; 0x28
   155e4:	212c      	movs	r1, #44	; 0x2c
   155e6:	fb01 f303 	mul.w	r3, r1, r3
   155ea:	18d3      	adds	r3, r2, r3
   155ec:	332c      	adds	r3, #44	; 0x2c
   155ee:	681b      	ldr	r3, [r3, #0]
   155f0:	2b00      	cmp	r3, #0
   155f2:	d00f      	beq.n	15614 <FMG_ModifyRecord+0x12c>
   155f4:	4b8c      	ldr	r3, [pc, #560]	; (15828 <FMG_ModifyRecord+0x340>)
   155f6:	58e3      	ldr	r3, [r4, r3]
   155f8:	461a      	mov	r2, r3
   155fa:	6abb      	ldr	r3, [r7, #40]	; 0x28
   155fc:	212c      	movs	r1, #44	; 0x2c
   155fe:	fb01 f303 	mul.w	r3, r1, r3
   15602:	18d3      	adds	r3, r2, r3
   15604:	332c      	adds	r3, #44	; 0x2c
   15606:	681b      	ldr	r3, [r3, #0]
   15608:	2b01      	cmp	r3, #1
   1560a:	d003      	beq.n	15614 <FMG_ModifyRecord+0x12c>
   1560c:	230e      	movs	r3, #14
   1560e:	e0f5      	b.n	157fc <FMG_ModifyRecord+0x314>
   15610:	230b      	movs	r3, #11
   15612:	e0f3      	b.n	157fc <FMG_ModifyRecord+0x314>
   15614:	f107 0158 	add.w	r1, r7, #88	; 0x58
   15618:	f107 0230 	add.w	r2, r7, #48	; 0x30
   1561c:	f107 0344 	add.w	r3, r7, #68	; 0x44
   15620:	4608      	mov	r0, r1
   15622:	4982      	ldr	r1, [pc, #520]	; (1582c <FMG_ModifyRecord+0x344>)
   15624:	4479      	add	r1, pc
   15626:	f7f3 eaf2 	blx	8c0c <_init+0x13c>
   1562a:	f107 0358 	add.w	r3, r7, #88	; 0x58
   1562e:	4618      	mov	r0, r3
   15630:	f002 fa2e 	bl	17a90 <FS_exist>
   15634:	62f8      	str	r0, [r7, #44]	; 0x2c
   15636:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   15638:	2b02      	cmp	r3, #2
   1563a:	d001      	beq.n	15640 <FMG_ModifyRecord+0x158>
   1563c:	230b      	movs	r3, #11
   1563e:	e0dd      	b.n	157fc <FMG_ModifyRecord+0x314>
   15640:	4b79      	ldr	r3, [pc, #484]	; (15828 <FMG_ModifyRecord+0x340>)
   15642:	58e3      	ldr	r3, [r4, r3]
   15644:	461a      	mov	r2, r3
   15646:	6abb      	ldr	r3, [r7, #40]	; 0x28
   15648:	212c      	movs	r1, #44	; 0x2c
   1564a:	fb01 f303 	mul.w	r3, r1, r3
   1564e:	18d3      	adds	r3, r2, r3
   15650:	332c      	adds	r3, #44	; 0x2c
   15652:	681b      	ldr	r3, [r3, #0]
   15654:	2b01      	cmp	r3, #1
   15656:	d10c      	bne.n	15672 <FMG_ModifyRecord+0x18a>
   15658:	f107 0230 	add.w	r2, r7, #48	; 0x30
   1565c:	f107 0344 	add.w	r3, r7, #68	; 0x44
   15660:	4610      	mov	r0, r2
   15662:	4619      	mov	r1, r3
   15664:	f7ff fc1a 	bl	14e9c <FMG_CheckFileCoherence>
   15668:	4603      	mov	r3, r0
   1566a:	2b0a      	cmp	r3, #10
   1566c:	d001      	beq.n	15672 <FMG_ModifyRecord+0x18a>
   1566e:	231c      	movs	r3, #28
   15670:	e0c4      	b.n	157fc <FMG_ModifyRecord+0x314>
   15672:	f107 0358 	add.w	r3, r7, #88	; 0x58
   15676:	4618      	mov	r0, r3
   15678:	4b6d      	ldr	r3, [pc, #436]	; (15830 <FMG_ModifyRecord+0x348>)
   1567a:	447b      	add	r3, pc
   1567c:	4619      	mov	r1, r3
   1567e:	f002 fa89 	bl	17b94 <FS_open>
   15682:	6278      	str	r0, [r7, #36]	; 0x24
   15684:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   15686:	2b00      	cmp	r3, #0
   15688:	d102      	bne.n	15690 <FMG_ModifyRecord+0x1a8>
   1568a:	2313      	movs	r3, #19
   1568c:	61fb      	str	r3, [r7, #28]
   1568e:	e0b4      	b.n	157fa <FMG_ModifyRecord+0x312>
   15690:	6a78      	ldr	r0, [r7, #36]	; 0x24
   15692:	f002 fa29 	bl	17ae8 <FS_length>
   15696:	6238      	str	r0, [r7, #32]
   15698:	6a78      	ldr	r0, [r7, #36]	; 0x24
   1569a:	f002 f99f 	bl	179dc <FS_close>
   1569e:	2300      	movs	r3, #0
   156a0:	627b      	str	r3, [r7, #36]	; 0x24
   156a2:	4b61      	ldr	r3, [pc, #388]	; (15828 <FMG_ModifyRecord+0x340>)
   156a4:	58e3      	ldr	r3, [r4, r3]
   156a6:	461a      	mov	r2, r3
   156a8:	6abb      	ldr	r3, [r7, #40]	; 0x28
   156aa:	212c      	movs	r1, #44	; 0x2c
   156ac:	fb01 f303 	mul.w	r3, r1, r3
   156b0:	18d3      	adds	r3, r2, r3
   156b2:	332c      	adds	r3, #44	; 0x2c
   156b4:	681b      	ldr	r3, [r3, #0]
   156b6:	6a38      	ldr	r0, [r7, #32]
   156b8:	4619      	mov	r1, r3
   156ba:	f7fe ffa7 	bl	1460c <IsFileEmpty>
   156be:	4603      	mov	r3, r0
   156c0:	2b00      	cmp	r3, #0
   156c2:	d001      	beq.n	156c8 <FMG_ModifyRecord+0x1e0>
   156c4:	2318      	movs	r3, #24
   156c6:	e099      	b.n	157fc <FMG_ModifyRecord+0x314>
   156c8:	68bb      	ldr	r3, [r7, #8]
   156ca:	2b01      	cmp	r3, #1
   156cc:	d032      	beq.n	15734 <FMG_ModifyRecord+0x24c>
   156ce:	2b01      	cmp	r3, #1
   156d0:	d302      	bcc.n	156d8 <FMG_ModifyRecord+0x1f0>
   156d2:	2b02      	cmp	r3, #2
   156d4:	d060      	beq.n	15798 <FMG_ModifyRecord+0x2b0>
   156d6:	e08d      	b.n	157f4 <FMG_ModifyRecord+0x30c>
   156d8:	4b53      	ldr	r3, [pc, #332]	; (15828 <FMG_ModifyRecord+0x340>)
   156da:	58e3      	ldr	r3, [r4, r3]
   156dc:	461a      	mov	r2, r3
   156de:	6abb      	ldr	r3, [r7, #40]	; 0x28
   156e0:	212c      	movs	r1, #44	; 0x2c
   156e2:	fb01 f303 	mul.w	r3, r1, r3
   156e6:	18d3      	adds	r3, r2, r3
   156e8:	332c      	adds	r3, #44	; 0x2c
   156ea:	681b      	ldr	r3, [r3, #0]
   156ec:	2b01      	cmp	r3, #1
   156ee:	d110      	bne.n	15712 <FMG_ModifyRecord+0x22a>
   156f0:	f107 0230 	add.w	r2, r7, #48	; 0x30
   156f4:	f107 0344 	add.w	r3, r7, #68	; 0x44
   156f8:	6ab9      	ldr	r1, [r7, #40]	; 0x28
   156fa:	9100      	str	r1, [sp, #0]
   156fc:	2101      	movs	r1, #1
   156fe:	9101      	str	r1, [sp, #4]
   15700:	4610      	mov	r0, r2
   15702:	4619      	mov	r1, r3
   15704:	693a      	ldr	r2, [r7, #16]
   15706:	68fb      	ldr	r3, [r7, #12]
   15708:	f7fc fa98 	bl	11c3c <AddModifyRecordBeginWithCkecksum>
   1570c:	4603      	mov	r3, r0
   1570e:	61fb      	str	r3, [r7, #28]
   15710:	e073      	b.n	157fa <FMG_ModifyRecord+0x312>
   15712:	f107 0230 	add.w	r2, r7, #48	; 0x30
   15716:	f107 0344 	add.w	r3, r7, #68	; 0x44
   1571a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
   1571c:	9100      	str	r1, [sp, #0]
   1571e:	2101      	movs	r1, #1
   15720:	9101      	str	r1, [sp, #4]
   15722:	4610      	mov	r0, r2
   15724:	4619      	mov	r1, r3
   15726:	693a      	ldr	r2, [r7, #16]
   15728:	68fb      	ldr	r3, [r7, #12]
   1572a:	f7fc f8f7 	bl	1191c <AddModifyRecordBegin>
   1572e:	4603      	mov	r3, r0
   15730:	61fb      	str	r3, [r7, #28]
   15732:	e062      	b.n	157fa <FMG_ModifyRecord+0x312>
   15734:	4b3c      	ldr	r3, [pc, #240]	; (15828 <FMG_ModifyRecord+0x340>)
   15736:	58e3      	ldr	r3, [r4, r3]
   15738:	461a      	mov	r2, r3
   1573a:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1573c:	212c      	movs	r1, #44	; 0x2c
   1573e:	fb01 f303 	mul.w	r3, r1, r3
   15742:	18d3      	adds	r3, r2, r3
   15744:	332c      	adds	r3, #44	; 0x2c
   15746:	681b      	ldr	r3, [r3, #0]
   15748:	2b01      	cmp	r3, #1
   1574a:	d112      	bne.n	15772 <FMG_ModifyRecord+0x28a>
   1574c:	f107 0230 	add.w	r2, r7, #48	; 0x30
   15750:	f107 0344 	add.w	r3, r7, #68	; 0x44
   15754:	6879      	ldr	r1, [r7, #4]
   15756:	9100      	str	r1, [sp, #0]
   15758:	6ab9      	ldr	r1, [r7, #40]	; 0x28
   1575a:	9101      	str	r1, [sp, #4]
   1575c:	2101      	movs	r1, #1
   1575e:	9102      	str	r1, [sp, #8]
   15760:	4610      	mov	r0, r2
   15762:	4619      	mov	r1, r3
   15764:	693a      	ldr	r2, [r7, #16]
   15766:	68fb      	ldr	r3, [r7, #12]
   15768:	f7fc fe82 	bl	12470 <AddModifyRecordMiddleWithCkecksum>
   1576c:	4603      	mov	r3, r0
   1576e:	61fb      	str	r3, [r7, #28]
   15770:	e043      	b.n	157fa <FMG_ModifyRecord+0x312>
   15772:	f107 0230 	add.w	r2, r7, #48	; 0x30
   15776:	f107 0344 	add.w	r3, r7, #68	; 0x44
   1577a:	6879      	ldr	r1, [r7, #4]
   1577c:	9100      	str	r1, [sp, #0]
   1577e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
   15780:	9101      	str	r1, [sp, #4]
   15782:	2101      	movs	r1, #1
   15784:	9102      	str	r1, [sp, #8]
   15786:	4610      	mov	r0, r2
   15788:	4619      	mov	r1, r3
   1578a:	693a      	ldr	r2, [r7, #16]
   1578c:	68fb      	ldr	r3, [r7, #12]
   1578e:	f7fc fc63 	bl	12058 <AddModifyRecordMiddle>
   15792:	4603      	mov	r3, r0
   15794:	61fb      	str	r3, [r7, #28]
   15796:	e030      	b.n	157fa <FMG_ModifyRecord+0x312>
   15798:	4b23      	ldr	r3, [pc, #140]	; (15828 <FMG_ModifyRecord+0x340>)
   1579a:	58e3      	ldr	r3, [r4, r3]
   1579c:	461a      	mov	r2, r3
   1579e:	6abb      	ldr	r3, [r7, #40]	; 0x28
   157a0:	212c      	movs	r1, #44	; 0x2c
   157a2:	fb01 f303 	mul.w	r3, r1, r3
   157a6:	18d3      	adds	r3, r2, r3
   157a8:	332c      	adds	r3, #44	; 0x2c
   157aa:	681b      	ldr	r3, [r3, #0]
   157ac:	2b01      	cmp	r3, #1
   157ae:	d110      	bne.n	157d2 <FMG_ModifyRecord+0x2ea>
   157b0:	f107 0230 	add.w	r2, r7, #48	; 0x30
   157b4:	f107 0344 	add.w	r3, r7, #68	; 0x44
   157b8:	6ab9      	ldr	r1, [r7, #40]	; 0x28
   157ba:	9100      	str	r1, [sp, #0]
   157bc:	2101      	movs	r1, #1
   157be:	9101      	str	r1, [sp, #4]
   157c0:	4610      	mov	r0, r2
   157c2:	4619      	mov	r1, r3
   157c4:	693a      	ldr	r2, [r7, #16]
   157c6:	68fb      	ldr	r3, [r7, #12]
   157c8:	f7fd fb48 	bl	12e5c <AddModifyRecordEndWithCkecksum>
   157cc:	4603      	mov	r3, r0
   157ce:	61fb      	str	r3, [r7, #28]
   157d0:	e013      	b.n	157fa <FMG_ModifyRecord+0x312>
   157d2:	f107 0230 	add.w	r2, r7, #48	; 0x30
   157d6:	f107 0344 	add.w	r3, r7, #68	; 0x44
   157da:	6ab9      	ldr	r1, [r7, #40]	; 0x28
   157dc:	9100      	str	r1, [sp, #0]
   157de:	2101      	movs	r1, #1
   157e0:	9101      	str	r1, [sp, #4]
   157e2:	4610      	mov	r0, r2
   157e4:	4619      	mov	r1, r3
   157e6:	693a      	ldr	r2, [r7, #16]
   157e8:	68fb      	ldr	r3, [r7, #12]
   157ea:	f7fd f8d9 	bl	129a0 <AddModifyRecordEnd>
   157ee:	4603      	mov	r3, r0
   157f0:	61fb      	str	r3, [r7, #28]
   157f2:	e002      	b.n	157fa <FMG_ModifyRecord+0x312>
   157f4:	2310      	movs	r3, #16
   157f6:	61fb      	str	r3, [r7, #28]
   157f8:	bf00      	nop
   157fa:	69fb      	ldr	r3, [r7, #28]
   157fc:	4618      	mov	r0, r3
   157fe:	4b07      	ldr	r3, [pc, #28]	; (1581c <FMG_ModifyRecord+0x334>)
   15800:	58e3      	ldr	r3, [r4, r3]
   15802:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
   15804:	681b      	ldr	r3, [r3, #0]
   15806:	429a      	cmp	r2, r3
   15808:	d001      	beq.n	1580e <FMG_ModifyRecord+0x326>
   1580a:	f7f3 fb71 	bl	8ef0 <__stack_chk_fail>
   1580e:	f107 0784 	add.w	r7, r7, #132	; 0x84
   15812:	46bd      	mov	sp, r7
   15814:	bd90      	pop	{r4, r7, pc}
   15816:	bf00      	nop
   15818:	0000ec16 	.word	0x0000ec16
   1581c:	000000a0 	.word	0x000000a0
   15820:	0000f4e2 	.word	0x0000f4e2
   15824:	0000009c 	.word	0x0000009c
   15828:	000000b4 	.word	0x000000b4
   1582c:	00005e74 	.word	0x00005e74
   15830:	00005e32 	.word	0x00005e32

00015834 <FMG_ReadRecord>:
   15834:	b590      	push	{r4, r7, lr}
   15836:	b0a9      	sub	sp, #164	; 0xa4
   15838:	af00      	add	r7, sp, #0
   1583a:	6178      	str	r0, [r7, #20]
   1583c:	6139      	str	r1, [r7, #16]
   1583e:	60fa      	str	r2, [r7, #12]
   15840:	60bb      	str	r3, [r7, #8]
   15842:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
   15846:	607b      	str	r3, [r7, #4]
   15848:	f8df 4450 	ldr.w	r4, [pc, #1104]	; 15c9c <FMG_ReadRecord+0x468>
   1584c:	447c      	add	r4, pc
   1584e:	f8df 3450 	ldr.w	r3, [pc, #1104]	; 15ca0 <FMG_ReadRecord+0x46c>
   15852:	58e3      	ldr	r3, [r4, r3]
   15854:	681b      	ldr	r3, [r3, #0]
   15856:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
   1585a:	2300      	movs	r3, #0
   1585c:	61fb      	str	r3, [r7, #28]
   1585e:	2319      	movs	r3, #25
   15860:	62bb      	str	r3, [r7, #40]	; 0x28
   15862:	2300      	movs	r3, #0
   15864:	633b      	str	r3, [r7, #48]	; 0x30
   15866:	2300      	movs	r3, #0
   15868:	63bb      	str	r3, [r7, #56]	; 0x38
   1586a:	2300      	movs	r3, #0
   1586c:	63fb      	str	r3, [r7, #60]	; 0x3c
   1586e:	697b      	ldr	r3, [r7, #20]
   15870:	681b      	ldr	r3, [r3, #0]
   15872:	2b00      	cmp	r3, #0
   15874:	d110      	bne.n	15898 <FMG_ReadRecord+0x64>
   15876:	697b      	ldr	r3, [r7, #20]
   15878:	3304      	adds	r3, #4
   1587a:	f107 0250 	add.w	r2, r7, #80	; 0x50
   1587e:	4610      	mov	r0, r2
   15880:	4619      	mov	r1, r3
   15882:	f7f3 e980 	blx	8b84 <_init+0xb4>
   15886:	697b      	ldr	r3, [r7, #20]
   15888:	3315      	adds	r3, #21
   1588a:	f107 0264 	add.w	r2, r7, #100	; 0x64
   1588e:	4610      	mov	r0, r2
   15890:	4619      	mov	r1, r3
   15892:	f7f3 e978 	blx	8b84 <_init+0xb4>
   15896:	e028      	b.n	158ea <FMG_ReadRecord+0xb6>
   15898:	697b      	ldr	r3, [r7, #20]
   1589a:	681b      	ldr	r3, [r3, #0]
   1589c:	2b01      	cmp	r3, #1
   1589e:	d122      	bne.n	158e6 <FMG_ReadRecord+0xb2>
   158a0:	697b      	ldr	r3, [r7, #20]
   158a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   158a4:	2b00      	cmp	r3, #0
   158a6:	d009      	beq.n	158bc <FMG_ReadRecord+0x88>
   158a8:	697b      	ldr	r3, [r7, #20]
   158aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   158ac:	2b01      	cmp	r3, #1
   158ae:	d005      	beq.n	158bc <FMG_ReadRecord+0x88>
   158b0:	697b      	ldr	r3, [r7, #20]
   158b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   158b4:	2b02      	cmp	r3, #2
   158b6:	d001      	beq.n	158bc <FMG_ReadRecord+0x88>
   158b8:	230f      	movs	r3, #15
   158ba:	e1e1      	b.n	15c80 <FMG_ReadRecord+0x44c>
   158bc:	f107 0350 	add.w	r3, r7, #80	; 0x50
   158c0:	4618      	mov	r0, r3
   158c2:	4bf8      	ldr	r3, [pc, #992]	; (15ca4 <FMG_ReadRecord+0x470>)
   158c4:	447b      	add	r3, pc
   158c6:	4619      	mov	r1, r3
   158c8:	f7f3 e95c 	blx	8b84 <_init+0xb4>
   158cc:	697b      	ldr	r3, [r7, #20]
   158ce:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   158d0:	4bf5      	ldr	r3, [pc, #980]	; (15ca8 <FMG_ReadRecord+0x474>)
   158d2:	58e3      	ldr	r3, [r4, r3]
   158d4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   158d8:	f107 0264 	add.w	r2, r7, #100	; 0x64
   158dc:	4610      	mov	r0, r2
   158de:	4619      	mov	r1, r3
   158e0:	f7f3 e950 	blx	8b84 <_init+0xb4>
   158e4:	e001      	b.n	158ea <FMG_ReadRecord+0xb6>
   158e6:	2311      	movs	r3, #17
   158e8:	e1ca      	b.n	15c80 <FMG_ReadRecord+0x44c>
   158ea:	f107 0250 	add.w	r2, r7, #80	; 0x50
   158ee:	f107 0364 	add.w	r3, r7, #100	; 0x64
   158f2:	4610      	mov	r0, r2
   158f4:	4619      	mov	r1, r3
   158f6:	f7fb ff6d 	bl	117d4 <ExtraireFileID>
   158fa:	6438      	str	r0, [r7, #64]	; 0x40
   158fc:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   158fe:	2b00      	cmp	r3, #0
   15900:	db33      	blt.n	1596a <FMG_ReadRecord+0x136>
   15902:	4bea      	ldr	r3, [pc, #936]	; (15cac <FMG_ReadRecord+0x478>)
   15904:	58e3      	ldr	r3, [r4, r3]
   15906:	461a      	mov	r2, r3
   15908:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   1590a:	212c      	movs	r1, #44	; 0x2c
   1590c:	fb01 f303 	mul.w	r3, r1, r3
   15910:	18d3      	adds	r3, r2, r3
   15912:	3328      	adds	r3, #40	; 0x28
   15914:	681b      	ldr	r3, [r3, #0]
   15916:	2b00      	cmp	r3, #0
   15918:	d00d      	beq.n	15936 <FMG_ReadRecord+0x102>
   1591a:	4be4      	ldr	r3, [pc, #912]	; (15cac <FMG_ReadRecord+0x478>)
   1591c:	58e3      	ldr	r3, [r4, r3]
   1591e:	461a      	mov	r2, r3
   15920:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   15922:	212c      	movs	r1, #44	; 0x2c
   15924:	fb01 f303 	mul.w	r3, r1, r3
   15928:	18d3      	adds	r3, r2, r3
   1592a:	3328      	adds	r3, #40	; 0x28
   1592c:	681b      	ldr	r3, [r3, #0]
   1592e:	2b01      	cmp	r3, #1
   15930:	d001      	beq.n	15936 <FMG_ReadRecord+0x102>
   15932:	230d      	movs	r3, #13
   15934:	e1a4      	b.n	15c80 <FMG_ReadRecord+0x44c>
   15936:	4bdd      	ldr	r3, [pc, #884]	; (15cac <FMG_ReadRecord+0x478>)
   15938:	58e3      	ldr	r3, [r4, r3]
   1593a:	461a      	mov	r2, r3
   1593c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   1593e:	212c      	movs	r1, #44	; 0x2c
   15940:	fb01 f303 	mul.w	r3, r1, r3
   15944:	18d3      	adds	r3, r2, r3
   15946:	332c      	adds	r3, #44	; 0x2c
   15948:	681b      	ldr	r3, [r3, #0]
   1594a:	2b00      	cmp	r3, #0
   1594c:	d00f      	beq.n	1596e <FMG_ReadRecord+0x13a>
   1594e:	4bd7      	ldr	r3, [pc, #860]	; (15cac <FMG_ReadRecord+0x478>)
   15950:	58e3      	ldr	r3, [r4, r3]
   15952:	461a      	mov	r2, r3
   15954:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   15956:	212c      	movs	r1, #44	; 0x2c
   15958:	fb01 f303 	mul.w	r3, r1, r3
   1595c:	18d3      	adds	r3, r2, r3
   1595e:	332c      	adds	r3, #44	; 0x2c
   15960:	681b      	ldr	r3, [r3, #0]
   15962:	2b01      	cmp	r3, #1
   15964:	d003      	beq.n	1596e <FMG_ReadRecord+0x13a>
   15966:	230e      	movs	r3, #14
   15968:	e18a      	b.n	15c80 <FMG_ReadRecord+0x44c>
   1596a:	230b      	movs	r3, #11
   1596c:	e188      	b.n	15c80 <FMG_ReadRecord+0x44c>
   1596e:	68bb      	ldr	r3, [r7, #8]
   15970:	2b00      	cmp	r3, #0
   15972:	d007      	beq.n	15984 <FMG_ReadRecord+0x150>
   15974:	68bb      	ldr	r3, [r7, #8]
   15976:	2b01      	cmp	r3, #1
   15978:	d004      	beq.n	15984 <FMG_ReadRecord+0x150>
   1597a:	68bb      	ldr	r3, [r7, #8]
   1597c:	2b02      	cmp	r3, #2
   1597e:	d001      	beq.n	15984 <FMG_ReadRecord+0x150>
   15980:	2310      	movs	r3, #16
   15982:	e17d      	b.n	15c80 <FMG_ReadRecord+0x44c>
   15984:	f107 0178 	add.w	r1, r7, #120	; 0x78
   15988:	f107 0250 	add.w	r2, r7, #80	; 0x50
   1598c:	f107 0364 	add.w	r3, r7, #100	; 0x64
   15990:	4608      	mov	r0, r1
   15992:	49c7      	ldr	r1, [pc, #796]	; (15cb0 <FMG_ReadRecord+0x47c>)
   15994:	4479      	add	r1, pc
   15996:	f7f3 e93a 	blx	8c0c <_init+0x13c>
   1599a:	f107 0378 	add.w	r3, r7, #120	; 0x78
   1599e:	4618      	mov	r0, r3
   159a0:	f002 f876 	bl	17a90 <FS_exist>
   159a4:	6478      	str	r0, [r7, #68]	; 0x44
   159a6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
   159a8:	2b02      	cmp	r3, #2
   159aa:	d001      	beq.n	159b0 <FMG_ReadRecord+0x17c>
   159ac:	230b      	movs	r3, #11
   159ae:	e167      	b.n	15c80 <FMG_ReadRecord+0x44c>
   159b0:	4bbe      	ldr	r3, [pc, #760]	; (15cac <FMG_ReadRecord+0x478>)
   159b2:	58e3      	ldr	r3, [r4, r3]
   159b4:	461a      	mov	r2, r3
   159b6:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   159b8:	212c      	movs	r1, #44	; 0x2c
   159ba:	fb01 f303 	mul.w	r3, r1, r3
   159be:	18d3      	adds	r3, r2, r3
   159c0:	332c      	adds	r3, #44	; 0x2c
   159c2:	681b      	ldr	r3, [r3, #0]
   159c4:	2b01      	cmp	r3, #1
   159c6:	d10c      	bne.n	159e2 <FMG_ReadRecord+0x1ae>
   159c8:	f107 0250 	add.w	r2, r7, #80	; 0x50
   159cc:	f107 0364 	add.w	r3, r7, #100	; 0x64
   159d0:	4610      	mov	r0, r2
   159d2:	4619      	mov	r1, r3
   159d4:	f7ff fa62 	bl	14e9c <FMG_CheckFileCoherence>
   159d8:	4603      	mov	r3, r0
   159da:	2b0a      	cmp	r3, #10
   159dc:	d001      	beq.n	159e2 <FMG_ReadRecord+0x1ae>
   159de:	231c      	movs	r3, #28
   159e0:	e14e      	b.n	15c80 <FMG_ReadRecord+0x44c>
   159e2:	f107 0378 	add.w	r3, r7, #120	; 0x78
   159e6:	4618      	mov	r0, r3
   159e8:	4bb2      	ldr	r3, [pc, #712]	; (15cb4 <FMG_ReadRecord+0x480>)
   159ea:	447b      	add	r3, pc
   159ec:	4619      	mov	r1, r3
   159ee:	f002 f8d1 	bl	17b94 <FS_open>
   159f2:	63f8      	str	r0, [r7, #60]	; 0x3c
   159f4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   159f6:	2b00      	cmp	r3, #0
   159f8:	d102      	bne.n	15a00 <FMG_ReadRecord+0x1cc>
   159fa:	2313      	movs	r3, #19
   159fc:	62bb      	str	r3, [r7, #40]	; 0x28
   159fe:	e13e      	b.n	15c7e <FMG_ReadRecord+0x44a>
   15a00:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
   15a02:	f002 f871 	bl	17ae8 <FS_length>
   15a06:	64b8      	str	r0, [r7, #72]	; 0x48
   15a08:	4ba8      	ldr	r3, [pc, #672]	; (15cac <FMG_ReadRecord+0x478>)
   15a0a:	58e3      	ldr	r3, [r4, r3]
   15a0c:	461a      	mov	r2, r3
   15a0e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   15a10:	212c      	movs	r1, #44	; 0x2c
   15a12:	fb01 f303 	mul.w	r3, r1, r3
   15a16:	18d3      	adds	r3, r2, r3
   15a18:	332c      	adds	r3, #44	; 0x2c
   15a1a:	681b      	ldr	r3, [r3, #0]
   15a1c:	6cb8      	ldr	r0, [r7, #72]	; 0x48
   15a1e:	4619      	mov	r1, r3
   15a20:	f7fe fdf4 	bl	1460c <IsFileEmpty>
   15a24:	4603      	mov	r3, r0
   15a26:	2b00      	cmp	r3, #0
   15a28:	d006      	beq.n	15a38 <FMG_ReadRecord+0x204>
   15a2a:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
   15a2c:	f001 ffd6 	bl	179dc <FS_close>
   15a30:	2300      	movs	r3, #0
   15a32:	63fb      	str	r3, [r7, #60]	; 0x3c
   15a34:	2319      	movs	r3, #25
   15a36:	e123      	b.n	15c80 <FMG_ReadRecord+0x44c>
   15a38:	6cbb      	ldr	r3, [r7, #72]	; 0x48
   15a3a:	4618      	mov	r0, r3
   15a3c:	f002 fa36 	bl	17eac <PageAlloc>
   15a40:	63b8      	str	r0, [r7, #56]	; 0x38
   15a42:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   15a44:	2b00      	cmp	r3, #0
   15a46:	f000 8112 	beq.w	15c6e <FMG_ReadRecord+0x43a>
   15a4a:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
   15a4c:	2100      	movs	r1, #0
   15a4e:	2200      	movs	r2, #0
   15a50:	f002 f920 	bl	17c94 <FS_seek>
   15a54:	6478      	str	r0, [r7, #68]	; 0x44
   15a56:	6c7b      	ldr	r3, [r7, #68]	; 0x44
   15a58:	2b02      	cmp	r3, #2
   15a5a:	f040 8108 	bne.w	15c6e <FMG_ReadRecord+0x43a>
   15a5e:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   15a60:	6cb9      	ldr	r1, [r7, #72]	; 0x48
   15a62:	2201      	movs	r2, #1
   15a64:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   15a66:	f002 f8bf 	bl	17be8 <FS_read>
   15a6a:	64f8      	str	r0, [r7, #76]	; 0x4c
   15a6c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   15a6e:	2b01      	cmp	r3, #1
   15a70:	f040 80fd 	bne.w	15c6e <FMG_ReadRecord+0x43a>
   15a74:	4b8d      	ldr	r3, [pc, #564]	; (15cac <FMG_ReadRecord+0x478>)
   15a76:	58e3      	ldr	r3, [r4, r3]
   15a78:	461a      	mov	r2, r3
   15a7a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   15a7c:	212c      	movs	r1, #44	; 0x2c
   15a7e:	fb01 f303 	mul.w	r3, r1, r3
   15a82:	18d3      	adds	r3, r2, r3
   15a84:	3328      	adds	r3, #40	; 0x28
   15a86:	681b      	ldr	r3, [r3, #0]
   15a88:	2b01      	cmp	r3, #1
   15a8a:	f040 80b6 	bne.w	15bfa <FMG_ReadRecord+0x3c6>
   15a8e:	4b87      	ldr	r3, [pc, #540]	; (15cac <FMG_ReadRecord+0x478>)
   15a90:	58e3      	ldr	r3, [r4, r3]
   15a92:	461a      	mov	r2, r3
   15a94:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   15a96:	212c      	movs	r1, #44	; 0x2c
   15a98:	fb01 f303 	mul.w	r3, r1, r3
   15a9c:	18d3      	adds	r3, r2, r3
   15a9e:	332c      	adds	r3, #44	; 0x2c
   15aa0:	681b      	ldr	r3, [r3, #0]
   15aa2:	2b01      	cmp	r3, #1
   15aa4:	d103      	bne.n	15aae <FMG_ReadRecord+0x27a>
   15aa6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
   15aa8:	3b10      	subs	r3, #16
   15aaa:	623b      	str	r3, [r7, #32]
   15aac:	e001      	b.n	15ab2 <FMG_ReadRecord+0x27e>
   15aae:	6cbb      	ldr	r3, [r7, #72]	; 0x48
   15ab0:	623b      	str	r3, [r7, #32]
   15ab2:	68bb      	ldr	r3, [r7, #8]
   15ab4:	2b02      	cmp	r3, #2
   15ab6:	d12f      	bne.n	15b18 <FMG_ReadRecord+0x2e4>
   15ab8:	2300      	movs	r3, #0
   15aba:	62fb      	str	r3, [r7, #44]	; 0x2c
   15abc:	2300      	movs	r3, #0
   15abe:	633b      	str	r3, [r7, #48]	; 0x30
   15ac0:	e012      	b.n	15ae8 <FMG_ReadRecord+0x2b4>
   15ac2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   15ac4:	6bba      	ldr	r2, [r7, #56]	; 0x38
   15ac6:	18d3      	adds	r3, r2, r3
   15ac8:	f107 021c 	add.w	r2, r7, #28
   15acc:	4610      	mov	r0, r2
   15ace:	4619      	mov	r1, r3
   15ad0:	2204      	movs	r2, #4
   15ad2:	f7f3 e87e 	blx	8bd0 <_init+0x100>
   15ad6:	69fb      	ldr	r3, [r7, #28]
   15ad8:	461a      	mov	r2, r3
   15ada:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   15adc:	18d3      	adds	r3, r2, r3
   15ade:	3304      	adds	r3, #4
   15ae0:	62fb      	str	r3, [r7, #44]	; 0x2c
   15ae2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   15ae4:	3301      	adds	r3, #1
   15ae6:	633b      	str	r3, [r7, #48]	; 0x30
   15ae8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   15aea:	2b00      	cmp	r3, #0
   15aec:	db03      	blt.n	15af6 <FMG_ReadRecord+0x2c2>
   15aee:	6afa      	ldr	r2, [r7, #44]	; 0x2c
   15af0:	6a3b      	ldr	r3, [r7, #32]
   15af2:	429a      	cmp	r2, r3
   15af4:	dbe5      	blt.n	15ac2 <FMG_ReadRecord+0x28e>
   15af6:	69fa      	ldr	r2, [r7, #28]
   15af8:	68fb      	ldr	r3, [r7, #12]
   15afa:	601a      	str	r2, [r3, #0]
   15afc:	69fb      	ldr	r3, [r7, #28]
   15afe:	6afa      	ldr	r2, [r7, #44]	; 0x2c
   15b00:	1ad3      	subs	r3, r2, r3
   15b02:	6bba      	ldr	r2, [r7, #56]	; 0x38
   15b04:	18d2      	adds	r2, r2, r3
   15b06:	69fb      	ldr	r3, [r7, #28]
   15b08:	6938      	ldr	r0, [r7, #16]
   15b0a:	4611      	mov	r1, r2
   15b0c:	461a      	mov	r2, r3
   15b0e:	f7f3 e860 	blx	8bd0 <_init+0x100>
   15b12:	230a      	movs	r3, #10
   15b14:	62bb      	str	r3, [r7, #40]	; 0x28
   15b16:	e0aa      	b.n	15c6e <FMG_ReadRecord+0x43a>
   15b18:	68bb      	ldr	r3, [r7, #8]
   15b1a:	2b00      	cmp	r3, #0
   15b1c:	d11e      	bne.n	15b5c <FMG_ReadRecord+0x328>
   15b1e:	2300      	movs	r3, #0
   15b20:	633b      	str	r3, [r7, #48]	; 0x30
   15b22:	6a3b      	ldr	r3, [r7, #32]
   15b24:	2b04      	cmp	r3, #4
   15b26:	f240 80a2 	bls.w	15c6e <FMG_ReadRecord+0x43a>
   15b2a:	68f8      	ldr	r0, [r7, #12]
   15b2c:	6bb9      	ldr	r1, [r7, #56]	; 0x38
   15b2e:	2204      	movs	r2, #4
   15b30:	f7f3 e84e 	blx	8bd0 <_init+0x100>
   15b34:	68fb      	ldr	r3, [r7, #12]
   15b36:	681b      	ldr	r3, [r3, #0]
   15b38:	3304      	adds	r3, #4
   15b3a:	461a      	mov	r2, r3
   15b3c:	6a3b      	ldr	r3, [r7, #32]
   15b3e:	429a      	cmp	r2, r3
   15b40:	f300 8095 	bgt.w	15c6e <FMG_ReadRecord+0x43a>
   15b44:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   15b46:	1d1a      	adds	r2, r3, #4
   15b48:	68fb      	ldr	r3, [r7, #12]
   15b4a:	681b      	ldr	r3, [r3, #0]
   15b4c:	6938      	ldr	r0, [r7, #16]
   15b4e:	4611      	mov	r1, r2
   15b50:	461a      	mov	r2, r3
   15b52:	f7f3 e83e 	blx	8bd0 <_init+0x100>
   15b56:	230a      	movs	r3, #10
   15b58:	62bb      	str	r3, [r7, #40]	; 0x28
   15b5a:	e088      	b.n	15c6e <FMG_ReadRecord+0x43a>
   15b5c:	68bb      	ldr	r3, [r7, #8]
   15b5e:	2b01      	cmp	r3, #1
   15b60:	f040 8085 	bne.w	15c6e <FMG_ReadRecord+0x43a>
   15b64:	687b      	ldr	r3, [r7, #4]
   15b66:	633b      	str	r3, [r7, #48]	; 0x30
   15b68:	2300      	movs	r3, #0
   15b6a:	62fb      	str	r3, [r7, #44]	; 0x2c
   15b6c:	2300      	movs	r3, #0
   15b6e:	637b      	str	r3, [r7, #52]	; 0x34
   15b70:	e01f      	b.n	15bb2 <FMG_ReadRecord+0x37e>
   15b72:	2300      	movs	r3, #0
   15b74:	61fb      	str	r3, [r7, #28]
   15b76:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   15b78:	2b00      	cmp	r3, #0
   15b7a:	db14      	blt.n	15ba6 <FMG_ReadRecord+0x372>
   15b7c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
   15b7e:	6a3b      	ldr	r3, [r7, #32]
   15b80:	429a      	cmp	r2, r3
   15b82:	da10      	bge.n	15ba6 <FMG_ReadRecord+0x372>
   15b84:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   15b86:	6bba      	ldr	r2, [r7, #56]	; 0x38
   15b88:	18d3      	adds	r3, r2, r3
   15b8a:	f107 021c 	add.w	r2, r7, #28
   15b8e:	4610      	mov	r0, r2
   15b90:	4619      	mov	r1, r3
   15b92:	2204      	movs	r2, #4
   15b94:	f7f3 e81c 	blx	8bd0 <_init+0x100>
   15b98:	69fb      	ldr	r3, [r7, #28]
   15b9a:	461a      	mov	r2, r3
   15b9c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   15b9e:	18d3      	adds	r3, r2, r3
   15ba0:	3304      	adds	r3, #4
   15ba2:	62fb      	str	r3, [r7, #44]	; 0x2c
   15ba4:	e002      	b.n	15bac <FMG_ReadRecord+0x378>
   15ba6:	f04f 33ff 	mov.w	r3, #4294967295
   15baa:	62fb      	str	r3, [r7, #44]	; 0x2c
   15bac:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   15bae:	3301      	adds	r3, #1
   15bb0:	637b      	str	r3, [r7, #52]	; 0x34
   15bb2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
   15bb4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   15bb6:	429a      	cmp	r2, r3
   15bb8:	da02      	bge.n	15bc0 <FMG_ReadRecord+0x38c>
   15bba:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   15bbc:	2b00      	cmp	r3, #0
   15bbe:	dad8      	bge.n	15b72 <FMG_ReadRecord+0x33e>
   15bc0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   15bc2:	2b00      	cmp	r3, #0
   15bc4:	db53      	blt.n	15c6e <FMG_ReadRecord+0x43a>
   15bc6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
   15bc8:	6a3b      	ldr	r3, [r7, #32]
   15bca:	429a      	cmp	r2, r3
   15bcc:	da4f      	bge.n	15c6e <FMG_ReadRecord+0x43a>
   15bce:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   15bd0:	6bba      	ldr	r2, [r7, #56]	; 0x38
   15bd2:	18d3      	adds	r3, r2, r3
   15bd4:	68f8      	ldr	r0, [r7, #12]
   15bd6:	4619      	mov	r1, r3
   15bd8:	2204      	movs	r2, #4
   15bda:	f7f2 effa 	blx	8bd0 <_init+0x100>
   15bde:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   15be0:	3304      	adds	r3, #4
   15be2:	6bba      	ldr	r2, [r7, #56]	; 0x38
   15be4:	18d2      	adds	r2, r2, r3
   15be6:	68fb      	ldr	r3, [r7, #12]
   15be8:	681b      	ldr	r3, [r3, #0]
   15bea:	6938      	ldr	r0, [r7, #16]
   15bec:	4611      	mov	r1, r2
   15bee:	461a      	mov	r2, r3
   15bf0:	f7f2 efee 	blx	8bd0 <_init+0x100>
   15bf4:	230a      	movs	r3, #10
   15bf6:	62bb      	str	r3, [r7, #40]	; 0x28
   15bf8:	e039      	b.n	15c6e <FMG_ReadRecord+0x43a>
   15bfa:	4b2c      	ldr	r3, [pc, #176]	; (15cac <FMG_ReadRecord+0x478>)
   15bfc:	58e3      	ldr	r3, [r4, r3]
   15bfe:	461a      	mov	r2, r3
   15c00:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   15c02:	212c      	movs	r1, #44	; 0x2c
   15c04:	fb01 f303 	mul.w	r3, r1, r3
   15c08:	18d3      	adds	r3, r2, r3
   15c0a:	332c      	adds	r3, #44	; 0x2c
   15c0c:	681b      	ldr	r3, [r3, #0]
   15c0e:	2b01      	cmp	r3, #1
   15c10:	d103      	bne.n	15c1a <FMG_ReadRecord+0x3e6>
   15c12:	6cbb      	ldr	r3, [r7, #72]	; 0x48
   15c14:	3b10      	subs	r3, #16
   15c16:	623b      	str	r3, [r7, #32]
   15c18:	e001      	b.n	15c1e <FMG_ReadRecord+0x3ea>
   15c1a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
   15c1c:	623b      	str	r3, [r7, #32]
   15c1e:	68bb      	ldr	r3, [r7, #8]
   15c20:	2b02      	cmp	r3, #2
   15c22:	d105      	bne.n	15c30 <FMG_ReadRecord+0x3fc>
   15c24:	68fb      	ldr	r3, [r7, #12]
   15c26:	681b      	ldr	r3, [r3, #0]
   15c28:	6a3a      	ldr	r2, [r7, #32]
   15c2a:	1ad3      	subs	r3, r2, r3
   15c2c:	627b      	str	r3, [r7, #36]	; 0x24
   15c2e:	e00b      	b.n	15c48 <FMG_ReadRecord+0x414>
   15c30:	68bb      	ldr	r3, [r7, #8]
   15c32:	2b00      	cmp	r3, #0
   15c34:	d102      	bne.n	15c3c <FMG_ReadRecord+0x408>
   15c36:	2300      	movs	r3, #0
   15c38:	627b      	str	r3, [r7, #36]	; 0x24
   15c3a:	e005      	b.n	15c48 <FMG_ReadRecord+0x414>
   15c3c:	68fb      	ldr	r3, [r7, #12]
   15c3e:	681b      	ldr	r3, [r3, #0]
   15c40:	687a      	ldr	r2, [r7, #4]
   15c42:	fb02 f303 	mul.w	r3, r2, r3
   15c46:	627b      	str	r3, [r7, #36]	; 0x24
   15c48:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   15c4a:	2b00      	cmp	r3, #0
   15c4c:	db0f      	blt.n	15c6e <FMG_ReadRecord+0x43a>
   15c4e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   15c50:	6a3b      	ldr	r3, [r7, #32]
   15c52:	429a      	cmp	r2, r3
   15c54:	da0b      	bge.n	15c6e <FMG_ReadRecord+0x43a>
   15c56:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   15c58:	6bba      	ldr	r2, [r7, #56]	; 0x38
   15c5a:	18d2      	adds	r2, r2, r3
   15c5c:	68fb      	ldr	r3, [r7, #12]
   15c5e:	681b      	ldr	r3, [r3, #0]
   15c60:	6938      	ldr	r0, [r7, #16]
   15c62:	4611      	mov	r1, r2
   15c64:	461a      	mov	r2, r3
   15c66:	f7f2 efb4 	blx	8bd0 <_init+0x100>
   15c6a:	230a      	movs	r3, #10
   15c6c:	62bb      	str	r3, [r7, #40]	; 0x28
   15c6e:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
   15c70:	f001 feb4 	bl	179dc <FS_close>
   15c74:	2300      	movs	r3, #0
   15c76:	63fb      	str	r3, [r7, #60]	; 0x3c
   15c78:	6bb8      	ldr	r0, [r7, #56]	; 0x38
   15c7a:	f002 f941 	bl	17f00 <PageFree>
   15c7e:	6abb      	ldr	r3, [r7, #40]	; 0x28
   15c80:	4618      	mov	r0, r3
   15c82:	4b07      	ldr	r3, [pc, #28]	; (15ca0 <FMG_ReadRecord+0x46c>)
   15c84:	58e3      	ldr	r3, [r4, r3]
   15c86:	f8d7 209c 	ldr.w	r2, [r7, #156]	; 0x9c
   15c8a:	681b      	ldr	r3, [r3, #0]
   15c8c:	429a      	cmp	r2, r3
   15c8e:	d001      	beq.n	15c94 <FMG_ReadRecord+0x460>
   15c90:	f7f3 f92e 	bl	8ef0 <__stack_chk_fail>
   15c94:	f107 07a4 	add.w	r7, r7, #164	; 0xa4
   15c98:	46bd      	mov	sp, r7
   15c9a:	bd90      	pop	{r4, r7, pc}
   15c9c:	0000e8c8 	.word	0x0000e8c8
   15ca0:	000000a0 	.word	0x000000a0
   15ca4:	0000f188 	.word	0x0000f188
   15ca8:	0000009c 	.word	0x0000009c
   15cac:	000000b4 	.word	0x000000b4
   15cb0:	00005b04 	.word	0x00005b04
   15cb4:	00005ac6 	.word	0x00005ac6

00015cb8 <FMG_DeleteRecord>:
   15cb8:	b590      	push	{r4, r7, lr}
   15cba:	b0a1      	sub	sp, #132	; 0x84
   15cbc:	af02      	add	r7, sp, #8
   15cbe:	60f8      	str	r0, [r7, #12]
   15cc0:	60b9      	str	r1, [r7, #8]
   15cc2:	607a      	str	r2, [r7, #4]
   15cc4:	603b      	str	r3, [r7, #0]
   15cc6:	4cba      	ldr	r4, [pc, #744]	; (15fb0 <FMG_DeleteRecord+0x2f8>)
   15cc8:	447c      	add	r4, pc
   15cca:	4bba      	ldr	r3, [pc, #744]	; (15fb4 <FMG_DeleteRecord+0x2fc>)
   15ccc:	58e3      	ldr	r3, [r4, r3]
   15cce:	681b      	ldr	r3, [r3, #0]
   15cd0:	677b      	str	r3, [r7, #116]	; 0x74
   15cd2:	231a      	movs	r3, #26
   15cd4:	617b      	str	r3, [r7, #20]
   15cd6:	2300      	movs	r3, #0
   15cd8:	61bb      	str	r3, [r7, #24]
   15cda:	2300      	movs	r3, #0
   15cdc:	61fb      	str	r3, [r7, #28]
   15cde:	68fb      	ldr	r3, [r7, #12]
   15ce0:	681b      	ldr	r3, [r3, #0]
   15ce2:	2b00      	cmp	r3, #0
   15ce4:	d110      	bne.n	15d08 <FMG_DeleteRecord+0x50>
   15ce6:	68fb      	ldr	r3, [r7, #12]
   15ce8:	3304      	adds	r3, #4
   15cea:	f107 0228 	add.w	r2, r7, #40	; 0x28
   15cee:	4610      	mov	r0, r2
   15cf0:	4619      	mov	r1, r3
   15cf2:	f7f2 ef48 	blx	8b84 <_init+0xb4>
   15cf6:	68fb      	ldr	r3, [r7, #12]
   15cf8:	3315      	adds	r3, #21
   15cfa:	f107 023c 	add.w	r2, r7, #60	; 0x3c
   15cfe:	4610      	mov	r0, r2
   15d00:	4619      	mov	r1, r3
   15d02:	f7f2 ef40 	blx	8b84 <_init+0xb4>
   15d06:	e028      	b.n	15d5a <FMG_DeleteRecord+0xa2>
   15d08:	68fb      	ldr	r3, [r7, #12]
   15d0a:	681b      	ldr	r3, [r3, #0]
   15d0c:	2b01      	cmp	r3, #1
   15d0e:	d122      	bne.n	15d56 <FMG_DeleteRecord+0x9e>
   15d10:	68fb      	ldr	r3, [r7, #12]
   15d12:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   15d14:	2b00      	cmp	r3, #0
   15d16:	d009      	beq.n	15d2c <FMG_DeleteRecord+0x74>
   15d18:	68fb      	ldr	r3, [r7, #12]
   15d1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   15d1c:	2b01      	cmp	r3, #1
   15d1e:	d005      	beq.n	15d2c <FMG_DeleteRecord+0x74>
   15d20:	68fb      	ldr	r3, [r7, #12]
   15d22:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   15d24:	2b02      	cmp	r3, #2
   15d26:	d001      	beq.n	15d2c <FMG_DeleteRecord+0x74>
   15d28:	230f      	movs	r3, #15
   15d2a:	e134      	b.n	15f96 <FMG_DeleteRecord+0x2de>
   15d2c:	f107 0328 	add.w	r3, r7, #40	; 0x28
   15d30:	4618      	mov	r0, r3
   15d32:	4ba1      	ldr	r3, [pc, #644]	; (15fb8 <FMG_DeleteRecord+0x300>)
   15d34:	447b      	add	r3, pc
   15d36:	4619      	mov	r1, r3
   15d38:	f7f2 ef24 	blx	8b84 <_init+0xb4>
   15d3c:	68fb      	ldr	r3, [r7, #12]
   15d3e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   15d40:	4b9e      	ldr	r3, [pc, #632]	; (15fbc <FMG_DeleteRecord+0x304>)
   15d42:	58e3      	ldr	r3, [r4, r3]
   15d44:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   15d48:	f107 023c 	add.w	r2, r7, #60	; 0x3c
   15d4c:	4610      	mov	r0, r2
   15d4e:	4619      	mov	r1, r3
   15d50:	f7f2 ef18 	blx	8b84 <_init+0xb4>
   15d54:	e001      	b.n	15d5a <FMG_DeleteRecord+0xa2>
   15d56:	2311      	movs	r3, #17
   15d58:	e11d      	b.n	15f96 <FMG_DeleteRecord+0x2de>
   15d5a:	f107 0228 	add.w	r2, r7, #40	; 0x28
   15d5e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   15d62:	4610      	mov	r0, r2
   15d64:	4619      	mov	r1, r3
   15d66:	f7fb fd35 	bl	117d4 <ExtraireFileID>
   15d6a:	6238      	str	r0, [r7, #32]
   15d6c:	6a3b      	ldr	r3, [r7, #32]
   15d6e:	2b00      	cmp	r3, #0
   15d70:	db33      	blt.n	15dda <FMG_DeleteRecord+0x122>
   15d72:	4b93      	ldr	r3, [pc, #588]	; (15fc0 <FMG_DeleteRecord+0x308>)
   15d74:	58e3      	ldr	r3, [r4, r3]
   15d76:	461a      	mov	r2, r3
   15d78:	6a3b      	ldr	r3, [r7, #32]
   15d7a:	212c      	movs	r1, #44	; 0x2c
   15d7c:	fb01 f303 	mul.w	r3, r1, r3
   15d80:	18d3      	adds	r3, r2, r3
   15d82:	3328      	adds	r3, #40	; 0x28
   15d84:	681b      	ldr	r3, [r3, #0]
   15d86:	2b00      	cmp	r3, #0
   15d88:	d00d      	beq.n	15da6 <FMG_DeleteRecord+0xee>
   15d8a:	4b8d      	ldr	r3, [pc, #564]	; (15fc0 <FMG_DeleteRecord+0x308>)
   15d8c:	58e3      	ldr	r3, [r4, r3]
   15d8e:	461a      	mov	r2, r3
   15d90:	6a3b      	ldr	r3, [r7, #32]
   15d92:	212c      	movs	r1, #44	; 0x2c
   15d94:	fb01 f303 	mul.w	r3, r1, r3
   15d98:	18d3      	adds	r3, r2, r3
   15d9a:	3328      	adds	r3, #40	; 0x28
   15d9c:	681b      	ldr	r3, [r3, #0]
   15d9e:	2b01      	cmp	r3, #1
   15da0:	d001      	beq.n	15da6 <FMG_DeleteRecord+0xee>
   15da2:	230d      	movs	r3, #13
   15da4:	e0f7      	b.n	15f96 <FMG_DeleteRecord+0x2de>
   15da6:	4b86      	ldr	r3, [pc, #536]	; (15fc0 <FMG_DeleteRecord+0x308>)
   15da8:	58e3      	ldr	r3, [r4, r3]
   15daa:	461a      	mov	r2, r3
   15dac:	6a3b      	ldr	r3, [r7, #32]
   15dae:	212c      	movs	r1, #44	; 0x2c
   15db0:	fb01 f303 	mul.w	r3, r1, r3
   15db4:	18d3      	adds	r3, r2, r3
   15db6:	332c      	adds	r3, #44	; 0x2c
   15db8:	681b      	ldr	r3, [r3, #0]
   15dba:	2b00      	cmp	r3, #0
   15dbc:	d00f      	beq.n	15dde <FMG_DeleteRecord+0x126>
   15dbe:	4b80      	ldr	r3, [pc, #512]	; (15fc0 <FMG_DeleteRecord+0x308>)
   15dc0:	58e3      	ldr	r3, [r4, r3]
   15dc2:	461a      	mov	r2, r3
   15dc4:	6a3b      	ldr	r3, [r7, #32]
   15dc6:	212c      	movs	r1, #44	; 0x2c
   15dc8:	fb01 f303 	mul.w	r3, r1, r3
   15dcc:	18d3      	adds	r3, r2, r3
   15dce:	332c      	adds	r3, #44	; 0x2c
   15dd0:	681b      	ldr	r3, [r3, #0]
   15dd2:	2b01      	cmp	r3, #1
   15dd4:	d003      	beq.n	15dde <FMG_DeleteRecord+0x126>
   15dd6:	230e      	movs	r3, #14
   15dd8:	e0dd      	b.n	15f96 <FMG_DeleteRecord+0x2de>
   15dda:	230b      	movs	r3, #11
   15ddc:	e0db      	b.n	15f96 <FMG_DeleteRecord+0x2de>
   15dde:	f107 0150 	add.w	r1, r7, #80	; 0x50
   15de2:	f107 0228 	add.w	r2, r7, #40	; 0x28
   15de6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   15dea:	4608      	mov	r0, r1
   15dec:	4975      	ldr	r1, [pc, #468]	; (15fc4 <FMG_DeleteRecord+0x30c>)
   15dee:	4479      	add	r1, pc
   15df0:	f7f2 ef0c 	blx	8c0c <_init+0x13c>
   15df4:	f107 0350 	add.w	r3, r7, #80	; 0x50
   15df8:	4618      	mov	r0, r3
   15dfa:	f001 fe49 	bl	17a90 <FS_exist>
   15dfe:	6278      	str	r0, [r7, #36]	; 0x24
   15e00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   15e02:	2b02      	cmp	r3, #2
   15e04:	d001      	beq.n	15e0a <FMG_DeleteRecord+0x152>
   15e06:	230b      	movs	r3, #11
   15e08:	e0c5      	b.n	15f96 <FMG_DeleteRecord+0x2de>
   15e0a:	4b6d      	ldr	r3, [pc, #436]	; (15fc0 <FMG_DeleteRecord+0x308>)
   15e0c:	58e3      	ldr	r3, [r4, r3]
   15e0e:	461a      	mov	r2, r3
   15e10:	6a3b      	ldr	r3, [r7, #32]
   15e12:	212c      	movs	r1, #44	; 0x2c
   15e14:	fb01 f303 	mul.w	r3, r1, r3
   15e18:	18d3      	adds	r3, r2, r3
   15e1a:	332c      	adds	r3, #44	; 0x2c
   15e1c:	681b      	ldr	r3, [r3, #0]
   15e1e:	2b01      	cmp	r3, #1
   15e20:	d10c      	bne.n	15e3c <FMG_DeleteRecord+0x184>
   15e22:	f107 0228 	add.w	r2, r7, #40	; 0x28
   15e26:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   15e2a:	4610      	mov	r0, r2
   15e2c:	4619      	mov	r1, r3
   15e2e:	f7ff f835 	bl	14e9c <FMG_CheckFileCoherence>
   15e32:	4603      	mov	r3, r0
   15e34:	2b0a      	cmp	r3, #10
   15e36:	d001      	beq.n	15e3c <FMG_DeleteRecord+0x184>
   15e38:	231c      	movs	r3, #28
   15e3a:	e0ac      	b.n	15f96 <FMG_DeleteRecord+0x2de>
   15e3c:	f107 0350 	add.w	r3, r7, #80	; 0x50
   15e40:	4618      	mov	r0, r3
   15e42:	4b61      	ldr	r3, [pc, #388]	; (15fc8 <FMG_DeleteRecord+0x310>)
   15e44:	447b      	add	r3, pc
   15e46:	4619      	mov	r1, r3
   15e48:	f001 fea4 	bl	17b94 <FS_open>
   15e4c:	61f8      	str	r0, [r7, #28]
   15e4e:	69fb      	ldr	r3, [r7, #28]
   15e50:	2b00      	cmp	r3, #0
   15e52:	d102      	bne.n	15e5a <FMG_DeleteRecord+0x1a2>
   15e54:	2313      	movs	r3, #19
   15e56:	617b      	str	r3, [r7, #20]
   15e58:	e09c      	b.n	15f94 <FMG_DeleteRecord+0x2dc>
   15e5a:	69f8      	ldr	r0, [r7, #28]
   15e5c:	f001 fe44 	bl	17ae8 <FS_length>
   15e60:	61b8      	str	r0, [r7, #24]
   15e62:	69f8      	ldr	r0, [r7, #28]
   15e64:	f001 fdba 	bl	179dc <FS_close>
   15e68:	2300      	movs	r3, #0
   15e6a:	61fb      	str	r3, [r7, #28]
   15e6c:	4b54      	ldr	r3, [pc, #336]	; (15fc0 <FMG_DeleteRecord+0x308>)
   15e6e:	58e3      	ldr	r3, [r4, r3]
   15e70:	461a      	mov	r2, r3
   15e72:	6a3b      	ldr	r3, [r7, #32]
   15e74:	212c      	movs	r1, #44	; 0x2c
   15e76:	fb01 f303 	mul.w	r3, r1, r3
   15e7a:	18d3      	adds	r3, r2, r3
   15e7c:	332c      	adds	r3, #44	; 0x2c
   15e7e:	681b      	ldr	r3, [r3, #0]
   15e80:	69b8      	ldr	r0, [r7, #24]
   15e82:	4619      	mov	r1, r3
   15e84:	f7fe fbc2 	bl	1460c <IsFileEmpty>
   15e88:	4603      	mov	r3, r0
   15e8a:	2b00      	cmp	r3, #0
   15e8c:	d001      	beq.n	15e92 <FMG_DeleteRecord+0x1da>
   15e8e:	231a      	movs	r3, #26
   15e90:	e081      	b.n	15f96 <FMG_DeleteRecord+0x2de>
   15e92:	68bb      	ldr	r3, [r7, #8]
   15e94:	2b01      	cmp	r3, #1
   15e96:	d02a      	beq.n	15eee <FMG_DeleteRecord+0x236>
   15e98:	2b01      	cmp	r3, #1
   15e9a:	d302      	bcc.n	15ea2 <FMG_DeleteRecord+0x1ea>
   15e9c:	2b02      	cmp	r3, #2
   15e9e:	d050      	beq.n	15f42 <FMG_DeleteRecord+0x28a>
   15ea0:	e075      	b.n	15f8e <FMG_DeleteRecord+0x2d6>
   15ea2:	4b47      	ldr	r3, [pc, #284]	; (15fc0 <FMG_DeleteRecord+0x308>)
   15ea4:	58e3      	ldr	r3, [r4, r3]
   15ea6:	461a      	mov	r2, r3
   15ea8:	6a3b      	ldr	r3, [r7, #32]
   15eaa:	212c      	movs	r1, #44	; 0x2c
   15eac:	fb01 f303 	mul.w	r3, r1, r3
   15eb0:	18d3      	adds	r3, r2, r3
   15eb2:	332c      	adds	r3, #44	; 0x2c
   15eb4:	681b      	ldr	r3, [r3, #0]
   15eb6:	2b01      	cmp	r3, #1
   15eb8:	d10c      	bne.n	15ed4 <FMG_DeleteRecord+0x21c>
   15eba:	f107 0228 	add.w	r2, r7, #40	; 0x28
   15ebe:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   15ec2:	4610      	mov	r0, r2
   15ec4:	4619      	mov	r1, r3
   15ec6:	687a      	ldr	r2, [r7, #4]
   15ec8:	6a3b      	ldr	r3, [r7, #32]
   15eca:	f7fd fb0d 	bl	134e8 <DeleteRecordBeginWithCkecksum>
   15ece:	4603      	mov	r3, r0
   15ed0:	617b      	str	r3, [r7, #20]
   15ed2:	e05f      	b.n	15f94 <FMG_DeleteRecord+0x2dc>
   15ed4:	f107 0228 	add.w	r2, r7, #40	; 0x28
   15ed8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   15edc:	4610      	mov	r0, r2
   15ede:	4619      	mov	r1, r3
   15ee0:	687a      	ldr	r2, [r7, #4]
   15ee2:	6a3b      	ldr	r3, [r7, #32]
   15ee4:	f7fd f9c6 	bl	13274 <DeleteRecordBegin>
   15ee8:	4603      	mov	r3, r0
   15eea:	617b      	str	r3, [r7, #20]
   15eec:	e052      	b.n	15f94 <FMG_DeleteRecord+0x2dc>
   15eee:	4b34      	ldr	r3, [pc, #208]	; (15fc0 <FMG_DeleteRecord+0x308>)
   15ef0:	58e3      	ldr	r3, [r4, r3]
   15ef2:	461a      	mov	r2, r3
   15ef4:	6a3b      	ldr	r3, [r7, #32]
   15ef6:	212c      	movs	r1, #44	; 0x2c
   15ef8:	fb01 f303 	mul.w	r3, r1, r3
   15efc:	18d3      	adds	r3, r2, r3
   15efe:	332c      	adds	r3, #44	; 0x2c
   15f00:	681b      	ldr	r3, [r3, #0]
   15f02:	2b01      	cmp	r3, #1
   15f04:	d10e      	bne.n	15f24 <FMG_DeleteRecord+0x26c>
   15f06:	f107 0228 	add.w	r2, r7, #40	; 0x28
   15f0a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   15f0e:	6a39      	ldr	r1, [r7, #32]
   15f10:	9100      	str	r1, [sp, #0]
   15f12:	4610      	mov	r0, r2
   15f14:	4619      	mov	r1, r3
   15f16:	687a      	ldr	r2, [r7, #4]
   15f18:	683b      	ldr	r3, [r7, #0]
   15f1a:	f7fd fe1d 	bl	13b58 <DeleteRecordMiddleWithCkecksum>
   15f1e:	4603      	mov	r3, r0
   15f20:	617b      	str	r3, [r7, #20]
   15f22:	e037      	b.n	15f94 <FMG_DeleteRecord+0x2dc>
   15f24:	f107 0228 	add.w	r2, r7, #40	; 0x28
   15f28:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   15f2c:	6a39      	ldr	r1, [r7, #32]
   15f2e:	9100      	str	r1, [sp, #0]
   15f30:	4610      	mov	r0, r2
   15f32:	4619      	mov	r1, r3
   15f34:	687a      	ldr	r2, [r7, #4]
   15f36:	683b      	ldr	r3, [r7, #0]
   15f38:	f7fd fc6e 	bl	13818 <DeleteRecordMiddle>
   15f3c:	4603      	mov	r3, r0
   15f3e:	617b      	str	r3, [r7, #20]
   15f40:	e028      	b.n	15f94 <FMG_DeleteRecord+0x2dc>
   15f42:	4b1f      	ldr	r3, [pc, #124]	; (15fc0 <FMG_DeleteRecord+0x308>)
   15f44:	58e3      	ldr	r3, [r4, r3]
   15f46:	461a      	mov	r2, r3
   15f48:	6a3b      	ldr	r3, [r7, #32]
   15f4a:	212c      	movs	r1, #44	; 0x2c
   15f4c:	fb01 f303 	mul.w	r3, r1, r3
   15f50:	18d3      	adds	r3, r2, r3
   15f52:	332c      	adds	r3, #44	; 0x2c
   15f54:	681b      	ldr	r3, [r3, #0]
   15f56:	2b01      	cmp	r3, #1
   15f58:	d10c      	bne.n	15f74 <FMG_DeleteRecord+0x2bc>
   15f5a:	f107 0228 	add.w	r2, r7, #40	; 0x28
   15f5e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   15f62:	4610      	mov	r0, r2
   15f64:	4619      	mov	r1, r3
   15f66:	687a      	ldr	r2, [r7, #4]
   15f68:	6a3b      	ldr	r3, [r7, #32]
   15f6a:	f7fe f9a9 	bl	142c0 <DeleteRecordEndWithCkecksum>
   15f6e:	4603      	mov	r3, r0
   15f70:	617b      	str	r3, [r7, #20]
   15f72:	e00f      	b.n	15f94 <FMG_DeleteRecord+0x2dc>
   15f74:	f107 0228 	add.w	r2, r7, #40	; 0x28
   15f78:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   15f7c:	4610      	mov	r0, r2
   15f7e:	4619      	mov	r1, r3
   15f80:	687a      	ldr	r2, [r7, #4]
   15f82:	6a3b      	ldr	r3, [r7, #32]
   15f84:	f7fd fffe 	bl	13f84 <DeleteRecordEnd>
   15f88:	4603      	mov	r3, r0
   15f8a:	617b      	str	r3, [r7, #20]
   15f8c:	e002      	b.n	15f94 <FMG_DeleteRecord+0x2dc>
   15f8e:	2310      	movs	r3, #16
   15f90:	617b      	str	r3, [r7, #20]
   15f92:	bf00      	nop
   15f94:	697b      	ldr	r3, [r7, #20]
   15f96:	4618      	mov	r0, r3
   15f98:	4b06      	ldr	r3, [pc, #24]	; (15fb4 <FMG_DeleteRecord+0x2fc>)
   15f9a:	58e3      	ldr	r3, [r4, r3]
   15f9c:	6f7a      	ldr	r2, [r7, #116]	; 0x74
   15f9e:	681b      	ldr	r3, [r3, #0]
   15fa0:	429a      	cmp	r2, r3
   15fa2:	d001      	beq.n	15fa8 <FMG_DeleteRecord+0x2f0>
   15fa4:	f7f2 ffa4 	bl	8ef0 <__stack_chk_fail>
   15fa8:	f107 077c 	add.w	r7, r7, #124	; 0x7c
   15fac:	46bd      	mov	sp, r7
   15fae:	bd90      	pop	{r4, r7, pc}
   15fb0:	0000e44c 	.word	0x0000e44c
   15fb4:	000000a0 	.word	0x000000a0
   15fb8:	0000ed18 	.word	0x0000ed18
   15fbc:	0000009c 	.word	0x0000009c
   15fc0:	000000b4 	.word	0x000000b4
   15fc4:	000056aa 	.word	0x000056aa
   15fc8:	00005668 	.word	0x00005668

00015fcc <md5_process>:
   15fcc:	b590      	push	{r4, r7, lr}
   15fce:	b09d      	sub	sp, #116	; 0x74
   15fd0:	af00      	add	r7, sp, #0
   15fd2:	6078      	str	r0, [r7, #4]
   15fd4:	6039      	str	r1, [r7, #0]
   15fd6:	4c19      	ldr	r4, [pc, #100]	; (1603c <md5_process+0x70>)
   15fd8:	447c      	add	r4, pc
   15fda:	4b19      	ldr	r3, [pc, #100]	; (16040 <md5_process+0x74>)
   15fdc:	58e3      	ldr	r3, [r4, r3]
   15fde:	681b      	ldr	r3, [r3, #0]
   15fe0:	66fb      	str	r3, [r7, #108]	; 0x6c
   15fe2:	687b      	ldr	r3, [r7, #4]
   15fe4:	689b      	ldr	r3, [r3, #8]
   15fe6:	61bb      	str	r3, [r7, #24]
   15fe8:	687b      	ldr	r3, [r7, #4]
   15fea:	68db      	ldr	r3, [r3, #12]
   15fec:	61fb      	str	r3, [r7, #28]
   15fee:	687b      	ldr	r3, [r7, #4]
   15ff0:	691b      	ldr	r3, [r3, #16]
   15ff2:	623b      	str	r3, [r7, #32]
   15ff4:	687b      	ldr	r3, [r7, #4]
   15ff6:	695b      	ldr	r3, [r3, #20]
   15ff8:	627b      	str	r3, [r7, #36]	; 0x24
   15ffa:	4b12      	ldr	r3, [pc, #72]	; (16044 <md5_process+0x78>)
   15ffc:	447b      	add	r3, pc
   15ffe:	781b      	ldrb	r3, [r3, #0]
   16000:	2b00      	cmp	r3, #0
   16002:	d012      	beq.n	1602a <md5_process+0x5e>
   16004:	683b      	ldr	r3, [r7, #0]
   16006:	f003 0303 	and.w	r3, r3, #3
   1600a:	2b00      	cmp	r3, #0
   1600c:	d102      	bne.n	16014 <md5_process+0x48>
   1600e:	683b      	ldr	r3, [r7, #0]
   16010:	60fb      	str	r3, [r7, #12]
   16012:	e03c      	b.n	1608e <md5_process+0xc2>
   16014:	f107 032c 	add.w	r3, r7, #44	; 0x2c
   16018:	4618      	mov	r0, r3
   1601a:	6839      	ldr	r1, [r7, #0]
   1601c:	2240      	movs	r2, #64	; 0x40
   1601e:	f7f2 edd8 	blx	8bd0 <_init+0x100>
   16022:	f107 032c 	add.w	r3, r7, #44	; 0x2c
   16026:	60fb      	str	r3, [r7, #12]
   16028:	e031      	b.n	1608e <md5_process+0xc2>
   1602a:	683b      	ldr	r3, [r7, #0]
   1602c:	613b      	str	r3, [r7, #16]
   1602e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
   16032:	60fb      	str	r3, [r7, #12]
   16034:	2300      	movs	r3, #0
   16036:	617b      	str	r3, [r7, #20]
   16038:	e026      	b.n	16088 <md5_process+0xbc>
   1603a:	bf00      	nop
   1603c:	0000e13c 	.word	0x0000e13c
   16040:	000000a0 	.word	0x000000a0
   16044:	00005530 	.word	0x00005530
   16048:	693b      	ldr	r3, [r7, #16]
   1604a:	781b      	ldrb	r3, [r3, #0]
   1604c:	461a      	mov	r2, r3
   1604e:	693b      	ldr	r3, [r7, #16]
   16050:	3301      	adds	r3, #1
   16052:	781b      	ldrb	r3, [r3, #0]
   16054:	021b      	lsls	r3, r3, #8
   16056:	18d2      	adds	r2, r2, r3
   16058:	693b      	ldr	r3, [r7, #16]
   1605a:	3302      	adds	r3, #2
   1605c:	781b      	ldrb	r3, [r3, #0]
   1605e:	041b      	lsls	r3, r3, #16
   16060:	18d2      	adds	r2, r2, r3
   16062:	693b      	ldr	r3, [r7, #16]
   16064:	3303      	adds	r3, #3
   16066:	781b      	ldrb	r3, [r3, #0]
   16068:	061b      	lsls	r3, r3, #24
   1606a:	18d3      	adds	r3, r2, r3
   1606c:	461a      	mov	r2, r3
   1606e:	697b      	ldr	r3, [r7, #20]
   16070:	009b      	lsls	r3, r3, #2
   16072:	f107 0170 	add.w	r1, r7, #112	; 0x70
   16076:	18cb      	adds	r3, r1, r3
   16078:	f843 2c44 	str.w	r2, [r3, #-68]
   1607c:	697b      	ldr	r3, [r7, #20]
   1607e:	3301      	adds	r3, #1
   16080:	617b      	str	r3, [r7, #20]
   16082:	693b      	ldr	r3, [r7, #16]
   16084:	3304      	adds	r3, #4
   16086:	613b      	str	r3, [r7, #16]
   16088:	697b      	ldr	r3, [r7, #20]
   1608a:	2b0f      	cmp	r3, #15
   1608c:	dddc      	ble.n	16048 <md5_process+0x7c>
   1608e:	69fa      	ldr	r2, [r7, #28]
   16090:	6a3b      	ldr	r3, [r7, #32]
   16092:	401a      	ands	r2, r3
   16094:	69fb      	ldr	r3, [r7, #28]
   16096:	43d9      	mvns	r1, r3
   16098:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1609a:	400b      	ands	r3, r1
   1609c:	431a      	orrs	r2, r3
   1609e:	69bb      	ldr	r3, [r7, #24]
   160a0:	18d2      	adds	r2, r2, r3
   160a2:	68fb      	ldr	r3, [r7, #12]
   160a4:	681b      	ldr	r3, [r3, #0]
   160a6:	18d2      	adds	r2, r2, r3
   160a8:	f24a 4378 	movw	r3, #42104	; 0xa478
   160ac:	f2cd 736a 	movt	r3, #55146	; 0xd76a
   160b0:	18d3      	adds	r3, r2, r3
   160b2:	62bb      	str	r3, [r7, #40]	; 0x28
   160b4:	6abb      	ldr	r3, [r7, #40]	; 0x28
   160b6:	ea4f 6273 	mov.w	r2, r3, ror #25
   160ba:	69fb      	ldr	r3, [r7, #28]
   160bc:	18d3      	adds	r3, r2, r3
   160be:	61bb      	str	r3, [r7, #24]
   160c0:	69ba      	ldr	r2, [r7, #24]
   160c2:	69fb      	ldr	r3, [r7, #28]
   160c4:	401a      	ands	r2, r3
   160c6:	69bb      	ldr	r3, [r7, #24]
   160c8:	43d9      	mvns	r1, r3
   160ca:	6a3b      	ldr	r3, [r7, #32]
   160cc:	400b      	ands	r3, r1
   160ce:	431a      	orrs	r2, r3
   160d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   160d2:	18d2      	adds	r2, r2, r3
   160d4:	68fb      	ldr	r3, [r7, #12]
   160d6:	3304      	adds	r3, #4
   160d8:	681b      	ldr	r3, [r3, #0]
   160da:	18d2      	adds	r2, r2, r3
   160dc:	f24b 7356 	movw	r3, #46934	; 0xb756
   160e0:	f6ce 03c7 	movt	r3, #59591	; 0xe8c7
   160e4:	18d3      	adds	r3, r2, r3
   160e6:	62bb      	str	r3, [r7, #40]	; 0x28
   160e8:	6abb      	ldr	r3, [r7, #40]	; 0x28
   160ea:	ea4f 5233 	mov.w	r2, r3, ror #20
   160ee:	69bb      	ldr	r3, [r7, #24]
   160f0:	18d3      	adds	r3, r2, r3
   160f2:	627b      	str	r3, [r7, #36]	; 0x24
   160f4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   160f6:	69bb      	ldr	r3, [r7, #24]
   160f8:	401a      	ands	r2, r3
   160fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   160fc:	43d9      	mvns	r1, r3
   160fe:	69fb      	ldr	r3, [r7, #28]
   16100:	400b      	ands	r3, r1
   16102:	431a      	orrs	r2, r3
   16104:	6a3b      	ldr	r3, [r7, #32]
   16106:	18d2      	adds	r2, r2, r3
   16108:	68fb      	ldr	r3, [r7, #12]
   1610a:	3308      	adds	r3, #8
   1610c:	681b      	ldr	r3, [r3, #0]
   1610e:	18d2      	adds	r2, r2, r3
   16110:	f247 03db 	movw	r3, #28891	; 0x70db
   16114:	f2c2 4320 	movt	r3, #9248	; 0x2420
   16118:	18d3      	adds	r3, r2, r3
   1611a:	62bb      	str	r3, [r7, #40]	; 0x28
   1611c:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1611e:	ea4f 32f3 	mov.w	r2, r3, ror #15
   16122:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16124:	18d3      	adds	r3, r2, r3
   16126:	623b      	str	r3, [r7, #32]
   16128:	6a3a      	ldr	r2, [r7, #32]
   1612a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1612c:	401a      	ands	r2, r3
   1612e:	6a3b      	ldr	r3, [r7, #32]
   16130:	43d9      	mvns	r1, r3
   16132:	69bb      	ldr	r3, [r7, #24]
   16134:	400b      	ands	r3, r1
   16136:	431a      	orrs	r2, r3
   16138:	69fb      	ldr	r3, [r7, #28]
   1613a:	18d2      	adds	r2, r2, r3
   1613c:	68fb      	ldr	r3, [r7, #12]
   1613e:	330c      	adds	r3, #12
   16140:	681b      	ldr	r3, [r3, #0]
   16142:	18d2      	adds	r2, r2, r3
   16144:	f64c 63ee 	movw	r3, #52974	; 0xceee
   16148:	f2cc 13bd 	movt	r3, #49597	; 0xc1bd
   1614c:	18d3      	adds	r3, r2, r3
   1614e:	62bb      	str	r3, [r7, #40]	; 0x28
   16150:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16152:	ea4f 22b3 	mov.w	r2, r3, ror #10
   16156:	6a3b      	ldr	r3, [r7, #32]
   16158:	18d3      	adds	r3, r2, r3
   1615a:	61fb      	str	r3, [r7, #28]
   1615c:	69fa      	ldr	r2, [r7, #28]
   1615e:	6a3b      	ldr	r3, [r7, #32]
   16160:	401a      	ands	r2, r3
   16162:	69fb      	ldr	r3, [r7, #28]
   16164:	43d9      	mvns	r1, r3
   16166:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16168:	400b      	ands	r3, r1
   1616a:	431a      	orrs	r2, r3
   1616c:	69bb      	ldr	r3, [r7, #24]
   1616e:	18d2      	adds	r2, r2, r3
   16170:	68fb      	ldr	r3, [r7, #12]
   16172:	3310      	adds	r3, #16
   16174:	681b      	ldr	r3, [r3, #0]
   16176:	18d2      	adds	r2, r2, r3
   16178:	f640 73af 	movw	r3, #4015	; 0xfaf
   1617c:	f2cf 537c 	movt	r3, #62844	; 0xf57c
   16180:	18d3      	adds	r3, r2, r3
   16182:	62bb      	str	r3, [r7, #40]	; 0x28
   16184:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16186:	ea4f 6273 	mov.w	r2, r3, ror #25
   1618a:	69fb      	ldr	r3, [r7, #28]
   1618c:	18d3      	adds	r3, r2, r3
   1618e:	61bb      	str	r3, [r7, #24]
   16190:	69ba      	ldr	r2, [r7, #24]
   16192:	69fb      	ldr	r3, [r7, #28]
   16194:	401a      	ands	r2, r3
   16196:	69bb      	ldr	r3, [r7, #24]
   16198:	43d9      	mvns	r1, r3
   1619a:	6a3b      	ldr	r3, [r7, #32]
   1619c:	400b      	ands	r3, r1
   1619e:	431a      	orrs	r2, r3
   161a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   161a2:	18d2      	adds	r2, r2, r3
   161a4:	68fb      	ldr	r3, [r7, #12]
   161a6:	3314      	adds	r3, #20
   161a8:	681b      	ldr	r3, [r3, #0]
   161aa:	18d2      	adds	r2, r2, r3
   161ac:	f24c 632a 	movw	r3, #50730	; 0xc62a
   161b0:	f2c4 7387 	movt	r3, #18311	; 0x4787
   161b4:	18d3      	adds	r3, r2, r3
   161b6:	62bb      	str	r3, [r7, #40]	; 0x28
   161b8:	6abb      	ldr	r3, [r7, #40]	; 0x28
   161ba:	ea4f 5233 	mov.w	r2, r3, ror #20
   161be:	69bb      	ldr	r3, [r7, #24]
   161c0:	18d3      	adds	r3, r2, r3
   161c2:	627b      	str	r3, [r7, #36]	; 0x24
   161c4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   161c6:	69bb      	ldr	r3, [r7, #24]
   161c8:	401a      	ands	r2, r3
   161ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   161cc:	43d9      	mvns	r1, r3
   161ce:	69fb      	ldr	r3, [r7, #28]
   161d0:	400b      	ands	r3, r1
   161d2:	431a      	orrs	r2, r3
   161d4:	6a3b      	ldr	r3, [r7, #32]
   161d6:	18d2      	adds	r2, r2, r3
   161d8:	68fb      	ldr	r3, [r7, #12]
   161da:	3318      	adds	r3, #24
   161dc:	681b      	ldr	r3, [r3, #0]
   161de:	18d2      	adds	r2, r2, r3
   161e0:	f244 6313 	movw	r3, #17939	; 0x4613
   161e4:	f6ca 0330 	movt	r3, #43056	; 0xa830
   161e8:	18d3      	adds	r3, r2, r3
   161ea:	62bb      	str	r3, [r7, #40]	; 0x28
   161ec:	6abb      	ldr	r3, [r7, #40]	; 0x28
   161ee:	ea4f 32f3 	mov.w	r2, r3, ror #15
   161f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   161f4:	18d3      	adds	r3, r2, r3
   161f6:	623b      	str	r3, [r7, #32]
   161f8:	6a3a      	ldr	r2, [r7, #32]
   161fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   161fc:	401a      	ands	r2, r3
   161fe:	6a3b      	ldr	r3, [r7, #32]
   16200:	43d9      	mvns	r1, r3
   16202:	69bb      	ldr	r3, [r7, #24]
   16204:	400b      	ands	r3, r1
   16206:	431a      	orrs	r2, r3
   16208:	69fb      	ldr	r3, [r7, #28]
   1620a:	18d2      	adds	r2, r2, r3
   1620c:	68fb      	ldr	r3, [r7, #12]
   1620e:	331c      	adds	r3, #28
   16210:	681b      	ldr	r3, [r3, #0]
   16212:	18d2      	adds	r2, r2, r3
   16214:	f249 5301 	movw	r3, #38145	; 0x9501
   16218:	f6cf 5346 	movt	r3, #64838	; 0xfd46
   1621c:	18d3      	adds	r3, r2, r3
   1621e:	62bb      	str	r3, [r7, #40]	; 0x28
   16220:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16222:	ea4f 22b3 	mov.w	r2, r3, ror #10
   16226:	6a3b      	ldr	r3, [r7, #32]
   16228:	18d3      	adds	r3, r2, r3
   1622a:	61fb      	str	r3, [r7, #28]
   1622c:	69fa      	ldr	r2, [r7, #28]
   1622e:	6a3b      	ldr	r3, [r7, #32]
   16230:	401a      	ands	r2, r3
   16232:	69fb      	ldr	r3, [r7, #28]
   16234:	43d9      	mvns	r1, r3
   16236:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16238:	400b      	ands	r3, r1
   1623a:	431a      	orrs	r2, r3
   1623c:	69bb      	ldr	r3, [r7, #24]
   1623e:	18d2      	adds	r2, r2, r3
   16240:	68fb      	ldr	r3, [r7, #12]
   16242:	3320      	adds	r3, #32
   16244:	681b      	ldr	r3, [r3, #0]
   16246:	18d2      	adds	r2, r2, r3
   16248:	f649 03d8 	movw	r3, #39128	; 0x98d8
   1624c:	f6c6 1380 	movt	r3, #27008	; 0x6980
   16250:	18d3      	adds	r3, r2, r3
   16252:	62bb      	str	r3, [r7, #40]	; 0x28
   16254:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16256:	ea4f 6273 	mov.w	r2, r3, ror #25
   1625a:	69fb      	ldr	r3, [r7, #28]
   1625c:	18d3      	adds	r3, r2, r3
   1625e:	61bb      	str	r3, [r7, #24]
   16260:	69ba      	ldr	r2, [r7, #24]
   16262:	69fb      	ldr	r3, [r7, #28]
   16264:	401a      	ands	r2, r3
   16266:	69bb      	ldr	r3, [r7, #24]
   16268:	43d9      	mvns	r1, r3
   1626a:	6a3b      	ldr	r3, [r7, #32]
   1626c:	400b      	ands	r3, r1
   1626e:	431a      	orrs	r2, r3
   16270:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16272:	18d2      	adds	r2, r2, r3
   16274:	68fb      	ldr	r3, [r7, #12]
   16276:	3324      	adds	r3, #36	; 0x24
   16278:	681b      	ldr	r3, [r3, #0]
   1627a:	18d2      	adds	r2, r2, r3
   1627c:	f24f 73af 	movw	r3, #63407	; 0xf7af
   16280:	f6c8 3344 	movt	r3, #35652	; 0x8b44
   16284:	18d3      	adds	r3, r2, r3
   16286:	62bb      	str	r3, [r7, #40]	; 0x28
   16288:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1628a:	ea4f 5233 	mov.w	r2, r3, ror #20
   1628e:	69bb      	ldr	r3, [r7, #24]
   16290:	18d3      	adds	r3, r2, r3
   16292:	627b      	str	r3, [r7, #36]	; 0x24
   16294:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   16296:	69bb      	ldr	r3, [r7, #24]
   16298:	401a      	ands	r2, r3
   1629a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1629c:	43d9      	mvns	r1, r3
   1629e:	69fb      	ldr	r3, [r7, #28]
   162a0:	400b      	ands	r3, r1
   162a2:	431a      	orrs	r2, r3
   162a4:	6a3b      	ldr	r3, [r7, #32]
   162a6:	18d2      	adds	r2, r2, r3
   162a8:	68fb      	ldr	r3, [r7, #12]
   162aa:	3328      	adds	r3, #40	; 0x28
   162ac:	681b      	ldr	r3, [r3, #0]
   162ae:	18d3      	adds	r3, r2, r3
   162b0:	f5a3 4324 	sub.w	r3, r3, #41984	; 0xa400
   162b4:	3b4f      	subs	r3, #79	; 0x4f
   162b6:	62bb      	str	r3, [r7, #40]	; 0x28
   162b8:	6abb      	ldr	r3, [r7, #40]	; 0x28
   162ba:	ea4f 32f3 	mov.w	r2, r3, ror #15
   162be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   162c0:	18d3      	adds	r3, r2, r3
   162c2:	623b      	str	r3, [r7, #32]
   162c4:	6a3a      	ldr	r2, [r7, #32]
   162c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   162c8:	401a      	ands	r2, r3
   162ca:	6a3b      	ldr	r3, [r7, #32]
   162cc:	43d9      	mvns	r1, r3
   162ce:	69bb      	ldr	r3, [r7, #24]
   162d0:	400b      	ands	r3, r1
   162d2:	431a      	orrs	r2, r3
   162d4:	69fb      	ldr	r3, [r7, #28]
   162d6:	18d2      	adds	r2, r2, r3
   162d8:	68fb      	ldr	r3, [r7, #12]
   162da:	332c      	adds	r3, #44	; 0x2c
   162dc:	681b      	ldr	r3, [r3, #0]
   162de:	18d2      	adds	r2, r2, r3
   162e0:	f24d 73be 	movw	r3, #55230	; 0xd7be
   162e4:	f6c8 135c 	movt	r3, #35164	; 0x895c
   162e8:	18d3      	adds	r3, r2, r3
   162ea:	62bb      	str	r3, [r7, #40]	; 0x28
   162ec:	6abb      	ldr	r3, [r7, #40]	; 0x28
   162ee:	ea4f 22b3 	mov.w	r2, r3, ror #10
   162f2:	6a3b      	ldr	r3, [r7, #32]
   162f4:	18d3      	adds	r3, r2, r3
   162f6:	61fb      	str	r3, [r7, #28]
   162f8:	69fa      	ldr	r2, [r7, #28]
   162fa:	6a3b      	ldr	r3, [r7, #32]
   162fc:	401a      	ands	r2, r3
   162fe:	69fb      	ldr	r3, [r7, #28]
   16300:	43d9      	mvns	r1, r3
   16302:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16304:	400b      	ands	r3, r1
   16306:	431a      	orrs	r2, r3
   16308:	69bb      	ldr	r3, [r7, #24]
   1630a:	18d2      	adds	r2, r2, r3
   1630c:	68fb      	ldr	r3, [r7, #12]
   1630e:	3330      	adds	r3, #48	; 0x30
   16310:	681b      	ldr	r3, [r3, #0]
   16312:	18d2      	adds	r2, r2, r3
   16314:	f241 1322 	movw	r3, #4386	; 0x1122
   16318:	f6c6 3390 	movt	r3, #27536	; 0x6b90
   1631c:	18d3      	adds	r3, r2, r3
   1631e:	62bb      	str	r3, [r7, #40]	; 0x28
   16320:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16322:	ea4f 6273 	mov.w	r2, r3, ror #25
   16326:	69fb      	ldr	r3, [r7, #28]
   16328:	18d3      	adds	r3, r2, r3
   1632a:	61bb      	str	r3, [r7, #24]
   1632c:	69ba      	ldr	r2, [r7, #24]
   1632e:	69fb      	ldr	r3, [r7, #28]
   16330:	401a      	ands	r2, r3
   16332:	69bb      	ldr	r3, [r7, #24]
   16334:	43d9      	mvns	r1, r3
   16336:	6a3b      	ldr	r3, [r7, #32]
   16338:	400b      	ands	r3, r1
   1633a:	431a      	orrs	r2, r3
   1633c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1633e:	18d2      	adds	r2, r2, r3
   16340:	68fb      	ldr	r3, [r7, #12]
   16342:	3334      	adds	r3, #52	; 0x34
   16344:	681b      	ldr	r3, [r3, #0]
   16346:	18d2      	adds	r2, r2, r3
   16348:	f247 1393 	movw	r3, #29075	; 0x7193
   1634c:	f6cf 5398 	movt	r3, #64920	; 0xfd98
   16350:	18d3      	adds	r3, r2, r3
   16352:	62bb      	str	r3, [r7, #40]	; 0x28
   16354:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16356:	ea4f 5233 	mov.w	r2, r3, ror #20
   1635a:	69bb      	ldr	r3, [r7, #24]
   1635c:	18d3      	adds	r3, r2, r3
   1635e:	627b      	str	r3, [r7, #36]	; 0x24
   16360:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   16362:	69bb      	ldr	r3, [r7, #24]
   16364:	401a      	ands	r2, r3
   16366:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16368:	43d9      	mvns	r1, r3
   1636a:	69fb      	ldr	r3, [r7, #28]
   1636c:	400b      	ands	r3, r1
   1636e:	431a      	orrs	r2, r3
   16370:	6a3b      	ldr	r3, [r7, #32]
   16372:	18d2      	adds	r2, r2, r3
   16374:	68fb      	ldr	r3, [r7, #12]
   16376:	3338      	adds	r3, #56	; 0x38
   16378:	681b      	ldr	r3, [r3, #0]
   1637a:	18d2      	adds	r2, r2, r3
   1637c:	f244 338e 	movw	r3, #17294	; 0x438e
   16380:	f2ca 6379 	movt	r3, #42617	; 0xa679
   16384:	18d3      	adds	r3, r2, r3
   16386:	62bb      	str	r3, [r7, #40]	; 0x28
   16388:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1638a:	ea4f 32f3 	mov.w	r2, r3, ror #15
   1638e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16390:	18d3      	adds	r3, r2, r3
   16392:	623b      	str	r3, [r7, #32]
   16394:	6a3a      	ldr	r2, [r7, #32]
   16396:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16398:	401a      	ands	r2, r3
   1639a:	6a3b      	ldr	r3, [r7, #32]
   1639c:	43d9      	mvns	r1, r3
   1639e:	69bb      	ldr	r3, [r7, #24]
   163a0:	400b      	ands	r3, r1
   163a2:	431a      	orrs	r2, r3
   163a4:	69fb      	ldr	r3, [r7, #28]
   163a6:	18d2      	adds	r2, r2, r3
   163a8:	68fb      	ldr	r3, [r7, #12]
   163aa:	333c      	adds	r3, #60	; 0x3c
   163ac:	681b      	ldr	r3, [r3, #0]
   163ae:	18d2      	adds	r2, r2, r3
   163b0:	f640 0321 	movw	r3, #2081	; 0x821
   163b4:	f6c4 13b4 	movt	r3, #18868	; 0x49b4
   163b8:	18d3      	adds	r3, r2, r3
   163ba:	62bb      	str	r3, [r7, #40]	; 0x28
   163bc:	6abb      	ldr	r3, [r7, #40]	; 0x28
   163be:	ea4f 22b3 	mov.w	r2, r3, ror #10
   163c2:	6a3b      	ldr	r3, [r7, #32]
   163c4:	18d3      	adds	r3, r2, r3
   163c6:	61fb      	str	r3, [r7, #28]
   163c8:	69fa      	ldr	r2, [r7, #28]
   163ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   163cc:	401a      	ands	r2, r3
   163ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   163d0:	43d9      	mvns	r1, r3
   163d2:	6a3b      	ldr	r3, [r7, #32]
   163d4:	400b      	ands	r3, r1
   163d6:	431a      	orrs	r2, r3
   163d8:	69bb      	ldr	r3, [r7, #24]
   163da:	18d2      	adds	r2, r2, r3
   163dc:	68fb      	ldr	r3, [r7, #12]
   163de:	3304      	adds	r3, #4
   163e0:	681b      	ldr	r3, [r3, #0]
   163e2:	18d2      	adds	r2, r2, r3
   163e4:	f242 5362 	movw	r3, #9570	; 0x2562
   163e8:	f2cf 631e 	movt	r3, #63006	; 0xf61e
   163ec:	18d3      	adds	r3, r2, r3
   163ee:	62bb      	str	r3, [r7, #40]	; 0x28
   163f0:	6abb      	ldr	r3, [r7, #40]	; 0x28
   163f2:	ea4f 62f3 	mov.w	r2, r3, ror #27
   163f6:	69fb      	ldr	r3, [r7, #28]
   163f8:	18d3      	adds	r3, r2, r3
   163fa:	61bb      	str	r3, [r7, #24]
   163fc:	69ba      	ldr	r2, [r7, #24]
   163fe:	6a3b      	ldr	r3, [r7, #32]
   16400:	401a      	ands	r2, r3
   16402:	6a3b      	ldr	r3, [r7, #32]
   16404:	43d9      	mvns	r1, r3
   16406:	69fb      	ldr	r3, [r7, #28]
   16408:	400b      	ands	r3, r1
   1640a:	431a      	orrs	r2, r3
   1640c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1640e:	18d2      	adds	r2, r2, r3
   16410:	68fb      	ldr	r3, [r7, #12]
   16412:	3318      	adds	r3, #24
   16414:	681b      	ldr	r3, [r3, #0]
   16416:	18d2      	adds	r2, r2, r3
   16418:	f24b 3340 	movw	r3, #45888	; 0xb340
   1641c:	f2cc 0340 	movt	r3, #49216	; 0xc040
   16420:	18d3      	adds	r3, r2, r3
   16422:	62bb      	str	r3, [r7, #40]	; 0x28
   16424:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16426:	ea4f 52f3 	mov.w	r2, r3, ror #23
   1642a:	69bb      	ldr	r3, [r7, #24]
   1642c:	18d3      	adds	r3, r2, r3
   1642e:	627b      	str	r3, [r7, #36]	; 0x24
   16430:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   16432:	69fb      	ldr	r3, [r7, #28]
   16434:	401a      	ands	r2, r3
   16436:	69fb      	ldr	r3, [r7, #28]
   16438:	43d9      	mvns	r1, r3
   1643a:	69bb      	ldr	r3, [r7, #24]
   1643c:	400b      	ands	r3, r1
   1643e:	431a      	orrs	r2, r3
   16440:	6a3b      	ldr	r3, [r7, #32]
   16442:	18d2      	adds	r2, r2, r3
   16444:	68fb      	ldr	r3, [r7, #12]
   16446:	332c      	adds	r3, #44	; 0x2c
   16448:	681b      	ldr	r3, [r3, #0]
   1644a:	18d2      	adds	r2, r2, r3
   1644c:	f645 2351 	movw	r3, #23121	; 0x5a51
   16450:	f2c2 635e 	movt	r3, #9822	; 0x265e
   16454:	18d3      	adds	r3, r2, r3
   16456:	62bb      	str	r3, [r7, #40]	; 0x28
   16458:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1645a:	ea4f 42b3 	mov.w	r2, r3, ror #18
   1645e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16460:	18d3      	adds	r3, r2, r3
   16462:	623b      	str	r3, [r7, #32]
   16464:	6a3a      	ldr	r2, [r7, #32]
   16466:	69bb      	ldr	r3, [r7, #24]
   16468:	401a      	ands	r2, r3
   1646a:	69bb      	ldr	r3, [r7, #24]
   1646c:	43d9      	mvns	r1, r3
   1646e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16470:	400b      	ands	r3, r1
   16472:	431a      	orrs	r2, r3
   16474:	69fb      	ldr	r3, [r7, #28]
   16476:	18d2      	adds	r2, r2, r3
   16478:	68fb      	ldr	r3, [r7, #12]
   1647a:	681b      	ldr	r3, [r3, #0]
   1647c:	18d2      	adds	r2, r2, r3
   1647e:	f24c 73aa 	movw	r3, #51114	; 0xc7aa
   16482:	f6ce 13b6 	movt	r3, #59830	; 0xe9b6
   16486:	18d3      	adds	r3, r2, r3
   16488:	62bb      	str	r3, [r7, #40]	; 0x28
   1648a:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1648c:	ea4f 3233 	mov.w	r2, r3, ror #12
   16490:	6a3b      	ldr	r3, [r7, #32]
   16492:	18d3      	adds	r3, r2, r3
   16494:	61fb      	str	r3, [r7, #28]
   16496:	69fa      	ldr	r2, [r7, #28]
   16498:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1649a:	401a      	ands	r2, r3
   1649c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1649e:	43d9      	mvns	r1, r3
   164a0:	6a3b      	ldr	r3, [r7, #32]
   164a2:	400b      	ands	r3, r1
   164a4:	431a      	orrs	r2, r3
   164a6:	69bb      	ldr	r3, [r7, #24]
   164a8:	18d2      	adds	r2, r2, r3
   164aa:	68fb      	ldr	r3, [r7, #12]
   164ac:	3314      	adds	r3, #20
   164ae:	681b      	ldr	r3, [r3, #0]
   164b0:	18d2      	adds	r2, r2, r3
   164b2:	f241 035d 	movw	r3, #4189	; 0x105d
   164b6:	f2cd 632f 	movt	r3, #54831	; 0xd62f
   164ba:	18d3      	adds	r3, r2, r3
   164bc:	62bb      	str	r3, [r7, #40]	; 0x28
   164be:	6abb      	ldr	r3, [r7, #40]	; 0x28
   164c0:	ea4f 62f3 	mov.w	r2, r3, ror #27
   164c4:	69fb      	ldr	r3, [r7, #28]
   164c6:	18d3      	adds	r3, r2, r3
   164c8:	61bb      	str	r3, [r7, #24]
   164ca:	69ba      	ldr	r2, [r7, #24]
   164cc:	6a3b      	ldr	r3, [r7, #32]
   164ce:	401a      	ands	r2, r3
   164d0:	6a3b      	ldr	r3, [r7, #32]
   164d2:	43d9      	mvns	r1, r3
   164d4:	69fb      	ldr	r3, [r7, #28]
   164d6:	400b      	ands	r3, r1
   164d8:	431a      	orrs	r2, r3
   164da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   164dc:	18d2      	adds	r2, r2, r3
   164de:	68fb      	ldr	r3, [r7, #12]
   164e0:	3328      	adds	r3, #40	; 0x28
   164e2:	681b      	ldr	r3, [r3, #0]
   164e4:	18d2      	adds	r2, r2, r3
   164e6:	f241 4353 	movw	r3, #5203	; 0x1453
   164ea:	f2c0 2344 	movt	r3, #580	; 0x244
   164ee:	18d3      	adds	r3, r2, r3
   164f0:	62bb      	str	r3, [r7, #40]	; 0x28
   164f2:	6abb      	ldr	r3, [r7, #40]	; 0x28
   164f4:	ea4f 52f3 	mov.w	r2, r3, ror #23
   164f8:	69bb      	ldr	r3, [r7, #24]
   164fa:	18d3      	adds	r3, r2, r3
   164fc:	627b      	str	r3, [r7, #36]	; 0x24
   164fe:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   16500:	69fb      	ldr	r3, [r7, #28]
   16502:	401a      	ands	r2, r3
   16504:	69fb      	ldr	r3, [r7, #28]
   16506:	43d9      	mvns	r1, r3
   16508:	69bb      	ldr	r3, [r7, #24]
   1650a:	400b      	ands	r3, r1
   1650c:	431a      	orrs	r2, r3
   1650e:	6a3b      	ldr	r3, [r7, #32]
   16510:	18d2      	adds	r2, r2, r3
   16512:	68fb      	ldr	r3, [r7, #12]
   16514:	333c      	adds	r3, #60	; 0x3c
   16516:	681b      	ldr	r3, [r3, #0]
   16518:	18d2      	adds	r2, r2, r3
   1651a:	f24e 6381 	movw	r3, #59009	; 0xe681
   1651e:	f6cd 03a1 	movt	r3, #55457	; 0xd8a1
   16522:	18d3      	adds	r3, r2, r3
   16524:	62bb      	str	r3, [r7, #40]	; 0x28
   16526:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16528:	ea4f 42b3 	mov.w	r2, r3, ror #18
   1652c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1652e:	18d3      	adds	r3, r2, r3
   16530:	623b      	str	r3, [r7, #32]
   16532:	6a3a      	ldr	r2, [r7, #32]
   16534:	69bb      	ldr	r3, [r7, #24]
   16536:	401a      	ands	r2, r3
   16538:	69bb      	ldr	r3, [r7, #24]
   1653a:	43d9      	mvns	r1, r3
   1653c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1653e:	400b      	ands	r3, r1
   16540:	431a      	orrs	r2, r3
   16542:	69fb      	ldr	r3, [r7, #28]
   16544:	18d2      	adds	r2, r2, r3
   16546:	68fb      	ldr	r3, [r7, #12]
   16548:	3310      	adds	r3, #16
   1654a:	681b      	ldr	r3, [r3, #0]
   1654c:	18d2      	adds	r2, r2, r3
   1654e:	f64f 33c8 	movw	r3, #64456	; 0xfbc8
   16552:	f2ce 73d3 	movt	r3, #59347	; 0xe7d3
   16556:	18d3      	adds	r3, r2, r3
   16558:	62bb      	str	r3, [r7, #40]	; 0x28
   1655a:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1655c:	ea4f 3233 	mov.w	r2, r3, ror #12
   16560:	6a3b      	ldr	r3, [r7, #32]
   16562:	18d3      	adds	r3, r2, r3
   16564:	61fb      	str	r3, [r7, #28]
   16566:	69fa      	ldr	r2, [r7, #28]
   16568:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1656a:	401a      	ands	r2, r3
   1656c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1656e:	43d9      	mvns	r1, r3
   16570:	6a3b      	ldr	r3, [r7, #32]
   16572:	400b      	ands	r3, r1
   16574:	431a      	orrs	r2, r3
   16576:	69bb      	ldr	r3, [r7, #24]
   16578:	18d2      	adds	r2, r2, r3
   1657a:	68fb      	ldr	r3, [r7, #12]
   1657c:	3324      	adds	r3, #36	; 0x24
   1657e:	681b      	ldr	r3, [r3, #0]
   16580:	18d2      	adds	r2, r2, r3
   16582:	f64c 53e6 	movw	r3, #52710	; 0xcde6
   16586:	f2c2 13e1 	movt	r3, #8673	; 0x21e1
   1658a:	18d3      	adds	r3, r2, r3
   1658c:	62bb      	str	r3, [r7, #40]	; 0x28
   1658e:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16590:	ea4f 62f3 	mov.w	r2, r3, ror #27
   16594:	69fb      	ldr	r3, [r7, #28]
   16596:	18d3      	adds	r3, r2, r3
   16598:	61bb      	str	r3, [r7, #24]
   1659a:	69ba      	ldr	r2, [r7, #24]
   1659c:	6a3b      	ldr	r3, [r7, #32]
   1659e:	401a      	ands	r2, r3
   165a0:	6a3b      	ldr	r3, [r7, #32]
   165a2:	43d9      	mvns	r1, r3
   165a4:	69fb      	ldr	r3, [r7, #28]
   165a6:	400b      	ands	r3, r1
   165a8:	431a      	orrs	r2, r3
   165aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   165ac:	18d2      	adds	r2, r2, r3
   165ae:	68fb      	ldr	r3, [r7, #12]
   165b0:	3338      	adds	r3, #56	; 0x38
   165b2:	681b      	ldr	r3, [r3, #0]
   165b4:	18d2      	adds	r2, r2, r3
   165b6:	f240 73d6 	movw	r3, #2006	; 0x7d6
   165ba:	f2cc 3337 	movt	r3, #49975	; 0xc337
   165be:	18d3      	adds	r3, r2, r3
   165c0:	62bb      	str	r3, [r7, #40]	; 0x28
   165c2:	6abb      	ldr	r3, [r7, #40]	; 0x28
   165c4:	ea4f 52f3 	mov.w	r2, r3, ror #23
   165c8:	69bb      	ldr	r3, [r7, #24]
   165ca:	18d3      	adds	r3, r2, r3
   165cc:	627b      	str	r3, [r7, #36]	; 0x24
   165ce:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   165d0:	69fb      	ldr	r3, [r7, #28]
   165d2:	401a      	ands	r2, r3
   165d4:	69fb      	ldr	r3, [r7, #28]
   165d6:	43d9      	mvns	r1, r3
   165d8:	69bb      	ldr	r3, [r7, #24]
   165da:	400b      	ands	r3, r1
   165dc:	431a      	orrs	r2, r3
   165de:	6a3b      	ldr	r3, [r7, #32]
   165e0:	18d2      	adds	r2, r2, r3
   165e2:	68fb      	ldr	r3, [r7, #12]
   165e4:	330c      	adds	r3, #12
   165e6:	681b      	ldr	r3, [r3, #0]
   165e8:	18d2      	adds	r2, r2, r3
   165ea:	f640 5387 	movw	r3, #3463	; 0xd87
   165ee:	f2cf 43d5 	movt	r3, #62677	; 0xf4d5
   165f2:	18d3      	adds	r3, r2, r3
   165f4:	62bb      	str	r3, [r7, #40]	; 0x28
   165f6:	6abb      	ldr	r3, [r7, #40]	; 0x28
   165f8:	ea4f 42b3 	mov.w	r2, r3, ror #18
   165fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   165fe:	18d3      	adds	r3, r2, r3
   16600:	623b      	str	r3, [r7, #32]
   16602:	6a3a      	ldr	r2, [r7, #32]
   16604:	69bb      	ldr	r3, [r7, #24]
   16606:	401a      	ands	r2, r3
   16608:	69bb      	ldr	r3, [r7, #24]
   1660a:	43d9      	mvns	r1, r3
   1660c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1660e:	400b      	ands	r3, r1
   16610:	431a      	orrs	r2, r3
   16612:	69fb      	ldr	r3, [r7, #28]
   16614:	18d2      	adds	r2, r2, r3
   16616:	68fb      	ldr	r3, [r7, #12]
   16618:	3320      	adds	r3, #32
   1661a:	681b      	ldr	r3, [r3, #0]
   1661c:	18d2      	adds	r2, r2, r3
   1661e:	f241 43ed 	movw	r3, #5357	; 0x14ed
   16622:	f2c4 535a 	movt	r3, #17754	; 0x455a
   16626:	18d3      	adds	r3, r2, r3
   16628:	62bb      	str	r3, [r7, #40]	; 0x28
   1662a:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1662c:	ea4f 3233 	mov.w	r2, r3, ror #12
   16630:	6a3b      	ldr	r3, [r7, #32]
   16632:	18d3      	adds	r3, r2, r3
   16634:	61fb      	str	r3, [r7, #28]
   16636:	69fa      	ldr	r2, [r7, #28]
   16638:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1663a:	401a      	ands	r2, r3
   1663c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1663e:	43d9      	mvns	r1, r3
   16640:	6a3b      	ldr	r3, [r7, #32]
   16642:	400b      	ands	r3, r1
   16644:	431a      	orrs	r2, r3
   16646:	69bb      	ldr	r3, [r7, #24]
   16648:	18d2      	adds	r2, r2, r3
   1664a:	68fb      	ldr	r3, [r7, #12]
   1664c:	3334      	adds	r3, #52	; 0x34
   1664e:	681b      	ldr	r3, [r3, #0]
   16650:	18d2      	adds	r2, r2, r3
   16652:	f64e 1305 	movw	r3, #59653	; 0xe905
   16656:	f6ca 13e3 	movt	r3, #43491	; 0xa9e3
   1665a:	18d3      	adds	r3, r2, r3
   1665c:	62bb      	str	r3, [r7, #40]	; 0x28
   1665e:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16660:	ea4f 62f3 	mov.w	r2, r3, ror #27
   16664:	69fb      	ldr	r3, [r7, #28]
   16666:	18d3      	adds	r3, r2, r3
   16668:	61bb      	str	r3, [r7, #24]
   1666a:	69ba      	ldr	r2, [r7, #24]
   1666c:	6a3b      	ldr	r3, [r7, #32]
   1666e:	401a      	ands	r2, r3
   16670:	6a3b      	ldr	r3, [r7, #32]
   16672:	43d9      	mvns	r1, r3
   16674:	69fb      	ldr	r3, [r7, #28]
   16676:	400b      	ands	r3, r1
   16678:	431a      	orrs	r2, r3
   1667a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1667c:	18d2      	adds	r2, r2, r3
   1667e:	68fb      	ldr	r3, [r7, #12]
   16680:	3308      	adds	r3, #8
   16682:	681b      	ldr	r3, [r3, #0]
   16684:	18d2      	adds	r2, r2, r3
   16686:	f24a 33f8 	movw	r3, #41976	; 0xa3f8
   1668a:	f6cf 43ef 	movt	r3, #64751	; 0xfcef
   1668e:	18d3      	adds	r3, r2, r3
   16690:	62bb      	str	r3, [r7, #40]	; 0x28
   16692:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16694:	ea4f 52f3 	mov.w	r2, r3, ror #23
   16698:	69bb      	ldr	r3, [r7, #24]
   1669a:	18d3      	adds	r3, r2, r3
   1669c:	627b      	str	r3, [r7, #36]	; 0x24
   1669e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   166a0:	69fb      	ldr	r3, [r7, #28]
   166a2:	401a      	ands	r2, r3
   166a4:	69fb      	ldr	r3, [r7, #28]
   166a6:	43d9      	mvns	r1, r3
   166a8:	69bb      	ldr	r3, [r7, #24]
   166aa:	400b      	ands	r3, r1
   166ac:	431a      	orrs	r2, r3
   166ae:	6a3b      	ldr	r3, [r7, #32]
   166b0:	18d2      	adds	r2, r2, r3
   166b2:	68fb      	ldr	r3, [r7, #12]
   166b4:	331c      	adds	r3, #28
   166b6:	681b      	ldr	r3, [r3, #0]
   166b8:	18d2      	adds	r2, r2, r3
   166ba:	f240 23d9 	movw	r3, #729	; 0x2d9
   166be:	f2c6 736f 	movt	r3, #26479	; 0x676f
   166c2:	18d3      	adds	r3, r2, r3
   166c4:	62bb      	str	r3, [r7, #40]	; 0x28
   166c6:	6abb      	ldr	r3, [r7, #40]	; 0x28
   166c8:	ea4f 42b3 	mov.w	r2, r3, ror #18
   166cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   166ce:	18d3      	adds	r3, r2, r3
   166d0:	623b      	str	r3, [r7, #32]
   166d2:	6a3a      	ldr	r2, [r7, #32]
   166d4:	69bb      	ldr	r3, [r7, #24]
   166d6:	401a      	ands	r2, r3
   166d8:	69bb      	ldr	r3, [r7, #24]
   166da:	43d9      	mvns	r1, r3
   166dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   166de:	400b      	ands	r3, r1
   166e0:	431a      	orrs	r2, r3
   166e2:	69fb      	ldr	r3, [r7, #28]
   166e4:	18d2      	adds	r2, r2, r3
   166e6:	68fb      	ldr	r3, [r7, #12]
   166e8:	3330      	adds	r3, #48	; 0x30
   166ea:	681b      	ldr	r3, [r3, #0]
   166ec:	18d2      	adds	r2, r2, r3
   166ee:	f644 438a 	movw	r3, #19594	; 0x4c8a
   166f2:	f6c8 532a 	movt	r3, #36138	; 0x8d2a
   166f6:	18d3      	adds	r3, r2, r3
   166f8:	62bb      	str	r3, [r7, #40]	; 0x28
   166fa:	6abb      	ldr	r3, [r7, #40]	; 0x28
   166fc:	ea4f 3233 	mov.w	r2, r3, ror #12
   16700:	6a3b      	ldr	r3, [r7, #32]
   16702:	18d3      	adds	r3, r2, r3
   16704:	61fb      	str	r3, [r7, #28]
   16706:	69fa      	ldr	r2, [r7, #28]
   16708:	6a3b      	ldr	r3, [r7, #32]
   1670a:	405a      	eors	r2, r3
   1670c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1670e:	405a      	eors	r2, r3
   16710:	69bb      	ldr	r3, [r7, #24]
   16712:	18d2      	adds	r2, r2, r3
   16714:	68fb      	ldr	r3, [r7, #12]
   16716:	3314      	adds	r3, #20
   16718:	681b      	ldr	r3, [r3, #0]
   1671a:	18d3      	adds	r3, r2, r3
   1671c:	f5a3 23b8 	sub.w	r3, r3, #376832	; 0x5c000
   16720:	f2a3 63be 	subw	r3, r3, #1726	; 0x6be
   16724:	62bb      	str	r3, [r7, #40]	; 0x28
   16726:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16728:	ea4f 7233 	mov.w	r2, r3, ror #28
   1672c:	69fb      	ldr	r3, [r7, #28]
   1672e:	18d3      	adds	r3, r2, r3
   16730:	61bb      	str	r3, [r7, #24]
   16732:	69ba      	ldr	r2, [r7, #24]
   16734:	69fb      	ldr	r3, [r7, #28]
   16736:	405a      	eors	r2, r3
   16738:	6a3b      	ldr	r3, [r7, #32]
   1673a:	405a      	eors	r2, r3
   1673c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1673e:	18d2      	adds	r2, r2, r3
   16740:	68fb      	ldr	r3, [r7, #12]
   16742:	3320      	adds	r3, #32
   16744:	681b      	ldr	r3, [r3, #0]
   16746:	18d2      	adds	r2, r2, r3
   16748:	f24f 6381 	movw	r3, #63105	; 0xf681
   1674c:	f2c8 7371 	movt	r3, #34673	; 0x8771
   16750:	18d3      	adds	r3, r2, r3
   16752:	62bb      	str	r3, [r7, #40]	; 0x28
   16754:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16756:	ea4f 5273 	mov.w	r2, r3, ror #21
   1675a:	69bb      	ldr	r3, [r7, #24]
   1675c:	18d3      	adds	r3, r2, r3
   1675e:	627b      	str	r3, [r7, #36]	; 0x24
   16760:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   16762:	69bb      	ldr	r3, [r7, #24]
   16764:	405a      	eors	r2, r3
   16766:	69fb      	ldr	r3, [r7, #28]
   16768:	405a      	eors	r2, r3
   1676a:	6a3b      	ldr	r3, [r7, #32]
   1676c:	18d2      	adds	r2, r2, r3
   1676e:	68fb      	ldr	r3, [r7, #12]
   16770:	332c      	adds	r3, #44	; 0x2c
   16772:	681b      	ldr	r3, [r3, #0]
   16774:	18d2      	adds	r2, r2, r3
   16776:	f246 1322 	movw	r3, #24866	; 0x6122
   1677a:	f6c6 539d 	movt	r3, #28061	; 0x6d9d
   1677e:	18d3      	adds	r3, r2, r3
   16780:	62bb      	str	r3, [r7, #40]	; 0x28
   16782:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16784:	ea4f 4233 	mov.w	r2, r3, ror #16
   16788:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1678a:	18d3      	adds	r3, r2, r3
   1678c:	623b      	str	r3, [r7, #32]
   1678e:	6a3a      	ldr	r2, [r7, #32]
   16790:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16792:	405a      	eors	r2, r3
   16794:	69bb      	ldr	r3, [r7, #24]
   16796:	405a      	eors	r2, r3
   16798:	69fb      	ldr	r3, [r7, #28]
   1679a:	18d2      	adds	r2, r2, r3
   1679c:	68fb      	ldr	r3, [r7, #12]
   1679e:	3338      	adds	r3, #56	; 0x38
   167a0:	681b      	ldr	r3, [r3, #0]
   167a2:	18d2      	adds	r2, r2, r3
   167a4:	f643 030c 	movw	r3, #14348	; 0x380c
   167a8:	f6cf 53e5 	movt	r3, #64997	; 0xfde5
   167ac:	18d3      	adds	r3, r2, r3
   167ae:	62bb      	str	r3, [r7, #40]	; 0x28
   167b0:	6abb      	ldr	r3, [r7, #40]	; 0x28
   167b2:	ea4f 2273 	mov.w	r2, r3, ror #9
   167b6:	6a3b      	ldr	r3, [r7, #32]
   167b8:	18d3      	adds	r3, r2, r3
   167ba:	61fb      	str	r3, [r7, #28]
   167bc:	69fa      	ldr	r2, [r7, #28]
   167be:	6a3b      	ldr	r3, [r7, #32]
   167c0:	405a      	eors	r2, r3
   167c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   167c4:	405a      	eors	r2, r3
   167c6:	69bb      	ldr	r3, [r7, #24]
   167c8:	18d2      	adds	r2, r2, r3
   167ca:	68fb      	ldr	r3, [r7, #12]
   167cc:	3304      	adds	r3, #4
   167ce:	681b      	ldr	r3, [r3, #0]
   167d0:	18d2      	adds	r2, r2, r3
   167d2:	f64e 2344 	movw	r3, #59972	; 0xea44
   167d6:	f2ca 43be 	movt	r3, #42174	; 0xa4be
   167da:	18d3      	adds	r3, r2, r3
   167dc:	62bb      	str	r3, [r7, #40]	; 0x28
   167de:	6abb      	ldr	r3, [r7, #40]	; 0x28
   167e0:	ea4f 7233 	mov.w	r2, r3, ror #28
   167e4:	69fb      	ldr	r3, [r7, #28]
   167e6:	18d3      	adds	r3, r2, r3
   167e8:	61bb      	str	r3, [r7, #24]
   167ea:	69ba      	ldr	r2, [r7, #24]
   167ec:	69fb      	ldr	r3, [r7, #28]
   167ee:	405a      	eors	r2, r3
   167f0:	6a3b      	ldr	r3, [r7, #32]
   167f2:	405a      	eors	r2, r3
   167f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   167f6:	18d2      	adds	r2, r2, r3
   167f8:	68fb      	ldr	r3, [r7, #12]
   167fa:	3310      	adds	r3, #16
   167fc:	681b      	ldr	r3, [r3, #0]
   167fe:	18d2      	adds	r2, r2, r3
   16800:	f64c 73a9 	movw	r3, #53161	; 0xcfa9
   16804:	f6c4 33de 	movt	r3, #19422	; 0x4bde
   16808:	18d3      	adds	r3, r2, r3
   1680a:	62bb      	str	r3, [r7, #40]	; 0x28
   1680c:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1680e:	ea4f 5273 	mov.w	r2, r3, ror #21
   16812:	69bb      	ldr	r3, [r7, #24]
   16814:	18d3      	adds	r3, r2, r3
   16816:	627b      	str	r3, [r7, #36]	; 0x24
   16818:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   1681a:	69bb      	ldr	r3, [r7, #24]
   1681c:	405a      	eors	r2, r3
   1681e:	69fb      	ldr	r3, [r7, #28]
   16820:	405a      	eors	r2, r3
   16822:	6a3b      	ldr	r3, [r7, #32]
   16824:	18d2      	adds	r2, r2, r3
   16826:	68fb      	ldr	r3, [r7, #12]
   16828:	331c      	adds	r3, #28
   1682a:	681b      	ldr	r3, [r3, #0]
   1682c:	18d2      	adds	r2, r2, r3
   1682e:	f644 3360 	movw	r3, #19296	; 0x4b60
   16832:	f2cf 63bb 	movt	r3, #63163	; 0xf6bb
   16836:	18d3      	adds	r3, r2, r3
   16838:	62bb      	str	r3, [r7, #40]	; 0x28
   1683a:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1683c:	ea4f 4233 	mov.w	r2, r3, ror #16
   16840:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16842:	18d3      	adds	r3, r2, r3
   16844:	623b      	str	r3, [r7, #32]
   16846:	6a3a      	ldr	r2, [r7, #32]
   16848:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1684a:	405a      	eors	r2, r3
   1684c:	69bb      	ldr	r3, [r7, #24]
   1684e:	405a      	eors	r2, r3
   16850:	69fb      	ldr	r3, [r7, #28]
   16852:	18d2      	adds	r2, r2, r3
   16854:	68fb      	ldr	r3, [r7, #12]
   16856:	3328      	adds	r3, #40	; 0x28
   16858:	681b      	ldr	r3, [r3, #0]
   1685a:	18d2      	adds	r2, r2, r3
   1685c:	f64b 4370 	movw	r3, #48240	; 0xbc70
   16860:	f6cb 63bf 	movt	r3, #48831	; 0xbebf
   16864:	18d3      	adds	r3, r2, r3
   16866:	62bb      	str	r3, [r7, #40]	; 0x28
   16868:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1686a:	ea4f 2273 	mov.w	r2, r3, ror #9
   1686e:	6a3b      	ldr	r3, [r7, #32]
   16870:	18d3      	adds	r3, r2, r3
   16872:	61fb      	str	r3, [r7, #28]
   16874:	69fa      	ldr	r2, [r7, #28]
   16876:	6a3b      	ldr	r3, [r7, #32]
   16878:	405a      	eors	r2, r3
   1687a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1687c:	405a      	eors	r2, r3
   1687e:	69bb      	ldr	r3, [r7, #24]
   16880:	18d2      	adds	r2, r2, r3
   16882:	68fb      	ldr	r3, [r7, #12]
   16884:	3334      	adds	r3, #52	; 0x34
   16886:	681b      	ldr	r3, [r3, #0]
   16888:	18d2      	adds	r2, r2, r3
   1688a:	f647 63c6 	movw	r3, #32454	; 0x7ec6
   1688e:	f6c2 039b 	movt	r3, #10395	; 0x289b
   16892:	18d3      	adds	r3, r2, r3
   16894:	62bb      	str	r3, [r7, #40]	; 0x28
   16896:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16898:	ea4f 7233 	mov.w	r2, r3, ror #28
   1689c:	69fb      	ldr	r3, [r7, #28]
   1689e:	18d3      	adds	r3, r2, r3
   168a0:	61bb      	str	r3, [r7, #24]
   168a2:	69ba      	ldr	r2, [r7, #24]
   168a4:	69fb      	ldr	r3, [r7, #28]
   168a6:	405a      	eors	r2, r3
   168a8:	6a3b      	ldr	r3, [r7, #32]
   168aa:	405a      	eors	r2, r3
   168ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   168ae:	18d2      	adds	r2, r2, r3
   168b0:	68fb      	ldr	r3, [r7, #12]
   168b2:	681b      	ldr	r3, [r3, #0]
   168b4:	18d2      	adds	r2, r2, r3
   168b6:	f242 73fa 	movw	r3, #10234	; 0x27fa
   168ba:	f6ce 23a1 	movt	r3, #60065	; 0xeaa1
   168be:	18d3      	adds	r3, r2, r3
   168c0:	62bb      	str	r3, [r7, #40]	; 0x28
   168c2:	6abb      	ldr	r3, [r7, #40]	; 0x28
   168c4:	ea4f 5273 	mov.w	r2, r3, ror #21
   168c8:	69bb      	ldr	r3, [r7, #24]
   168ca:	18d3      	adds	r3, r2, r3
   168cc:	627b      	str	r3, [r7, #36]	; 0x24
   168ce:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   168d0:	69bb      	ldr	r3, [r7, #24]
   168d2:	405a      	eors	r2, r3
   168d4:	69fb      	ldr	r3, [r7, #28]
   168d6:	405a      	eors	r2, r3
   168d8:	6a3b      	ldr	r3, [r7, #32]
   168da:	18d2      	adds	r2, r2, r3
   168dc:	68fb      	ldr	r3, [r7, #12]
   168de:	330c      	adds	r3, #12
   168e0:	681b      	ldr	r3, [r3, #0]
   168e2:	18d2      	adds	r2, r2, r3
   168e4:	f243 0385 	movw	r3, #12421	; 0x3085
   168e8:	f2cd 43ef 	movt	r3, #54511	; 0xd4ef
   168ec:	18d3      	adds	r3, r2, r3
   168ee:	62bb      	str	r3, [r7, #40]	; 0x28
   168f0:	6abb      	ldr	r3, [r7, #40]	; 0x28
   168f2:	ea4f 4233 	mov.w	r2, r3, ror #16
   168f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   168f8:	18d3      	adds	r3, r2, r3
   168fa:	623b      	str	r3, [r7, #32]
   168fc:	6a3a      	ldr	r2, [r7, #32]
   168fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16900:	405a      	eors	r2, r3
   16902:	69bb      	ldr	r3, [r7, #24]
   16904:	405a      	eors	r2, r3
   16906:	69fb      	ldr	r3, [r7, #28]
   16908:	18d2      	adds	r2, r2, r3
   1690a:	68fb      	ldr	r3, [r7, #12]
   1690c:	3318      	adds	r3, #24
   1690e:	681b      	ldr	r3, [r3, #0]
   16910:	18d2      	adds	r2, r2, r3
   16912:	f641 5305 	movw	r3, #7429	; 0x1d05
   16916:	f2c0 4388 	movt	r3, #1160	; 0x488
   1691a:	18d3      	adds	r3, r2, r3
   1691c:	62bb      	str	r3, [r7, #40]	; 0x28
   1691e:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16920:	ea4f 2273 	mov.w	r2, r3, ror #9
   16924:	6a3b      	ldr	r3, [r7, #32]
   16926:	18d3      	adds	r3, r2, r3
   16928:	61fb      	str	r3, [r7, #28]
   1692a:	69fa      	ldr	r2, [r7, #28]
   1692c:	6a3b      	ldr	r3, [r7, #32]
   1692e:	405a      	eors	r2, r3
   16930:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16932:	405a      	eors	r2, r3
   16934:	69bb      	ldr	r3, [r7, #24]
   16936:	18d2      	adds	r2, r2, r3
   16938:	68fb      	ldr	r3, [r7, #12]
   1693a:	3324      	adds	r3, #36	; 0x24
   1693c:	681b      	ldr	r3, [r3, #0]
   1693e:	18d2      	adds	r2, r2, r3
   16940:	f24d 0339 	movw	r3, #53305	; 0xd039
   16944:	f6cd 13d4 	movt	r3, #55764	; 0xd9d4
   16948:	18d3      	adds	r3, r2, r3
   1694a:	62bb      	str	r3, [r7, #40]	; 0x28
   1694c:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1694e:	ea4f 7233 	mov.w	r2, r3, ror #28
   16952:	69fb      	ldr	r3, [r7, #28]
   16954:	18d3      	adds	r3, r2, r3
   16956:	61bb      	str	r3, [r7, #24]
   16958:	69ba      	ldr	r2, [r7, #24]
   1695a:	69fb      	ldr	r3, [r7, #28]
   1695c:	405a      	eors	r2, r3
   1695e:	6a3b      	ldr	r3, [r7, #32]
   16960:	405a      	eors	r2, r3
   16962:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16964:	18d2      	adds	r2, r2, r3
   16966:	68fb      	ldr	r3, [r7, #12]
   16968:	3330      	adds	r3, #48	; 0x30
   1696a:	681b      	ldr	r3, [r3, #0]
   1696c:	18d2      	adds	r2, r2, r3
   1696e:	f649 13e5 	movw	r3, #39397	; 0x99e5
   16972:	f2ce 63db 	movt	r3, #59099	; 0xe6db
   16976:	18d3      	adds	r3, r2, r3
   16978:	62bb      	str	r3, [r7, #40]	; 0x28
   1697a:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1697c:	ea4f 5273 	mov.w	r2, r3, ror #21
   16980:	69bb      	ldr	r3, [r7, #24]
   16982:	18d3      	adds	r3, r2, r3
   16984:	627b      	str	r3, [r7, #36]	; 0x24
   16986:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   16988:	69bb      	ldr	r3, [r7, #24]
   1698a:	405a      	eors	r2, r3
   1698c:	69fb      	ldr	r3, [r7, #28]
   1698e:	405a      	eors	r2, r3
   16990:	6a3b      	ldr	r3, [r7, #32]
   16992:	18d2      	adds	r2, r2, r3
   16994:	68fb      	ldr	r3, [r7, #12]
   16996:	333c      	adds	r3, #60	; 0x3c
   16998:	681b      	ldr	r3, [r3, #0]
   1699a:	18d2      	adds	r2, r2, r3
   1699c:	f647 43f8 	movw	r3, #31992	; 0x7cf8
   169a0:	f6c1 73a2 	movt	r3, #8098	; 0x1fa2
   169a4:	18d3      	adds	r3, r2, r3
   169a6:	62bb      	str	r3, [r7, #40]	; 0x28
   169a8:	6abb      	ldr	r3, [r7, #40]	; 0x28
   169aa:	ea4f 4233 	mov.w	r2, r3, ror #16
   169ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   169b0:	18d3      	adds	r3, r2, r3
   169b2:	623b      	str	r3, [r7, #32]
   169b4:	6a3a      	ldr	r2, [r7, #32]
   169b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   169b8:	405a      	eors	r2, r3
   169ba:	69bb      	ldr	r3, [r7, #24]
   169bc:	405a      	eors	r2, r3
   169be:	69fb      	ldr	r3, [r7, #28]
   169c0:	18d2      	adds	r2, r2, r3
   169c2:	68fb      	ldr	r3, [r7, #12]
   169c4:	3308      	adds	r3, #8
   169c6:	681b      	ldr	r3, [r3, #0]
   169c8:	18d2      	adds	r2, r2, r3
   169ca:	f245 6365 	movw	r3, #22117	; 0x5665
   169ce:	f2cc 43ac 	movt	r3, #50348	; 0xc4ac
   169d2:	18d3      	adds	r3, r2, r3
   169d4:	62bb      	str	r3, [r7, #40]	; 0x28
   169d6:	6abb      	ldr	r3, [r7, #40]	; 0x28
   169d8:	ea4f 2273 	mov.w	r2, r3, ror #9
   169dc:	6a3b      	ldr	r3, [r7, #32]
   169de:	18d3      	adds	r3, r2, r3
   169e0:	61fb      	str	r3, [r7, #28]
   169e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   169e4:	43da      	mvns	r2, r3
   169e6:	69fb      	ldr	r3, [r7, #28]
   169e8:	431a      	orrs	r2, r3
   169ea:	6a3b      	ldr	r3, [r7, #32]
   169ec:	405a      	eors	r2, r3
   169ee:	69bb      	ldr	r3, [r7, #24]
   169f0:	18d2      	adds	r2, r2, r3
   169f2:	68fb      	ldr	r3, [r7, #12]
   169f4:	681b      	ldr	r3, [r3, #0]
   169f6:	18d2      	adds	r2, r2, r3
   169f8:	f242 2344 	movw	r3, #8772	; 0x2244
   169fc:	f2cf 4329 	movt	r3, #62505	; 0xf429
   16a00:	18d3      	adds	r3, r2, r3
   16a02:	62bb      	str	r3, [r7, #40]	; 0x28
   16a04:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16a06:	ea4f 62b3 	mov.w	r2, r3, ror #26
   16a0a:	69fb      	ldr	r3, [r7, #28]
   16a0c:	18d3      	adds	r3, r2, r3
   16a0e:	61bb      	str	r3, [r7, #24]
   16a10:	6a3b      	ldr	r3, [r7, #32]
   16a12:	43da      	mvns	r2, r3
   16a14:	69bb      	ldr	r3, [r7, #24]
   16a16:	431a      	orrs	r2, r3
   16a18:	69fb      	ldr	r3, [r7, #28]
   16a1a:	405a      	eors	r2, r3
   16a1c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16a1e:	18d2      	adds	r2, r2, r3
   16a20:	68fb      	ldr	r3, [r7, #12]
   16a22:	331c      	adds	r3, #28
   16a24:	681b      	ldr	r3, [r3, #0]
   16a26:	18d2      	adds	r2, r2, r3
   16a28:	f64f 7397 	movw	r3, #65431	; 0xff97
   16a2c:	f2c4 332a 	movt	r3, #17194	; 0x432a
   16a30:	18d3      	adds	r3, r2, r3
   16a32:	62bb      	str	r3, [r7, #40]	; 0x28
   16a34:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16a36:	ea4f 52b3 	mov.w	r2, r3, ror #22
   16a3a:	69bb      	ldr	r3, [r7, #24]
   16a3c:	18d3      	adds	r3, r2, r3
   16a3e:	627b      	str	r3, [r7, #36]	; 0x24
   16a40:	69fb      	ldr	r3, [r7, #28]
   16a42:	43da      	mvns	r2, r3
   16a44:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16a46:	431a      	orrs	r2, r3
   16a48:	69bb      	ldr	r3, [r7, #24]
   16a4a:	405a      	eors	r2, r3
   16a4c:	6a3b      	ldr	r3, [r7, #32]
   16a4e:	18d2      	adds	r2, r2, r3
   16a50:	68fb      	ldr	r3, [r7, #12]
   16a52:	3338      	adds	r3, #56	; 0x38
   16a54:	681b      	ldr	r3, [r3, #0]
   16a56:	18d2      	adds	r2, r2, r3
   16a58:	f242 33a7 	movw	r3, #9127	; 0x23a7
   16a5c:	f6ca 3394 	movt	r3, #43924	; 0xab94
   16a60:	18d3      	adds	r3, r2, r3
   16a62:	62bb      	str	r3, [r7, #40]	; 0x28
   16a64:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16a66:	ea4f 4273 	mov.w	r2, r3, ror #17
   16a6a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16a6c:	18d3      	adds	r3, r2, r3
   16a6e:	623b      	str	r3, [r7, #32]
   16a70:	69bb      	ldr	r3, [r7, #24]
   16a72:	43da      	mvns	r2, r3
   16a74:	6a3b      	ldr	r3, [r7, #32]
   16a76:	431a      	orrs	r2, r3
   16a78:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16a7a:	405a      	eors	r2, r3
   16a7c:	69fb      	ldr	r3, [r7, #28]
   16a7e:	18d2      	adds	r2, r2, r3
   16a80:	68fb      	ldr	r3, [r7, #12]
   16a82:	3314      	adds	r3, #20
   16a84:	681b      	ldr	r3, [r3, #0]
   16a86:	18d2      	adds	r2, r2, r3
   16a88:	f24a 0339 	movw	r3, #41017	; 0xa039
   16a8c:	f6cf 4393 	movt	r3, #64659	; 0xfc93
   16a90:	18d3      	adds	r3, r2, r3
   16a92:	62bb      	str	r3, [r7, #40]	; 0x28
   16a94:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16a96:	ea4f 22f3 	mov.w	r2, r3, ror #11
   16a9a:	6a3b      	ldr	r3, [r7, #32]
   16a9c:	18d3      	adds	r3, r2, r3
   16a9e:	61fb      	str	r3, [r7, #28]
   16aa0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16aa2:	43da      	mvns	r2, r3
   16aa4:	69fb      	ldr	r3, [r7, #28]
   16aa6:	431a      	orrs	r2, r3
   16aa8:	6a3b      	ldr	r3, [r7, #32]
   16aaa:	405a      	eors	r2, r3
   16aac:	69bb      	ldr	r3, [r7, #24]
   16aae:	18d2      	adds	r2, r2, r3
   16ab0:	68fb      	ldr	r3, [r7, #12]
   16ab2:	3330      	adds	r3, #48	; 0x30
   16ab4:	681b      	ldr	r3, [r3, #0]
   16ab6:	18d2      	adds	r2, r2, r3
   16ab8:	f645 13c3 	movw	r3, #22979	; 0x59c3
   16abc:	f2c6 535b 	movt	r3, #25947	; 0x655b
   16ac0:	18d3      	adds	r3, r2, r3
   16ac2:	62bb      	str	r3, [r7, #40]	; 0x28
   16ac4:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16ac6:	ea4f 62b3 	mov.w	r2, r3, ror #26
   16aca:	69fb      	ldr	r3, [r7, #28]
   16acc:	18d3      	adds	r3, r2, r3
   16ace:	61bb      	str	r3, [r7, #24]
   16ad0:	6a3b      	ldr	r3, [r7, #32]
   16ad2:	43da      	mvns	r2, r3
   16ad4:	69bb      	ldr	r3, [r7, #24]
   16ad6:	431a      	orrs	r2, r3
   16ad8:	69fb      	ldr	r3, [r7, #28]
   16ada:	405a      	eors	r2, r3
   16adc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16ade:	18d2      	adds	r2, r2, r3
   16ae0:	68fb      	ldr	r3, [r7, #12]
   16ae2:	330c      	adds	r3, #12
   16ae4:	681b      	ldr	r3, [r3, #0]
   16ae6:	18d2      	adds	r2, r2, r3
   16ae8:	f64c 4392 	movw	r3, #52370	; 0xcc92
   16aec:	f6c8 730c 	movt	r3, #36620	; 0x8f0c
   16af0:	18d3      	adds	r3, r2, r3
   16af2:	62bb      	str	r3, [r7, #40]	; 0x28
   16af4:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16af6:	ea4f 52b3 	mov.w	r2, r3, ror #22
   16afa:	69bb      	ldr	r3, [r7, #24]
   16afc:	18d3      	adds	r3, r2, r3
   16afe:	627b      	str	r3, [r7, #36]	; 0x24
   16b00:	69fb      	ldr	r3, [r7, #28]
   16b02:	43da      	mvns	r2, r3
   16b04:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16b06:	431a      	orrs	r2, r3
   16b08:	69bb      	ldr	r3, [r7, #24]
   16b0a:	405a      	eors	r2, r3
   16b0c:	6a3b      	ldr	r3, [r7, #32]
   16b0e:	18d2      	adds	r2, r2, r3
   16b10:	68fb      	ldr	r3, [r7, #12]
   16b12:	3328      	adds	r3, #40	; 0x28
   16b14:	681b      	ldr	r3, [r3, #0]
   16b16:	18d3      	adds	r3, r2, r3
   16b18:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
   16b1c:	f6a3 3383 	subw	r3, r3, #2947	; 0xb83
   16b20:	62bb      	str	r3, [r7, #40]	; 0x28
   16b22:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16b24:	ea4f 4273 	mov.w	r2, r3, ror #17
   16b28:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16b2a:	18d3      	adds	r3, r2, r3
   16b2c:	623b      	str	r3, [r7, #32]
   16b2e:	69bb      	ldr	r3, [r7, #24]
   16b30:	43da      	mvns	r2, r3
   16b32:	6a3b      	ldr	r3, [r7, #32]
   16b34:	431a      	orrs	r2, r3
   16b36:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16b38:	405a      	eors	r2, r3
   16b3a:	69fb      	ldr	r3, [r7, #28]
   16b3c:	18d2      	adds	r2, r2, r3
   16b3e:	68fb      	ldr	r3, [r7, #12]
   16b40:	3304      	adds	r3, #4
   16b42:	681b      	ldr	r3, [r3, #0]
   16b44:	18d2      	adds	r2, r2, r3
   16b46:	f645 53d1 	movw	r3, #24017	; 0x5dd1
   16b4a:	f2c8 5384 	movt	r3, #34180	; 0x8584
   16b4e:	18d3      	adds	r3, r2, r3
   16b50:	62bb      	str	r3, [r7, #40]	; 0x28
   16b52:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16b54:	ea4f 22f3 	mov.w	r2, r3, ror #11
   16b58:	6a3b      	ldr	r3, [r7, #32]
   16b5a:	18d3      	adds	r3, r2, r3
   16b5c:	61fb      	str	r3, [r7, #28]
   16b5e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16b60:	43da      	mvns	r2, r3
   16b62:	69fb      	ldr	r3, [r7, #28]
   16b64:	431a      	orrs	r2, r3
   16b66:	6a3b      	ldr	r3, [r7, #32]
   16b68:	405a      	eors	r2, r3
   16b6a:	69bb      	ldr	r3, [r7, #24]
   16b6c:	18d2      	adds	r2, r2, r3
   16b6e:	68fb      	ldr	r3, [r7, #12]
   16b70:	3320      	adds	r3, #32
   16b72:	681b      	ldr	r3, [r3, #0]
   16b74:	18d2      	adds	r2, r2, r3
   16b76:	f647 634f 	movw	r3, #32335	; 0x7e4f
   16b7a:	f6c6 73a8 	movt	r3, #28584	; 0x6fa8
   16b7e:	18d3      	adds	r3, r2, r3
   16b80:	62bb      	str	r3, [r7, #40]	; 0x28
   16b82:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16b84:	ea4f 62b3 	mov.w	r2, r3, ror #26
   16b88:	69fb      	ldr	r3, [r7, #28]
   16b8a:	18d3      	adds	r3, r2, r3
   16b8c:	61bb      	str	r3, [r7, #24]
   16b8e:	6a3b      	ldr	r3, [r7, #32]
   16b90:	43da      	mvns	r2, r3
   16b92:	69bb      	ldr	r3, [r7, #24]
   16b94:	431a      	orrs	r2, r3
   16b96:	69fb      	ldr	r3, [r7, #28]
   16b98:	405a      	eors	r2, r3
   16b9a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16b9c:	18d2      	adds	r2, r2, r3
   16b9e:	68fb      	ldr	r3, [r7, #12]
   16ba0:	333c      	adds	r3, #60	; 0x3c
   16ba2:	681b      	ldr	r3, [r3, #0]
   16ba4:	18d2      	adds	r2, r2, r3
   16ba6:	f24e 63e0 	movw	r3, #59104	; 0xe6e0
   16baa:	f6cf 632c 	movt	r3, #65068	; 0xfe2c
   16bae:	18d3      	adds	r3, r2, r3
   16bb0:	62bb      	str	r3, [r7, #40]	; 0x28
   16bb2:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16bb4:	ea4f 52b3 	mov.w	r2, r3, ror #22
   16bb8:	69bb      	ldr	r3, [r7, #24]
   16bba:	18d3      	adds	r3, r2, r3
   16bbc:	627b      	str	r3, [r7, #36]	; 0x24
   16bbe:	69fb      	ldr	r3, [r7, #28]
   16bc0:	43da      	mvns	r2, r3
   16bc2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16bc4:	431a      	orrs	r2, r3
   16bc6:	69bb      	ldr	r3, [r7, #24]
   16bc8:	405a      	eors	r2, r3
   16bca:	6a3b      	ldr	r3, [r7, #32]
   16bcc:	18d2      	adds	r2, r2, r3
   16bce:	68fb      	ldr	r3, [r7, #12]
   16bd0:	3318      	adds	r3, #24
   16bd2:	681b      	ldr	r3, [r3, #0]
   16bd4:	18d2      	adds	r2, r2, r3
   16bd6:	f244 3314 	movw	r3, #17172	; 0x4314
   16bda:	f2ca 3301 	movt	r3, #41729	; 0xa301
   16bde:	18d3      	adds	r3, r2, r3
   16be0:	62bb      	str	r3, [r7, #40]	; 0x28
   16be2:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16be4:	ea4f 4273 	mov.w	r2, r3, ror #17
   16be8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16bea:	18d3      	adds	r3, r2, r3
   16bec:	623b      	str	r3, [r7, #32]
   16bee:	69bb      	ldr	r3, [r7, #24]
   16bf0:	43da      	mvns	r2, r3
   16bf2:	6a3b      	ldr	r3, [r7, #32]
   16bf4:	431a      	orrs	r2, r3
   16bf6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16bf8:	405a      	eors	r2, r3
   16bfa:	69fb      	ldr	r3, [r7, #28]
   16bfc:	18d2      	adds	r2, r2, r3
   16bfe:	68fb      	ldr	r3, [r7, #12]
   16c00:	3334      	adds	r3, #52	; 0x34
   16c02:	681b      	ldr	r3, [r3, #0]
   16c04:	18d2      	adds	r2, r2, r3
   16c06:	f241 13a1 	movw	r3, #4513	; 0x11a1
   16c0a:	f6c4 6308 	movt	r3, #19976	; 0x4e08
   16c0e:	18d3      	adds	r3, r2, r3
   16c10:	62bb      	str	r3, [r7, #40]	; 0x28
   16c12:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16c14:	ea4f 22f3 	mov.w	r2, r3, ror #11
   16c18:	6a3b      	ldr	r3, [r7, #32]
   16c1a:	18d3      	adds	r3, r2, r3
   16c1c:	61fb      	str	r3, [r7, #28]
   16c1e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16c20:	43da      	mvns	r2, r3
   16c22:	69fb      	ldr	r3, [r7, #28]
   16c24:	431a      	orrs	r2, r3
   16c26:	6a3b      	ldr	r3, [r7, #32]
   16c28:	405a      	eors	r2, r3
   16c2a:	69bb      	ldr	r3, [r7, #24]
   16c2c:	18d2      	adds	r2, r2, r3
   16c2e:	68fb      	ldr	r3, [r7, #12]
   16c30:	3310      	adds	r3, #16
   16c32:	681b      	ldr	r3, [r3, #0]
   16c34:	18d2      	adds	r2, r2, r3
   16c36:	f647 6382 	movw	r3, #32386	; 0x7e82
   16c3a:	f2cf 7353 	movt	r3, #63315	; 0xf753
   16c3e:	18d3      	adds	r3, r2, r3
   16c40:	62bb      	str	r3, [r7, #40]	; 0x28
   16c42:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16c44:	ea4f 62b3 	mov.w	r2, r3, ror #26
   16c48:	69fb      	ldr	r3, [r7, #28]
   16c4a:	18d3      	adds	r3, r2, r3
   16c4c:	61bb      	str	r3, [r7, #24]
   16c4e:	6a3b      	ldr	r3, [r7, #32]
   16c50:	43da      	mvns	r2, r3
   16c52:	69bb      	ldr	r3, [r7, #24]
   16c54:	431a      	orrs	r2, r3
   16c56:	69fb      	ldr	r3, [r7, #28]
   16c58:	405a      	eors	r2, r3
   16c5a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16c5c:	18d2      	adds	r2, r2, r3
   16c5e:	68fb      	ldr	r3, [r7, #12]
   16c60:	332c      	adds	r3, #44	; 0x2c
   16c62:	681b      	ldr	r3, [r3, #0]
   16c64:	18d2      	adds	r2, r2, r3
   16c66:	f24f 2335 	movw	r3, #62005	; 0xf235
   16c6a:	f6cb 533a 	movt	r3, #48442	; 0xbd3a
   16c6e:	18d3      	adds	r3, r2, r3
   16c70:	62bb      	str	r3, [r7, #40]	; 0x28
   16c72:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16c74:	ea4f 52b3 	mov.w	r2, r3, ror #22
   16c78:	69bb      	ldr	r3, [r7, #24]
   16c7a:	18d3      	adds	r3, r2, r3
   16c7c:	627b      	str	r3, [r7, #36]	; 0x24
   16c7e:	69fb      	ldr	r3, [r7, #28]
   16c80:	43da      	mvns	r2, r3
   16c82:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16c84:	431a      	orrs	r2, r3
   16c86:	69bb      	ldr	r3, [r7, #24]
   16c88:	405a      	eors	r2, r3
   16c8a:	6a3b      	ldr	r3, [r7, #32]
   16c8c:	18d2      	adds	r2, r2, r3
   16c8e:	68fb      	ldr	r3, [r7, #12]
   16c90:	3308      	adds	r3, #8
   16c92:	681b      	ldr	r3, [r3, #0]
   16c94:	18d2      	adds	r2, r2, r3
   16c96:	f24d 23bb 	movw	r3, #53947	; 0xd2bb
   16c9a:	f6c2 23d7 	movt	r3, #10967	; 0x2ad7
   16c9e:	18d3      	adds	r3, r2, r3
   16ca0:	62bb      	str	r3, [r7, #40]	; 0x28
   16ca2:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16ca4:	ea4f 4273 	mov.w	r2, r3, ror #17
   16ca8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16caa:	18d3      	adds	r3, r2, r3
   16cac:	623b      	str	r3, [r7, #32]
   16cae:	69bb      	ldr	r3, [r7, #24]
   16cb0:	43da      	mvns	r2, r3
   16cb2:	6a3b      	ldr	r3, [r7, #32]
   16cb4:	431a      	orrs	r2, r3
   16cb6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16cb8:	405a      	eors	r2, r3
   16cba:	69fb      	ldr	r3, [r7, #28]
   16cbc:	18d2      	adds	r2, r2, r3
   16cbe:	68fb      	ldr	r3, [r7, #12]
   16cc0:	3324      	adds	r3, #36	; 0x24
   16cc2:	681b      	ldr	r3, [r3, #0]
   16cc4:	18d2      	adds	r2, r2, r3
   16cc6:	f24d 3391 	movw	r3, #54161	; 0xd391
   16cca:	f6ce 3386 	movt	r3, #60294	; 0xeb86
   16cce:	18d3      	adds	r3, r2, r3
   16cd0:	62bb      	str	r3, [r7, #40]	; 0x28
   16cd2:	6abb      	ldr	r3, [r7, #40]	; 0x28
   16cd4:	ea4f 22f3 	mov.w	r2, r3, ror #11
   16cd8:	6a3b      	ldr	r3, [r7, #32]
   16cda:	18d3      	adds	r3, r2, r3
   16cdc:	61fb      	str	r3, [r7, #28]
   16cde:	687b      	ldr	r3, [r7, #4]
   16ce0:	689a      	ldr	r2, [r3, #8]
   16ce2:	69bb      	ldr	r3, [r7, #24]
   16ce4:	18d2      	adds	r2, r2, r3
   16ce6:	687b      	ldr	r3, [r7, #4]
   16ce8:	609a      	str	r2, [r3, #8]
   16cea:	687b      	ldr	r3, [r7, #4]
   16cec:	68da      	ldr	r2, [r3, #12]
   16cee:	69fb      	ldr	r3, [r7, #28]
   16cf0:	18d2      	adds	r2, r2, r3
   16cf2:	687b      	ldr	r3, [r7, #4]
   16cf4:	60da      	str	r2, [r3, #12]
   16cf6:	687b      	ldr	r3, [r7, #4]
   16cf8:	691a      	ldr	r2, [r3, #16]
   16cfa:	6a3b      	ldr	r3, [r7, #32]
   16cfc:	18d2      	adds	r2, r2, r3
   16cfe:	687b      	ldr	r3, [r7, #4]
   16d00:	611a      	str	r2, [r3, #16]
   16d02:	687b      	ldr	r3, [r7, #4]
   16d04:	695a      	ldr	r2, [r3, #20]
   16d06:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   16d08:	18d2      	adds	r2, r2, r3
   16d0a:	687b      	ldr	r3, [r7, #4]
   16d0c:	615a      	str	r2, [r3, #20]
   16d0e:	4b06      	ldr	r3, [pc, #24]	; (16d28 <md5_process+0xd5c>)
   16d10:	58e3      	ldr	r3, [r4, r3]
   16d12:	6efa      	ldr	r2, [r7, #108]	; 0x6c
   16d14:	681b      	ldr	r3, [r3, #0]
   16d16:	429a      	cmp	r2, r3
   16d18:	d001      	beq.n	16d1e <md5_process+0xd52>
   16d1a:	f7f2 f8e9 	bl	8ef0 <__stack_chk_fail>
   16d1e:	f107 0774 	add.w	r7, r7, #116	; 0x74
   16d22:	46bd      	mov	sp, r7
   16d24:	bd90      	pop	{r4, r7, pc}
   16d26:	bf00      	nop
   16d28:	000000a0 	.word	0x000000a0

00016d2c <md5_init>:
   16d2c:	b580      	push	{r7, lr}
   16d2e:	b084      	sub	sp, #16
   16d30:	af00      	add	r7, sp, #0
   16d32:	6078      	str	r0, [r7, #4]
   16d34:	4a18      	ldr	r2, [pc, #96]	; (16d98 <md5_init+0x6c>)
   16d36:	447a      	add	r2, pc
   16d38:	4b18      	ldr	r3, [pc, #96]	; (16d9c <md5_init+0x70>)
   16d3a:	58d3      	ldr	r3, [r2, r3]
   16d3c:	681b      	ldr	r3, [r3, #0]
   16d3e:	60fb      	str	r3, [r7, #12]
   16d40:	687b      	ldr	r3, [r7, #4]
   16d42:	2100      	movs	r1, #0
   16d44:	6059      	str	r1, [r3, #4]
   16d46:	687b      	ldr	r3, [r7, #4]
   16d48:	6859      	ldr	r1, [r3, #4]
   16d4a:	687b      	ldr	r3, [r7, #4]
   16d4c:	6019      	str	r1, [r3, #0]
   16d4e:	6879      	ldr	r1, [r7, #4]
   16d50:	f242 3301 	movw	r3, #8961	; 0x2301
   16d54:	f2c6 7345 	movt	r3, #26437	; 0x6745
   16d58:	608b      	str	r3, [r1, #8]
   16d5a:	6879      	ldr	r1, [r7, #4]
   16d5c:	f64a 3389 	movw	r3, #43913	; 0xab89
   16d60:	f6ce 73cd 	movt	r3, #61389	; 0xefcd
   16d64:	60cb      	str	r3, [r1, #12]
   16d66:	6879      	ldr	r1, [r7, #4]
   16d68:	f64d 43fe 	movw	r3, #56574	; 0xdcfe
   16d6c:	f6c9 03ba 	movt	r3, #39098	; 0x98ba
   16d70:	610b      	str	r3, [r1, #16]
   16d72:	6879      	ldr	r1, [r7, #4]
   16d74:	f245 4376 	movw	r3, #21622	; 0x5476
   16d78:	f2c1 0332 	movt	r3, #4146	; 0x1032
   16d7c:	614b      	str	r3, [r1, #20]
   16d7e:	4b07      	ldr	r3, [pc, #28]	; (16d9c <md5_init+0x70>)
   16d80:	58d3      	ldr	r3, [r2, r3]
   16d82:	68fa      	ldr	r2, [r7, #12]
   16d84:	681b      	ldr	r3, [r3, #0]
   16d86:	429a      	cmp	r2, r3
   16d88:	d001      	beq.n	16d8e <md5_init+0x62>
   16d8a:	f7f2 f8b1 	bl	8ef0 <__stack_chk_fail>
   16d8e:	f107 0710 	add.w	r7, r7, #16
   16d92:	46bd      	mov	sp, r7
   16d94:	bd80      	pop	{r7, pc}
   16d96:	bf00      	nop
   16d98:	0000d3de 	.word	0x0000d3de
   16d9c:	000000a0 	.word	0x000000a0

00016da0 <md5_append>:
   16da0:	b590      	push	{r4, r7, lr}
   16da2:	b08b      	sub	sp, #44	; 0x2c
   16da4:	af00      	add	r7, sp, #0
   16da6:	60f8      	str	r0, [r7, #12]
   16da8:	60b9      	str	r1, [r7, #8]
   16daa:	607a      	str	r2, [r7, #4]
   16dac:	4c40      	ldr	r4, [pc, #256]	; (16eb0 <md5_append+0x110>)
   16dae:	447c      	add	r4, pc
   16db0:	4b40      	ldr	r3, [pc, #256]	; (16eb4 <md5_append+0x114>)
   16db2:	58e3      	ldr	r3, [r4, r3]
   16db4:	681b      	ldr	r3, [r3, #0]
   16db6:	627b      	str	r3, [r7, #36]	; 0x24
   16db8:	68bb      	ldr	r3, [r7, #8]
   16dba:	613b      	str	r3, [r7, #16]
   16dbc:	687b      	ldr	r3, [r7, #4]
   16dbe:	617b      	str	r3, [r7, #20]
   16dc0:	68fb      	ldr	r3, [r7, #12]
   16dc2:	681b      	ldr	r3, [r3, #0]
   16dc4:	08db      	lsrs	r3, r3, #3
   16dc6:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   16dca:	61bb      	str	r3, [r7, #24]
   16dcc:	687b      	ldr	r3, [r7, #4]
   16dce:	00db      	lsls	r3, r3, #3
   16dd0:	61fb      	str	r3, [r7, #28]
   16dd2:	687b      	ldr	r3, [r7, #4]
   16dd4:	2b00      	cmp	r3, #0
   16dd6:	dd5c      	ble.n	16e92 <md5_append+0xf2>
   16dd8:	68fb      	ldr	r3, [r7, #12]
   16dda:	685a      	ldr	r2, [r3, #4]
   16ddc:	687b      	ldr	r3, [r7, #4]
   16dde:	175b      	asrs	r3, r3, #29
   16de0:	18d2      	adds	r2, r2, r3
   16de2:	68fb      	ldr	r3, [r7, #12]
   16de4:	605a      	str	r2, [r3, #4]
   16de6:	68fb      	ldr	r3, [r7, #12]
   16de8:	681a      	ldr	r2, [r3, #0]
   16dea:	69fb      	ldr	r3, [r7, #28]
   16dec:	18d2      	adds	r2, r2, r3
   16dee:	68fb      	ldr	r3, [r7, #12]
   16df0:	601a      	str	r2, [r3, #0]
   16df2:	68fb      	ldr	r3, [r7, #12]
   16df4:	681a      	ldr	r2, [r3, #0]
   16df6:	69fb      	ldr	r3, [r7, #28]
   16df8:	429a      	cmp	r2, r3
   16dfa:	d204      	bcs.n	16e06 <md5_append+0x66>
   16dfc:	68fb      	ldr	r3, [r7, #12]
   16dfe:	685b      	ldr	r3, [r3, #4]
   16e00:	1c5a      	adds	r2, r3, #1
   16e02:	68fb      	ldr	r3, [r7, #12]
   16e04:	605a      	str	r2, [r3, #4]
   16e06:	69bb      	ldr	r3, [r7, #24]
   16e08:	2b00      	cmp	r3, #0
   16e0a:	d032      	beq.n	16e72 <md5_append+0xd2>
   16e0c:	69ba      	ldr	r2, [r7, #24]
   16e0e:	687b      	ldr	r3, [r7, #4]
   16e10:	18d3      	adds	r3, r2, r3
   16e12:	2b40      	cmp	r3, #64	; 0x40
   16e14:	dd03      	ble.n	16e1e <md5_append+0x7e>
   16e16:	69bb      	ldr	r3, [r7, #24]
   16e18:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   16e1c:	e000      	b.n	16e20 <md5_append+0x80>
   16e1e:	687b      	ldr	r3, [r7, #4]
   16e20:	623b      	str	r3, [r7, #32]
   16e22:	69bb      	ldr	r3, [r7, #24]
   16e24:	3318      	adds	r3, #24
   16e26:	68fa      	ldr	r2, [r7, #12]
   16e28:	18d2      	adds	r2, r2, r3
   16e2a:	6a3b      	ldr	r3, [r7, #32]
   16e2c:	4610      	mov	r0, r2
   16e2e:	6939      	ldr	r1, [r7, #16]
   16e30:	461a      	mov	r2, r3
   16e32:	f7f1 eece 	blx	8bd0 <_init+0x100>
   16e36:	69ba      	ldr	r2, [r7, #24]
   16e38:	6a3b      	ldr	r3, [r7, #32]
   16e3a:	18d3      	adds	r3, r2, r3
   16e3c:	2b3f      	cmp	r3, #63	; 0x3f
   16e3e:	dd2a      	ble.n	16e96 <md5_append+0xf6>
   16e40:	6a3b      	ldr	r3, [r7, #32]
   16e42:	693a      	ldr	r2, [r7, #16]
   16e44:	18d3      	adds	r3, r2, r3
   16e46:	613b      	str	r3, [r7, #16]
   16e48:	697a      	ldr	r2, [r7, #20]
   16e4a:	6a3b      	ldr	r3, [r7, #32]
   16e4c:	1ad3      	subs	r3, r2, r3
   16e4e:	617b      	str	r3, [r7, #20]
   16e50:	68fb      	ldr	r3, [r7, #12]
   16e52:	3318      	adds	r3, #24
   16e54:	68f8      	ldr	r0, [r7, #12]
   16e56:	4619      	mov	r1, r3
   16e58:	f7ff f8b8 	bl	15fcc <md5_process>
   16e5c:	e009      	b.n	16e72 <md5_append+0xd2>
   16e5e:	68f8      	ldr	r0, [r7, #12]
   16e60:	6939      	ldr	r1, [r7, #16]
   16e62:	f7ff f8b3 	bl	15fcc <md5_process>
   16e66:	693b      	ldr	r3, [r7, #16]
   16e68:	3340      	adds	r3, #64	; 0x40
   16e6a:	613b      	str	r3, [r7, #16]
   16e6c:	697b      	ldr	r3, [r7, #20]
   16e6e:	3b40      	subs	r3, #64	; 0x40
   16e70:	617b      	str	r3, [r7, #20]
   16e72:	697b      	ldr	r3, [r7, #20]
   16e74:	2b3f      	cmp	r3, #63	; 0x3f
   16e76:	dcf2      	bgt.n	16e5e <md5_append+0xbe>
   16e78:	697b      	ldr	r3, [r7, #20]
   16e7a:	2b00      	cmp	r3, #0
   16e7c:	d00c      	beq.n	16e98 <md5_append+0xf8>
   16e7e:	68fb      	ldr	r3, [r7, #12]
   16e80:	f103 0218 	add.w	r2, r3, #24
   16e84:	697b      	ldr	r3, [r7, #20]
   16e86:	4610      	mov	r0, r2
   16e88:	6939      	ldr	r1, [r7, #16]
   16e8a:	461a      	mov	r2, r3
   16e8c:	f7f1 eea0 	blx	8bd0 <_init+0x100>
   16e90:	e002      	b.n	16e98 <md5_append+0xf8>
   16e92:	bf00      	nop
   16e94:	e000      	b.n	16e98 <md5_append+0xf8>
   16e96:	bf00      	nop
   16e98:	4b06      	ldr	r3, [pc, #24]	; (16eb4 <md5_append+0x114>)
   16e9a:	58e3      	ldr	r3, [r4, r3]
   16e9c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   16e9e:	681b      	ldr	r3, [r3, #0]
   16ea0:	429a      	cmp	r2, r3
   16ea2:	d001      	beq.n	16ea8 <md5_append+0x108>
   16ea4:	f7f2 f824 	bl	8ef0 <__stack_chk_fail>
   16ea8:	f107 072c 	add.w	r7, r7, #44	; 0x2c
   16eac:	46bd      	mov	sp, r7
   16eae:	bd90      	pop	{r4, r7, pc}
   16eb0:	0000d366 	.word	0x0000d366
   16eb4:	000000a0 	.word	0x000000a0

00016eb8 <md5_finish>:
   16eb8:	b590      	push	{r4, r7, lr}
   16eba:	b087      	sub	sp, #28
   16ebc:	af00      	add	r7, sp, #0
   16ebe:	6078      	str	r0, [r7, #4]
   16ec0:	6039      	str	r1, [r7, #0]
   16ec2:	4c2e      	ldr	r4, [pc, #184]	; (16f7c <md5_finish+0xc4>)
   16ec4:	447c      	add	r4, pc
   16ec6:	4b2e      	ldr	r3, [pc, #184]	; (16f80 <md5_finish+0xc8>)
   16ec8:	58e3      	ldr	r3, [r4, r3]
   16eca:	681b      	ldr	r3, [r3, #0]
   16ecc:	617b      	str	r3, [r7, #20]
   16ece:	2300      	movs	r3, #0
   16ed0:	60bb      	str	r3, [r7, #8]
   16ed2:	e013      	b.n	16efc <md5_finish+0x44>
   16ed4:	68bb      	ldr	r3, [r7, #8]
   16ed6:	109a      	asrs	r2, r3, #2
   16ed8:	687b      	ldr	r3, [r7, #4]
   16eda:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
   16ede:	68bb      	ldr	r3, [r7, #8]
   16ee0:	f003 0303 	and.w	r3, r3, #3
   16ee4:	00db      	lsls	r3, r3, #3
   16ee6:	fa22 f303 	lsr.w	r3, r2, r3
   16eea:	b2da      	uxtb	r2, r3
   16eec:	f107 010c 	add.w	r1, r7, #12
   16ef0:	68bb      	ldr	r3, [r7, #8]
   16ef2:	18cb      	adds	r3, r1, r3
   16ef4:	701a      	strb	r2, [r3, #0]
   16ef6:	68bb      	ldr	r3, [r7, #8]
   16ef8:	3301      	adds	r3, #1
   16efa:	60bb      	str	r3, [r7, #8]
   16efc:	68bb      	ldr	r3, [r7, #8]
   16efe:	2b07      	cmp	r3, #7
   16f00:	dde8      	ble.n	16ed4 <md5_finish+0x1c>
   16f02:	687b      	ldr	r3, [r7, #4]
   16f04:	681b      	ldr	r3, [r3, #0]
   16f06:	08db      	lsrs	r3, r3, #3
   16f08:	f1c3 0337 	rsb	r3, r3, #55	; 0x37
   16f0c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   16f10:	3301      	adds	r3, #1
   16f12:	6878      	ldr	r0, [r7, #4]
   16f14:	4a1b      	ldr	r2, [pc, #108]	; (16f84 <md5_finish+0xcc>)
   16f16:	447a      	add	r2, pc
   16f18:	4611      	mov	r1, r2
   16f1a:	461a      	mov	r2, r3
   16f1c:	f7ff ff40 	bl	16da0 <md5_append>
   16f20:	f107 030c 	add.w	r3, r7, #12
   16f24:	6878      	ldr	r0, [r7, #4]
   16f26:	4619      	mov	r1, r3
   16f28:	2208      	movs	r2, #8
   16f2a:	f7ff ff39 	bl	16da0 <md5_append>
   16f2e:	2300      	movs	r3, #0
   16f30:	60bb      	str	r3, [r7, #8]
   16f32:	e013      	b.n	16f5c <md5_finish+0xa4>
   16f34:	68bb      	ldr	r3, [r7, #8]
   16f36:	683a      	ldr	r2, [r7, #0]
   16f38:	18d3      	adds	r3, r2, r3
   16f3a:	68ba      	ldr	r2, [r7, #8]
   16f3c:	1091      	asrs	r1, r2, #2
   16f3e:	687a      	ldr	r2, [r7, #4]
   16f40:	3102      	adds	r1, #2
   16f42:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
   16f46:	68ba      	ldr	r2, [r7, #8]
   16f48:	f002 0203 	and.w	r2, r2, #3
   16f4c:	00d2      	lsls	r2, r2, #3
   16f4e:	fa21 f202 	lsr.w	r2, r1, r2
   16f52:	b2d2      	uxtb	r2, r2
   16f54:	701a      	strb	r2, [r3, #0]
   16f56:	68bb      	ldr	r3, [r7, #8]
   16f58:	3301      	adds	r3, #1
   16f5a:	60bb      	str	r3, [r7, #8]
   16f5c:	68bb      	ldr	r3, [r7, #8]
   16f5e:	2b0f      	cmp	r3, #15
   16f60:	dde8      	ble.n	16f34 <md5_finish+0x7c>
   16f62:	4b07      	ldr	r3, [pc, #28]	; (16f80 <md5_finish+0xc8>)
   16f64:	58e3      	ldr	r3, [r4, r3]
   16f66:	697a      	ldr	r2, [r7, #20]
   16f68:	681b      	ldr	r3, [r3, #0]
   16f6a:	429a      	cmp	r2, r3
   16f6c:	d001      	beq.n	16f72 <md5_finish+0xba>
   16f6e:	f7f1 ffbf 	bl	8ef0 <__stack_chk_fail>
   16f72:	f107 071c 	add.w	r7, r7, #28
   16f76:	46bd      	mov	sp, r7
   16f78:	bd90      	pop	{r4, r7, pc}
   16f7a:	bf00      	nop
   16f7c:	0000d250 	.word	0x0000d250
   16f80:	000000a0 	.word	0x000000a0
   16f84:	000045d6 	.word	0x000045d6

00016f88 <gprs_GetInformation_Init>:
   16f88:	b40f      	push	{r0, r1, r2, r3}
   16f8a:	4805      	ldr	r0, [pc, #20]	; (16fa0 <gprs_GetInformation+0xe>)
   16f8c:	4905      	ldr	r1, [pc, #20]	; (16fa4 <gprs_GetInformation+0x12>)
   16f8e:	4a06      	ldr	r2, [pc, #24]	; (16fa8 <gprs_GetInformation+0x16>)
   16f90:	4710      	bx	r2

00016f92 <gprs_GetInformation>:
   16f92:	b401      	push	{r0}
   16f94:	4803      	ldr	r0, [pc, #12]	; (16fa4 <gprs_GetInformation+0x12>)
   16f96:	6800      	ldr	r0, [r0, #0]
   16f98:	4684      	mov	ip, r0
   16f9a:	bc01      	pop	{r0}
   16f9c:	4760      	bx	ip
   16f9e:	0000      	.short	0x0000
   16fa0:	000027fb 	.word	0x000027fb
   16fa4:	00024340 	.word	0x00024340
   16fa8:	00016ff5 	.word	0x00016ff5

00016fac <gprs_SetPinModeFree_Init>:
   16fac:	b40f      	push	{r0, r1, r2, r3}
   16fae:	4805      	ldr	r0, [pc, #20]	; (16fc4 <gprs_SetPinModeFree+0xe>)
   16fb0:	4905      	ldr	r1, [pc, #20]	; (16fc8 <gprs_SetPinModeFree+0x12>)
   16fb2:	4a06      	ldr	r2, [pc, #24]	; (16fcc <gprs_SetPinModeFree+0x16>)
   16fb4:	4710      	bx	r2

00016fb6 <gprs_SetPinModeFree>:
   16fb6:	b401      	push	{r0}
   16fb8:	4803      	ldr	r0, [pc, #12]	; (16fc8 <gprs_SetPinModeFree+0x12>)
   16fba:	6800      	ldr	r0, [r0, #0]
   16fbc:	4684      	mov	ip, r0
   16fbe:	bc01      	pop	{r0}
   16fc0:	4760      	bx	ip
   16fc2:	0000      	.short	0x0000
   16fc4:	000027f9 	.word	0x000027f9
   16fc8:	00024350 	.word	0x00024350
   16fcc:	00016ff5 	.word	0x00016ff5

00016fd0 <gprs_SubmitPuk_Init>:
   16fd0:	b40f      	push	{r0, r1, r2, r3}
   16fd2:	4805      	ldr	r0, [pc, #20]	; (16fe8 <gprs_SubmitPuk+0xe>)
   16fd4:	4905      	ldr	r1, [pc, #20]	; (16fec <gprs_SubmitPuk+0x12>)
   16fd6:	4a06      	ldr	r2, [pc, #24]	; (16ff0 <gprs_SubmitPuk+0x16>)
   16fd8:	4710      	bx	r2

00016fda <gprs_SubmitPuk>:
   16fda:	b401      	push	{r0}
   16fdc:	4803      	ldr	r0, [pc, #12]	; (16fec <gprs_SubmitPuk+0x12>)
   16fde:	6800      	ldr	r0, [r0, #0]
   16fe0:	4684      	mov	ip, r0
   16fe2:	bc01      	pop	{r0}
   16fe4:	4760      	bx	ip
   16fe6:	0000      	.short	0x0000
   16fe8:	000027fa 	.word	0x000027fa
   16fec:	00024360 	.word	0x00024360
   16ff0:	00016ff5 	.word	0x00016ff5

00016ff4 <LIBGPRS_InitFuncAndBranch>:
   16ff4:	b500      	push	{lr}
   16ff6:	f000 f835 	bl	17064 <LIBGPRS_GetProcAddress>
   16ffa:	bc04      	pop	{r2}
   16ffc:	4696      	mov	lr, r2
   16ffe:	4684      	mov	ip, r0
   17000:	bc0f      	pop	{r0, r1, r2, r3}
   17002:	4760      	bx	ip

00017004 <LIBGPRS_GetProcAddressWithoutExit>:
   17004:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   17006:	4c13      	ldr	r4, [pc, #76]	; (17054 <LIBGPRS_GetProcAddressWithoutExit+0x50>)
   17008:	4607      	mov	r7, r0
   1700a:	447c      	add	r4, pc
   1700c:	460d      	mov	r5, r1
   1700e:	6823      	ldr	r3, [r4, #0]
   17010:	b923      	cbnz	r3, 1701c <LIBGPRS_GetProcAddressWithoutExit+0x18>
   17012:	4811      	ldr	r0, [pc, #68]	; (17058 <LIBGPRS_GetProcAddressWithoutExit+0x54>)
   17014:	4478      	add	r0, pc
   17016:	f001 ffdc 	bl	18fd2 <OSL_Dll_Open>
   1701a:	6020      	str	r0, [r4, #0]
   1701c:	4e0f      	ldr	r6, [pc, #60]	; (1705c <LIBGPRS_GetProcAddressWithoutExit+0x58>)
   1701e:	447e      	add	r6, pc
   17020:	6834      	ldr	r4, [r6, #0]
   17022:	b95c      	cbnz	r4, 1703c <LIBGPRS_GetProcAddressWithoutExit+0x38>
   17024:	4b0e      	ldr	r3, [pc, #56]	; (17060 <LIBGPRS_GetProcAddressWithoutExit+0x5c>)
   17026:	2003      	movs	r0, #3
   17028:	447b      	add	r3, pc
   1702a:	9400      	str	r4, [sp, #0]
   1702c:	9301      	str	r3, [sp, #4]
   1702e:	4621      	mov	r1, r4
   17030:	4622      	mov	r2, r4
   17032:	4623      	mov	r3, r4
   17034:	f7f1 edb8 	blx	8ba8 <_init+0xd8>
   17038:	4620      	mov	r0, r4
   1703a:	e005      	b.n	17048 <LIBGPRS_GetProcAddressWithoutExit+0x44>
   1703c:	4620      	mov	r0, r4
   1703e:	4639      	mov	r1, r7
   17040:	f001 ffa7 	bl	18f92 <OSL_Dll_GetSymbolByName>
   17044:	2301      	movs	r3, #1
   17046:	6073      	str	r3, [r6, #4]
   17048:	b115      	cbz	r5, 17050 <LIBGPRS_GetProcAddressWithoutExit+0x4c>
   1704a:	682b      	ldr	r3, [r5, #0]
   1704c:	b103      	cbz	r3, 17050 <LIBGPRS_GetProcAddressWithoutExit+0x4c>
   1704e:	6028      	str	r0, [r5, #0]
   17050:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
   17052:	bf00      	nop
   17054:	0000da56 	.word	0x0000da56
   17058:	0000451c 	.word	0x0000451c
   1705c:	0000da42 	.word	0x0000da42
   17060:	00004510 	.word	0x00004510

00017064 <LIBGPRS_GetProcAddress>:
   17064:	b513      	push	{r0, r1, r4, lr}
   17066:	f7ff ffcd 	bl	17004 <LIBGPRS_GetProcAddressWithoutExit>
   1706a:	4604      	mov	r4, r0
   1706c:	b948      	cbnz	r0, 17082 <LIBGPRS_GetProcAddress+0x1e>
   1706e:	4b06      	ldr	r3, [pc, #24]	; (17088 <LIBGPRS_GetProcAddress+0x24>)
   17070:	9000      	str	r0, [sp, #0]
   17072:	447b      	add	r3, pc
   17074:	2003      	movs	r0, #3
   17076:	9301      	str	r3, [sp, #4]
   17078:	4621      	mov	r1, r4
   1707a:	4622      	mov	r2, r4
   1707c:	4623      	mov	r3, r4
   1707e:	f7f1 ed94 	blx	8ba8 <_init+0xd8>
   17082:	4620      	mov	r0, r4
   17084:	bd1c      	pop	{r2, r3, r4, pc}
   17086:	bf00      	nop
   17088:	000044dd 	.word	0x000044dd

0001708c <LIBGPRS_IsPresent>:
   1708c:	4802      	ldr	r0, [pc, #8]	; (17098 <LIBGPRS_IsPresent+0xc>)
   1708e:	b508      	push	{r3, lr}
   17090:	4478      	add	r0, pc
   17092:	f001 ff8e 	bl	18fb2 <OSL_Dll_IsPresent>
   17096:	bd08      	pop	{r3, pc}
   17098:	000044a0 	.word	0x000044a0

0001709c <LL_ClearReceiveBuffer_Init>:
   1709c:	b40f      	push	{r0, r1, r2, r3}
   1709e:	4805      	ldr	r0, [pc, #20]	; (170b4 <LL_ClearReceiveBuffer+0xe>)
   170a0:	4905      	ldr	r1, [pc, #20]	; (170b8 <LL_ClearReceiveBuffer+0x12>)
   170a2:	4a06      	ldr	r2, [pc, #24]	; (170bc <LL_ClearReceiveBuffer+0x16>)
   170a4:	4710      	bx	r2

000170a6 <LL_ClearReceiveBuffer>:
   170a6:	b401      	push	{r0}
   170a8:	4803      	ldr	r0, [pc, #12]	; (170b8 <LL_ClearReceiveBuffer+0x12>)
   170aa:	6800      	ldr	r0, [r0, #0]
   170ac:	4684      	mov	ip, r0
   170ae:	bc01      	pop	{r0}
   170b0:	4760      	bx	ip
   170b2:	0000      	.short	0x0000
   170b4:	00002717 	.word	0x00002717
   170b8:	00024370 	.word	0x00024370
   170bc:	0001724d 	.word	0x0001724d

000170c0 <LL_ClearSendBuffer_Init>:
   170c0:	b40f      	push	{r0, r1, r2, r3}
   170c2:	4805      	ldr	r0, [pc, #20]	; (170d8 <LL_ClearSendBuffer+0xe>)
   170c4:	4905      	ldr	r1, [pc, #20]	; (170dc <LL_ClearSendBuffer+0x12>)
   170c6:	4a06      	ldr	r2, [pc, #24]	; (170e0 <LL_ClearSendBuffer+0x16>)
   170c8:	4710      	bx	r2

000170ca <LL_ClearSendBuffer>:
   170ca:	b401      	push	{r0}
   170cc:	4803      	ldr	r0, [pc, #12]	; (170dc <LL_ClearSendBuffer+0x12>)
   170ce:	6800      	ldr	r0, [r0, #0]
   170d0:	4684      	mov	ip, r0
   170d2:	bc01      	pop	{r0}
   170d4:	4760      	bx	ip
   170d6:	0000      	.short	0x0000
   170d8:	00002716 	.word	0x00002716
   170dc:	00024380 	.word	0x00024380
   170e0:	0001724d 	.word	0x0001724d

000170e4 <LL_Configure_Init>:
   170e4:	b40f      	push	{r0, r1, r2, r3}
   170e6:	4805      	ldr	r0, [pc, #20]	; (170fc <LL_Configure+0xe>)
   170e8:	4905      	ldr	r1, [pc, #20]	; (17100 <LL_Configure+0x12>)
   170ea:	4a06      	ldr	r2, [pc, #24]	; (17104 <LL_Configure+0x16>)
   170ec:	4710      	bx	r2

000170ee <LL_Configure>:
   170ee:	b401      	push	{r0}
   170f0:	4803      	ldr	r0, [pc, #12]	; (17100 <LL_Configure+0x12>)
   170f2:	6800      	ldr	r0, [r0, #0]
   170f4:	4684      	mov	ip, r0
   170f6:	bc01      	pop	{r0}
   170f8:	4760      	bx	ip
   170fa:	0000      	.short	0x0000
   170fc:	00002711 	.word	0x00002711
   17100:	00024390 	.word	0x00024390
   17104:	0001724d 	.word	0x0001724d

00017108 <LL_Connect_Init>:
   17108:	b40f      	push	{r0, r1, r2, r3}
   1710a:	4805      	ldr	r0, [pc, #20]	; (17120 <LL_Connect+0xe>)
   1710c:	4905      	ldr	r1, [pc, #20]	; (17124 <LL_Connect+0x12>)
   1710e:	4a06      	ldr	r2, [pc, #24]	; (17128 <LL_Connect+0x16>)
   17110:	4710      	bx	r2

00017112 <LL_Connect>:
   17112:	b401      	push	{r0}
   17114:	4803      	ldr	r0, [pc, #12]	; (17124 <LL_Connect+0x12>)
   17116:	6800      	ldr	r0, [r0, #0]
   17118:	4684      	mov	ip, r0
   1711a:	bc01      	pop	{r0}
   1711c:	4760      	bx	ip
   1711e:	0000      	.short	0x0000
   17120:	00002712 	.word	0x00002712
   17124:	000243a0 	.word	0x000243a0
   17128:	0001724d 	.word	0x0001724d

0001712c <LL_Disconnect_Init>:
   1712c:	b40f      	push	{r0, r1, r2, r3}
   1712e:	4805      	ldr	r0, [pc, #20]	; (17144 <LL_Disconnect+0xe>)
   17130:	4905      	ldr	r1, [pc, #20]	; (17148 <LL_Disconnect+0x12>)
   17132:	4a06      	ldr	r2, [pc, #24]	; (1714c <LL_Disconnect+0x16>)
   17134:	4710      	bx	r2

00017136 <LL_Disconnect>:
   17136:	b401      	push	{r0}
   17138:	4803      	ldr	r0, [pc, #12]	; (17148 <LL_Disconnect+0x12>)
   1713a:	6800      	ldr	r0, [r0, #0]
   1713c:	4684      	mov	ip, r0
   1713e:	bc01      	pop	{r0}
   17140:	4760      	bx	ip
   17142:	0000      	.short	0x0000
   17144:	00002713 	.word	0x00002713
   17148:	000243b0 	.word	0x000243b0
   1714c:	0001724d 	.word	0x0001724d

00017150 <LL_GetLastError_Init>:
   17150:	b40f      	push	{r0, r1, r2, r3}
   17152:	4805      	ldr	r0, [pc, #20]	; (17168 <LL_GetLastError+0xe>)
   17154:	4905      	ldr	r1, [pc, #20]	; (1716c <LL_GetLastError+0x12>)
   17156:	4a06      	ldr	r2, [pc, #24]	; (17170 <LL_GetLastError+0x16>)
   17158:	4710      	bx	r2

0001715a <LL_GetLastError>:
   1715a:	b401      	push	{r0}
   1715c:	4803      	ldr	r0, [pc, #12]	; (1716c <LL_GetLastError+0x12>)
   1715e:	6800      	ldr	r0, [r0, #0]
   17160:	4684      	mov	ip, r0
   17162:	bc01      	pop	{r0}
   17164:	4760      	bx	ip
   17166:	0000      	.short	0x0000
   17168:	00002718 	.word	0x00002718
   1716c:	000243c0 	.word	0x000243c0
   17170:	0001724d 	.word	0x0001724d

00017174 <LL_GPRS_Connect_Init>:
   17174:	b40f      	push	{r0, r1, r2, r3}
   17176:	4805      	ldr	r0, [pc, #20]	; (1718c <LL_GPRS_Connect+0xe>)
   17178:	4905      	ldr	r1, [pc, #20]	; (17190 <LL_GPRS_Connect+0x12>)
   1717a:	4a06      	ldr	r2, [pc, #24]	; (17194 <LL_GPRS_Connect+0x16>)
   1717c:	4710      	bx	r2

0001717e <LL_GPRS_Connect>:
   1717e:	b401      	push	{r0}
   17180:	4803      	ldr	r0, [pc, #12]	; (17190 <LL_GPRS_Connect+0x12>)
   17182:	6800      	ldr	r0, [r0, #0]
   17184:	4684      	mov	ip, r0
   17186:	bc01      	pop	{r0}
   17188:	4760      	bx	ip
   1718a:	0000      	.short	0x0000
   1718c:	00002721 	.word	0x00002721
   17190:	000243d0 	.word	0x000243d0
   17194:	0001724d 	.word	0x0001724d

00017198 <LL_GPRS_Start_Init>:
   17198:	b40f      	push	{r0, r1, r2, r3}
   1719a:	4805      	ldr	r0, [pc, #20]	; (171b0 <LL_GPRS_Start+0xe>)
   1719c:	4905      	ldr	r1, [pc, #20]	; (171b4 <LL_GPRS_Start+0x12>)
   1719e:	4a06      	ldr	r2, [pc, #24]	; (171b8 <LL_GPRS_Start+0x16>)
   171a0:	4710      	bx	r2

000171a2 <LL_GPRS_Start>:
   171a2:	b401      	push	{r0}
   171a4:	4803      	ldr	r0, [pc, #12]	; (171b4 <LL_GPRS_Start+0x12>)
   171a6:	6800      	ldr	r0, [r0, #0]
   171a8:	4684      	mov	ip, r0
   171aa:	bc01      	pop	{r0}
   171ac:	4760      	bx	ip
   171ae:	0000      	.short	0x0000
   171b0:	0000271f 	.word	0x0000271f
   171b4:	000243e0 	.word	0x000243e0
   171b8:	0001724d 	.word	0x0001724d

000171bc <LL_GSM_Start_Init>:
   171bc:	b40f      	push	{r0, r1, r2, r3}
   171be:	4805      	ldr	r0, [pc, #20]	; (171d4 <LL_GSM_Start+0xe>)
   171c0:	4905      	ldr	r1, [pc, #20]	; (171d8 <LL_GSM_Start+0x12>)
   171c2:	4a06      	ldr	r2, [pc, #24]	; (171dc <LL_GSM_Start+0x16>)
   171c4:	4710      	bx	r2

000171c6 <LL_GSM_Start>:
   171c6:	b401      	push	{r0}
   171c8:	4803      	ldr	r0, [pc, #12]	; (171d8 <LL_GSM_Start+0x12>)
   171ca:	6800      	ldr	r0, [r0, #0]
   171cc:	4684      	mov	ip, r0
   171ce:	bc01      	pop	{r0}
   171d0:	4760      	bx	ip
   171d2:	0000      	.short	0x0000
   171d4:	0000271d 	.word	0x0000271d
   171d8:	000243f0 	.word	0x000243f0
   171dc:	0001724d 	.word	0x0001724d

000171e0 <LL_Network_GetStatus_Init>:
   171e0:	b40f      	push	{r0, r1, r2, r3}
   171e2:	4805      	ldr	r0, [pc, #20]	; (171f8 <LL_Network_GetStatus+0xe>)
   171e4:	4905      	ldr	r1, [pc, #20]	; (171fc <LL_Network_GetStatus+0x12>)
   171e6:	4a06      	ldr	r2, [pc, #24]	; (17200 <LL_Network_GetStatus+0x16>)
   171e8:	4710      	bx	r2

000171ea <LL_Network_GetStatus>:
   171ea:	b401      	push	{r0}
   171ec:	4803      	ldr	r0, [pc, #12]	; (171fc <LL_Network_GetStatus+0x12>)
   171ee:	6800      	ldr	r0, [r0, #0]
   171f0:	4684      	mov	ip, r0
   171f2:	bc01      	pop	{r0}
   171f4:	4760      	bx	ip
   171f6:	0000      	.short	0x0000
   171f8:	0000271c 	.word	0x0000271c
   171fc:	00024400 	.word	0x00024400
   17200:	0001724d 	.word	0x0001724d

00017204 <LL_Receive_Init>:
   17204:	b40f      	push	{r0, r1, r2, r3}
   17206:	4805      	ldr	r0, [pc, #20]	; (1721c <LL_Receive+0xe>)
   17208:	4905      	ldr	r1, [pc, #20]	; (17220 <LL_Receive+0x12>)
   1720a:	4a06      	ldr	r2, [pc, #24]	; (17224 <LL_Receive+0x16>)
   1720c:	4710      	bx	r2

0001720e <LL_Receive>:
   1720e:	b401      	push	{r0}
   17210:	4803      	ldr	r0, [pc, #12]	; (17220 <LL_Receive+0x12>)
   17212:	6800      	ldr	r0, [r0, #0]
   17214:	4684      	mov	ip, r0
   17216:	bc01      	pop	{r0}
   17218:	4760      	bx	ip
   1721a:	0000      	.short	0x0000
   1721c:	00002715 	.word	0x00002715
   17220:	00024410 	.word	0x00024410
   17224:	0001724d 	.word	0x0001724d

00017228 <LL_Send_Init>:
   17228:	b40f      	push	{r0, r1, r2, r3}
   1722a:	4805      	ldr	r0, [pc, #20]	; (17240 <LL_Send+0xe>)
   1722c:	4905      	ldr	r1, [pc, #20]	; (17244 <LL_Send+0x12>)
   1722e:	4a06      	ldr	r2, [pc, #24]	; (17248 <LL_Send+0x16>)
   17230:	4710      	bx	r2

00017232 <LL_Send>:
   17232:	b401      	push	{r0}
   17234:	4803      	ldr	r0, [pc, #12]	; (17244 <LL_Send+0x12>)
   17236:	6800      	ldr	r0, [r0, #0]
   17238:	4684      	mov	ip, r0
   1723a:	bc01      	pop	{r0}
   1723c:	4760      	bx	ip
   1723e:	0000      	.short	0x0000
   17240:	00002714 	.word	0x00002714
   17244:	00024420 	.word	0x00024420
   17248:	0001724d 	.word	0x0001724d

0001724c <LINKLAYER_InitFuncAndBranch>:
   1724c:	b500      	push	{lr}
   1724e:	f000 f835 	bl	172bc <LINKLAYER_GetProcAddress>
   17252:	bc04      	pop	{r2}
   17254:	4696      	mov	lr, r2
   17256:	4684      	mov	ip, r0
   17258:	bc0f      	pop	{r0, r1, r2, r3}
   1725a:	4760      	bx	ip

0001725c <LINKLAYER_GetProcAddressWithoutExit>:
   1725c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1725e:	4c13      	ldr	r4, [pc, #76]	; (172ac <LINKLAYER_GetProcAddressWithoutExit+0x50>)
   17260:	4607      	mov	r7, r0
   17262:	447c      	add	r4, pc
   17264:	460d      	mov	r5, r1
   17266:	6823      	ldr	r3, [r4, #0]
   17268:	b923      	cbnz	r3, 17274 <LINKLAYER_GetProcAddressWithoutExit+0x18>
   1726a:	4811      	ldr	r0, [pc, #68]	; (172b0 <LINKLAYER_GetProcAddressWithoutExit+0x54>)
   1726c:	4478      	add	r0, pc
   1726e:	f001 feb0 	bl	18fd2 <OSL_Dll_Open>
   17272:	6020      	str	r0, [r4, #0]
   17274:	4e0f      	ldr	r6, [pc, #60]	; (172b4 <LINKLAYER_GetProcAddressWithoutExit+0x58>)
   17276:	447e      	add	r6, pc
   17278:	6834      	ldr	r4, [r6, #0]
   1727a:	b95c      	cbnz	r4, 17294 <LINKLAYER_GetProcAddressWithoutExit+0x38>
   1727c:	4b0e      	ldr	r3, [pc, #56]	; (172b8 <LINKLAYER_GetProcAddressWithoutExit+0x5c>)
   1727e:	2003      	movs	r0, #3
   17280:	447b      	add	r3, pc
   17282:	9400      	str	r4, [sp, #0]
   17284:	9301      	str	r3, [sp, #4]
   17286:	4621      	mov	r1, r4
   17288:	4622      	mov	r2, r4
   1728a:	4623      	mov	r3, r4
   1728c:	f7f1 ec8c 	blx	8ba8 <_init+0xd8>
   17290:	4620      	mov	r0, r4
   17292:	e005      	b.n	172a0 <LINKLAYER_GetProcAddressWithoutExit+0x44>
   17294:	4620      	mov	r0, r4
   17296:	4639      	mov	r1, r7
   17298:	f001 fe7b 	bl	18f92 <OSL_Dll_GetSymbolByName>
   1729c:	2301      	movs	r3, #1
   1729e:	6073      	str	r3, [r6, #4]
   172a0:	b115      	cbz	r5, 172a8 <LINKLAYER_GetProcAddressWithoutExit+0x4c>
   172a2:	682b      	ldr	r3, [r5, #0]
   172a4:	b103      	cbz	r3, 172a8 <LINKLAYER_GetProcAddressWithoutExit+0x4c>
   172a6:	6028      	str	r0, [r5, #0]
   172a8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
   172aa:	bf00      	nop
   172ac:	0000d806 	.word	0x0000d806
   172b0:	00004304 	.word	0x00004304
   172b4:	0000d7f2 	.word	0x0000d7f2
   172b8:	000042fa 	.word	0x000042fa

000172bc <LINKLAYER_GetProcAddress>:
   172bc:	b513      	push	{r0, r1, r4, lr}
   172be:	f7ff ffcd 	bl	1725c <LINKLAYER_GetProcAddressWithoutExit>
   172c2:	4604      	mov	r4, r0
   172c4:	b948      	cbnz	r0, 172da <LINKLAYER_GetProcAddress+0x1e>
   172c6:	4b06      	ldr	r3, [pc, #24]	; (172e0 <LINKLAYER_GetProcAddress+0x24>)
   172c8:	9000      	str	r0, [sp, #0]
   172ca:	447b      	add	r3, pc
   172cc:	2003      	movs	r0, #3
   172ce:	9301      	str	r3, [sp, #4]
   172d0:	4621      	mov	r1, r4
   172d2:	4622      	mov	r2, r4
   172d4:	4623      	mov	r3, r4
   172d6:	f7f1 ec68 	blx	8ba8 <_init+0xd8>
   172da:	4620      	mov	r0, r4
   172dc:	bd1c      	pop	{r2, r3, r4, pc}
   172de:	bf00      	nop
   172e0:	000042c9 	.word	0x000042c9

000172e4 <LINKLAYER_IsPresent>:
   172e4:	4802      	ldr	r0, [pc, #8]	; (172f0 <LINKLAYER_IsPresent+0xc>)
   172e6:	b508      	push	{r3, lr}
   172e8:	4478      	add	r0, pc
   172ea:	f001 fe62 	bl	18fb2 <OSL_Dll_IsPresent>
   172ee:	bd08      	pop	{r3, pc}
   172f0:	00004288 	.word	0x00004288

000172f4 <TlvTree_AddChild_Init>:
   172f4:	b40f      	push	{r0, r1, r2, r3}
   172f6:	4805      	ldr	r0, [pc, #20]	; (1730c <TlvTree_AddChild+0xe>)
   172f8:	4905      	ldr	r1, [pc, #20]	; (17310 <TlvTree_AddChild+0x12>)
   172fa:	4a06      	ldr	r2, [pc, #24]	; (17314 <TlvTree_AddChild+0x16>)
   172fc:	4710      	bx	r2

000172fe <TlvTree_AddChild>:
   172fe:	b401      	push	{r0}
   17300:	4803      	ldr	r0, [pc, #12]	; (17310 <TlvTree_AddChild+0x12>)
   17302:	6800      	ldr	r0, [r0, #0]
   17304:	4684      	mov	ip, r0
   17306:	bc01      	pop	{r0}
   17308:	4760      	bx	ip
   1730a:	0000      	.short	0x0000
   1730c:	00002711 	.word	0x00002711
   17310:	00024430 	.word	0x00024430
   17314:	000173a9 	.word	0x000173a9

00017318 <TlvTree_AddChildInteger_Init>:
   17318:	b40f      	push	{r0, r1, r2, r3}
   1731a:	4805      	ldr	r0, [pc, #20]	; (17330 <TlvTree_AddChildInteger+0xe>)
   1731c:	4905      	ldr	r1, [pc, #20]	; (17334 <TlvTree_AddChildInteger+0x12>)
   1731e:	4a06      	ldr	r2, [pc, #24]	; (17338 <TlvTree_AddChildInteger+0x16>)
   17320:	4710      	bx	r2

00017322 <TlvTree_AddChildInteger>:
   17322:	b401      	push	{r0}
   17324:	4803      	ldr	r0, [pc, #12]	; (17334 <TlvTree_AddChildInteger+0x12>)
   17326:	6800      	ldr	r0, [r0, #0]
   17328:	4684      	mov	ip, r0
   1732a:	bc01      	pop	{r0}
   1732c:	4760      	bx	ip
   1732e:	0000      	.short	0x0000
   17330:	00002712 	.word	0x00002712
   17334:	00024440 	.word	0x00024440
   17338:	000173a9 	.word	0x000173a9

0001733c <TlvTree_AddChildString_Init>:
   1733c:	b40f      	push	{r0, r1, r2, r3}
   1733e:	4805      	ldr	r0, [pc, #20]	; (17354 <TlvTree_AddChildString+0xe>)
   17340:	4905      	ldr	r1, [pc, #20]	; (17358 <TlvTree_AddChildString+0x12>)
   17342:	4a06      	ldr	r2, [pc, #24]	; (1735c <TlvTree_AddChildString+0x16>)
   17344:	4710      	bx	r2

00017346 <TlvTree_AddChildString>:
   17346:	b401      	push	{r0}
   17348:	4803      	ldr	r0, [pc, #12]	; (17358 <TlvTree_AddChildString+0x12>)
   1734a:	6800      	ldr	r0, [r0, #0]
   1734c:	4684      	mov	ip, r0
   1734e:	bc01      	pop	{r0}
   17350:	4760      	bx	ip
   17352:	0000      	.short	0x0000
   17354:	00002713 	.word	0x00002713
   17358:	00024450 	.word	0x00024450
   1735c:	000173a9 	.word	0x000173a9

00017360 <TlvTree_New_Init>:
   17360:	b40f      	push	{r0, r1, r2, r3}
   17362:	4805      	ldr	r0, [pc, #20]	; (17378 <TlvTree_New+0xe>)
   17364:	4905      	ldr	r1, [pc, #20]	; (1737c <TlvTree_New+0x12>)
   17366:	4a06      	ldr	r2, [pc, #24]	; (17380 <TlvTree_New+0x16>)
   17368:	4710      	bx	r2

0001736a <TlvTree_New>:
   1736a:	b401      	push	{r0}
   1736c:	4803      	ldr	r0, [pc, #12]	; (1737c <TlvTree_New+0x12>)
   1736e:	6800      	ldr	r0, [r0, #0]
   17370:	4684      	mov	ip, r0
   17372:	bc01      	pop	{r0}
   17374:	4760      	bx	ip
   17376:	0000      	.short	0x0000
   17378:	00002710 	.word	0x00002710
   1737c:	00024460 	.word	0x00024460
   17380:	000173a9 	.word	0x000173a9

00017384 <TlvTree_Release_Init>:
   17384:	b40f      	push	{r0, r1, r2, r3}
   17386:	4805      	ldr	r0, [pc, #20]	; (1739c <TlvTree_Release+0xe>)
   17388:	4905      	ldr	r1, [pc, #20]	; (173a0 <TlvTree_Release+0x12>)
   1738a:	4a06      	ldr	r2, [pc, #24]	; (173a4 <TlvTree_Release+0x16>)
   1738c:	4710      	bx	r2

0001738e <TlvTree_Release>:
   1738e:	b401      	push	{r0}
   17390:	4803      	ldr	r0, [pc, #12]	; (173a0 <TlvTree_Release+0x12>)
   17392:	6800      	ldr	r0, [r0, #0]
   17394:	4684      	mov	ip, r0
   17396:	bc01      	pop	{r0}
   17398:	4760      	bx	ip
   1739a:	0000      	.short	0x0000
   1739c:	00002715 	.word	0x00002715
   173a0:	00024470 	.word	0x00024470
   173a4:	000173a9 	.word	0x000173a9

000173a8 <TLV_TREE_DLL_InitFuncAndBranch>:
   173a8:	b500      	push	{lr}
   173aa:	f000 f835 	bl	17418 <TLV_TREE_DLL_GetProcAddress>
   173ae:	bc04      	pop	{r2}
   173b0:	4696      	mov	lr, r2
   173b2:	4684      	mov	ip, r0
   173b4:	bc0f      	pop	{r0, r1, r2, r3}
   173b6:	4760      	bx	ip

000173b8 <TLV_TREE_DLL_GetProcAddressWithoutExit>:
   173b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   173ba:	4c13      	ldr	r4, [pc, #76]	; (17408 <TLV_TREE_DLL_GetProcAddressWithoutExit+0x50>)
   173bc:	4607      	mov	r7, r0
   173be:	447c      	add	r4, pc
   173c0:	460d      	mov	r5, r1
   173c2:	6823      	ldr	r3, [r4, #0]
   173c4:	b923      	cbnz	r3, 173d0 <TLV_TREE_DLL_GetProcAddressWithoutExit+0x18>
   173c6:	4811      	ldr	r0, [pc, #68]	; (1740c <TLV_TREE_DLL_GetProcAddressWithoutExit+0x54>)
   173c8:	4478      	add	r0, pc
   173ca:	f001 fe02 	bl	18fd2 <OSL_Dll_Open>
   173ce:	6020      	str	r0, [r4, #0]
   173d0:	4e0f      	ldr	r6, [pc, #60]	; (17410 <TLV_TREE_DLL_GetProcAddressWithoutExit+0x58>)
   173d2:	447e      	add	r6, pc
   173d4:	6834      	ldr	r4, [r6, #0]
   173d6:	b95c      	cbnz	r4, 173f0 <TLV_TREE_DLL_GetProcAddressWithoutExit+0x38>
   173d8:	4b0e      	ldr	r3, [pc, #56]	; (17414 <TLV_TREE_DLL_GetProcAddressWithoutExit+0x5c>)
   173da:	2003      	movs	r0, #3
   173dc:	447b      	add	r3, pc
   173de:	9400      	str	r4, [sp, #0]
   173e0:	9301      	str	r3, [sp, #4]
   173e2:	4621      	mov	r1, r4
   173e4:	4622      	mov	r2, r4
   173e6:	4623      	mov	r3, r4
   173e8:	f7f1 ebde 	blx	8ba8 <_init+0xd8>
   173ec:	4620      	mov	r0, r4
   173ee:	e005      	b.n	173fc <TLV_TREE_DLL_GetProcAddressWithoutExit+0x44>
   173f0:	4620      	mov	r0, r4
   173f2:	4639      	mov	r1, r7
   173f4:	f001 fdcd 	bl	18f92 <OSL_Dll_GetSymbolByName>
   173f8:	2301      	movs	r3, #1
   173fa:	6073      	str	r3, [r6, #4]
   173fc:	b115      	cbz	r5, 17404 <TLV_TREE_DLL_GetProcAddressWithoutExit+0x4c>
   173fe:	682b      	ldr	r3, [r5, #0]
   17400:	b103      	cbz	r3, 17404 <TLV_TREE_DLL_GetProcAddressWithoutExit+0x4c>
   17402:	6028      	str	r0, [r5, #0]
   17404:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
   17406:	bf00      	nop
   17408:	0000d6b2 	.word	0x0000d6b2
   1740c:	000041ee 	.word	0x000041ee
   17410:	0000d69e 	.word	0x0000d69e
   17414:	000041e8 	.word	0x000041e8

00017418 <TLV_TREE_DLL_GetProcAddress>:
   17418:	b513      	push	{r0, r1, r4, lr}
   1741a:	f7ff ffcd 	bl	173b8 <TLV_TREE_DLL_GetProcAddressWithoutExit>
   1741e:	4604      	mov	r4, r0
   17420:	b948      	cbnz	r0, 17436 <TLV_TREE_DLL_GetProcAddress+0x1e>
   17422:	4b06      	ldr	r3, [pc, #24]	; (1743c <TLV_TREE_DLL_GetProcAddress+0x24>)
   17424:	9000      	str	r0, [sp, #0]
   17426:	447b      	add	r3, pc
   17428:	2003      	movs	r0, #3
   1742a:	9301      	str	r3, [sp, #4]
   1742c:	4621      	mov	r1, r4
   1742e:	4622      	mov	r2, r4
   17430:	4623      	mov	r3, r4
   17432:	f7f1 ebba 	blx	8ba8 <_init+0xd8>
   17436:	4620      	mov	r0, r4
   17438:	bd1c      	pop	{r2, r3, r4, pc}
   1743a:	bf00      	nop
   1743c:	000041bb 	.word	0x000041bb

00017440 <TLV_TREE_DLL_IsPresent>:
   17440:	4802      	ldr	r0, [pc, #8]	; (1744c <TLV_TREE_DLL_IsPresent+0xc>)
   17442:	b508      	push	{r3, lr}
   17444:	4478      	add	r0, pc
   17446:	f001 fdb4 	bl	18fb2 <OSL_Dll_IsPresent>
   1744a:	bd08      	pop	{r3, pc}
   1744c:	00004172 	.word	0x00004172

00017450 <function_name>:
   17450:	696c6554 	.word	0x696c6554
   17454:	465f6d75 	.word	0x465f6d75
   17458:	736f6c63 	.word	0x736f6c63
   1745c:	0065      	.short	0x0065
   1745e:	bf00      	nop

00017460 <Telium_Fclose>:
   17460:	b408      	push	{r3}
   17462:	4b11      	ldr	r3, [pc, #68]	; (174a8 <.direct_call+0x8>)
   17464:	681b      	ldr	r3, [r3, #0]
   17466:	2b00      	cmp	r3, #0
   17468:	d11a      	bne.n	174a0 <.direct_call>
   1746a:	b507      	push	{r0, r1, r2, lr}
   1746c:	f000 ff5e 	bl	1832c <extenslib_open>
   17470:	2800      	cmp	r0, #0
   17472:	d00b      	beq.n	1748c <.bad_return>
   17474:	4684      	mov	ip, r0
   17476:	480d      	ldr	r0, [pc, #52]	; (174ac <.direct_call+0xc>)
   17478:	f000 f811 	bl	1749e <.call_function>
   1747c:	2800      	cmp	r0, #0
   1747e:	d002      	beq.n	17486 <.exit_return>
   17480:	4909      	ldr	r1, [pc, #36]	; (174a8 <.direct_call+0x8>)
   17482:	6008      	str	r0, [r1, #0]
   17484:	e007      	b.n	17496 <.already_initialized>

00017486 <.exit_return>:
   17486:	480a      	ldr	r0, [pc, #40]	; (174b0 <.direct_call+0x10>)
   17488:	f000 feae 	bl	181e8 <Telium_Exit>

0001748c <.bad_return>:
   1748c:	bc0f      	pop	{r0, r1, r2, r3}
   1748e:	2000      	movs	r0, #0
   17490:	469e      	mov	lr, r3
   17492:	bc08      	pop	{r3}
   17494:	4770      	bx	lr

00017496 <.already_initialized>:
   17496:	4684      	mov	ip, r0
   17498:	bc0f      	pop	{r0, r1, r2, r3}
   1749a:	469e      	mov	lr, r3
   1749c:	bc08      	pop	{r3}

0001749e <.call_function>:
   1749e:	4760      	bx	ip

000174a0 <.direct_call>:
   174a0:	469c      	mov	ip, r3
   174a2:	bc08      	pop	{r3}
   174a4:	4760      	bx	ip
   174a6:	0000      	.short	0x0000
   174a8:	00024480 	.word	0x00024480
   174ac:	00017450 	.word	0x00017450
   174b0:	00000b2e 	.word	0x00000b2e

000174b4 <function_name>:
   174b4:	696c6554 	.word	0x696c6554
   174b8:	465f6d75 	.word	0x465f6d75
   174bc:	6e65706f 	.word	0x6e65706f
   174c0:	00          	.byte	0x00
   174c1:	00          	.byte	0x00
   174c2:	bf00      	nop

000174c4 <Telium_Fopen>:
   174c4:	b408      	push	{r3}
   174c6:	4b11      	ldr	r3, [pc, #68]	; (1750c <.direct_call+0x8>)
   174c8:	681b      	ldr	r3, [r3, #0]
   174ca:	2b00      	cmp	r3, #0
   174cc:	d11a      	bne.n	17504 <.direct_call>
   174ce:	b507      	push	{r0, r1, r2, lr}
   174d0:	f000 ff2c 	bl	1832c <extenslib_open>
   174d4:	2800      	cmp	r0, #0
   174d6:	d00b      	beq.n	174f0 <.bad_return>
   174d8:	4684      	mov	ip, r0
   174da:	480d      	ldr	r0, [pc, #52]	; (17510 <.direct_call+0xc>)
   174dc:	f000 f811 	bl	17502 <.call_function>
   174e0:	2800      	cmp	r0, #0
   174e2:	d002      	beq.n	174ea <.exit_return>
   174e4:	4909      	ldr	r1, [pc, #36]	; (1750c <.direct_call+0x8>)
   174e6:	6008      	str	r0, [r1, #0]
   174e8:	e007      	b.n	174fa <.already_initialized>

000174ea <.exit_return>:
   174ea:	480a      	ldr	r0, [pc, #40]	; (17514 <.direct_call+0x10>)
   174ec:	f000 fe7c 	bl	181e8 <Telium_Exit>

000174f0 <.bad_return>:
   174f0:	bc0f      	pop	{r0, r1, r2, r3}
   174f2:	2000      	movs	r0, #0
   174f4:	469e      	mov	lr, r3
   174f6:	bc08      	pop	{r3}
   174f8:	4770      	bx	lr

000174fa <.already_initialized>:
   174fa:	4684      	mov	ip, r0
   174fc:	bc0f      	pop	{r0, r1, r2, r3}
   174fe:	469e      	mov	lr, r3
   17500:	bc08      	pop	{r3}

00017502 <.call_function>:
   17502:	4760      	bx	ip

00017504 <.direct_call>:
   17504:	469c      	mov	ip, r3
   17506:	bc08      	pop	{r3}
   17508:	4760      	bx	ip
   1750a:	0000      	.short	0x0000
   1750c:	00024484 	.word	0x00024484
   17510:	000174b4 	.word	0x000174b4
   17514:	00000b2d 	.word	0x00000b2d

00017518 <function_name>:
   17518:	696c6554 	.word	0x696c6554
   1751c:	525f6d75 	.word	0x525f6d75
   17520:	74657365 	.word	0x74657365
   17524:	6675625f 	.word	0x6675625f
   17528:	00          	.byte	0x00
   17529:	00          	.byte	0x00
   1752a:	bf00      	nop

0001752c <Telium_Reset_buf>:
   1752c:	b408      	push	{r3}
   1752e:	4b0f      	ldr	r3, [pc, #60]	; (1756c <.direct_call+0x6>)
   17530:	681b      	ldr	r3, [r3, #0]
   17532:	2b00      	cmp	r3, #0
   17534:	d117      	bne.n	17566 <.direct_call>
   17536:	b507      	push	{r0, r1, r2, lr}
   17538:	f000 fef8 	bl	1832c <extenslib_open>
   1753c:	2800      	cmp	r0, #0
   1753e:	d008      	beq.n	17552 <.bad_return>
   17540:	4684      	mov	ip, r0
   17542:	480b      	ldr	r0, [pc, #44]	; (17570 <.direct_call+0xa>)
   17544:	f000 f80e 	bl	17564 <.call_function>
   17548:	2800      	cmp	r0, #0
   1754a:	d002      	beq.n	17552 <.bad_return>
   1754c:	4907      	ldr	r1, [pc, #28]	; (1756c <.direct_call+0x6>)
   1754e:	6008      	str	r0, [r1, #0]
   17550:	e004      	b.n	1755c <.already_initialized>

00017552 <.bad_return>:
   17552:	bc0f      	pop	{r0, r1, r2, r3}
   17554:	4807      	ldr	r0, [pc, #28]	; (17574 <.direct_call+0xe>)
   17556:	469e      	mov	lr, r3
   17558:	bc08      	pop	{r3}
   1755a:	4770      	bx	lr

0001755c <.already_initialized>:
   1755c:	4684      	mov	ip, r0
   1755e:	bc0f      	pop	{r0, r1, r2, r3}
   17560:	469e      	mov	lr, r3
   17562:	bc08      	pop	{r3}

00017564 <.call_function>:
   17564:	4760      	bx	ip

00017566 <.direct_call>:
   17566:	469c      	mov	ip, r3
   17568:	bc08      	pop	{r3}
   1756a:	4760      	bx	ip
   1756c:	00024488 	.word	0x00024488
   17570:	00017518 	.word	0x00017518
   17574:	ffffffff 	.word	0xffffffff

00017578 <function_name>:
   17578:	696c6554 	.word	0x696c6554
   1757c:	535f6d75 	.word	0x535f6d75
   17580:	75746174 	.word	0x75746174
   17584:	0073      	.short	0x0073
   17586:	bf00      	nop

00017588 <Telium_Status>:
   17588:	b408      	push	{r3}
   1758a:	4b10      	ldr	r3, [pc, #64]	; (175cc <.direct_call+0x6>)
   1758c:	681b      	ldr	r3, [r3, #0]
   1758e:	2b00      	cmp	r3, #0
   17590:	d119      	bne.n	175c6 <.direct_call>
   17592:	b507      	push	{r0, r1, r2, lr}
   17594:	f000 feca 	bl	1832c <extenslib_open>
   17598:	2800      	cmp	r0, #0
   1759a:	d00b      	beq.n	175b4 <.bad_return>
   1759c:	4684      	mov	ip, r0
   1759e:	480c      	ldr	r0, [pc, #48]	; (175d0 <.direct_call+0xa>)
   175a0:	f000 f810 	bl	175c4 <.call_function>
   175a4:	2800      	cmp	r0, #0
   175a6:	d002      	beq.n	175ae <.exit_return>
   175a8:	4908      	ldr	r1, [pc, #32]	; (175cc <.direct_call+0x6>)
   175aa:	6008      	str	r0, [r1, #0]
   175ac:	e006      	b.n	175bc <.already_initialized>

000175ae <.exit_return>:
   175ae:	4809      	ldr	r0, [pc, #36]	; (175d4 <.direct_call+0xe>)
   175b0:	f000 fe1a 	bl	181e8 <Telium_Exit>

000175b4 <.bad_return>:
   175b4:	bc0f      	pop	{r0, r1, r2, r3}
   175b6:	469e      	mov	lr, r3
   175b8:	bc08      	pop	{r3}
   175ba:	4770      	bx	lr

000175bc <.already_initialized>:
   175bc:	4684      	mov	ip, r0
   175be:	bc0f      	pop	{r0, r1, r2, r3}
   175c0:	469e      	mov	lr, r3
   175c2:	bc08      	pop	{r3}

000175c4 <.call_function>:
   175c4:	4760      	bx	ip

000175c6 <.direct_call>:
   175c6:	469c      	mov	ip, r3
   175c8:	bc08      	pop	{r3}
   175ca:	4760      	bx	ip
   175cc:	0002448c 	.word	0x0002448c
   175d0:	00017578 	.word	0x00017578
   175d4:	00000b3c 	.word	0x00000b3c

000175d8 <function_name>:
   175d8:	696c6554 	.word	0x696c6554
   175dc:	535f6d75 	.word	0x535f6d75
   175e0:	756f6474 	.word	0x756f6474
   175e4:	0074      	.short	0x0074
   175e6:	bf00      	nop

000175e8 <Telium_Stdout>:
   175e8:	b408      	push	{r3}
   175ea:	4b11      	ldr	r3, [pc, #68]	; (17630 <.direct_call+0x8>)
   175ec:	681b      	ldr	r3, [r3, #0]
   175ee:	2b00      	cmp	r3, #0
   175f0:	d11a      	bne.n	17628 <.direct_call>
   175f2:	b507      	push	{r0, r1, r2, lr}
   175f4:	f000 fe9a 	bl	1832c <extenslib_open>
   175f8:	2800      	cmp	r0, #0
   175fa:	d00b      	beq.n	17614 <.bad_return>
   175fc:	4684      	mov	ip, r0
   175fe:	480d      	ldr	r0, [pc, #52]	; (17634 <.direct_call+0xc>)
   17600:	f000 f811 	bl	17626 <.call_function>
   17604:	2800      	cmp	r0, #0
   17606:	d002      	beq.n	1760e <.exit_return>
   17608:	4909      	ldr	r1, [pc, #36]	; (17630 <.direct_call+0x8>)
   1760a:	6008      	str	r0, [r1, #0]
   1760c:	e007      	b.n	1761e <.already_initialized>

0001760e <.exit_return>:
   1760e:	480a      	ldr	r0, [pc, #40]	; (17638 <.direct_call+0x10>)
   17610:	f000 fdea 	bl	181e8 <Telium_Exit>

00017614 <.bad_return>:
   17614:	bc0f      	pop	{r0, r1, r2, r3}
   17616:	2000      	movs	r0, #0
   17618:	469e      	mov	lr, r3
   1761a:	bc08      	pop	{r3}
   1761c:	4770      	bx	lr

0001761e <.already_initialized>:
   1761e:	4684      	mov	ip, r0
   17620:	bc0f      	pop	{r0, r1, r2, r3}
   17622:	469e      	mov	lr, r3
   17624:	bc08      	pop	{r3}

00017626 <.call_function>:
   17626:	4760      	bx	ip

00017628 <.direct_call>:
   17628:	469c      	mov	ip, r3
   1762a:	bc08      	pop	{r3}
   1762c:	4760      	bx	ip
   1762e:	0000      	.short	0x0000
   17630:	00024490 	.word	0x00024490
   17634:	000175d8 	.word	0x000175d8
   17638:	00000b37 	.word	0x00000b37

0001763c <function_name>:
   1763c:	696c6554 	.word	0x696c6554
   17640:	535f6d75 	.word	0x535f6d75
   17644:	65706474 	.word	0x65706474
   17648:	00666972 	.word	0x00666972

0001764c <Telium_Stdperif>:
   1764c:	b408      	push	{r3}
   1764e:	4b11      	ldr	r3, [pc, #68]	; (17694 <.direct_call+0x8>)
   17650:	681b      	ldr	r3, [r3, #0]
   17652:	2b00      	cmp	r3, #0
   17654:	d11a      	bne.n	1768c <.direct_call>
   17656:	b507      	push	{r0, r1, r2, lr}
   17658:	f000 fe68 	bl	1832c <extenslib_open>
   1765c:	2800      	cmp	r0, #0
   1765e:	d00b      	beq.n	17678 <.bad_return>
   17660:	4684      	mov	ip, r0
   17662:	480d      	ldr	r0, [pc, #52]	; (17698 <.direct_call+0xc>)
   17664:	f000 f811 	bl	1768a <.call_function>
   17668:	2800      	cmp	r0, #0
   1766a:	d002      	beq.n	17672 <.exit_return>
   1766c:	4909      	ldr	r1, [pc, #36]	; (17694 <.direct_call+0x8>)
   1766e:	6008      	str	r0, [r1, #0]
   17670:	e007      	b.n	17682 <.already_initialized>

00017672 <.exit_return>:
   17672:	480a      	ldr	r0, [pc, #40]	; (1769c <.direct_call+0x10>)
   17674:	f000 fdb8 	bl	181e8 <Telium_Exit>

00017678 <.bad_return>:
   17678:	bc0f      	pop	{r0, r1, r2, r3}
   1767a:	2000      	movs	r0, #0
   1767c:	469e      	mov	lr, r3
   1767e:	bc08      	pop	{r3}
   17680:	4770      	bx	lr

00017682 <.already_initialized>:
   17682:	4684      	mov	ip, r0
   17684:	bc0f      	pop	{r0, r1, r2, r3}
   17686:	469e      	mov	lr, r3
   17688:	bc08      	pop	{r3}

0001768a <.call_function>:
   1768a:	4760      	bx	ip

0001768c <.direct_call>:
   1768c:	469c      	mov	ip, r3
   1768e:	bc08      	pop	{r3}
   17690:	4760      	bx	ip
   17692:	0000      	.short	0x0000
   17694:	00024494 	.word	0x00024494
   17698:	0001763c 	.word	0x0001763c
   1769c:	00000b36 	.word	0x00000b36

000176a0 <function_name>:
   176a0:	696c6554 	.word	0x696c6554
   176a4:	545f6d75 	.word	0x545f6d75
   176a8:	74736574 	.word	0x74736574
   176ac:	006c6c61 	.word	0x006c6c61

000176b0 <Telium_Ttestall>:
   176b0:	b408      	push	{r3}
   176b2:	4b11      	ldr	r3, [pc, #68]	; (176f8 <.direct_call+0x8>)
   176b4:	681b      	ldr	r3, [r3, #0]
   176b6:	2b00      	cmp	r3, #0
   176b8:	d11a      	bne.n	176f0 <.direct_call>
   176ba:	b507      	push	{r0, r1, r2, lr}
   176bc:	f000 fe36 	bl	1832c <extenslib_open>
   176c0:	2800      	cmp	r0, #0
   176c2:	d00b      	beq.n	176dc <.bad_return>
   176c4:	4684      	mov	ip, r0
   176c6:	480d      	ldr	r0, [pc, #52]	; (176fc <.direct_call+0xc>)
   176c8:	f000 f811 	bl	176ee <.call_function>
   176cc:	2800      	cmp	r0, #0
   176ce:	d002      	beq.n	176d6 <.exit_return>
   176d0:	4909      	ldr	r1, [pc, #36]	; (176f8 <.direct_call+0x8>)
   176d2:	6008      	str	r0, [r1, #0]
   176d4:	e007      	b.n	176e6 <.already_initialized>

000176d6 <.exit_return>:
   176d6:	480a      	ldr	r0, [pc, #40]	; (17700 <.direct_call+0x10>)
   176d8:	f000 fd86 	bl	181e8 <Telium_Exit>

000176dc <.bad_return>:
   176dc:	bc0f      	pop	{r0, r1, r2, r3}
   176de:	2000      	movs	r0, #0
   176e0:	469e      	mov	lr, r3
   176e2:	bc08      	pop	{r3}
   176e4:	4770      	bx	lr

000176e6 <.already_initialized>:
   176e6:	4684      	mov	ip, r0
   176e8:	bc0f      	pop	{r0, r1, r2, r3}
   176ea:	469e      	mov	lr, r3
   176ec:	bc08      	pop	{r3}

000176ee <.call_function>:
   176ee:	4760      	bx	ip

000176f0 <.direct_call>:
   176f0:	469c      	mov	ip, r3
   176f2:	bc08      	pop	{r3}
   176f4:	4760      	bx	ip
   176f6:	0000      	.short	0x0000
   176f8:	00024498 	.word	0x00024498
   176fc:	000176a0 	.word	0x000176a0
   17700:	00000b3e 	.word	0x00000b3e

00017704 <function_name>:
   17704:	7a7a7562 	.word	0x7a7a7562
   17708:	7265      	.short	0x7265
	...

0001770c <buzzer>:
   1770c:	b408      	push	{r3}
   1770e:	4b0f      	ldr	r3, [pc, #60]	; (1774c <.direct_call+0x8>)
   17710:	681b      	ldr	r3, [r3, #0]
   17712:	2b00      	cmp	r3, #0
   17714:	d116      	bne.n	17744 <.direct_call>
   17716:	b507      	push	{r0, r1, r2, lr}
   17718:	f000 fe08 	bl	1832c <extenslib_open>
   1771c:	2800      	cmp	r0, #0
   1771e:	d008      	beq.n	17732 <.bad_return>
   17720:	4684      	mov	ip, r0
   17722:	480b      	ldr	r0, [pc, #44]	; (17750 <.direct_call+0xc>)
   17724:	f000 f80d 	bl	17742 <.call_function>
   17728:	2800      	cmp	r0, #0
   1772a:	d002      	beq.n	17732 <.bad_return>
   1772c:	4907      	ldr	r1, [pc, #28]	; (1774c <.direct_call+0x8>)
   1772e:	6008      	str	r0, [r1, #0]
   17730:	e003      	b.n	1773a <.already_initialized>

00017732 <.bad_return>:
   17732:	bc0f      	pop	{r0, r1, r2, r3}
   17734:	469e      	mov	lr, r3
   17736:	bc08      	pop	{r3}
   17738:	4770      	bx	lr

0001773a <.already_initialized>:
   1773a:	4684      	mov	ip, r0
   1773c:	bc0f      	pop	{r0, r1, r2, r3}
   1773e:	469e      	mov	lr, r3
   17740:	bc08      	pop	{r3}

00017742 <.call_function>:
   17742:	4760      	bx	ip

00017744 <.direct_call>:
   17744:	469c      	mov	ip, r3
   17746:	bc08      	pop	{r3}
   17748:	4760      	bx	ip
   1774a:	0000      	.short	0x0000
   1774c:	0002449c 	.word	0x0002449c
   17750:	00017704 	.word	0x00017704

00017754 <function_name>:
   17754:	696c6554 	.word	0x696c6554
   17758:	525f6d75 	.word	0x525f6d75
   1775c:	5f646165 	.word	0x5f646165
   17760:	65746164 	.word	0x65746164
   17764:	00          	.byte	0x00
   17765:	00          	.byte	0x00
   17766:	bf00      	nop

00017768 <Telium_Read_date>:
   17768:	b408      	push	{r3}
   1776a:	4b0f      	ldr	r3, [pc, #60]	; (177a8 <.direct_call+0x6>)
   1776c:	681b      	ldr	r3, [r3, #0]
   1776e:	2b00      	cmp	r3, #0
   17770:	d117      	bne.n	177a2 <.direct_call>
   17772:	b507      	push	{r0, r1, r2, lr}
   17774:	f000 fe40 	bl	183f8 <toolslib_open>
   17778:	2800      	cmp	r0, #0
   1777a:	d008      	beq.n	1778e <.bad_return>
   1777c:	4684      	mov	ip, r0
   1777e:	480b      	ldr	r0, [pc, #44]	; (177ac <.direct_call+0xa>)
   17780:	f000 f80e 	bl	177a0 <.call_function>
   17784:	2800      	cmp	r0, #0
   17786:	d002      	beq.n	1778e <.bad_return>
   17788:	4907      	ldr	r1, [pc, #28]	; (177a8 <.direct_call+0x6>)
   1778a:	6008      	str	r0, [r1, #0]
   1778c:	e004      	b.n	17798 <.already_initialized>

0001778e <.bad_return>:
   1778e:	bc0f      	pop	{r0, r1, r2, r3}
   17790:	4807      	ldr	r0, [pc, #28]	; (177b0 <.direct_call+0xe>)
   17792:	469e      	mov	lr, r3
   17794:	bc08      	pop	{r3}
   17796:	4770      	bx	lr

00017798 <.already_initialized>:
   17798:	4684      	mov	ip, r0
   1779a:	bc0f      	pop	{r0, r1, r2, r3}
   1779c:	469e      	mov	lr, r3
   1779e:	bc08      	pop	{r3}

000177a0 <.call_function>:
   177a0:	4760      	bx	ip

000177a2 <.direct_call>:
   177a2:	469c      	mov	ip, r3
   177a4:	bc08      	pop	{r3}
   177a6:	4760      	bx	ip
   177a8:	000244a0 	.word	0x000244a0
   177ac:	00017754 	.word	0x00017754
   177b0:	ffffffff 	.word	0xffffffff

000177b4 <function_name>:
   177b4:	6f437349 	.word	0x6f437349
   177b8:	44726f6c 	.word	0x44726f6c
   177bc:	6c707369 	.word	0x6c707369
   177c0:	7961      	.short	0x7961
	...

000177c4 <IsColorDisplay>:
   177c4:	b408      	push	{r3}
   177c6:	4b11      	ldr	r3, [pc, #68]	; (1780c <.direct_call+0x8>)
   177c8:	681b      	ldr	r3, [r3, #0]
   177ca:	2b00      	cmp	r3, #0
   177cc:	d11a      	bne.n	17804 <.direct_call>
   177ce:	b507      	push	{r0, r1, r2, lr}
   177d0:	f000 fdac 	bl	1832c <extenslib_open>
   177d4:	2800      	cmp	r0, #0
   177d6:	d00b      	beq.n	177f0 <.bad_return>
   177d8:	4684      	mov	ip, r0
   177da:	480d      	ldr	r0, [pc, #52]	; (17810 <.direct_call+0xc>)
   177dc:	f000 f811 	bl	17802 <.call_function>
   177e0:	2800      	cmp	r0, #0
   177e2:	d002      	beq.n	177ea <.exit_return>
   177e4:	4909      	ldr	r1, [pc, #36]	; (1780c <.direct_call+0x8>)
   177e6:	6008      	str	r0, [r1, #0]
   177e8:	e007      	b.n	177fa <.already_initialized>

000177ea <.exit_return>:
   177ea:	480a      	ldr	r0, [pc, #40]	; (17814 <.direct_call+0x10>)
   177ec:	f000 fcfc 	bl	181e8 <Telium_Exit>

000177f0 <.bad_return>:
   177f0:	bc0f      	pop	{r0, r1, r2, r3}
   177f2:	2000      	movs	r0, #0
   177f4:	469e      	mov	lr, r3
   177f6:	bc08      	pop	{r3}
   177f8:	4770      	bx	lr

000177fa <.already_initialized>:
   177fa:	4684      	mov	ip, r0
   177fc:	bc0f      	pop	{r0, r1, r2, r3}
   177fe:	469e      	mov	lr, r3
   17800:	bc08      	pop	{r3}

00017802 <.call_function>:
   17802:	4760      	bx	ip

00017804 <.direct_call>:
   17804:	469c      	mov	ip, r3
   17806:	bc08      	pop	{r3}
   17808:	4760      	bx	ip
   1780a:	0000      	.short	0x0000
   1780c:	000244a4 	.word	0x000244a4
   17810:	000177b4 	.word	0x000177b4
   17814:	00000a00 	.word	0x00000a00

00017818 <function_name>:
   17818:	72507349 	.word	0x72507349
   1781c:	65746e69 	.word	0x65746e69
   17820:	0072      	.short	0x0072
   17822:	bf00      	nop

00017824 <IsPrinter>:
   17824:	b408      	push	{r3}
   17826:	4b11      	ldr	r3, [pc, #68]	; (1786c <.direct_call+0x8>)
   17828:	681b      	ldr	r3, [r3, #0]
   1782a:	2b00      	cmp	r3, #0
   1782c:	d11a      	bne.n	17864 <.direct_call>
   1782e:	b507      	push	{r0, r1, r2, lr}
   17830:	f000 fd7c 	bl	1832c <extenslib_open>
   17834:	2800      	cmp	r0, #0
   17836:	d00b      	beq.n	17850 <.bad_return>
   17838:	4684      	mov	ip, r0
   1783a:	480d      	ldr	r0, [pc, #52]	; (17870 <.direct_call+0xc>)
   1783c:	f000 f811 	bl	17862 <.call_function>
   17840:	2800      	cmp	r0, #0
   17842:	d002      	beq.n	1784a <.exit_return>
   17844:	4909      	ldr	r1, [pc, #36]	; (1786c <.direct_call+0x8>)
   17846:	6008      	str	r0, [r1, #0]
   17848:	e007      	b.n	1785a <.already_initialized>

0001784a <.exit_return>:
   1784a:	480a      	ldr	r0, [pc, #40]	; (17874 <.direct_call+0x10>)
   1784c:	f000 fccc 	bl	181e8 <Telium_Exit>

00017850 <.bad_return>:
   17850:	bc0f      	pop	{r0, r1, r2, r3}
   17852:	2000      	movs	r0, #0
   17854:	469e      	mov	lr, r3
   17856:	bc08      	pop	{r3}
   17858:	4770      	bx	lr

0001785a <.already_initialized>:
   1785a:	4684      	mov	ip, r0
   1785c:	bc0f      	pop	{r0, r1, r2, r3}
   1785e:	469e      	mov	lr, r3
   17860:	bc08      	pop	{r3}

00017862 <.call_function>:
   17862:	4760      	bx	ip

00017864 <.direct_call>:
   17864:	469c      	mov	ip, r3
   17866:	bc08      	pop	{r3}
   17868:	4760      	bx	ip
   1786a:	0000      	.short	0x0000
   1786c:	000244a8 	.word	0x000244a8
   17870:	00017818 	.word	0x00017818
   17874:	00000a00 	.word	0x00000a00

00017878 <function_name>:
   17878:	696c6554 	.word	0x696c6554
   1787c:	535f6d75 	.word	0x535f6d75
   17880:	69767265 	.word	0x69767265
   17884:	65526563 	.word	0x65526563
   17888:	74736967 	.word	0x74736967
   1788c:	7265      	.short	0x7265
	...

00017890 <Telium_ServiceRegister>:
   17890:	b408      	push	{r3}
   17892:	4b0f      	ldr	r3, [pc, #60]	; (178d0 <.direct_call+0x6>)
   17894:	681b      	ldr	r3, [r3, #0]
   17896:	2b00      	cmp	r3, #0
   17898:	d117      	bne.n	178ca <.direct_call>
   1789a:	b507      	push	{r0, r1, r2, lr}
   1789c:	f000 fd46 	bl	1832c <extenslib_open>
   178a0:	2800      	cmp	r0, #0
   178a2:	d008      	beq.n	178b6 <.bad_return>
   178a4:	4684      	mov	ip, r0
   178a6:	480b      	ldr	r0, [pc, #44]	; (178d4 <.direct_call+0xa>)
   178a8:	f000 f80e 	bl	178c8 <.call_function>
   178ac:	2800      	cmp	r0, #0
   178ae:	d002      	beq.n	178b6 <.bad_return>
   178b0:	4907      	ldr	r1, [pc, #28]	; (178d0 <.direct_call+0x6>)
   178b2:	6008      	str	r0, [r1, #0]
   178b4:	e004      	b.n	178c0 <.already_initialized>

000178b6 <.bad_return>:
   178b6:	bc0f      	pop	{r0, r1, r2, r3}
   178b8:	4807      	ldr	r0, [pc, #28]	; (178d8 <.direct_call+0xe>)
   178ba:	469e      	mov	lr, r3
   178bc:	bc08      	pop	{r3}
   178be:	4770      	bx	lr

000178c0 <.already_initialized>:
   178c0:	4684      	mov	ip, r0
   178c2:	bc0f      	pop	{r0, r1, r2, r3}
   178c4:	469e      	mov	lr, r3
   178c6:	bc08      	pop	{r3}

000178c8 <.call_function>:
   178c8:	4760      	bx	ip

000178ca <.direct_call>:
   178ca:	469c      	mov	ip, r3
   178cc:	bc08      	pop	{r3}
   178ce:	4760      	bx	ip
   178d0:	000244ac 	.word	0x000244ac
   178d4:	00017878 	.word	0x00017878
   178d8:	ffffffff 	.word	0xffffffff

000178dc <Telium_Pprintf>:
   178dc:	b40f      	push	{r0, r1, r2, r3}
   178de:	b537      	push	{r0, r1, r2, r4, r5, lr}
   178e0:	ac06      	add	r4, sp, #24
   178e2:	f854 5b04 	ldr.w	r5, [r4], #4
   178e6:	9401      	str	r4, [sp, #4]
   178e8:	f000 f824 	bl	17934 <Telium_Stdprt>
   178ec:	4629      	mov	r1, r5
   178ee:	9a01      	ldr	r2, [sp, #4]
   178f0:	f000 fd4a 	bl	18388 <Telium_Vfprintf>
   178f4:	1c43      	adds	r3, r0, #1
   178f6:	d104      	bne.n	17902 <Telium_Pprintf+0x26>
   178f8:	2105      	movs	r1, #5
   178fa:	2000      	movs	r0, #0
   178fc:	f7ff fed8 	bl	176b0 <Telium_Ttestall>
   17900:	e7f1      	b.n	178e6 <Telium_Pprintf+0xa>
   17902:	e8bd 403e 	ldmia.w	sp!, {r1, r2, r3, r4, r5, lr}
   17906:	b004      	add	sp, #16
   17908:	4770      	bx	lr

0001790a <Telium_Printf>:
   1790a:	b40f      	push	{r0, r1, r2, r3}
   1790c:	b513      	push	{r0, r1, r4, lr}
   1790e:	ab04      	add	r3, sp, #16
   17910:	f853 4b04 	ldr.w	r4, [r3], #4
   17914:	9301      	str	r3, [sp, #4]
   17916:	f7ff fe67 	bl	175e8 <Telium_Stdout>
   1791a:	4621      	mov	r1, r4
   1791c:	9a01      	ldr	r2, [sp, #4]
   1791e:	f000 fd33 	bl	18388 <Telium_Vfprintf>
   17922:	e8bd 401c 	ldmia.w	sp!, {r2, r3, r4, lr}
   17926:	b004      	add	sp, #16
   17928:	4770      	bx	lr
	...

0001792c <periph_name>:
   1792c:	4e495250 	.word	0x4e495250
   17930:	00524554 	.word	0x00524554

00017934 <Telium_Stdprt>:
   17934:	b402      	push	{r1}
   17936:	b500      	push	{lr}
   17938:	4803      	ldr	r0, [pc, #12]	; (17948 <Telium_Stdprt+0x14>)
   1793a:	2100      	movs	r1, #0
   1793c:	f7ff fe86 	bl	1764c <Telium_Stdperif>
   17940:	bc02      	pop	{r1}
   17942:	468e      	mov	lr, r1
   17944:	bc02      	pop	{r1}
   17946:	4770      	bx	lr
   17948:	0001792c 	.word	0x0001792c

0001794c <Telium_Sprintf>:
   1794c:	b40e      	push	{r1, r2, r3}
   1794e:	b503      	push	{r0, r1, lr}
   17950:	9903      	ldr	r1, [sp, #12]
   17952:	b128      	cbz	r0, 17960 <Telium_Sprintf+0x14>
   17954:	b129      	cbz	r1, 17962 <Telium_Sprintf+0x16>
   17956:	aa04      	add	r2, sp, #16
   17958:	9201      	str	r2, [sp, #4]
   1795a:	f7f1 e98a 	blx	8c70 <_init+0x1a0>
   1795e:	e001      	b.n	17964 <Telium_Sprintf+0x18>
   17960:	e000      	b.n	17964 <Telium_Sprintf+0x18>
   17962:	4608      	mov	r0, r1
   17964:	e8bd 400c 	ldmia.w	sp!, {r2, r3, lr}
   17968:	b003      	add	sp, #12
   1796a:	4770      	bx	lr

0001796c <function_name>:
   1796c:	6c707041 	.word	0x6c707041
   17970:	74616369 	.word	0x74616369
   17974:	476e6f69 	.word	0x476e6f69
   17978:	75437465 	.word	0x75437465
   1797c:	6e657272 	.word	0x6e657272
   17980:	0074      	.short	0x0074
   17982:	bf00      	nop

00017984 <ApplicationGetCurrent>:
   17984:	b408      	push	{r3}
   17986:	4b0f      	ldr	r3, [pc, #60]	; (179c4 <.direct_call+0x6>)
   17988:	681b      	ldr	r3, [r3, #0]
   1798a:	2b00      	cmp	r3, #0
   1798c:	d117      	bne.n	179be <.direct_call>
   1798e:	b507      	push	{r0, r1, r2, lr}
   17990:	f000 fd70 	bl	18474 <wrapperlib_open>
   17994:	2800      	cmp	r0, #0
   17996:	d008      	beq.n	179aa <.bad_return>
   17998:	4684      	mov	ip, r0
   1799a:	480b      	ldr	r0, [pc, #44]	; (179c8 <.direct_call+0xa>)
   1799c:	f000 f80e 	bl	179bc <.call_function>
   179a0:	2800      	cmp	r0, #0
   179a2:	d002      	beq.n	179aa <.bad_return>
   179a4:	4907      	ldr	r1, [pc, #28]	; (179c4 <.direct_call+0x6>)
   179a6:	6008      	str	r0, [r1, #0]
   179a8:	e004      	b.n	179b4 <.already_initialized>

000179aa <.bad_return>:
   179aa:	bc0f      	pop	{r0, r1, r2, r3}
   179ac:	4807      	ldr	r0, [pc, #28]	; (179cc <.direct_call+0xe>)
   179ae:	469e      	mov	lr, r3
   179b0:	bc08      	pop	{r3}
   179b2:	4770      	bx	lr

000179b4 <.already_initialized>:
   179b4:	4684      	mov	ip, r0
   179b6:	bc0f      	pop	{r0, r1, r2, r3}
   179b8:	469e      	mov	lr, r3
   179ba:	bc08      	pop	{r3}

000179bc <.call_function>:
   179bc:	4760      	bx	ip

000179be <.direct_call>:
   179be:	469c      	mov	ip, r3
   179c0:	bc08      	pop	{r3}
   179c2:	4760      	bx	ip
   179c4:	000244b0 	.word	0x000244b0
   179c8:	0001796c 	.word	0x0001796c
   179cc:	ffffffff 	.word	0xffffffff

000179d0 <function_name>:
   179d0:	635f5346 	.word	0x635f5346
   179d4:	65736f6c 	.word	0x65736f6c
   179d8:	00          	.byte	0x00
   179d9:	00          	.byte	0x00
   179da:	bf00      	nop

000179dc <FS_close>:
   179dc:	b408      	push	{r3}
   179de:	4b0f      	ldr	r3, [pc, #60]	; (17a1c <.direct_call+0x6>)
   179e0:	681b      	ldr	r3, [r3, #0]
   179e2:	2b00      	cmp	r3, #0
   179e4:	d117      	bne.n	17a16 <.direct_call>
   179e6:	b507      	push	{r0, r1, r2, lr}
   179e8:	f000 fd44 	bl	18474 <wrapperlib_open>
   179ec:	2800      	cmp	r0, #0
   179ee:	d008      	beq.n	17a02 <.bad_return>
   179f0:	4684      	mov	ip, r0
   179f2:	480b      	ldr	r0, [pc, #44]	; (17a20 <.direct_call+0xa>)
   179f4:	f000 f80e 	bl	17a14 <.call_function>
   179f8:	2800      	cmp	r0, #0
   179fa:	d002      	beq.n	17a02 <.bad_return>
   179fc:	4907      	ldr	r1, [pc, #28]	; (17a1c <.direct_call+0x6>)
   179fe:	6008      	str	r0, [r1, #0]
   17a00:	e004      	b.n	17a0c <.already_initialized>

00017a02 <.bad_return>:
   17a02:	bc0f      	pop	{r0, r1, r2, r3}
   17a04:	4807      	ldr	r0, [pc, #28]	; (17a24 <.direct_call+0xe>)
   17a06:	469e      	mov	lr, r3
   17a08:	bc08      	pop	{r3}
   17a0a:	4770      	bx	lr

00017a0c <.already_initialized>:
   17a0c:	4684      	mov	ip, r0
   17a0e:	bc0f      	pop	{r0, r1, r2, r3}
   17a10:	469e      	mov	lr, r3
   17a12:	bc08      	pop	{r3}

00017a14 <.call_function>:
   17a14:	4760      	bx	ip

00017a16 <.direct_call>:
   17a16:	469c      	mov	ip, r3
   17a18:	bc08      	pop	{r3}
   17a1a:	4760      	bx	ip
   17a1c:	000244b4 	.word	0x000244b4
   17a20:	000179d0 	.word	0x000179d0
   17a24:	ffffffff 	.word	0xffffffff

00017a28 <function_name>:
   17a28:	645f5346 	.word	0x645f5346
   17a2c:	72636b73 	.word	0x72636b73
   17a30:	65746165 	.word	0x65746165
   17a34:	00          	.byte	0x00
   17a35:	00          	.byte	0x00
   17a36:	bf00      	nop

00017a38 <FS_dskcreate>:
   17a38:	b408      	push	{r3}
   17a3a:	4b0f      	ldr	r3, [pc, #60]	; (17a78 <.direct_call+0x6>)
   17a3c:	681b      	ldr	r3, [r3, #0]
   17a3e:	2b00      	cmp	r3, #0
   17a40:	d117      	bne.n	17a72 <.direct_call>
   17a42:	b507      	push	{r0, r1, r2, lr}
   17a44:	f000 fd16 	bl	18474 <wrapperlib_open>
   17a48:	2800      	cmp	r0, #0
   17a4a:	d008      	beq.n	17a5e <.bad_return>
   17a4c:	4684      	mov	ip, r0
   17a4e:	480b      	ldr	r0, [pc, #44]	; (17a7c <.direct_call+0xa>)
   17a50:	f000 f80e 	bl	17a70 <.call_function>
   17a54:	2800      	cmp	r0, #0
   17a56:	d002      	beq.n	17a5e <.bad_return>
   17a58:	4907      	ldr	r1, [pc, #28]	; (17a78 <.direct_call+0x6>)
   17a5a:	6008      	str	r0, [r1, #0]
   17a5c:	e004      	b.n	17a68 <.already_initialized>

00017a5e <.bad_return>:
   17a5e:	bc0f      	pop	{r0, r1, r2, r3}
   17a60:	4807      	ldr	r0, [pc, #28]	; (17a80 <.direct_call+0xe>)
   17a62:	469e      	mov	lr, r3
   17a64:	bc08      	pop	{r3}
   17a66:	4770      	bx	lr

00017a68 <.already_initialized>:
   17a68:	4684      	mov	ip, r0
   17a6a:	bc0f      	pop	{r0, r1, r2, r3}
   17a6c:	469e      	mov	lr, r3
   17a6e:	bc08      	pop	{r3}

00017a70 <.call_function>:
   17a70:	4760      	bx	ip

00017a72 <.direct_call>:
   17a72:	469c      	mov	ip, r3
   17a74:	bc08      	pop	{r3}
   17a76:	4760      	bx	ip
   17a78:	000244b8 	.word	0x000244b8
   17a7c:	00017a28 	.word	0x00017a28
   17a80:	ffffffff 	.word	0xffffffff

00017a84 <function_name>:
   17a84:	655f5346 	.word	0x655f5346
   17a88:	74736978 	.word	0x74736978
   17a8c:	00          	.byte	0x00
   17a8d:	00          	.byte	0x00
   17a8e:	bf00      	nop

00017a90 <FS_exist>:
   17a90:	b408      	push	{r3}
   17a92:	4b0f      	ldr	r3, [pc, #60]	; (17ad0 <.direct_call+0x6>)
   17a94:	681b      	ldr	r3, [r3, #0]
   17a96:	2b00      	cmp	r3, #0
   17a98:	d117      	bne.n	17aca <.direct_call>
   17a9a:	b507      	push	{r0, r1, r2, lr}
   17a9c:	f000 fcea 	bl	18474 <wrapperlib_open>
   17aa0:	2800      	cmp	r0, #0
   17aa2:	d008      	beq.n	17ab6 <.bad_return>
   17aa4:	4684      	mov	ip, r0
   17aa6:	480b      	ldr	r0, [pc, #44]	; (17ad4 <.direct_call+0xa>)
   17aa8:	f000 f80e 	bl	17ac8 <.call_function>
   17aac:	2800      	cmp	r0, #0
   17aae:	d002      	beq.n	17ab6 <.bad_return>
   17ab0:	4907      	ldr	r1, [pc, #28]	; (17ad0 <.direct_call+0x6>)
   17ab2:	6008      	str	r0, [r1, #0]
   17ab4:	e004      	b.n	17ac0 <.already_initialized>

00017ab6 <.bad_return>:
   17ab6:	bc0f      	pop	{r0, r1, r2, r3}
   17ab8:	4807      	ldr	r0, [pc, #28]	; (17ad8 <.direct_call+0xe>)
   17aba:	469e      	mov	lr, r3
   17abc:	bc08      	pop	{r3}
   17abe:	4770      	bx	lr

00017ac0 <.already_initialized>:
   17ac0:	4684      	mov	ip, r0
   17ac2:	bc0f      	pop	{r0, r1, r2, r3}
   17ac4:	469e      	mov	lr, r3
   17ac6:	bc08      	pop	{r3}

00017ac8 <.call_function>:
   17ac8:	4760      	bx	ip

00017aca <.direct_call>:
   17aca:	469c      	mov	ip, r3
   17acc:	bc08      	pop	{r3}
   17ace:	4760      	bx	ip
   17ad0:	000244bc 	.word	0x000244bc
   17ad4:	00017a84 	.word	0x00017a84
   17ad8:	ffffffff 	.word	0xffffffff

00017adc <function_name>:
   17adc:	6c5f5346 	.word	0x6c5f5346
   17ae0:	74676e65 	.word	0x74676e65
   17ae4:	0068      	.short	0x0068
   17ae6:	bf00      	nop

00017ae8 <FS_length>:
   17ae8:	b408      	push	{r3}
   17aea:	4b0f      	ldr	r3, [pc, #60]	; (17b28 <.direct_call+0x6>)
   17aec:	681b      	ldr	r3, [r3, #0]
   17aee:	2b00      	cmp	r3, #0
   17af0:	d117      	bne.n	17b22 <.direct_call>
   17af2:	b507      	push	{r0, r1, r2, lr}
   17af4:	f000 fcbe 	bl	18474 <wrapperlib_open>
   17af8:	2800      	cmp	r0, #0
   17afa:	d008      	beq.n	17b0e <.bad_return>
   17afc:	4684      	mov	ip, r0
   17afe:	480b      	ldr	r0, [pc, #44]	; (17b2c <.direct_call+0xa>)
   17b00:	f000 f80e 	bl	17b20 <.call_function>
   17b04:	2800      	cmp	r0, #0
   17b06:	d002      	beq.n	17b0e <.bad_return>
   17b08:	4907      	ldr	r1, [pc, #28]	; (17b28 <.direct_call+0x6>)
   17b0a:	6008      	str	r0, [r1, #0]
   17b0c:	e004      	b.n	17b18 <.already_initialized>

00017b0e <.bad_return>:
   17b0e:	bc0f      	pop	{r0, r1, r2, r3}
   17b10:	4807      	ldr	r0, [pc, #28]	; (17b30 <.direct_call+0xe>)
   17b12:	469e      	mov	lr, r3
   17b14:	bc08      	pop	{r3}
   17b16:	4770      	bx	lr

00017b18 <.already_initialized>:
   17b18:	4684      	mov	ip, r0
   17b1a:	bc0f      	pop	{r0, r1, r2, r3}
   17b1c:	469e      	mov	lr, r3
   17b1e:	bc08      	pop	{r3}

00017b20 <.call_function>:
   17b20:	4760      	bx	ip

00017b22 <.direct_call>:
   17b22:	469c      	mov	ip, r3
   17b24:	bc08      	pop	{r3}
   17b26:	4760      	bx	ip
   17b28:	000244c0 	.word	0x000244c0
   17b2c:	00017adc 	.word	0x00017adc
   17b30:	ffffffff 	.word	0xffffffff

00017b34 <function_name>:
   17b34:	6d5f5346 	.word	0x6d5f5346
   17b38:	746e756f 	.word	0x746e756f
   17b3c:	00          	.byte	0x00
   17b3d:	00          	.byte	0x00
   17b3e:	bf00      	nop

00017b40 <FS_mount>:
   17b40:	b408      	push	{r3}
   17b42:	4b0f      	ldr	r3, [pc, #60]	; (17b80 <.direct_call+0x6>)
   17b44:	681b      	ldr	r3, [r3, #0]
   17b46:	2b00      	cmp	r3, #0
   17b48:	d117      	bne.n	17b7a <.direct_call>
   17b4a:	b507      	push	{r0, r1, r2, lr}
   17b4c:	f000 fc92 	bl	18474 <wrapperlib_open>
   17b50:	2800      	cmp	r0, #0
   17b52:	d008      	beq.n	17b66 <.bad_return>
   17b54:	4684      	mov	ip, r0
   17b56:	480b      	ldr	r0, [pc, #44]	; (17b84 <.direct_call+0xa>)
   17b58:	f000 f80e 	bl	17b78 <.call_function>
   17b5c:	2800      	cmp	r0, #0
   17b5e:	d002      	beq.n	17b66 <.bad_return>
   17b60:	4907      	ldr	r1, [pc, #28]	; (17b80 <.direct_call+0x6>)
   17b62:	6008      	str	r0, [r1, #0]
   17b64:	e004      	b.n	17b70 <.already_initialized>

00017b66 <.bad_return>:
   17b66:	bc0f      	pop	{r0, r1, r2, r3}
   17b68:	4807      	ldr	r0, [pc, #28]	; (17b88 <.direct_call+0xe>)
   17b6a:	469e      	mov	lr, r3
   17b6c:	bc08      	pop	{r3}
   17b6e:	4770      	bx	lr

00017b70 <.already_initialized>:
   17b70:	4684      	mov	ip, r0
   17b72:	bc0f      	pop	{r0, r1, r2, r3}
   17b74:	469e      	mov	lr, r3
   17b76:	bc08      	pop	{r3}

00017b78 <.call_function>:
   17b78:	4760      	bx	ip

00017b7a <.direct_call>:
   17b7a:	469c      	mov	ip, r3
   17b7c:	bc08      	pop	{r3}
   17b7e:	4760      	bx	ip
   17b80:	000244c4 	.word	0x000244c4
   17b84:	00017b34 	.word	0x00017b34
   17b88:	ffffffff 	.word	0xffffffff

00017b8c <function_name>:
   17b8c:	6f5f5346 	.word	0x6f5f5346
   17b90:	006e6570 	.word	0x006e6570

00017b94 <FS_open>:
   17b94:	b408      	push	{r3}
   17b96:	4b0f      	ldr	r3, [pc, #60]	; (17bd4 <.direct_call+0x6>)
   17b98:	681b      	ldr	r3, [r3, #0]
   17b9a:	2b00      	cmp	r3, #0
   17b9c:	d117      	bne.n	17bce <.direct_call>
   17b9e:	b507      	push	{r0, r1, r2, lr}
   17ba0:	f000 fc68 	bl	18474 <wrapperlib_open>
   17ba4:	2800      	cmp	r0, #0
   17ba6:	d008      	beq.n	17bba <.bad_return>
   17ba8:	4684      	mov	ip, r0
   17baa:	480b      	ldr	r0, [pc, #44]	; (17bd8 <.direct_call+0xa>)
   17bac:	f000 f80e 	bl	17bcc <.call_function>
   17bb0:	2800      	cmp	r0, #0
   17bb2:	d002      	beq.n	17bba <.bad_return>
   17bb4:	4907      	ldr	r1, [pc, #28]	; (17bd4 <.direct_call+0x6>)
   17bb6:	6008      	str	r0, [r1, #0]
   17bb8:	e004      	b.n	17bc4 <.already_initialized>

00017bba <.bad_return>:
   17bba:	bc0f      	pop	{r0, r1, r2, r3}
   17bbc:	4807      	ldr	r0, [pc, #28]	; (17bdc <.direct_call+0xe>)
   17bbe:	469e      	mov	lr, r3
   17bc0:	bc08      	pop	{r3}
   17bc2:	4770      	bx	lr

00017bc4 <.already_initialized>:
   17bc4:	4684      	mov	ip, r0
   17bc6:	bc0f      	pop	{r0, r1, r2, r3}
   17bc8:	469e      	mov	lr, r3
   17bca:	bc08      	pop	{r3}

00017bcc <.call_function>:
   17bcc:	4760      	bx	ip

00017bce <.direct_call>:
   17bce:	469c      	mov	ip, r3
   17bd0:	bc08      	pop	{r3}
   17bd2:	4760      	bx	ip
   17bd4:	000244c8 	.word	0x000244c8
   17bd8:	00017b8c 	.word	0x00017b8c
   17bdc:	ffffffff 	.word	0xffffffff

00017be0 <function_name>:
   17be0:	725f5346 	.word	0x725f5346
   17be4:	00646165 	.word	0x00646165

00017be8 <FS_read>:
   17be8:	b408      	push	{r3}
   17bea:	4b0f      	ldr	r3, [pc, #60]	; (17c28 <.direct_call+0x6>)
   17bec:	681b      	ldr	r3, [r3, #0]
   17bee:	2b00      	cmp	r3, #0
   17bf0:	d117      	bne.n	17c22 <.direct_call>
   17bf2:	b507      	push	{r0, r1, r2, lr}
   17bf4:	f000 fc3e 	bl	18474 <wrapperlib_open>
   17bf8:	2800      	cmp	r0, #0
   17bfa:	d008      	beq.n	17c0e <.bad_return>
   17bfc:	4684      	mov	ip, r0
   17bfe:	480b      	ldr	r0, [pc, #44]	; (17c2c <.direct_call+0xa>)
   17c00:	f000 f80e 	bl	17c20 <.call_function>
   17c04:	2800      	cmp	r0, #0
   17c06:	d002      	beq.n	17c0e <.bad_return>
   17c08:	4907      	ldr	r1, [pc, #28]	; (17c28 <.direct_call+0x6>)
   17c0a:	6008      	str	r0, [r1, #0]
   17c0c:	e004      	b.n	17c18 <.already_initialized>

00017c0e <.bad_return>:
   17c0e:	bc0f      	pop	{r0, r1, r2, r3}
   17c10:	4807      	ldr	r0, [pc, #28]	; (17c30 <.direct_call+0xe>)
   17c12:	469e      	mov	lr, r3
   17c14:	bc08      	pop	{r3}
   17c16:	4770      	bx	lr

00017c18 <.already_initialized>:
   17c18:	4684      	mov	ip, r0
   17c1a:	bc0f      	pop	{r0, r1, r2, r3}
   17c1c:	469e      	mov	lr, r3
   17c1e:	bc08      	pop	{r3}

00017c20 <.call_function>:
   17c20:	4760      	bx	ip

00017c22 <.direct_call>:
   17c22:	469c      	mov	ip, r3
   17c24:	bc08      	pop	{r3}
   17c26:	4760      	bx	ip
   17c28:	000244cc 	.word	0x000244cc
   17c2c:	00017be0 	.word	0x00017be0
   17c30:	ffffffff 	.word	0xffffffff

00017c34 <function_name>:
   17c34:	725f5346 	.word	0x725f5346
   17c38:	6d616e65 	.word	0x6d616e65
   17c3c:	0065      	.short	0x0065
   17c3e:	bf00      	nop

00017c40 <FS_rename>:
   17c40:	b408      	push	{r3}
   17c42:	4b0f      	ldr	r3, [pc, #60]	; (17c80 <.direct_call+0x6>)
   17c44:	681b      	ldr	r3, [r3, #0]
   17c46:	2b00      	cmp	r3, #0
   17c48:	d117      	bne.n	17c7a <.direct_call>
   17c4a:	b507      	push	{r0, r1, r2, lr}
   17c4c:	f000 fc12 	bl	18474 <wrapperlib_open>
   17c50:	2800      	cmp	r0, #0
   17c52:	d008      	beq.n	17c66 <.bad_return>
   17c54:	4684      	mov	ip, r0
   17c56:	480b      	ldr	r0, [pc, #44]	; (17c84 <.direct_call+0xa>)
   17c58:	f000 f80e 	bl	17c78 <.call_function>
   17c5c:	2800      	cmp	r0, #0
   17c5e:	d002      	beq.n	17c66 <.bad_return>
   17c60:	4907      	ldr	r1, [pc, #28]	; (17c80 <.direct_call+0x6>)
   17c62:	6008      	str	r0, [r1, #0]
   17c64:	e004      	b.n	17c70 <.already_initialized>

00017c66 <.bad_return>:
   17c66:	bc0f      	pop	{r0, r1, r2, r3}
   17c68:	4807      	ldr	r0, [pc, #28]	; (17c88 <.direct_call+0xe>)
   17c6a:	469e      	mov	lr, r3
   17c6c:	bc08      	pop	{r3}
   17c6e:	4770      	bx	lr

00017c70 <.already_initialized>:
   17c70:	4684      	mov	ip, r0
   17c72:	bc0f      	pop	{r0, r1, r2, r3}
   17c74:	469e      	mov	lr, r3
   17c76:	bc08      	pop	{r3}

00017c78 <.call_function>:
   17c78:	4760      	bx	ip

00017c7a <.direct_call>:
   17c7a:	469c      	mov	ip, r3
   17c7c:	bc08      	pop	{r3}
   17c7e:	4760      	bx	ip
   17c80:	000244d0 	.word	0x000244d0
   17c84:	00017c34 	.word	0x00017c34
   17c88:	ffffffff 	.word	0xffffffff

00017c8c <function_name>:
   17c8c:	735f5346 	.word	0x735f5346
   17c90:	006b6565 	.word	0x006b6565

00017c94 <FS_seek>:
   17c94:	b408      	push	{r3}
   17c96:	4b0f      	ldr	r3, [pc, #60]	; (17cd4 <.direct_call+0x6>)
   17c98:	681b      	ldr	r3, [r3, #0]
   17c9a:	2b00      	cmp	r3, #0
   17c9c:	d117      	bne.n	17cce <.direct_call>
   17c9e:	b507      	push	{r0, r1, r2, lr}
   17ca0:	f000 fbe8 	bl	18474 <wrapperlib_open>
   17ca4:	2800      	cmp	r0, #0
   17ca6:	d008      	beq.n	17cba <.bad_return>
   17ca8:	4684      	mov	ip, r0
   17caa:	480b      	ldr	r0, [pc, #44]	; (17cd8 <.direct_call+0xa>)
   17cac:	f000 f80e 	bl	17ccc <.call_function>
   17cb0:	2800      	cmp	r0, #0
   17cb2:	d002      	beq.n	17cba <.bad_return>
   17cb4:	4907      	ldr	r1, [pc, #28]	; (17cd4 <.direct_call+0x6>)
   17cb6:	6008      	str	r0, [r1, #0]
   17cb8:	e004      	b.n	17cc4 <.already_initialized>

00017cba <.bad_return>:
   17cba:	bc0f      	pop	{r0, r1, r2, r3}
   17cbc:	2000      	movs	r0, #0
   17cbe:	469e      	mov	lr, r3
   17cc0:	bc08      	pop	{r3}
   17cc2:	4770      	bx	lr

00017cc4 <.already_initialized>:
   17cc4:	4684      	mov	ip, r0
   17cc6:	bc0f      	pop	{r0, r1, r2, r3}
   17cc8:	469e      	mov	lr, r3
   17cca:	bc08      	pop	{r3}

00017ccc <.call_function>:
   17ccc:	4760      	bx	ip

00017cce <.direct_call>:
   17cce:	469c      	mov	ip, r3
   17cd0:	bc08      	pop	{r3}
   17cd2:	4760      	bx	ip
   17cd4:	000244d4 	.word	0x000244d4
   17cd8:	00017c8c 	.word	0x00017c8c

00017cdc <function_name>:
   17cdc:	755f5346 	.word	0x755f5346
   17ce0:	6e696c6e 	.word	0x6e696c6e
   17ce4:	006b      	.short	0x006b
   17ce6:	bf00      	nop

00017ce8 <FS_unlink>:
   17ce8:	b408      	push	{r3}
   17cea:	4b0f      	ldr	r3, [pc, #60]	; (17d28 <.direct_call+0x6>)
   17cec:	681b      	ldr	r3, [r3, #0]
   17cee:	2b00      	cmp	r3, #0
   17cf0:	d117      	bne.n	17d22 <.direct_call>
   17cf2:	b507      	push	{r0, r1, r2, lr}
   17cf4:	f000 fbbe 	bl	18474 <wrapperlib_open>
   17cf8:	2800      	cmp	r0, #0
   17cfa:	d008      	beq.n	17d0e <.bad_return>
   17cfc:	4684      	mov	ip, r0
   17cfe:	480b      	ldr	r0, [pc, #44]	; (17d2c <.direct_call+0xa>)
   17d00:	f000 f80e 	bl	17d20 <.call_function>
   17d04:	2800      	cmp	r0, #0
   17d06:	d002      	beq.n	17d0e <.bad_return>
   17d08:	4907      	ldr	r1, [pc, #28]	; (17d28 <.direct_call+0x6>)
   17d0a:	6008      	str	r0, [r1, #0]
   17d0c:	e004      	b.n	17d18 <.already_initialized>

00017d0e <.bad_return>:
   17d0e:	bc0f      	pop	{r0, r1, r2, r3}
   17d10:	4807      	ldr	r0, [pc, #28]	; (17d30 <.direct_call+0xe>)
   17d12:	469e      	mov	lr, r3
   17d14:	bc08      	pop	{r3}
   17d16:	4770      	bx	lr

00017d18 <.already_initialized>:
   17d18:	4684      	mov	ip, r0
   17d1a:	bc0f      	pop	{r0, r1, r2, r3}
   17d1c:	469e      	mov	lr, r3
   17d1e:	bc08      	pop	{r3}

00017d20 <.call_function>:
   17d20:	4760      	bx	ip

00017d22 <.direct_call>:
   17d22:	469c      	mov	ip, r3
   17d24:	bc08      	pop	{r3}
   17d26:	4760      	bx	ip
   17d28:	000244d8 	.word	0x000244d8
   17d2c:	00017cdc 	.word	0x00017cdc
   17d30:	ffffffff 	.word	0xffffffff

00017d34 <function_name>:
   17d34:	755f5346 	.word	0x755f5346
   17d38:	756f6d6e 	.word	0x756f6d6e
   17d3c:	746e      	.short	0x746e
	...

00017d40 <FS_unmount>:
   17d40:	b408      	push	{r3}
   17d42:	4b0f      	ldr	r3, [pc, #60]	; (17d80 <.direct_call+0x6>)
   17d44:	681b      	ldr	r3, [r3, #0]
   17d46:	2b00      	cmp	r3, #0
   17d48:	d117      	bne.n	17d7a <.direct_call>
   17d4a:	b507      	push	{r0, r1, r2, lr}
   17d4c:	f000 fb92 	bl	18474 <wrapperlib_open>
   17d50:	2800      	cmp	r0, #0
   17d52:	d008      	beq.n	17d66 <.bad_return>
   17d54:	4684      	mov	ip, r0
   17d56:	480b      	ldr	r0, [pc, #44]	; (17d84 <.direct_call+0xa>)
   17d58:	f000 f80e 	bl	17d78 <.call_function>
   17d5c:	2800      	cmp	r0, #0
   17d5e:	d002      	beq.n	17d66 <.bad_return>
   17d60:	4907      	ldr	r1, [pc, #28]	; (17d80 <.direct_call+0x6>)
   17d62:	6008      	str	r0, [r1, #0]
   17d64:	e004      	b.n	17d70 <.already_initialized>

00017d66 <.bad_return>:
   17d66:	bc0f      	pop	{r0, r1, r2, r3}
   17d68:	4807      	ldr	r0, [pc, #28]	; (17d88 <.direct_call+0xe>)
   17d6a:	469e      	mov	lr, r3
   17d6c:	bc08      	pop	{r3}
   17d6e:	4770      	bx	lr

00017d70 <.already_initialized>:
   17d70:	4684      	mov	ip, r0
   17d72:	bc0f      	pop	{r0, r1, r2, r3}
   17d74:	469e      	mov	lr, r3
   17d76:	bc08      	pop	{r3}

00017d78 <.call_function>:
   17d78:	4760      	bx	ip

00017d7a <.direct_call>:
   17d7a:	469c      	mov	ip, r3
   17d7c:	bc08      	pop	{r3}
   17d7e:	4760      	bx	ip
   17d80:	000244dc 	.word	0x000244dc
   17d84:	00017d34 	.word	0x00017d34
   17d88:	ffffffff 	.word	0xffffffff

00017d8c <function_name>:
   17d8c:	775f5346 	.word	0x775f5346
   17d90:	65746972 	.word	0x65746972
   17d94:	00          	.byte	0x00
   17d95:	00          	.byte	0x00
   17d96:	bf00      	nop

00017d98 <FS_write>:
   17d98:	b408      	push	{r3}
   17d9a:	4b0f      	ldr	r3, [pc, #60]	; (17dd8 <.direct_call+0x6>)
   17d9c:	681b      	ldr	r3, [r3, #0]
   17d9e:	2b00      	cmp	r3, #0
   17da0:	d117      	bne.n	17dd2 <.direct_call>
   17da2:	b507      	push	{r0, r1, r2, lr}
   17da4:	f000 fb66 	bl	18474 <wrapperlib_open>
   17da8:	2800      	cmp	r0, #0
   17daa:	d008      	beq.n	17dbe <.bad_return>
   17dac:	4684      	mov	ip, r0
   17dae:	480b      	ldr	r0, [pc, #44]	; (17ddc <.direct_call+0xa>)
   17db0:	f000 f80e 	bl	17dd0 <.call_function>
   17db4:	2800      	cmp	r0, #0
   17db6:	d002      	beq.n	17dbe <.bad_return>
   17db8:	4907      	ldr	r1, [pc, #28]	; (17dd8 <.direct_call+0x6>)
   17dba:	6008      	str	r0, [r1, #0]
   17dbc:	e004      	b.n	17dc8 <.already_initialized>

00017dbe <.bad_return>:
   17dbe:	bc0f      	pop	{r0, r1, r2, r3}
   17dc0:	4807      	ldr	r0, [pc, #28]	; (17de0 <.direct_call+0xe>)
   17dc2:	469e      	mov	lr, r3
   17dc4:	bc08      	pop	{r3}
   17dc6:	4770      	bx	lr

00017dc8 <.already_initialized>:
   17dc8:	4684      	mov	ip, r0
   17dca:	bc0f      	pop	{r0, r1, r2, r3}
   17dcc:	469e      	mov	lr, r3
   17dce:	bc08      	pop	{r3}

00017dd0 <.call_function>:
   17dd0:	4760      	bx	ip

00017dd2 <.direct_call>:
   17dd2:	469c      	mov	ip, r3
   17dd4:	bc08      	pop	{r3}
   17dd6:	4760      	bx	ip
   17dd8:	000244e0 	.word	0x000244e0
   17ddc:	00017d8c 	.word	0x00017d8c
   17de0:	ffffffff 	.word	0xffffffff

00017de4 <function_name>:
   17de4:	656a624f 	.word	0x656a624f
   17de8:	65477463 	.word	0x65477463
   17dec:	73654474 	.word	0x73654474
   17df0:	70697263 	.word	0x70697263
   17df4:	00726f74 	.word	0x00726f74

00017df8 <ObjectGetDescriptor>:
   17df8:	b408      	push	{r3}
   17dfa:	4b0f      	ldr	r3, [pc, #60]	; (17e38 <.direct_call+0x6>)
   17dfc:	681b      	ldr	r3, [r3, #0]
   17dfe:	2b00      	cmp	r3, #0
   17e00:	d117      	bne.n	17e32 <.direct_call>
   17e02:	b507      	push	{r0, r1, r2, lr}
   17e04:	f000 fb36 	bl	18474 <wrapperlib_open>
   17e08:	2800      	cmp	r0, #0
   17e0a:	d008      	beq.n	17e1e <.bad_return>
   17e0c:	4684      	mov	ip, r0
   17e0e:	480b      	ldr	r0, [pc, #44]	; (17e3c <.direct_call+0xa>)
   17e10:	f000 f80e 	bl	17e30 <.call_function>
   17e14:	2800      	cmp	r0, #0
   17e16:	d002      	beq.n	17e1e <.bad_return>
   17e18:	4907      	ldr	r1, [pc, #28]	; (17e38 <.direct_call+0x6>)
   17e1a:	6008      	str	r0, [r1, #0]
   17e1c:	e004      	b.n	17e28 <.already_initialized>

00017e1e <.bad_return>:
   17e1e:	bc0f      	pop	{r0, r1, r2, r3}
   17e20:	4807      	ldr	r0, [pc, #28]	; (17e40 <.direct_call+0xe>)
   17e22:	469e      	mov	lr, r3
   17e24:	bc08      	pop	{r3}
   17e26:	4770      	bx	lr

00017e28 <.already_initialized>:
   17e28:	4684      	mov	ip, r0
   17e2a:	bc0f      	pop	{r0, r1, r2, r3}
   17e2c:	469e      	mov	lr, r3
   17e2e:	bc08      	pop	{r3}

00017e30 <.call_function>:
   17e30:	4760      	bx	ip

00017e32 <.direct_call>:
   17e32:	469c      	mov	ip, r3
   17e34:	bc08      	pop	{r3}
   17e36:	4760      	bx	ip
   17e38:	000244e4 	.word	0x000244e4
   17e3c:	00017de4 	.word	0x00017de4
   17e40:	ffffffff 	.word	0xffffffff

00017e44 <function_name>:
   17e44:	656a624f 	.word	0x656a624f
   17e48:	65477463 	.word	0x65477463
   17e4c:	666e4974 	.word	0x666e4974
   17e50:	006f      	.short	0x006f
   17e52:	bf00      	nop

00017e54 <ObjectGetInfo>:
   17e54:	b408      	push	{r3}
   17e56:	4b0f      	ldr	r3, [pc, #60]	; (17e94 <.direct_call+0x6>)
   17e58:	681b      	ldr	r3, [r3, #0]
   17e5a:	2b00      	cmp	r3, #0
   17e5c:	d117      	bne.n	17e8e <.direct_call>
   17e5e:	b507      	push	{r0, r1, r2, lr}
   17e60:	f000 fb08 	bl	18474 <wrapperlib_open>
   17e64:	2800      	cmp	r0, #0
   17e66:	d008      	beq.n	17e7a <.bad_return>
   17e68:	4684      	mov	ip, r0
   17e6a:	480b      	ldr	r0, [pc, #44]	; (17e98 <.direct_call+0xa>)
   17e6c:	f000 f80e 	bl	17e8c <.call_function>
   17e70:	2800      	cmp	r0, #0
   17e72:	d002      	beq.n	17e7a <.bad_return>
   17e74:	4907      	ldr	r1, [pc, #28]	; (17e94 <.direct_call+0x6>)
   17e76:	6008      	str	r0, [r1, #0]
   17e78:	e004      	b.n	17e84 <.already_initialized>

00017e7a <.bad_return>:
   17e7a:	bc0f      	pop	{r0, r1, r2, r3}
   17e7c:	4807      	ldr	r0, [pc, #28]	; (17e9c <.direct_call+0xe>)
   17e7e:	469e      	mov	lr, r3
   17e80:	bc08      	pop	{r3}
   17e82:	4770      	bx	lr

00017e84 <.already_initialized>:
   17e84:	4684      	mov	ip, r0
   17e86:	bc0f      	pop	{r0, r1, r2, r3}
   17e88:	469e      	mov	lr, r3
   17e8a:	bc08      	pop	{r3}

00017e8c <.call_function>:
   17e8c:	4760      	bx	ip

00017e8e <.direct_call>:
   17e8e:	469c      	mov	ip, r3
   17e90:	bc08      	pop	{r3}
   17e92:	4760      	bx	ip
   17e94:	000244e8 	.word	0x000244e8
   17e98:	00017e44 	.word	0x00017e44
   17e9c:	ffffffff 	.word	0xffffffff

00017ea0 <function_name>:
   17ea0:	65676150 	.word	0x65676150
   17ea4:	6f6c6c41 	.word	0x6f6c6c41
   17ea8:	0063      	.short	0x0063
   17eaa:	bf00      	nop

00017eac <PageAlloc>:
   17eac:	b408      	push	{r3}
   17eae:	4b0f      	ldr	r3, [pc, #60]	; (17eec <.direct_call+0x6>)
   17eb0:	681b      	ldr	r3, [r3, #0]
   17eb2:	2b00      	cmp	r3, #0
   17eb4:	d117      	bne.n	17ee6 <.direct_call>
   17eb6:	b507      	push	{r0, r1, r2, lr}
   17eb8:	f000 fadc 	bl	18474 <wrapperlib_open>
   17ebc:	2800      	cmp	r0, #0
   17ebe:	d008      	beq.n	17ed2 <.bad_return>
   17ec0:	4684      	mov	ip, r0
   17ec2:	480b      	ldr	r0, [pc, #44]	; (17ef0 <.direct_call+0xa>)
   17ec4:	f000 f80e 	bl	17ee4 <.call_function>
   17ec8:	2800      	cmp	r0, #0
   17eca:	d002      	beq.n	17ed2 <.bad_return>
   17ecc:	4907      	ldr	r1, [pc, #28]	; (17eec <.direct_call+0x6>)
   17ece:	6008      	str	r0, [r1, #0]
   17ed0:	e004      	b.n	17edc <.already_initialized>

00017ed2 <.bad_return>:
   17ed2:	bc0f      	pop	{r0, r1, r2, r3}
   17ed4:	2000      	movs	r0, #0
   17ed6:	469e      	mov	lr, r3
   17ed8:	bc08      	pop	{r3}
   17eda:	4770      	bx	lr

00017edc <.already_initialized>:
   17edc:	4684      	mov	ip, r0
   17ede:	bc0f      	pop	{r0, r1, r2, r3}
   17ee0:	469e      	mov	lr, r3
   17ee2:	bc08      	pop	{r3}

00017ee4 <.call_function>:
   17ee4:	4760      	bx	ip

00017ee6 <.direct_call>:
   17ee6:	469c      	mov	ip, r3
   17ee8:	bc08      	pop	{r3}
   17eea:	4760      	bx	ip
   17eec:	000244ec 	.word	0x000244ec
   17ef0:	00017ea0 	.word	0x00017ea0

00017ef4 <function_name>:
   17ef4:	65676150 	.word	0x65676150
   17ef8:	65657246 	.word	0x65657246
   17efc:	00          	.byte	0x00
   17efd:	00          	.byte	0x00
   17efe:	bf00      	nop

00017f00 <PageFree>:
   17f00:	b408      	push	{r3}
   17f02:	4b0f      	ldr	r3, [pc, #60]	; (17f40 <.direct_call+0x6>)
   17f04:	681b      	ldr	r3, [r3, #0]
   17f06:	2b00      	cmp	r3, #0
   17f08:	d117      	bne.n	17f3a <.direct_call>
   17f0a:	b507      	push	{r0, r1, r2, lr}
   17f0c:	f000 fab2 	bl	18474 <wrapperlib_open>
   17f10:	2800      	cmp	r0, #0
   17f12:	d008      	beq.n	17f26 <.bad_return>
   17f14:	4684      	mov	ip, r0
   17f16:	480b      	ldr	r0, [pc, #44]	; (17f44 <.direct_call+0xa>)
   17f18:	f000 f80e 	bl	17f38 <.call_function>
   17f1c:	2800      	cmp	r0, #0
   17f1e:	d002      	beq.n	17f26 <.bad_return>
   17f20:	4907      	ldr	r1, [pc, #28]	; (17f40 <.direct_call+0x6>)
   17f22:	6008      	str	r0, [r1, #0]
   17f24:	e004      	b.n	17f30 <.already_initialized>

00017f26 <.bad_return>:
   17f26:	bc0f      	pop	{r0, r1, r2, r3}
   17f28:	4807      	ldr	r0, [pc, #28]	; (17f48 <.direct_call+0xe>)
   17f2a:	469e      	mov	lr, r3
   17f2c:	bc08      	pop	{r3}
   17f2e:	4770      	bx	lr

00017f30 <.already_initialized>:
   17f30:	4684      	mov	ip, r0
   17f32:	bc0f      	pop	{r0, r1, r2, r3}
   17f34:	469e      	mov	lr, r3
   17f36:	bc08      	pop	{r3}

00017f38 <.call_function>:
   17f38:	4760      	bx	ip

00017f3a <.direct_call>:
   17f3a:	469c      	mov	ip, r3
   17f3c:	bc08      	pop	{r3}
   17f3e:	4760      	bx	ip
   17f40:	000244f0 	.word	0x000244f0
   17f44:	00017ef4 	.word	0x00017ef4
   17f48:	fffffffc 	.word	0xfffffffc

00017f4c <function_name>:
   17f4c:	73726966 	.word	0x73726966
   17f50:	6e695f74 	.word	0x6e695f74
   17f54:	7469      	.short	0x7469
	...

00017f58 <first_init>:
   17f58:	b408      	push	{r3}
   17f5a:	4b0f      	ldr	r3, [pc, #60]	; (17f98 <.direct_call+0x6>)
   17f5c:	681b      	ldr	r3, [r3, #0]
   17f5e:	2b00      	cmp	r3, #0
   17f60:	d117      	bne.n	17f92 <.direct_call>
   17f62:	b507      	push	{r0, r1, r2, lr}
   17f64:	f000 fa86 	bl	18474 <wrapperlib_open>
   17f68:	2800      	cmp	r0, #0
   17f6a:	d008      	beq.n	17f7e <.bad_return>
   17f6c:	4684      	mov	ip, r0
   17f6e:	480b      	ldr	r0, [pc, #44]	; (17f9c <.direct_call+0xa>)
   17f70:	f000 f80e 	bl	17f90 <.call_function>
   17f74:	2800      	cmp	r0, #0
   17f76:	d002      	beq.n	17f7e <.bad_return>
   17f78:	4907      	ldr	r1, [pc, #28]	; (17f98 <.direct_call+0x6>)
   17f7a:	6008      	str	r0, [r1, #0]
   17f7c:	e004      	b.n	17f88 <.already_initialized>

00017f7e <.bad_return>:
   17f7e:	bc0f      	pop	{r0, r1, r2, r3}
   17f80:	4807      	ldr	r0, [pc, #28]	; (17fa0 <.direct_call+0xe>)
   17f82:	469e      	mov	lr, r3
   17f84:	bc08      	pop	{r3}
   17f86:	4770      	bx	lr

00017f88 <.already_initialized>:
   17f88:	4684      	mov	ip, r0
   17f8a:	bc0f      	pop	{r0, r1, r2, r3}
   17f8c:	469e      	mov	lr, r3
   17f8e:	bc08      	pop	{r3}

00017f90 <.call_function>:
   17f90:	4760      	bx	ip

00017f92 <.direct_call>:
   17f92:	469c      	mov	ip, r3
   17f94:	bc08      	pop	{r3}
   17f96:	4760      	bx	ip
   17f98:	000244f4 	.word	0x000244f4
   17f9c:	00017f4c 	.word	0x00017f4c
   17fa0:	ffffffff 	.word	0xffffffff

00017fa4 <function_name>:
   17fa4:	5f7a6172 	.word	0x5f7a6172
   17fa8:	74696e69 	.word	0x74696e69
   17fac:	00          	.byte	0x00
   17fad:	00          	.byte	0x00
   17fae:	bf00      	nop

00017fb0 <raz_init>:
   17fb0:	b408      	push	{r3}
   17fb2:	4b0f      	ldr	r3, [pc, #60]	; (17ff0 <.direct_call+0x6>)
   17fb4:	681b      	ldr	r3, [r3, #0]
   17fb6:	2b00      	cmp	r3, #0
   17fb8:	d117      	bne.n	17fea <.direct_call>
   17fba:	b507      	push	{r0, r1, r2, lr}
   17fbc:	f000 fa5a 	bl	18474 <wrapperlib_open>
   17fc0:	2800      	cmp	r0, #0
   17fc2:	d008      	beq.n	17fd6 <.bad_return>
   17fc4:	4684      	mov	ip, r0
   17fc6:	480b      	ldr	r0, [pc, #44]	; (17ff4 <.direct_call+0xa>)
   17fc8:	f000 f80e 	bl	17fe8 <.call_function>
   17fcc:	2800      	cmp	r0, #0
   17fce:	d002      	beq.n	17fd6 <.bad_return>
   17fd0:	4907      	ldr	r1, [pc, #28]	; (17ff0 <.direct_call+0x6>)
   17fd2:	6008      	str	r0, [r1, #0]
   17fd4:	e004      	b.n	17fe0 <.already_initialized>

00017fd6 <.bad_return>:
   17fd6:	bc0f      	pop	{r0, r1, r2, r3}
   17fd8:	4807      	ldr	r0, [pc, #28]	; (17ff8 <.direct_call+0xe>)
   17fda:	469e      	mov	lr, r3
   17fdc:	bc08      	pop	{r3}
   17fde:	4770      	bx	lr

00017fe0 <.already_initialized>:
   17fe0:	4684      	mov	ip, r0
   17fe2:	bc0f      	pop	{r0, r1, r2, r3}
   17fe4:	469e      	mov	lr, r3
   17fe6:	bc08      	pop	{r3}

00017fe8 <.call_function>:
   17fe8:	4760      	bx	ip

00017fea <.direct_call>:
   17fea:	469c      	mov	ip, r3
   17fec:	bc08      	pop	{r3}
   17fee:	4760      	bx	ip
   17ff0:	000244f8 	.word	0x000244f8
   17ff4:	00017fa4 	.word	0x00017fa4
   17ff8:	ffffffff 	.word	0xffffffff

00017ffc <function_name>:
   17ffc:	5f554d45 	.word	0x5f554d45
   18000:	70736944 	.word	0x70736944
   18004:	4679616c 	.word	0x4679616c
   18008:	65746f6f 	.word	0x65746f6f
   1800c:	0072      	.short	0x0072
   1800e:	bf00      	nop

00018010 <DisplayFooter>:
   18010:	b408      	push	{r3}
   18012:	4b0f      	ldr	r3, [pc, #60]	; (18050 <.direct_call+0x6>)
   18014:	681b      	ldr	r3, [r3, #0]
   18016:	2b00      	cmp	r3, #0
   18018:	d117      	bne.n	1804a <.direct_call>
   1801a:	b507      	push	{r0, r1, r2, lr}
   1801c:	f000 f94e 	bl	182bc <emulationlib_open>
   18020:	2800      	cmp	r0, #0
   18022:	d008      	beq.n	18036 <.bad_return>
   18024:	4684      	mov	ip, r0
   18026:	480b      	ldr	r0, [pc, #44]	; (18054 <.direct_call+0xa>)
   18028:	f000 f80e 	bl	18048 <.call_function>
   1802c:	2800      	cmp	r0, #0
   1802e:	d002      	beq.n	18036 <.bad_return>
   18030:	4907      	ldr	r1, [pc, #28]	; (18050 <.direct_call+0x6>)
   18032:	6008      	str	r0, [r1, #0]
   18034:	e004      	b.n	18040 <.already_initialized>

00018036 <.bad_return>:
   18036:	bc0f      	pop	{r0, r1, r2, r3}
   18038:	4807      	ldr	r0, [pc, #28]	; (18058 <.direct_call+0xe>)
   1803a:	469e      	mov	lr, r3
   1803c:	bc08      	pop	{r3}
   1803e:	4770      	bx	lr

00018040 <.already_initialized>:
   18040:	4684      	mov	ip, r0
   18042:	bc0f      	pop	{r0, r1, r2, r3}
   18044:	469e      	mov	lr, r3
   18046:	bc08      	pop	{r3}

00018048 <.call_function>:
   18048:	4760      	bx	ip

0001804a <.direct_call>:
   1804a:	469c      	mov	ip, r3
   1804c:	bc08      	pop	{r3}
   1804e:	4760      	bx	ip
   18050:	000244fc 	.word	0x000244fc
   18054:	00017ffc 	.word	0x00017ffc
   18058:	ffffffff 	.word	0xffffffff

0001805c <function_name>:
   1805c:	5f554d45 	.word	0x5f554d45
   18060:	70736944 	.word	0x70736944
   18064:	4879616c 	.word	0x4879616c
   18068:	65646165 	.word	0x65646165
   1806c:	0072      	.short	0x0072
   1806e:	bf00      	nop

00018070 <DisplayHeader>:
   18070:	b408      	push	{r3}
   18072:	4b0f      	ldr	r3, [pc, #60]	; (180b0 <.direct_call+0x6>)
   18074:	681b      	ldr	r3, [r3, #0]
   18076:	2b00      	cmp	r3, #0
   18078:	d117      	bne.n	180aa <.direct_call>
   1807a:	b507      	push	{r0, r1, r2, lr}
   1807c:	f000 f91e 	bl	182bc <emulationlib_open>
   18080:	2800      	cmp	r0, #0
   18082:	d008      	beq.n	18096 <.bad_return>
   18084:	4684      	mov	ip, r0
   18086:	480b      	ldr	r0, [pc, #44]	; (180b4 <.direct_call+0xa>)
   18088:	f000 f80e 	bl	180a8 <.call_function>
   1808c:	2800      	cmp	r0, #0
   1808e:	d002      	beq.n	18096 <.bad_return>
   18090:	4907      	ldr	r1, [pc, #28]	; (180b0 <.direct_call+0x6>)
   18092:	6008      	str	r0, [r1, #0]
   18094:	e004      	b.n	180a0 <.already_initialized>

00018096 <.bad_return>:
   18096:	bc0f      	pop	{r0, r1, r2, r3}
   18098:	4807      	ldr	r0, [pc, #28]	; (180b8 <.direct_call+0xe>)
   1809a:	469e      	mov	lr, r3
   1809c:	bc08      	pop	{r3}
   1809e:	4770      	bx	lr

000180a0 <.already_initialized>:
   180a0:	4684      	mov	ip, r0
   180a2:	bc0f      	pop	{r0, r1, r2, r3}
   180a4:	469e      	mov	lr, r3
   180a6:	bc08      	pop	{r3}

000180a8 <.call_function>:
   180a8:	4760      	bx	ip

000180aa <.direct_call>:
   180aa:	469c      	mov	ip, r3
   180ac:	bc08      	pop	{r3}
   180ae:	4760      	bx	ip
   180b0:	00024500 	.word	0x00024500
   180b4:	0001805c 	.word	0x0001805c
   180b8:	ffffffff 	.word	0xffffffff

000180bc <function_name>:
   180bc:	5f554d45 	.word	0x5f554d45
   180c0:	70736944 	.word	0x70736944
   180c4:	4c79616c 	.word	0x4c79616c
   180c8:	00736465 	.word	0x00736465

000180cc <DisplayLeds>:
   180cc:	b408      	push	{r3}
   180ce:	4b0f      	ldr	r3, [pc, #60]	; (1810c <.direct_call+0x6>)
   180d0:	681b      	ldr	r3, [r3, #0]
   180d2:	2b00      	cmp	r3, #0
   180d4:	d117      	bne.n	18106 <.direct_call>
   180d6:	b507      	push	{r0, r1, r2, lr}
   180d8:	f000 f8f0 	bl	182bc <emulationlib_open>
   180dc:	2800      	cmp	r0, #0
   180de:	d008      	beq.n	180f2 <.bad_return>
   180e0:	4684      	mov	ip, r0
   180e2:	480b      	ldr	r0, [pc, #44]	; (18110 <.direct_call+0xa>)
   180e4:	f000 f80e 	bl	18104 <.call_function>
   180e8:	2800      	cmp	r0, #0
   180ea:	d002      	beq.n	180f2 <.bad_return>
   180ec:	4907      	ldr	r1, [pc, #28]	; (1810c <.direct_call+0x6>)
   180ee:	6008      	str	r0, [r1, #0]
   180f0:	e004      	b.n	180fc <.already_initialized>

000180f2 <.bad_return>:
   180f2:	bc0f      	pop	{r0, r1, r2, r3}
   180f4:	4807      	ldr	r0, [pc, #28]	; (18114 <.direct_call+0xe>)
   180f6:	469e      	mov	lr, r3
   180f8:	bc08      	pop	{r3}
   180fa:	4770      	bx	lr

000180fc <.already_initialized>:
   180fc:	4684      	mov	ip, r0
   180fe:	bc0f      	pop	{r0, r1, r2, r3}
   18100:	469e      	mov	lr, r3
   18102:	bc08      	pop	{r3}

00018104 <.call_function>:
   18104:	4760      	bx	ip

00018106 <.direct_call>:
   18106:	469c      	mov	ip, r3
   18108:	bc08      	pop	{r3}
   1810a:	4760      	bx	ip
   1810c:	00024504 	.word	0x00024504
   18110:	000180bc 	.word	0x000180bc
   18114:	ffffffff 	.word	0xffffffff

00018118 <function_name>:
   18118:	5f554d45 	.word	0x5f554d45
   1811c:	6f467349 	.word	0x6f467349
   18120:	7265746f 	.word	0x7265746f
   18124:	00          	.byte	0x00
   18125:	00          	.byte	0x00
   18126:	bf00      	nop

00018128 <IsFooter>:
   18128:	b408      	push	{r3}
   1812a:	4b0f      	ldr	r3, [pc, #60]	; (18168 <.direct_call+0x6>)
   1812c:	681b      	ldr	r3, [r3, #0]
   1812e:	2b00      	cmp	r3, #0
   18130:	d117      	bne.n	18162 <.direct_call>
   18132:	b507      	push	{r0, r1, r2, lr}
   18134:	f000 f8c2 	bl	182bc <emulationlib_open>
   18138:	2800      	cmp	r0, #0
   1813a:	d008      	beq.n	1814e <.bad_return>
   1813c:	4684      	mov	ip, r0
   1813e:	480b      	ldr	r0, [pc, #44]	; (1816c <.direct_call+0xa>)
   18140:	f000 f80e 	bl	18160 <.call_function>
   18144:	2800      	cmp	r0, #0
   18146:	d002      	beq.n	1814e <.bad_return>
   18148:	4907      	ldr	r1, [pc, #28]	; (18168 <.direct_call+0x6>)
   1814a:	6008      	str	r0, [r1, #0]
   1814c:	e004      	b.n	18158 <.already_initialized>

0001814e <.bad_return>:
   1814e:	bc0f      	pop	{r0, r1, r2, r3}
   18150:	4807      	ldr	r0, [pc, #28]	; (18170 <.direct_call+0xe>)
   18152:	469e      	mov	lr, r3
   18154:	bc08      	pop	{r3}
   18156:	4770      	bx	lr

00018158 <.already_initialized>:
   18158:	4684      	mov	ip, r0
   1815a:	bc0f      	pop	{r0, r1, r2, r3}
   1815c:	469e      	mov	lr, r3
   1815e:	bc08      	pop	{r3}

00018160 <.call_function>:
   18160:	4760      	bx	ip

00018162 <.direct_call>:
   18162:	469c      	mov	ip, r3
   18164:	bc08      	pop	{r3}
   18166:	4760      	bx	ip
   18168:	00024508 	.word	0x00024508
   1816c:	00018118 	.word	0x00018118
   18170:	ffffffff 	.word	0xffffffff

00018174 <function_name>:
   18174:	5f554d45 	.word	0x5f554d45
   18178:	65487349 	.word	0x65487349
   1817c:	72656461 	.word	0x72656461
   18180:	69746341 	.word	0x69746341
   18184:	65746176 	.word	0x65746176
   18188:	0064      	.short	0x0064
   1818a:	bf00      	nop

0001818c <IsHeader>:
   1818c:	b408      	push	{r3}
   1818e:	4b0f      	ldr	r3, [pc, #60]	; (181cc <.direct_call+0x6>)
   18190:	681b      	ldr	r3, [r3, #0]
   18192:	2b00      	cmp	r3, #0
   18194:	d117      	bne.n	181c6 <.direct_call>
   18196:	b507      	push	{r0, r1, r2, lr}
   18198:	f000 f890 	bl	182bc <emulationlib_open>
   1819c:	2800      	cmp	r0, #0
   1819e:	d008      	beq.n	181b2 <.bad_return>
   181a0:	4684      	mov	ip, r0
   181a2:	480b      	ldr	r0, [pc, #44]	; (181d0 <.direct_call+0xa>)
   181a4:	f000 f80e 	bl	181c4 <.call_function>
   181a8:	2800      	cmp	r0, #0
   181aa:	d002      	beq.n	181b2 <.bad_return>
   181ac:	4907      	ldr	r1, [pc, #28]	; (181cc <.direct_call+0x6>)
   181ae:	6008      	str	r0, [r1, #0]
   181b0:	e004      	b.n	181bc <.already_initialized>

000181b2 <.bad_return>:
   181b2:	bc0f      	pop	{r0, r1, r2, r3}
   181b4:	4807      	ldr	r0, [pc, #28]	; (181d4 <.direct_call+0xe>)
   181b6:	469e      	mov	lr, r3
   181b8:	bc08      	pop	{r3}
   181ba:	4770      	bx	lr

000181bc <.already_initialized>:
   181bc:	4684      	mov	ip, r0
   181be:	bc0f      	pop	{r0, r1, r2, r3}
   181c0:	469e      	mov	lr, r3
   181c2:	bc08      	pop	{r3}

000181c4 <.call_function>:
   181c4:	4760      	bx	ip

000181c6 <.direct_call>:
   181c6:	469c      	mov	ip, r3
   181c8:	bc08      	pop	{r3}
   181ca:	4760      	bx	ip
   181cc:	0002450c 	.word	0x0002450c
   181d0:	00018174 	.word	0x00018174
   181d4:	ffffffff 	.word	0xffffffff

000181d8 <function_name>:
   181d8:	5f554d45 	.word	0x5f554d45
   181dc:	696c6554 	.word	0x696c6554
   181e0:	455f6d75 	.word	0x455f6d75
   181e4:	00746978 	.word	0x00746978

000181e8 <Telium_Exit>:
   181e8:	b408      	push	{r3}
   181ea:	4b0f      	ldr	r3, [pc, #60]	; (18228 <.direct_call+0x6>)
   181ec:	681b      	ldr	r3, [r3, #0]
   181ee:	2b00      	cmp	r3, #0
   181f0:	d117      	bne.n	18222 <.direct_call>
   181f2:	b507      	push	{r0, r1, r2, lr}
   181f4:	f000 f862 	bl	182bc <emulationlib_open>
   181f8:	2800      	cmp	r0, #0
   181fa:	d008      	beq.n	1820e <.bad_return>
   181fc:	4684      	mov	ip, r0
   181fe:	480b      	ldr	r0, [pc, #44]	; (1822c <.direct_call+0xa>)
   18200:	f000 f80e 	bl	18220 <.call_function>
   18204:	2800      	cmp	r0, #0
   18206:	d002      	beq.n	1820e <.bad_return>
   18208:	4907      	ldr	r1, [pc, #28]	; (18228 <.direct_call+0x6>)
   1820a:	6008      	str	r0, [r1, #0]
   1820c:	e004      	b.n	18218 <.already_initialized>

0001820e <.bad_return>:
   1820e:	bc0f      	pop	{r0, r1, r2, r3}
   18210:	4807      	ldr	r0, [pc, #28]	; (18230 <.direct_call+0xe>)
   18212:	469e      	mov	lr, r3
   18214:	bc08      	pop	{r3}
   18216:	4770      	bx	lr

00018218 <.already_initialized>:
   18218:	4684      	mov	ip, r0
   1821a:	bc0f      	pop	{r0, r1, r2, r3}
   1821c:	469e      	mov	lr, r3
   1821e:	bc08      	pop	{r3}

00018220 <.call_function>:
   18220:	4760      	bx	ip

00018222 <.direct_call>:
   18222:	469c      	mov	ip, r3
   18224:	bc08      	pop	{r3}
   18226:	4760      	bx	ip
   18228:	00024510 	.word	0x00024510
   1822c:	000181d8 	.word	0x000181d8
   18230:	ffffffff 	.word	0xffffffff

00018234 <function_name>:
   18234:	5f554d45 	.word	0x5f554d45
   18238:	6f6c7075 	.word	0x6f6c7075
   1823c:	645f6461 	.word	0x645f6461
   18240:	6e676169 	.word	0x6e676169
   18244:	6974736f 	.word	0x6974736f
   18248:	78745f63 	.word	0x78745f63
   1824c:	0074      	.short	0x0074
   1824e:	bf00      	nop

00018250 <upload_diagnostic_txt>:
   18250:	b408      	push	{r3}
   18252:	4b0f      	ldr	r3, [pc, #60]	; (18290 <.direct_call+0x6>)
   18254:	681b      	ldr	r3, [r3, #0]
   18256:	2b00      	cmp	r3, #0
   18258:	d117      	bne.n	1828a <.direct_call>
   1825a:	b507      	push	{r0, r1, r2, lr}
   1825c:	f000 f82e 	bl	182bc <emulationlib_open>
   18260:	2800      	cmp	r0, #0
   18262:	d008      	beq.n	18276 <.bad_return>
   18264:	4684      	mov	ip, r0
   18266:	480b      	ldr	r0, [pc, #44]	; (18294 <.direct_call+0xa>)
   18268:	f000 f80e 	bl	18288 <.call_function>
   1826c:	2800      	cmp	r0, #0
   1826e:	d002      	beq.n	18276 <.bad_return>
   18270:	4907      	ldr	r1, [pc, #28]	; (18290 <.direct_call+0x6>)
   18272:	6008      	str	r0, [r1, #0]
   18274:	e004      	b.n	18280 <.already_initialized>

00018276 <.bad_return>:
   18276:	bc0f      	pop	{r0, r1, r2, r3}
   18278:	4807      	ldr	r0, [pc, #28]	; (18298 <.direct_call+0xe>)
   1827a:	469e      	mov	lr, r3
   1827c:	bc08      	pop	{r3}
   1827e:	4770      	bx	lr

00018280 <.already_initialized>:
   18280:	4684      	mov	ip, r0
   18282:	bc0f      	pop	{r0, r1, r2, r3}
   18284:	469e      	mov	lr, r3
   18286:	bc08      	pop	{r3}

00018288 <.call_function>:
   18288:	4760      	bx	ip

0001828a <.direct_call>:
   1828a:	469c      	mov	ip, r3
   1828c:	bc08      	pop	{r3}
   1828e:	4760      	bx	ip
   18290:	00024514 	.word	0x00024514
   18294:	00018234 	.word	0x00018234
   18298:	ffffffff 	.word	0xffffffff

0001829c <GetProcAddressEmulation>:
   1829c:	4b05      	ldr	r3, [pc, #20]	; (182b4 <GetProcAddressEmulation+0x18>)
   1829e:	4a06      	ldr	r2, [pc, #24]	; (182b8 <GetProcAddressEmulation+0x1c>)
   182a0:	447b      	add	r3, pc
   182a2:	4601      	mov	r1, r0
   182a4:	589b      	ldr	r3, [r3, r2]
   182a6:	6818      	ldr	r0, [r3, #0]
   182a8:	b110      	cbz	r0, 182b0 <GetProcAddressEmulation+0x14>
   182aa:	b109      	cbz	r1, 182b0 <GetProcAddressEmulation+0x14>
   182ac:	f000 be71 	b.w	18f92 <OSL_Dll_GetSymbolByName>
   182b0:	2000      	movs	r0, #0
   182b2:	4770      	bx	lr
   182b4:	0000be74 	.word	0x0000be74
   182b8:	000000d8 	.word	0x000000d8

000182bc <emulationlib_open>:
   182bc:	b538      	push	{r3, r4, r5, lr}
   182be:	4c09      	ldr	r4, [pc, #36]	; (182e4 <emulationlib_open+0x28>)
   182c0:	4b09      	ldr	r3, [pc, #36]	; (182e8 <emulationlib_open+0x2c>)
   182c2:	447c      	add	r4, pc
   182c4:	58e5      	ldr	r5, [r4, r3]
   182c6:	682b      	ldr	r3, [r5, #0]
   182c8:	b953      	cbnz	r3, 182e0 <emulationlib_open+0x24>
   182ca:	f64a 609b 	movw	r0, #44699	; 0xae9b
   182ce:	f000 fe90 	bl	18ff2 <OSL_Dll_OpenByAppliType>
   182d2:	4b06      	ldr	r3, [pc, #24]	; (182ec <emulationlib_open+0x30>)
   182d4:	58e3      	ldr	r3, [r4, r3]
   182d6:	6018      	str	r0, [r3, #0]
   182d8:	b110      	cbz	r0, 182e0 <emulationlib_open+0x24>
   182da:	4b05      	ldr	r3, [pc, #20]	; (182f0 <emulationlib_open+0x34>)
   182dc:	58e3      	ldr	r3, [r4, r3]
   182de:	602b      	str	r3, [r5, #0]
   182e0:	6828      	ldr	r0, [r5, #0]
   182e2:	bd38      	pop	{r3, r4, r5, pc}
   182e4:	0000be52 	.word	0x0000be52
   182e8:	000000d0 	.word	0x000000d0
   182ec:	000000d8 	.word	0x000000d8
   182f0:	000000ac 	.word	0x000000ac

000182f4 <emulationlib_close>:
   182f4:	4b03      	ldr	r3, [pc, #12]	; (18304 <emulationlib_close+0x10>)
   182f6:	4a04      	ldr	r2, [pc, #16]	; (18308 <emulationlib_close+0x14>)
   182f8:	447b      	add	r3, pc
   182fa:	589b      	ldr	r3, [r3, r2]
   182fc:	6818      	ldr	r0, [r3, #0]
   182fe:	f000 be38 	b.w	18f72 <OSL_Dll_Close>
   18302:	bf00      	nop
   18304:	0000be1c 	.word	0x0000be1c
   18308:	000000d8 	.word	0x000000d8

0001830c <GetProcAddressExtens>:
   1830c:	4b05      	ldr	r3, [pc, #20]	; (18324 <GetProcAddressExtens+0x18>)
   1830e:	4a06      	ldr	r2, [pc, #24]	; (18328 <GetProcAddressExtens+0x1c>)
   18310:	447b      	add	r3, pc
   18312:	4601      	mov	r1, r0
   18314:	589b      	ldr	r3, [r3, r2]
   18316:	6818      	ldr	r0, [r3, #0]
   18318:	b110      	cbz	r0, 18320 <GetProcAddressExtens+0x14>
   1831a:	b109      	cbz	r1, 18320 <GetProcAddressExtens+0x14>
   1831c:	f000 be39 	b.w	18f92 <OSL_Dll_GetSymbolByName>
   18320:	2000      	movs	r0, #0
   18322:	4770      	bx	lr
   18324:	0000be04 	.word	0x0000be04
   18328:	000000c8 	.word	0x000000c8

0001832c <extenslib_open>:
   1832c:	b538      	push	{r3, r4, r5, lr}
   1832e:	4c0b      	ldr	r4, [pc, #44]	; (1835c <extenslib_open+0x30>)
   18330:	4b0b      	ldr	r3, [pc, #44]	; (18360 <extenslib_open+0x34>)
   18332:	447c      	add	r4, pc
   18334:	58e5      	ldr	r5, [r4, r3]
   18336:	682b      	ldr	r3, [r5, #0]
   18338:	b96b      	cbnz	r3, 18356 <extenslib_open+0x2a>
   1833a:	2001      	movs	r0, #1
   1833c:	f000 fe59 	bl	18ff2 <OSL_Dll_OpenByAppliType>
   18340:	4b08      	ldr	r3, [pc, #32]	; (18364 <extenslib_open+0x38>)
   18342:	58e3      	ldr	r3, [r4, r3]
   18344:	6018      	str	r0, [r3, #0]
   18346:	b130      	cbz	r0, 18356 <extenslib_open+0x2a>
   18348:	4b07      	ldr	r3, [pc, #28]	; (18368 <extenslib_open+0x3c>)
   1834a:	4808      	ldr	r0, [pc, #32]	; (1836c <extenslib_open+0x40>)
   1834c:	58e3      	ldr	r3, [r4, r3]
   1834e:	4478      	add	r0, pc
   18350:	602b      	str	r3, [r5, #0]
   18352:	f7ff ffdb 	bl	1830c <GetProcAddressExtens>
   18356:	6828      	ldr	r0, [r5, #0]
   18358:	bd38      	pop	{r3, r4, r5, pc}
   1835a:	bf00      	nop
   1835c:	0000bde2 	.word	0x0000bde2
   18360:	000000bc 	.word	0x000000bc
   18364:	000000c8 	.word	0x000000c8
   18368:	000000a8 	.word	0x000000a8
   1836c:	000032ba 	.word	0x000032ba

00018370 <extenslib_close>:
   18370:	4b03      	ldr	r3, [pc, #12]	; (18380 <extenslib_close+0x10>)
   18372:	4a04      	ldr	r2, [pc, #16]	; (18384 <extenslib_close+0x14>)
   18374:	447b      	add	r3, pc
   18376:	589b      	ldr	r3, [r3, r2]
   18378:	6818      	ldr	r0, [r3, #0]
   1837a:	f000 bdfa 	b.w	18f72 <OSL_Dll_Close>
   1837e:	bf00      	nop
   18380:	0000bda0 	.word	0x0000bda0
   18384:	000000c8 	.word	0x000000c8

00018388 <Telium_Vfprintf>:
   18388:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1838c:	4680      	mov	r8, r0
   1838e:	460f      	mov	r7, r1
   18390:	4616      	mov	r6, r2
   18392:	f7ff ffcb 	bl	1832c <extenslib_open>
   18396:	4604      	mov	r4, r0
   18398:	b1a8      	cbz	r0, 183c6 <Telium_Vfprintf+0x3e>
   1839a:	4d0c      	ldr	r5, [pc, #48]	; (183cc <Telium_Vfprintf+0x44>)
   1839c:	447d      	add	r5, pc
   1839e:	682b      	ldr	r3, [r5, #0]
   183a0:	b91b      	cbnz	r3, 183aa <Telium_Vfprintf+0x22>
   183a2:	480b      	ldr	r0, [pc, #44]	; (183d0 <Telium_Vfprintf+0x48>)
   183a4:	4478      	add	r0, pc
   183a6:	47a0      	blx	r4
   183a8:	6028      	str	r0, [r5, #0]
   183aa:	4b0a      	ldr	r3, [pc, #40]	; (183d4 <Telium_Vfprintf+0x4c>)
   183ac:	447b      	add	r3, pc
   183ae:	681c      	ldr	r4, [r3, #0]
   183b0:	b12c      	cbz	r4, 183be <Telium_Vfprintf+0x36>
   183b2:	4640      	mov	r0, r8
   183b4:	4639      	mov	r1, r7
   183b6:	4632      	mov	r2, r6
   183b8:	47a0      	blx	r4
   183ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   183be:	f640 3031 	movw	r0, #2865	; 0xb31
   183c2:	f7ff ff11 	bl	181e8 <Telium_Exit>
   183c6:	4620      	mov	r0, r4
   183c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   183cc:	0000c6ec 	.word	0x0000c6ec
   183d0:	0000326c 	.word	0x0000326c
   183d4:	0000c6dc 	.word	0x0000c6dc

000183d8 <GetProcAddressTools>:
   183d8:	4b05      	ldr	r3, [pc, #20]	; (183f0 <GetProcAddressTools+0x18>)
   183da:	4a06      	ldr	r2, [pc, #24]	; (183f4 <GetProcAddressTools+0x1c>)
   183dc:	447b      	add	r3, pc
   183de:	4601      	mov	r1, r0
   183e0:	589b      	ldr	r3, [r3, r2]
   183e2:	6818      	ldr	r0, [r3, #0]
   183e4:	b110      	cbz	r0, 183ec <GetProcAddressTools+0x14>
   183e6:	b109      	cbz	r1, 183ec <GetProcAddressTools+0x14>
   183e8:	f000 bdd3 	b.w	18f92 <OSL_Dll_GetSymbolByName>
   183ec:	2000      	movs	r0, #0
   183ee:	4770      	bx	lr
   183f0:	0000bd38 	.word	0x0000bd38
   183f4:	000000b8 	.word	0x000000b8

000183f8 <toolslib_open>:
   183f8:	b538      	push	{r3, r4, r5, lr}
   183fa:	4c0b      	ldr	r4, [pc, #44]	; (18428 <toolslib_open+0x30>)
   183fc:	4b0b      	ldr	r3, [pc, #44]	; (1842c <toolslib_open+0x34>)
   183fe:	447c      	add	r4, pc
   18400:	58e5      	ldr	r5, [r4, r3]
   18402:	682b      	ldr	r3, [r5, #0]
   18404:	b973      	cbnz	r3, 18424 <toolslib_open+0x2c>
   18406:	f64a 604e 	movw	r0, #44622	; 0xae4e
   1840a:	f000 fdf2 	bl	18ff2 <OSL_Dll_OpenByAppliType>
   1840e:	4b08      	ldr	r3, [pc, #32]	; (18430 <toolslib_open+0x38>)
   18410:	58e3      	ldr	r3, [r4, r3]
   18412:	6018      	str	r0, [r3, #0]
   18414:	b130      	cbz	r0, 18424 <toolslib_open+0x2c>
   18416:	4b07      	ldr	r3, [pc, #28]	; (18434 <toolslib_open+0x3c>)
   18418:	4807      	ldr	r0, [pc, #28]	; (18438 <toolslib_open+0x40>)
   1841a:	58e3      	ldr	r3, [r4, r3]
   1841c:	4478      	add	r0, pc
   1841e:	602b      	str	r3, [r5, #0]
   18420:	f7ff ffda 	bl	183d8 <GetProcAddressTools>
   18424:	6828      	ldr	r0, [r5, #0]
   18426:	bd38      	pop	{r3, r4, r5, pc}
   18428:	0000bd16 	.word	0x0000bd16
   1842c:	00000098 	.word	0x00000098
   18430:	000000b8 	.word	0x000000b8
   18434:	000000cc 	.word	0x000000cc
   18438:	000031ec 	.word	0x000031ec

0001843c <toolslib_close>:
   1843c:	4b03      	ldr	r3, [pc, #12]	; (1844c <toolslib_close+0x10>)
   1843e:	4a04      	ldr	r2, [pc, #16]	; (18450 <toolslib_close+0x14>)
   18440:	447b      	add	r3, pc
   18442:	589b      	ldr	r3, [r3, r2]
   18444:	6818      	ldr	r0, [r3, #0]
   18446:	f000 bd94 	b.w	18f72 <OSL_Dll_Close>
   1844a:	bf00      	nop
   1844c:	0000bcd4 	.word	0x0000bcd4
   18450:	000000b8 	.word	0x000000b8

00018454 <GetProcAddressWrapper>:
   18454:	4b05      	ldr	r3, [pc, #20]	; (1846c <GetProcAddressWrapper+0x18>)
   18456:	4a06      	ldr	r2, [pc, #24]	; (18470 <GetProcAddressWrapper+0x1c>)
   18458:	447b      	add	r3, pc
   1845a:	4601      	mov	r1, r0
   1845c:	589b      	ldr	r3, [r3, r2]
   1845e:	6818      	ldr	r0, [r3, #0]
   18460:	b110      	cbz	r0, 18468 <GetProcAddressWrapper+0x14>
   18462:	b109      	cbz	r1, 18468 <GetProcAddressWrapper+0x14>
   18464:	f000 bd95 	b.w	18f92 <OSL_Dll_GetSymbolByName>
   18468:	2000      	movs	r0, #0
   1846a:	4770      	bx	lr
   1846c:	0000bcbc 	.word	0x0000bcbc
   18470:	000000b0 	.word	0x000000b0

00018474 <wrapperlib_open>:
   18474:	b538      	push	{r3, r4, r5, lr}
   18476:	4c09      	ldr	r4, [pc, #36]	; (1849c <wrapperlib_open+0x28>)
   18478:	4b09      	ldr	r3, [pc, #36]	; (184a0 <wrapperlib_open+0x2c>)
   1847a:	447c      	add	r4, pc
   1847c:	58e5      	ldr	r5, [r4, r3]
   1847e:	682b      	ldr	r3, [r5, #0]
   18480:	b953      	cbnz	r3, 18498 <wrapperlib_open+0x24>
   18482:	f64a 6012 	movw	r0, #44562	; 0xae12
   18486:	f000 fdb4 	bl	18ff2 <OSL_Dll_OpenByAppliType>
   1848a:	4b06      	ldr	r3, [pc, #24]	; (184a4 <wrapperlib_open+0x30>)
   1848c:	58e3      	ldr	r3, [r4, r3]
   1848e:	6018      	str	r0, [r3, #0]
   18490:	b110      	cbz	r0, 18498 <wrapperlib_open+0x24>
   18492:	4b05      	ldr	r3, [pc, #20]	; (184a8 <wrapperlib_open+0x34>)
   18494:	58e3      	ldr	r3, [r4, r3]
   18496:	602b      	str	r3, [r5, #0]
   18498:	6828      	ldr	r0, [r5, #0]
   1849a:	bd38      	pop	{r3, r4, r5, pc}
   1849c:	0000bc9a 	.word	0x0000bc9a
   184a0:	000000c4 	.word	0x000000c4
   184a4:	000000b0 	.word	0x000000b0
   184a8:	000000a4 	.word	0x000000a4

000184ac <wrapperlib_close>:
   184ac:	4b03      	ldr	r3, [pc, #12]	; (184bc <wrapperlib_close+0x10>)
   184ae:	4a04      	ldr	r2, [pc, #16]	; (184c0 <wrapperlib_close+0x14>)
   184b0:	447b      	add	r3, pc
   184b2:	589b      	ldr	r3, [r3, r2]
   184b4:	6818      	ldr	r0, [r3, #0]
   184b6:	f000 bd5c 	b.w	18f72 <OSL_Dll_Close>
   184ba:	bf00      	nop
   184bc:	0000bc64 	.word	0x0000bc64
   184c0:	000000b0 	.word	0x000000b0

000184c4 <GL_Button_Create_Init>:
   184c4:	b40f      	push	{r0, r1, r2, r3}
   184c6:	4805      	ldr	r0, [pc, #20]	; (184dc <GL_Button_Create+0xc>)
   184c8:	2100      	movs	r1, #0
   184ca:	4a05      	ldr	r2, [pc, #20]	; (184e0 <GL_Button_Create+0x10>)
   184cc:	4b05      	ldr	r3, [pc, #20]	; (184e4 <GL_Button_Create+0x14>)
   184ce:	4718      	bx	r3

000184d0 <GL_Button_Create>:
   184d0:	b401      	push	{r0}
   184d2:	4803      	ldr	r0, [pc, #12]	; (184e0 <GL_Button_Create+0x10>)
   184d4:	6800      	ldr	r0, [r0, #0]
   184d6:	4684      	mov	ip, r0
   184d8:	bc01      	pop	{r0}
   184da:	4760      	bx	ip
   184dc:	00002720 	.word	0x00002720
   184e0:	00024520 	.word	0x00024520
   184e4:	00018f3d 	.word	0x00018f3d

000184e8 <GL_Dialog_Choice_Init>:
   184e8:	b40f      	push	{r0, r1, r2, r3}
   184ea:	4805      	ldr	r0, [pc, #20]	; (18500 <GL_Dialog_Choice+0xc>)
   184ec:	2100      	movs	r1, #0
   184ee:	4a05      	ldr	r2, [pc, #20]	; (18504 <GL_Dialog_Choice+0x10>)
   184f0:	4b05      	ldr	r3, [pc, #20]	; (18508 <GL_Dialog_Choice+0x14>)
   184f2:	4718      	bx	r3

000184f4 <GL_Dialog_Choice>:
   184f4:	b401      	push	{r0}
   184f6:	4803      	ldr	r0, [pc, #12]	; (18504 <GL_Dialog_Choice+0x10>)
   184f8:	6800      	ldr	r0, [r0, #0]
   184fa:	4684      	mov	ip, r0
   184fc:	bc01      	pop	{r0}
   184fe:	4760      	bx	ip
   18500:	000027bb 	.word	0x000027bb
   18504:	00024530 	.word	0x00024530
   18508:	00018f3d 	.word	0x00018f3d

0001850c <GL_Dialog_Menu_Init>:
   1850c:	b40f      	push	{r0, r1, r2, r3}
   1850e:	4805      	ldr	r0, [pc, #20]	; (18524 <GL_Dialog_Menu+0xc>)
   18510:	2100      	movs	r1, #0
   18512:	4a05      	ldr	r2, [pc, #20]	; (18528 <GL_Dialog_Menu+0x10>)
   18514:	4b05      	ldr	r3, [pc, #20]	; (1852c <GL_Dialog_Menu+0x14>)
   18516:	4718      	bx	r3

00018518 <GL_Dialog_Menu>:
   18518:	b401      	push	{r0}
   1851a:	4803      	ldr	r0, [pc, #12]	; (18528 <GL_Dialog_Menu+0x10>)
   1851c:	6800      	ldr	r0, [r0, #0]
   1851e:	4684      	mov	ip, r0
   18520:	bc01      	pop	{r0}
   18522:	4760      	bx	ip
   18524:	000027bd 	.word	0x000027bd
   18528:	00024540 	.word	0x00024540
   1852c:	00018f3d 	.word	0x00018f3d

00018530 <GL_Dialog_Message_Init>:
   18530:	b40f      	push	{r0, r1, r2, r3}
   18532:	4805      	ldr	r0, [pc, #20]	; (18548 <GL_Dialog_Message+0xc>)
   18534:	2100      	movs	r1, #0
   18536:	4a05      	ldr	r2, [pc, #20]	; (1854c <GL_Dialog_Message+0x10>)
   18538:	4b05      	ldr	r3, [pc, #20]	; (18550 <GL_Dialog_Message+0x14>)
   1853a:	4718      	bx	r3

0001853c <GL_Dialog_Message>:
   1853c:	b401      	push	{r0}
   1853e:	4803      	ldr	r0, [pc, #12]	; (1854c <GL_Dialog_Message+0x10>)
   18540:	6800      	ldr	r0, [r0, #0]
   18542:	4684      	mov	ip, r0
   18544:	bc01      	pop	{r0}
   18546:	4760      	bx	ip
   18548:	000027b6 	.word	0x000027b6
   1854c:	00024550 	.word	0x00024550
   18550:	00018f3d 	.word	0x00018f3d

00018554 <GL_Dialog_Password_Init>:
   18554:	b40f      	push	{r0, r1, r2, r3}
   18556:	4805      	ldr	r0, [pc, #20]	; (1856c <GL_Dialog_Password+0xc>)
   18558:	2100      	movs	r1, #0
   1855a:	4a05      	ldr	r2, [pc, #20]	; (18570 <GL_Dialog_Password+0x10>)
   1855c:	4b05      	ldr	r3, [pc, #20]	; (18574 <GL_Dialog_Password+0x14>)
   1855e:	4718      	bx	r3

00018560 <GL_Dialog_Password>:
   18560:	b401      	push	{r0}
   18562:	4803      	ldr	r0, [pc, #12]	; (18570 <GL_Dialog_Password+0x10>)
   18564:	6800      	ldr	r0, [r0, #0]
   18566:	4684      	mov	ip, r0
   18568:	bc01      	pop	{r0}
   1856a:	4760      	bx	ip
   1856c:	00002804 	.word	0x00002804
   18570:	00024560 	.word	0x00024560
   18574:	00018f3d 	.word	0x00018f3d

00018578 <GL_Dialog_Progress_Init>:
   18578:	b40f      	push	{r0, r1, r2, r3}
   1857a:	4805      	ldr	r0, [pc, #20]	; (18590 <GL_Dialog_Progress+0xc>)
   1857c:	2100      	movs	r1, #0
   1857e:	4a05      	ldr	r2, [pc, #20]	; (18594 <GL_Dialog_Progress+0x10>)
   18580:	4b05      	ldr	r3, [pc, #20]	; (18598 <GL_Dialog_Progress+0x14>)
   18582:	4718      	bx	r3

00018584 <GL_Dialog_Progress>:
   18584:	b401      	push	{r0}
   18586:	4803      	ldr	r0, [pc, #12]	; (18594 <GL_Dialog_Progress+0x10>)
   18588:	6800      	ldr	r0, [r0, #0]
   1858a:	4684      	mov	ip, r0
   1858c:	bc01      	pop	{r0}
   1858e:	4760      	bx	ip
   18590:	000027df 	.word	0x000027df
   18594:	00024570 	.word	0x00024570
   18598:	00018f3d 	.word	0x00018f3d

0001859c <GL_Dialog_Text_Init>:
   1859c:	b40f      	push	{r0, r1, r2, r3}
   1859e:	4805      	ldr	r0, [pc, #20]	; (185b4 <GL_Dialog_Text+0xc>)
   185a0:	2100      	movs	r1, #0
   185a2:	4a05      	ldr	r2, [pc, #20]	; (185b8 <GL_Dialog_Text+0x10>)
   185a4:	4b05      	ldr	r3, [pc, #20]	; (185bc <GL_Dialog_Text+0x14>)
   185a6:	4718      	bx	r3

000185a8 <GL_Dialog_Text>:
   185a8:	b401      	push	{r0}
   185aa:	4803      	ldr	r0, [pc, #12]	; (185b8 <GL_Dialog_Text+0x10>)
   185ac:	6800      	ldr	r0, [r0, #0]
   185ae:	4684      	mov	ip, r0
   185b0:	bc01      	pop	{r0}
   185b2:	4760      	bx	ip
   185b4:	000027b8 	.word	0x000027b8
   185b8:	00024580 	.word	0x00024580
   185bc:	00018f3d 	.word	0x00018f3d

000185c0 <GL_Dialog_VirtualKeyboard_Init>:
   185c0:	b40f      	push	{r0, r1, r2, r3}
   185c2:	4805      	ldr	r0, [pc, #20]	; (185d8 <GL_Dialog_VirtualKeyboard+0xc>)
   185c4:	2100      	movs	r1, #0
   185c6:	4a05      	ldr	r2, [pc, #20]	; (185dc <GL_Dialog_VirtualKeyboard+0x10>)
   185c8:	4b05      	ldr	r3, [pc, #20]	; (185e0 <GL_Dialog_VirtualKeyboard+0x14>)
   185ca:	4718      	bx	r3

000185cc <GL_Dialog_VirtualKeyboard>:
   185cc:	b401      	push	{r0}
   185ce:	4803      	ldr	r0, [pc, #12]	; (185dc <GL_Dialog_VirtualKeyboard+0x10>)
   185d0:	6800      	ldr	r0, [r0, #0]
   185d2:	4684      	mov	ip, r0
   185d4:	bc01      	pop	{r0}
   185d6:	4760      	bx	ip
   185d8:	000027e0 	.word	0x000027e0
   185dc:	00024590 	.word	0x00024590
   185e0:	00018f3d 	.word	0x00018f3d

000185e4 <GL_Document_Create_Init>:
   185e4:	b40f      	push	{r0, r1, r2, r3}
   185e6:	4805      	ldr	r0, [pc, #20]	; (185fc <GL_Document_Create+0xc>)
   185e8:	2100      	movs	r1, #0
   185ea:	4a05      	ldr	r2, [pc, #20]	; (18600 <GL_Document_Create+0x10>)
   185ec:	4b05      	ldr	r3, [pc, #20]	; (18604 <GL_Document_Create+0x14>)
   185ee:	4718      	bx	r3

000185f0 <GL_Document_Create>:
   185f0:	b401      	push	{r0}
   185f2:	4803      	ldr	r0, [pc, #12]	; (18600 <GL_Document_Create+0x10>)
   185f4:	6800      	ldr	r0, [r0, #0]
   185f6:	4684      	mov	ip, r0
   185f8:	bc01      	pop	{r0}
   185fa:	4760      	bx	ip
   185fc:	000027ed 	.word	0x000027ed
   18600:	000245a0 	.word	0x000245a0
   18604:	00018f3d 	.word	0x00018f3d

00018608 <GL_Document_Print_Init>:
   18608:	b40f      	push	{r0, r1, r2, r3}
   1860a:	4805      	ldr	r0, [pc, #20]	; (18620 <GL_Document_Print+0xc>)
   1860c:	2100      	movs	r1, #0
   1860e:	4a05      	ldr	r2, [pc, #20]	; (18624 <GL_Document_Print+0x10>)
   18610:	4b05      	ldr	r3, [pc, #20]	; (18628 <GL_Document_Print+0x14>)
   18612:	4718      	bx	r3

00018614 <GL_Document_Print>:
   18614:	b401      	push	{r0}
   18616:	4803      	ldr	r0, [pc, #12]	; (18624 <GL_Document_Print+0x10>)
   18618:	6800      	ldr	r0, [r0, #0]
   1861a:	4684      	mov	ip, r0
   1861c:	bc01      	pop	{r0}
   1861e:	4760      	bx	ip
   18620:	000027ee 	.word	0x000027ee
   18624:	000245b0 	.word	0x000245b0
   18628:	00018f3d 	.word	0x00018f3d

0001862c <GL_Drawing_Clear_Init>:
   1862c:	b40f      	push	{r0, r1, r2, r3}
   1862e:	4805      	ldr	r0, [pc, #20]	; (18644 <GL_Drawing_Clear+0xc>)
   18630:	2100      	movs	r1, #0
   18632:	4a05      	ldr	r2, [pc, #20]	; (18648 <GL_Drawing_Clear+0x10>)
   18634:	4b05      	ldr	r3, [pc, #20]	; (1864c <GL_Drawing_Clear+0x14>)
   18636:	4718      	bx	r3

00018638 <GL_Drawing_Clear>:
   18638:	b401      	push	{r0}
   1863a:	4803      	ldr	r0, [pc, #12]	; (18648 <GL_Drawing_Clear+0x10>)
   1863c:	6800      	ldr	r0, [r0, #0]
   1863e:	4684      	mov	ip, r0
   18640:	bc01      	pop	{r0}
   18642:	4760      	bx	ip
   18644:	000027a5 	.word	0x000027a5
   18648:	000245c0 	.word	0x000245c0
   1864c:	00018f3d 	.word	0x00018f3d

00018650 <GL_Drawing_Create_Init>:
   18650:	b40f      	push	{r0, r1, r2, r3}
   18652:	4805      	ldr	r0, [pc, #20]	; (18668 <GL_Drawing_Create+0xc>)
   18654:	2100      	movs	r1, #0
   18656:	4a05      	ldr	r2, [pc, #20]	; (1866c <GL_Drawing_Create+0x10>)
   18658:	4b05      	ldr	r3, [pc, #20]	; (18670 <GL_Drawing_Create+0x14>)
   1865a:	4718      	bx	r3

0001865c <GL_Drawing_Create>:
   1865c:	b401      	push	{r0}
   1865e:	4803      	ldr	r0, [pc, #12]	; (1866c <GL_Drawing_Create+0x10>)
   18660:	6800      	ldr	r0, [r0, #0]
   18662:	4684      	mov	ip, r0
   18664:	bc01      	pop	{r0}
   18666:	4760      	bx	ip
   18668:	00002796 	.word	0x00002796
   1866c:	000245d0 	.word	0x000245d0
   18670:	00018f3d 	.word	0x00018f3d

00018674 <GL_Drawing_DrawEllipse_Init>:
   18674:	b40f      	push	{r0, r1, r2, r3}
   18676:	4805      	ldr	r0, [pc, #20]	; (1868c <GL_Drawing_DrawEllipse+0xc>)
   18678:	2100      	movs	r1, #0
   1867a:	4a05      	ldr	r2, [pc, #20]	; (18690 <GL_Drawing_DrawEllipse+0x10>)
   1867c:	4b05      	ldr	r3, [pc, #20]	; (18694 <GL_Drawing_DrawEllipse+0x14>)
   1867e:	4718      	bx	r3

00018680 <GL_Drawing_DrawEllipse>:
   18680:	b401      	push	{r0}
   18682:	4803      	ldr	r0, [pc, #12]	; (18690 <GL_Drawing_DrawEllipse+0x10>)
   18684:	6800      	ldr	r0, [r0, #0]
   18686:	4684      	mov	ip, r0
   18688:	bc01      	pop	{r0}
   1868a:	4760      	bx	ip
   1868c:	0000279c 	.word	0x0000279c
   18690:	000245e0 	.word	0x000245e0
   18694:	00018f3d 	.word	0x00018f3d

00018698 <GL_Drawing_DrawLine_Init>:
   18698:	b40f      	push	{r0, r1, r2, r3}
   1869a:	4805      	ldr	r0, [pc, #20]	; (186b0 <GL_Drawing_DrawLine+0xc>)
   1869c:	2100      	movs	r1, #0
   1869e:	4a05      	ldr	r2, [pc, #20]	; (186b4 <GL_Drawing_DrawLine+0x10>)
   186a0:	4b05      	ldr	r3, [pc, #20]	; (186b8 <GL_Drawing_DrawLine+0x14>)
   186a2:	4718      	bx	r3

000186a4 <GL_Drawing_DrawLine>:
   186a4:	b401      	push	{r0}
   186a6:	4803      	ldr	r0, [pc, #12]	; (186b4 <GL_Drawing_DrawLine+0x10>)
   186a8:	6800      	ldr	r0, [r0, #0]
   186aa:	4684      	mov	ip, r0
   186ac:	bc01      	pop	{r0}
   186ae:	4760      	bx	ip
   186b0:	0000279a 	.word	0x0000279a
   186b4:	000245f0 	.word	0x000245f0
   186b8:	00018f3d 	.word	0x00018f3d

000186bc <GL_Drawing_DrawRect_Init>:
   186bc:	b40f      	push	{r0, r1, r2, r3}
   186be:	4805      	ldr	r0, [pc, #20]	; (186d4 <GL_Drawing_DrawRect+0xc>)
   186c0:	2100      	movs	r1, #0
   186c2:	4a05      	ldr	r2, [pc, #20]	; (186d8 <GL_Drawing_DrawRect+0x10>)
   186c4:	4b05      	ldr	r3, [pc, #20]	; (186dc <GL_Drawing_DrawRect+0x14>)
   186c6:	4718      	bx	r3

000186c8 <GL_Drawing_DrawRect>:
   186c8:	b401      	push	{r0}
   186ca:	4803      	ldr	r0, [pc, #12]	; (186d8 <GL_Drawing_DrawRect+0x10>)
   186cc:	6800      	ldr	r0, [r0, #0]
   186ce:	4684      	mov	ip, r0
   186d0:	bc01      	pop	{r0}
   186d2:	4760      	bx	ip
   186d4:	0000279b 	.word	0x0000279b
   186d8:	00024600 	.word	0x00024600
   186dc:	00018f3d 	.word	0x00018f3d

000186e0 <GL_Drawing_DrawText_Init>:
   186e0:	b40f      	push	{r0, r1, r2, r3}
   186e2:	4805      	ldr	r0, [pc, #20]	; (186f8 <GL_Drawing_DrawText+0xc>)
   186e4:	2100      	movs	r1, #0
   186e6:	4a05      	ldr	r2, [pc, #20]	; (186fc <GL_Drawing_DrawText+0x10>)
   186e8:	4b05      	ldr	r3, [pc, #20]	; (18700 <GL_Drawing_DrawText+0x14>)
   186ea:	4718      	bx	r3

000186ec <GL_Drawing_DrawText>:
   186ec:	b401      	push	{r0}
   186ee:	4803      	ldr	r0, [pc, #12]	; (186fc <GL_Drawing_DrawText+0x10>)
   186f0:	6800      	ldr	r0, [r0, #0]
   186f2:	4684      	mov	ip, r0
   186f4:	bc01      	pop	{r0}
   186f6:	4760      	bx	ip
   186f8:	0000279f 	.word	0x0000279f
   186fc:	00024610 	.word	0x00024610
   18700:	00018f3d 	.word	0x00018f3d

00018704 <GL_Drawing_SetBrush_Init>:
   18704:	b40f      	push	{r0, r1, r2, r3}
   18706:	4805      	ldr	r0, [pc, #20]	; (1871c <GL_Drawing_SetBrush+0xc>)
   18708:	2100      	movs	r1, #0
   1870a:	4a05      	ldr	r2, [pc, #20]	; (18720 <GL_Drawing_SetBrush+0x10>)
   1870c:	4b05      	ldr	r3, [pc, #20]	; (18724 <GL_Drawing_SetBrush+0x14>)
   1870e:	4718      	bx	r3

00018710 <GL_Drawing_SetBrush>:
   18710:	b401      	push	{r0}
   18712:	4803      	ldr	r0, [pc, #12]	; (18720 <GL_Drawing_SetBrush+0x10>)
   18714:	6800      	ldr	r0, [r0, #0]
   18716:	4684      	mov	ip, r0
   18718:	bc01      	pop	{r0}
   1871a:	4760      	bx	ip
   1871c:	00002799 	.word	0x00002799
   18720:	00024620 	.word	0x00024620
   18724:	00018f3d 	.word	0x00018f3d

00018728 <GL_Drawing_SetFont_Init>:
   18728:	b40f      	push	{r0, r1, r2, r3}
   1872a:	4805      	ldr	r0, [pc, #20]	; (18740 <GL_Drawing_SetFont+0xc>)
   1872c:	2100      	movs	r1, #0
   1872e:	4a05      	ldr	r2, [pc, #20]	; (18744 <GL_Drawing_SetFont+0x10>)
   18730:	4b05      	ldr	r3, [pc, #20]	; (18748 <GL_Drawing_SetFont+0x14>)
   18732:	4718      	bx	r3

00018734 <GL_Drawing_SetFont>:
   18734:	b401      	push	{r0}
   18736:	4803      	ldr	r0, [pc, #12]	; (18744 <GL_Drawing_SetFont+0x10>)
   18738:	6800      	ldr	r0, [r0, #0]
   1873a:	4684      	mov	ip, r0
   1873c:	bc01      	pop	{r0}
   1873e:	4760      	bx	ip
   18740:	00002797 	.word	0x00002797
   18744:	00024630 	.word	0x00024630
   18748:	00018f3d 	.word	0x00018f3d

0001874c <GL_Drawing_SetPen_Init>:
   1874c:	b40f      	push	{r0, r1, r2, r3}
   1874e:	4805      	ldr	r0, [pc, #20]	; (18764 <GL_Drawing_SetPen+0xc>)
   18750:	2100      	movs	r1, #0
   18752:	4a05      	ldr	r2, [pc, #20]	; (18768 <GL_Drawing_SetPen+0x10>)
   18754:	4b05      	ldr	r3, [pc, #20]	; (1876c <GL_Drawing_SetPen+0x14>)
   18756:	4718      	bx	r3

00018758 <GL_Drawing_SetPen>:
   18758:	b401      	push	{r0}
   1875a:	4803      	ldr	r0, [pc, #12]	; (18768 <GL_Drawing_SetPen+0x10>)
   1875c:	6800      	ldr	r0, [r0, #0]
   1875e:	4684      	mov	ip, r0
   18760:	bc01      	pop	{r0}
   18762:	4760      	bx	ip
   18764:	00002798 	.word	0x00002798
   18768:	00024640 	.word	0x00024640
   1876c:	00018f3d 	.word	0x00018f3d

00018770 <GL_GraphicLib_BindSingleKey_Init>:
   18770:	b40f      	push	{r0, r1, r2, r3}
   18772:	4805      	ldr	r0, [pc, #20]	; (18788 <GL_GraphicLib_BindSingleKey+0xc>)
   18774:	2100      	movs	r1, #0
   18776:	4a05      	ldr	r2, [pc, #20]	; (1878c <GL_GraphicLib_BindSingleKey+0x10>)
   18778:	4b05      	ldr	r3, [pc, #20]	; (18790 <GL_GraphicLib_BindSingleKey+0x14>)
   1877a:	4718      	bx	r3

0001877c <GL_GraphicLib_BindSingleKey>:
   1877c:	b401      	push	{r0}
   1877e:	4803      	ldr	r0, [pc, #12]	; (1878c <GL_GraphicLib_BindSingleKey+0x10>)
   18780:	6800      	ldr	r0, [r0, #0]
   18782:	4684      	mov	ip, r0
   18784:	bc01      	pop	{r0}
   18786:	4760      	bx	ip
   18788:	0000271b 	.word	0x0000271b
   1878c:	00024650 	.word	0x00024650
   18790:	00018f3d 	.word	0x00018f3d

00018794 <GL_GraphicLib_Create>:
   18794:	b538      	push	{r3, r4, r5, lr}
   18796:	4b11      	ldr	r3, [pc, #68]	; (187dc <GL_GraphicLib_Create+0x48>)
   18798:	4a11      	ldr	r2, [pc, #68]	; (187e0 <GL_GraphicLib_Create+0x4c>)
   1879a:	447b      	add	r3, pc
   1879c:	447a      	add	r2, pc
   1879e:	6819      	ldr	r1, [r3, #0]
   187a0:	b911      	cbnz	r1, 187a8 <GL_GraphicLib_Create+0x14>
   187a2:	4910      	ldr	r1, [pc, #64]	; (187e4 <GL_GraphicLib_Create+0x50>)
   187a4:	5852      	ldr	r2, [r2, r1]
   187a6:	601a      	str	r2, [r3, #0]
   187a8:	4b0f      	ldr	r3, [pc, #60]	; (187e8 <GL_GraphicLib_Create+0x54>)
   187aa:	447b      	add	r3, pc
   187ac:	681c      	ldr	r4, [r3, #0]
   187ae:	b19c      	cbz	r4, 187d8 <GL_GraphicLib_Create+0x44>
   187b0:	4d0e      	ldr	r5, [pc, #56]	; (187ec <GL_GraphicLib_Create+0x58>)
   187b2:	47a0      	blx	r4
   187b4:	447d      	add	r5, pc
   187b6:	4604      	mov	r4, r0
   187b8:	6829      	ldr	r1, [r5, #0]
   187ba:	b929      	cbnz	r1, 187c8 <GL_GraphicLib_Create+0x34>
   187bc:	f642 0082 	movw	r0, #10370	; 0x2882
   187c0:	460a      	mov	r2, r1
   187c2:	f000 fb75 	bl	18eb0 <GL_GetProcAddressWithoutExit>
   187c6:	6028      	str	r0, [r5, #0]
   187c8:	4b09      	ldr	r3, [pc, #36]	; (187f0 <GL_GraphicLib_Create+0x5c>)
   187ca:	447b      	add	r3, pc
   187cc:	681b      	ldr	r3, [r3, #0]
   187ce:	b11b      	cbz	r3, 187d8 <GL_GraphicLib_Create+0x44>
   187d0:	4620      	mov	r0, r4
   187d2:	2106      	movs	r1, #6
   187d4:	220a      	movs	r2, #10
   187d6:	4798      	blx	r3
   187d8:	4620      	mov	r0, r4
   187da:	bd38      	pop	{r3, r4, r5, pc}
   187dc:	0000bec2 	.word	0x0000bec2
   187e0:	0000b978 	.word	0x0000b978
   187e4:	000000c0 	.word	0x000000c0
   187e8:	0000beb2 	.word	0x0000beb2
   187ec:	0000c2e8 	.word	0x0000c2e8
   187f0:	0000c2d2 	.word	0x0000c2d2

000187f4 <GL_GraphicLib_Create_Init>:
   187f4:	2100      	movs	r1, #0
   187f6:	b508      	push	{r3, lr}
   187f8:	460a      	mov	r2, r1
   187fa:	f242 7010 	movw	r0, #10000	; 0x2710
   187fe:	f000 fb57 	bl	18eb0 <GL_GetProcAddressWithoutExit>
   18802:	4b03      	ldr	r3, [pc, #12]	; (18810 <GL_GraphicLib_Create_Init+0x1c>)
   18804:	447b      	add	r3, pc
   18806:	6018      	str	r0, [r3, #0]
   18808:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1880c:	f7ff bfc2 	b.w	18794 <GL_GraphicLib_Create>
   18810:	0000be58 	.word	0x0000be58

00018814 <GL_GraphicLib_IsTouchPresent_Init>:
   18814:	b40f      	push	{r0, r1, r2, r3}
   18816:	4805      	ldr	r0, [pc, #20]	; (1882c <GL_GraphicLib_IsTouchPresent+0xc>)
   18818:	2100      	movs	r1, #0
   1881a:	4a05      	ldr	r2, [pc, #20]	; (18830 <GL_GraphicLib_IsTouchPresent+0x10>)
   1881c:	4b05      	ldr	r3, [pc, #20]	; (18834 <GL_GraphicLib_IsTouchPresent+0x14>)
   1881e:	4718      	bx	r3

00018820 <GL_GraphicLib_IsTouchPresent>:
   18820:	b401      	push	{r0}
   18822:	4803      	ldr	r0, [pc, #12]	; (18830 <GL_GraphicLib_IsTouchPresent+0x10>)
   18824:	6800      	ldr	r0, [r0, #0]
   18826:	4684      	mov	ip, r0
   18828:	bc01      	pop	{r0}
   1882a:	4760      	bx	ip
   1882c:	0000284d 	.word	0x0000284d
   18830:	00024670 	.word	0x00024670
   18834:	00018f3d 	.word	0x00018f3d

00018838 <GL_GraphicLib_SetCharset_Init>:
   18838:	b40f      	push	{r0, r1, r2, r3}
   1883a:	4805      	ldr	r0, [pc, #20]	; (18850 <GL_GraphicLib_SetCharset+0xc>)
   1883c:	2100      	movs	r1, #0
   1883e:	4a05      	ldr	r2, [pc, #20]	; (18854 <GL_GraphicLib_SetCharset+0x10>)
   18840:	4b05      	ldr	r3, [pc, #20]	; (18858 <GL_GraphicLib_SetCharset+0x14>)
   18842:	4718      	bx	r3

00018844 <GL_GraphicLib_SetCharset>:
   18844:	b401      	push	{r0}
   18846:	4803      	ldr	r0, [pc, #12]	; (18854 <GL_GraphicLib_SetCharset+0x10>)
   18848:	6800      	ldr	r0, [r0, #0]
   1884a:	4684      	mov	ip, r0
   1884c:	bc01      	pop	{r0}
   1884e:	4760      	bx	ip
   18850:	00002718 	.word	0x00002718
   18854:	00024680 	.word	0x00024680
   18858:	00018f3d 	.word	0x00018f3d

0001885c <GL_GraphicLib_UnbindKey_Init>:
   1885c:	b40f      	push	{r0, r1, r2, r3}
   1885e:	4805      	ldr	r0, [pc, #20]	; (18874 <GL_GraphicLib_UnbindKey+0xc>)
   18860:	2100      	movs	r1, #0
   18862:	4a05      	ldr	r2, [pc, #20]	; (18878 <GL_GraphicLib_UnbindKey+0x10>)
   18864:	4b05      	ldr	r3, [pc, #20]	; (1887c <GL_GraphicLib_UnbindKey+0x14>)
   18866:	4718      	bx	r3

00018868 <GL_GraphicLib_UnbindKey>:
   18868:	b401      	push	{r0}
   1886a:	4803      	ldr	r0, [pc, #12]	; (18878 <GL_GraphicLib_UnbindKey+0x10>)
   1886c:	6800      	ldr	r0, [r0, #0]
   1886e:	4684      	mov	ip, r0
   18870:	bc01      	pop	{r0}
   18872:	4760      	bx	ip
   18874:	0000271c 	.word	0x0000271c
   18878:	00024690 	.word	0x00024690
   1887c:	00018f3d 	.word	0x00018f3d

00018880 <GL_Label_Create_Init>:
   18880:	b40f      	push	{r0, r1, r2, r3}
   18882:	4805      	ldr	r0, [pc, #20]	; (18898 <GL_Label_Create+0xc>)
   18884:	2100      	movs	r1, #0
   18886:	4a05      	ldr	r2, [pc, #20]	; (1889c <GL_Label_Create+0x10>)
   18888:	4b05      	ldr	r3, [pc, #20]	; (188a0 <GL_Label_Create+0x14>)
   1888a:	4718      	bx	r3

0001888c <GL_Label_Create>:
   1888c:	b401      	push	{r0}
   1888e:	4803      	ldr	r0, [pc, #12]	; (1889c <GL_Label_Create+0x10>)
   18890:	6800      	ldr	r0, [r0, #0]
   18892:	4684      	mov	ip, r0
   18894:	bc01      	pop	{r0}
   18896:	4760      	bx	ip
   18898:	00002721 	.word	0x00002721
   1889c:	000246a0 	.word	0x000246a0
   188a0:	00018f3d 	.word	0x00018f3d

000188a4 <GL_Layout_Create_Init>:
   188a4:	b40f      	push	{r0, r1, r2, r3}
   188a6:	4805      	ldr	r0, [pc, #20]	; (188bc <GL_Layout_Create+0xc>)
   188a8:	2100      	movs	r1, #0
   188aa:	4a05      	ldr	r2, [pc, #20]	; (188c0 <GL_Layout_Create+0x10>)
   188ac:	4b05      	ldr	r3, [pc, #20]	; (188c4 <GL_Layout_Create+0x14>)
   188ae:	4718      	bx	r3

000188b0 <GL_Layout_Create>:
   188b0:	b401      	push	{r0}
   188b2:	4803      	ldr	r0, [pc, #12]	; (188c0 <GL_Layout_Create+0x10>)
   188b4:	6800      	ldr	r0, [r0, #0]
   188b6:	4684      	mov	ip, r0
   188b8:	bc01      	pop	{r0}
   188ba:	4760      	bx	ip
   188bc:	00002722 	.word	0x00002722
   188c0:	000246b0 	.word	0x000246b0
   188c4:	00018f3d 	.word	0x00018f3d

000188c8 <GL_Message_GetKey_Init>:
   188c8:	b40f      	push	{r0, r1, r2, r3}
   188ca:	4805      	ldr	r0, [pc, #20]	; (188e0 <GL_Message_GetKey+0xc>)
   188cc:	2100      	movs	r1, #0
   188ce:	4a05      	ldr	r2, [pc, #20]	; (188e4 <GL_Message_GetKey+0x10>)
   188d0:	4b05      	ldr	r3, [pc, #20]	; (188e8 <GL_Message_GetKey+0x14>)
   188d2:	4718      	bx	r3

000188d4 <GL_Message_GetKey>:
   188d4:	b401      	push	{r0}
   188d6:	4803      	ldr	r0, [pc, #12]	; (188e4 <GL_Message_GetKey+0x10>)
   188d8:	6800      	ldr	r0, [r0, #0]
   188da:	4684      	mov	ip, r0
   188dc:	bc01      	pop	{r0}
   188de:	4760      	bx	ip
   188e0:	00002787 	.word	0x00002787
   188e4:	000246c0 	.word	0x000246c0
   188e8:	00018f3d 	.word	0x00018f3d

000188ec <GL_Message_GetWidget_Init>:
   188ec:	b40f      	push	{r0, r1, r2, r3}
   188ee:	4805      	ldr	r0, [pc, #20]	; (18904 <GL_Message_GetWidget+0xc>)
   188f0:	2100      	movs	r1, #0
   188f2:	4a05      	ldr	r2, [pc, #20]	; (18908 <GL_Message_GetWidget+0x10>)
   188f4:	4b05      	ldr	r3, [pc, #20]	; (1890c <GL_Message_GetWidget+0x14>)
   188f6:	4718      	bx	r3

000188f8 <GL_Message_GetWidget>:
   188f8:	b401      	push	{r0}
   188fa:	4803      	ldr	r0, [pc, #12]	; (18908 <GL_Message_GetWidget+0x10>)
   188fc:	6800      	ldr	r0, [r0, #0]
   188fe:	4684      	mov	ip, r0
   18900:	bc01      	pop	{r0}
   18902:	4760      	bx	ip
   18904:	00002789 	.word	0x00002789
   18908:	000246d0 	.word	0x000246d0
   1890c:	00018f3d 	.word	0x00018f3d

00018910 <GL_Message_SetResult_Init>:
   18910:	b40f      	push	{r0, r1, r2, r3}
   18912:	4805      	ldr	r0, [pc, #20]	; (18928 <GL_Message_SetResult+0xc>)
   18914:	2100      	movs	r1, #0
   18916:	4a05      	ldr	r2, [pc, #20]	; (1892c <GL_Message_SetResult+0x10>)
   18918:	4b05      	ldr	r3, [pc, #20]	; (18930 <GL_Message_SetResult+0x14>)
   1891a:	4718      	bx	r3

0001891c <GL_Message_SetResult>:
   1891c:	b401      	push	{r0}
   1891e:	4803      	ldr	r0, [pc, #12]	; (1892c <GL_Message_SetResult+0x10>)
   18920:	6800      	ldr	r0, [r0, #0]
   18922:	4684      	mov	ip, r0
   18924:	bc01      	pop	{r0}
   18926:	4760      	bx	ip
   18928:	000027f5 	.word	0x000027f5
   1892c:	000246e0 	.word	0x000246e0
   18930:	00018f3d 	.word	0x00018f3d

00018934 <GL_Message_SetUserData_Init>:
   18934:	b40f      	push	{r0, r1, r2, r3}
   18936:	4805      	ldr	r0, [pc, #20]	; (1894c <GL_Message_SetUserData+0xc>)
   18938:	2100      	movs	r1, #0
   1893a:	4a05      	ldr	r2, [pc, #20]	; (18950 <GL_Message_SetUserData+0x10>)
   1893c:	4b05      	ldr	r3, [pc, #20]	; (18954 <GL_Message_SetUserData+0x14>)
   1893e:	4718      	bx	r3

00018940 <GL_Message_SetUserData>:
   18940:	b401      	push	{r0}
   18942:	4803      	ldr	r0, [pc, #12]	; (18950 <GL_Message_SetUserData+0x10>)
   18944:	6800      	ldr	r0, [r0, #0]
   18946:	4684      	mov	ip, r0
   18948:	bc01      	pop	{r0}
   1894a:	4760      	bx	ip
   1894c:	000027f7 	.word	0x000027f7
   18950:	000246f0 	.word	0x000246f0
   18954:	00018f3d 	.word	0x00018f3d

00018958 <GL_Picture_Create_Init>:
   18958:	b40f      	push	{r0, r1, r2, r3}
   1895a:	4805      	ldr	r0, [pc, #20]	; (18970 <GL_Picture_Create+0xc>)
   1895c:	2100      	movs	r1, #0
   1895e:	4a05      	ldr	r2, [pc, #20]	; (18974 <GL_Picture_Create+0x10>)
   18960:	4b05      	ldr	r3, [pc, #20]	; (18978 <GL_Picture_Create+0x14>)
   18962:	4718      	bx	r3

00018964 <GL_Picture_Create>:
   18964:	b401      	push	{r0}
   18966:	4803      	ldr	r0, [pc, #12]	; (18974 <GL_Picture_Create+0x10>)
   18968:	6800      	ldr	r0, [r0, #0]
   1896a:	4684      	mov	ip, r0
   1896c:	bc01      	pop	{r0}
   1896e:	4760      	bx	ip
   18970:	00002723 	.word	0x00002723
   18974:	00024700 	.word	0x00024700
   18978:	00018f3d 	.word	0x00018f3d

0001897c <GL_Print_Create_Init>:
   1897c:	b40f      	push	{r0, r1, r2, r3}
   1897e:	4805      	ldr	r0, [pc, #20]	; (18994 <GL_Print_Create+0xc>)
   18980:	2100      	movs	r1, #0
   18982:	4a05      	ldr	r2, [pc, #20]	; (18998 <GL_Print_Create+0x10>)
   18984:	4b05      	ldr	r3, [pc, #20]	; (1899c <GL_Print_Create+0x14>)
   18986:	4718      	bx	r3

00018988 <GL_Print_Create>:
   18988:	b401      	push	{r0}
   1898a:	4803      	ldr	r0, [pc, #12]	; (18998 <GL_Print_Create+0x10>)
   1898c:	6800      	ldr	r0, [r0, #0]
   1898e:	4684      	mov	ip, r0
   18990:	bc01      	pop	{r0}
   18992:	4760      	bx	ip
   18994:	00002812 	.word	0x00002812
   18998:	00024710 	.word	0x00024710
   1899c:	00018f3d 	.word	0x00018f3d

000189a0 <GL_Timer_Create_Init>:
   189a0:	b40f      	push	{r0, r1, r2, r3}
   189a2:	4805      	ldr	r0, [pc, #20]	; (189b8 <GL_Timer_Create+0xc>)
   189a4:	2100      	movs	r1, #0
   189a6:	4a05      	ldr	r2, [pc, #20]	; (189bc <GL_Timer_Create+0x10>)
   189a8:	4b05      	ldr	r3, [pc, #20]	; (189c0 <GL_Timer_Create+0x14>)
   189aa:	4718      	bx	r3

000189ac <GL_Timer_Create>:
   189ac:	b401      	push	{r0}
   189ae:	4803      	ldr	r0, [pc, #12]	; (189bc <GL_Timer_Create+0x10>)
   189b0:	6800      	ldr	r0, [r0, #0]
   189b2:	4684      	mov	ip, r0
   189b4:	bc01      	pop	{r0}
   189b6:	4760      	bx	ip
   189b8:	0000278d 	.word	0x0000278d
   189bc:	00024720 	.word	0x00024720
   189c0:	00018f3d 	.word	0x00018f3d

000189c4 <GL_Timer_SetInterval_Init>:
   189c4:	b40f      	push	{r0, r1, r2, r3}
   189c6:	4805      	ldr	r0, [pc, #20]	; (189dc <GL_Timer_SetInterval+0xc>)
   189c8:	2100      	movs	r1, #0
   189ca:	4a05      	ldr	r2, [pc, #20]	; (189e0 <GL_Timer_SetInterval+0x10>)
   189cc:	4b05      	ldr	r3, [pc, #20]	; (189e4 <GL_Timer_SetInterval+0x14>)
   189ce:	4718      	bx	r3

000189d0 <GL_Timer_SetInterval>:
   189d0:	b401      	push	{r0}
   189d2:	4803      	ldr	r0, [pc, #12]	; (189e0 <GL_Timer_SetInterval+0x10>)
   189d4:	6800      	ldr	r0, [r0, #0]
   189d6:	4684      	mov	ip, r0
   189d8:	bc01      	pop	{r0}
   189da:	4760      	bx	ip
   189dc:	00002790 	.word	0x00002790
   189e0:	00024730 	.word	0x00024730
   189e4:	00018f3d 	.word	0x00018f3d

000189e8 <GL_Timer_Stop_Init>:
   189e8:	b40f      	push	{r0, r1, r2, r3}
   189ea:	4805      	ldr	r0, [pc, #20]	; (18a00 <GL_Timer_Stop+0xc>)
   189ec:	2100      	movs	r1, #0
   189ee:	4a05      	ldr	r2, [pc, #20]	; (18a04 <GL_Timer_Stop+0x10>)
   189f0:	4b05      	ldr	r3, [pc, #20]	; (18a08 <GL_Timer_Stop+0x14>)
   189f2:	4718      	bx	r3

000189f4 <GL_Timer_Stop>:
   189f4:	b401      	push	{r0}
   189f6:	4803      	ldr	r0, [pc, #12]	; (18a04 <GL_Timer_Stop+0x10>)
   189f8:	6800      	ldr	r0, [r0, #0]
   189fa:	4684      	mov	ip, r0
   189fc:	bc01      	pop	{r0}
   189fe:	4760      	bx	ip
   18a00:	0000278f 	.word	0x0000278f
   18a04:	00024740 	.word	0x00024740
   18a08:	00018f3d 	.word	0x00018f3d

00018a0c <GL_Widget_Destroy_Init>:
   18a0c:	b40f      	push	{r0, r1, r2, r3}
   18a0e:	4805      	ldr	r0, [pc, #20]	; (18a24 <GL_Widget_Destroy+0xc>)
   18a10:	2100      	movs	r1, #0
   18a12:	4a05      	ldr	r2, [pc, #20]	; (18a28 <GL_Widget_Destroy+0x10>)
   18a14:	4b05      	ldr	r3, [pc, #20]	; (18a2c <GL_Widget_Destroy+0x14>)
   18a16:	4718      	bx	r3

00018a18 <GL_Widget_Destroy>:
   18a18:	b401      	push	{r0}
   18a1a:	4803      	ldr	r0, [pc, #12]	; (18a28 <GL_Widget_Destroy+0x10>)
   18a1c:	6800      	ldr	r0, [r0, #0]
   18a1e:	4684      	mov	ip, r0
   18a20:	bc01      	pop	{r0}
   18a22:	4760      	bx	ip
   18a24:	00002739 	.word	0x00002739
   18a28:	00024750 	.word	0x00024750
   18a2c:	00018f3d 	.word	0x00018f3d

00018a30 <GL_Widget_GetUserData_Init>:
   18a30:	b40f      	push	{r0, r1, r2, r3}
   18a32:	4805      	ldr	r0, [pc, #20]	; (18a48 <GL_Widget_GetUserData+0xc>)
   18a34:	2100      	movs	r1, #0
   18a36:	4a05      	ldr	r2, [pc, #20]	; (18a4c <GL_Widget_GetUserData+0x10>)
   18a38:	4b05      	ldr	r3, [pc, #20]	; (18a50 <GL_Widget_GetUserData+0x14>)
   18a3a:	4718      	bx	r3

00018a3c <GL_Widget_GetUserData>:
   18a3c:	b401      	push	{r0}
   18a3e:	4803      	ldr	r0, [pc, #12]	; (18a4c <GL_Widget_GetUserData+0x10>)
   18a40:	6800      	ldr	r0, [r0, #0]
   18a42:	4684      	mov	ip, r0
   18a44:	bc01      	pop	{r0}
   18a46:	4760      	bx	ip
   18a48:	000027f0 	.word	0x000027f0
   18a4c:	00024760 	.word	0x00024760
   18a50:	00018f3d 	.word	0x00018f3d

00018a54 <GL_Widget_RegisterCallback_Init>:
   18a54:	b40f      	push	{r0, r1, r2, r3}
   18a56:	4805      	ldr	r0, [pc, #20]	; (18a6c <GL_Widget_RegisterCallback+0xc>)
   18a58:	2100      	movs	r1, #0
   18a5a:	4a05      	ldr	r2, [pc, #20]	; (18a70 <GL_Widget_RegisterCallback+0x10>)
   18a5c:	4b05      	ldr	r3, [pc, #20]	; (18a74 <GL_Widget_RegisterCallback+0x14>)
   18a5e:	4718      	bx	r3

00018a60 <GL_Widget_RegisterCallback>:
   18a60:	b401      	push	{r0}
   18a62:	4803      	ldr	r0, [pc, #12]	; (18a70 <GL_Widget_RegisterCallback+0x10>)
   18a64:	6800      	ldr	r0, [r0, #0]
   18a66:	4684      	mov	ip, r0
   18a68:	bc01      	pop	{r0}
   18a6a:	4760      	bx	ip
   18a6c:	00002772 	.word	0x00002772
   18a70:	00024770 	.word	0x00024770
   18a74:	00018f3d 	.word	0x00018f3d

00018a78 <GL_Widget_SearchId_Init>:
   18a78:	b40f      	push	{r0, r1, r2, r3}
   18a7a:	4805      	ldr	r0, [pc, #20]	; (18a90 <GL_Widget_SearchId+0xc>)
   18a7c:	2100      	movs	r1, #0
   18a7e:	4a05      	ldr	r2, [pc, #20]	; (18a94 <GL_Widget_SearchId+0x10>)
   18a80:	4b05      	ldr	r3, [pc, #20]	; (18a98 <GL_Widget_SearchId+0x14>)
   18a82:	4718      	bx	r3

00018a84 <GL_Widget_SearchId>:
   18a84:	b401      	push	{r0}
   18a86:	4803      	ldr	r0, [pc, #12]	; (18a94 <GL_Widget_SearchId+0x10>)
   18a88:	6800      	ldr	r0, [r0, #0]
   18a8a:	4684      	mov	ip, r0
   18a8c:	bc01      	pop	{r0}
   18a8e:	4760      	bx	ip
   18a90:	0000275e 	.word	0x0000275e
   18a94:	00024780 	.word	0x00024780
   18a98:	00018f3d 	.word	0x00018f3d

00018a9c <GL_Widget_SetBackAlign_Init>:
   18a9c:	b40f      	push	{r0, r1, r2, r3}
   18a9e:	4805      	ldr	r0, [pc, #20]	; (18ab4 <GL_Widget_SetBackAlign+0xc>)
   18aa0:	2100      	movs	r1, #0
   18aa2:	4a05      	ldr	r2, [pc, #20]	; (18ab8 <GL_Widget_SetBackAlign+0x10>)
   18aa4:	4b05      	ldr	r3, [pc, #20]	; (18abc <GL_Widget_SetBackAlign+0x14>)
   18aa6:	4718      	bx	r3

00018aa8 <GL_Widget_SetBackAlign>:
   18aa8:	b401      	push	{r0}
   18aaa:	4803      	ldr	r0, [pc, #12]	; (18ab8 <GL_Widget_SetBackAlign+0x10>)
   18aac:	6800      	ldr	r0, [r0, #0]
   18aae:	4684      	mov	ip, r0
   18ab0:	bc01      	pop	{r0}
   18ab2:	4760      	bx	ip
   18ab4:	00002749 	.word	0x00002749
   18ab8:	00024790 	.word	0x00024790
   18abc:	00018f3d 	.word	0x00018f3d

00018ac0 <GL_Widget_SetBackColor_Init>:
   18ac0:	b40f      	push	{r0, r1, r2, r3}
   18ac2:	4805      	ldr	r0, [pc, #20]	; (18ad8 <GL_Widget_SetBackColor+0xc>)
   18ac4:	2100      	movs	r1, #0
   18ac6:	4a05      	ldr	r2, [pc, #20]	; (18adc <GL_Widget_SetBackColor+0x10>)
   18ac8:	4b05      	ldr	r3, [pc, #20]	; (18ae0 <GL_Widget_SetBackColor+0x14>)
   18aca:	4718      	bx	r3

00018acc <GL_Widget_SetBackColor>:
   18acc:	b401      	push	{r0}
   18ace:	4803      	ldr	r0, [pc, #12]	; (18adc <GL_Widget_SetBackColor+0x10>)
   18ad0:	6800      	ldr	r0, [r0, #0]
   18ad2:	4684      	mov	ip, r0
   18ad4:	bc01      	pop	{r0}
   18ad6:	4760      	bx	ip
   18ad8:	00002760 	.word	0x00002760
   18adc:	000247a0 	.word	0x000247a0
   18ae0:	00018f3d 	.word	0x00018f3d

00018ae4 <GL_Widget_SetBorders_Init>:
   18ae4:	b40f      	push	{r0, r1, r2, r3}
   18ae6:	4805      	ldr	r0, [pc, #20]	; (18afc <GL_Widget_SetBorders+0xc>)
   18ae8:	2100      	movs	r1, #0
   18aea:	4a05      	ldr	r2, [pc, #20]	; (18b00 <GL_Widget_SetBorders+0x10>)
   18aec:	4b05      	ldr	r3, [pc, #20]	; (18b04 <GL_Widget_SetBorders+0x14>)
   18aee:	4718      	bx	r3

00018af0 <GL_Widget_SetBorders>:
   18af0:	b401      	push	{r0}
   18af2:	4803      	ldr	r0, [pc, #12]	; (18b00 <GL_Widget_SetBorders+0x10>)
   18af4:	6800      	ldr	r0, [r0, #0]
   18af6:	4684      	mov	ip, r0
   18af8:	bc01      	pop	{r0}
   18afa:	4760      	bx	ip
   18afc:	0000280b 	.word	0x0000280b
   18b00:	000247b0 	.word	0x000247b0
   18b04:	00018f3d 	.word	0x00018f3d

00018b08 <GL_Widget_SetExpand_Init>:
   18b08:	b40f      	push	{r0, r1, r2, r3}
   18b0a:	4805      	ldr	r0, [pc, #20]	; (18b20 <GL_Widget_SetExpand+0xc>)
   18b0c:	2100      	movs	r1, #0
   18b0e:	4a05      	ldr	r2, [pc, #20]	; (18b24 <GL_Widget_SetExpand+0x10>)
   18b10:	4b05      	ldr	r3, [pc, #20]	; (18b28 <GL_Widget_SetExpand+0x14>)
   18b12:	4718      	bx	r3

00018b14 <GL_Widget_SetExpand>:
   18b14:	b401      	push	{r0}
   18b16:	4803      	ldr	r0, [pc, #12]	; (18b24 <GL_Widget_SetExpand+0x10>)
   18b18:	6800      	ldr	r0, [r0, #0]
   18b1a:	4684      	mov	ip, r0
   18b1c:	bc01      	pop	{r0}
   18b1e:	4760      	bx	ip
   18b20:	0000275a 	.word	0x0000275a
   18b24:	000247c0 	.word	0x000247c0
   18b28:	00018f3d 	.word	0x00018f3d

00018b2c <GL_Widget_SetFocusable_Init>:
   18b2c:	b40f      	push	{r0, r1, r2, r3}
   18b2e:	4805      	ldr	r0, [pc, #20]	; (18b44 <GL_Widget_SetFocusable+0xc>)
   18b30:	2100      	movs	r1, #0
   18b32:	4a05      	ldr	r2, [pc, #20]	; (18b48 <GL_Widget_SetFocusable+0x10>)
   18b34:	4b05      	ldr	r3, [pc, #20]	; (18b4c <GL_Widget_SetFocusable+0x14>)
   18b36:	4718      	bx	r3

00018b38 <GL_Widget_SetFocusable>:
   18b38:	b401      	push	{r0}
   18b3a:	4803      	ldr	r0, [pc, #12]	; (18b48 <GL_Widget_SetFocusable+0x10>)
   18b3c:	6800      	ldr	r0, [r0, #0]
   18b3e:	4684      	mov	ip, r0
   18b40:	bc01      	pop	{r0}
   18b42:	4760      	bx	ip
   18b44:	00002814 	.word	0x00002814
   18b48:	000247d0 	.word	0x000247d0
   18b4c:	00018f3d 	.word	0x00018f3d

00018b50 <GL_Widget_SetFontName_Init>:
   18b50:	b40f      	push	{r0, r1, r2, r3}
   18b52:	4805      	ldr	r0, [pc, #20]	; (18b68 <GL_Widget_SetFontName+0xc>)
   18b54:	2100      	movs	r1, #0
   18b56:	4a05      	ldr	r2, [pc, #20]	; (18b6c <GL_Widget_SetFontName+0x10>)
   18b58:	4b05      	ldr	r3, [pc, #20]	; (18b70 <GL_Widget_SetFontName+0x14>)
   18b5a:	4718      	bx	r3

00018b5c <GL_Widget_SetFontName>:
   18b5c:	b401      	push	{r0}
   18b5e:	4803      	ldr	r0, [pc, #12]	; (18b6c <GL_Widget_SetFontName+0x10>)
   18b60:	6800      	ldr	r0, [r0, #0]
   18b62:	4684      	mov	ip, r0
   18b64:	bc01      	pop	{r0}
   18b66:	4760      	bx	ip
   18b68:	0000276a 	.word	0x0000276a
   18b6c:	000247e0 	.word	0x000247e0
   18b70:	00018f3d 	.word	0x00018f3d

00018b74 <GL_Widget_SetFontScale_Init>:
   18b74:	b40f      	push	{r0, r1, r2, r3}
   18b76:	4805      	ldr	r0, [pc, #20]	; (18b8c <GL_Widget_SetFontScale+0xc>)
   18b78:	2100      	movs	r1, #0
   18b7a:	4a05      	ldr	r2, [pc, #20]	; (18b90 <GL_Widget_SetFontScale+0x10>)
   18b7c:	4b05      	ldr	r3, [pc, #20]	; (18b94 <GL_Widget_SetFontScale+0x14>)
   18b7e:	4718      	bx	r3

00018b80 <GL_Widget_SetFontScale>:
   18b80:	b401      	push	{r0}
   18b82:	4803      	ldr	r0, [pc, #12]	; (18b90 <GL_Widget_SetFontScale+0x10>)
   18b84:	6800      	ldr	r0, [r0, #0]
   18b86:	4684      	mov	ip, r0
   18b88:	bc01      	pop	{r0}
   18b8a:	4760      	bx	ip
   18b8c:	00002855 	.word	0x00002855
   18b90:	000247f0 	.word	0x000247f0
   18b94:	00018f3d 	.word	0x00018f3d

00018b98 <GL_Widget_SetFontStyle_Init>:
   18b98:	b40f      	push	{r0, r1, r2, r3}
   18b9a:	4805      	ldr	r0, [pc, #20]	; (18bb0 <GL_Widget_SetFontStyle+0xc>)
   18b9c:	2100      	movs	r1, #0
   18b9e:	4a05      	ldr	r2, [pc, #20]	; (18bb4 <GL_Widget_SetFontStyle+0x10>)
   18ba0:	4b05      	ldr	r3, [pc, #20]	; (18bb8 <GL_Widget_SetFontStyle+0x14>)
   18ba2:	4718      	bx	r3

00018ba4 <GL_Widget_SetFontStyle>:
   18ba4:	b401      	push	{r0}
   18ba6:	4803      	ldr	r0, [pc, #12]	; (18bb4 <GL_Widget_SetFontStyle+0x10>)
   18ba8:	6800      	ldr	r0, [r0, #0]
   18baa:	4684      	mov	ip, r0
   18bac:	bc01      	pop	{r0}
   18bae:	4760      	bx	ip
   18bb0:	0000276e 	.word	0x0000276e
   18bb4:	00024800 	.word	0x00024800
   18bb8:	00018f3d 	.word	0x00018f3d

00018bbc <GL_Widget_SetForeColor_Init>:
   18bbc:	b40f      	push	{r0, r1, r2, r3}
   18bbe:	4805      	ldr	r0, [pc, #20]	; (18bd4 <GL_Widget_SetForeColor+0xc>)
   18bc0:	2100      	movs	r1, #0
   18bc2:	4a05      	ldr	r2, [pc, #20]	; (18bd8 <GL_Widget_SetForeColor+0x10>)
   18bc4:	4b05      	ldr	r3, [pc, #20]	; (18bdc <GL_Widget_SetForeColor+0x14>)
   18bc6:	4718      	bx	r3

00018bc8 <GL_Widget_SetForeColor>:
   18bc8:	b401      	push	{r0}
   18bca:	4803      	ldr	r0, [pc, #12]	; (18bd8 <GL_Widget_SetForeColor+0x10>)
   18bcc:	6800      	ldr	r0, [r0, #0]
   18bce:	4684      	mov	ip, r0
   18bd0:	bc01      	pop	{r0}
   18bd2:	4760      	bx	ip
   18bd4:	00002762 	.word	0x00002762
   18bd8:	00024810 	.word	0x00024810
   18bdc:	00018f3d 	.word	0x00018f3d

00018be0 <GL_Widget_SetGrow_Init>:
   18be0:	b40f      	push	{r0, r1, r2, r3}
   18be2:	4805      	ldr	r0, [pc, #20]	; (18bf8 <GL_Widget_SetGrow+0xc>)
   18be4:	2100      	movs	r1, #0
   18be6:	4a05      	ldr	r2, [pc, #20]	; (18bfc <GL_Widget_SetGrow+0x10>)
   18be8:	4b05      	ldr	r3, [pc, #20]	; (18c00 <GL_Widget_SetGrow+0x14>)
   18bea:	4718      	bx	r3

00018bec <GL_Widget_SetGrow>:
   18bec:	b401      	push	{r0}
   18bee:	4803      	ldr	r0, [pc, #12]	; (18bfc <GL_Widget_SetGrow+0x10>)
   18bf0:	6800      	ldr	r0, [r0, #0]
   18bf2:	4684      	mov	ip, r0
   18bf4:	bc01      	pop	{r0}
   18bf6:	4760      	bx	ip
   18bf8:	00002756 	.word	0x00002756
   18bfc:	00024820 	.word	0x00024820
   18c00:	00018f3d 	.word	0x00018f3d

00018c04 <GL_Widget_SetId_Init>:
   18c04:	b40f      	push	{r0, r1, r2, r3}
   18c06:	4805      	ldr	r0, [pc, #20]	; (18c1c <GL_Widget_SetId+0xc>)
   18c08:	2100      	movs	r1, #0
   18c0a:	4a05      	ldr	r2, [pc, #20]	; (18c20 <GL_Widget_SetId+0x10>)
   18c0c:	4b05      	ldr	r3, [pc, #20]	; (18c24 <GL_Widget_SetId+0x14>)
   18c0e:	4718      	bx	r3

00018c10 <GL_Widget_SetId>:
   18c10:	b401      	push	{r0}
   18c12:	4803      	ldr	r0, [pc, #12]	; (18c20 <GL_Widget_SetId+0x10>)
   18c14:	6800      	ldr	r0, [r0, #0]
   18c16:	4684      	mov	ip, r0
   18c18:	bc01      	pop	{r0}
   18c1a:	4760      	bx	ip
   18c1c:	0000275d 	.word	0x0000275d
   18c20:	00024830 	.word	0x00024830
   18c24:	00018f3d 	.word	0x00018f3d

00018c28 <GL_Widget_SetItem_Init>:
   18c28:	b40f      	push	{r0, r1, r2, r3}
   18c2a:	4805      	ldr	r0, [pc, #20]	; (18c40 <GL_Widget_SetItem+0xc>)
   18c2c:	2100      	movs	r1, #0
   18c2e:	4a05      	ldr	r2, [pc, #20]	; (18c44 <GL_Widget_SetItem+0x10>)
   18c30:	4b05      	ldr	r3, [pc, #20]	; (18c48 <GL_Widget_SetItem+0x14>)
   18c32:	4718      	bx	r3

00018c34 <GL_Widget_SetItem>:
   18c34:	b401      	push	{r0}
   18c36:	4803      	ldr	r0, [pc, #12]	; (18c44 <GL_Widget_SetItem+0x10>)
   18c38:	6800      	ldr	r0, [r0, #0]
   18c3a:	4684      	mov	ip, r0
   18c3c:	bc01      	pop	{r0}
   18c3e:	4760      	bx	ip
   18c40:	00002747 	.word	0x00002747
   18c44:	00024840 	.word	0x00024840
   18c48:	00018f3d 	.word	0x00018f3d

00018c4c <GL_Widget_SetMargins_Init>:
   18c4c:	b40f      	push	{r0, r1, r2, r3}
   18c4e:	4805      	ldr	r0, [pc, #20]	; (18c64 <GL_Widget_SetMargins+0xc>)
   18c50:	2100      	movs	r1, #0
   18c52:	4a05      	ldr	r2, [pc, #20]	; (18c68 <GL_Widget_SetMargins+0x10>)
   18c54:	4b05      	ldr	r3, [pc, #20]	; (18c6c <GL_Widget_SetMargins+0x14>)
   18c56:	4718      	bx	r3

00018c58 <GL_Widget_SetMargins>:
   18c58:	b401      	push	{r0}
   18c5a:	4803      	ldr	r0, [pc, #12]	; (18c68 <GL_Widget_SetMargins+0x10>)
   18c5c:	6800      	ldr	r0, [r0, #0]
   18c5e:	4684      	mov	ip, r0
   18c60:	bc01      	pop	{r0}
   18c62:	4760      	bx	ip
   18c64:	0000274c 	.word	0x0000274c
   18c68:	00024850 	.word	0x00024850
   18c6c:	00018f3d 	.word	0x00018f3d

00018c70 <GL_Widget_SetMinSize_Init>:
   18c70:	b40f      	push	{r0, r1, r2, r3}
   18c72:	4805      	ldr	r0, [pc, #20]	; (18c88 <GL_Widget_SetMinSize+0xc>)
   18c74:	2100      	movs	r1, #0
   18c76:	4a05      	ldr	r2, [pc, #20]	; (18c8c <GL_Widget_SetMinSize+0x10>)
   18c78:	4b05      	ldr	r3, [pc, #20]	; (18c90 <GL_Widget_SetMinSize+0x14>)
   18c7a:	4718      	bx	r3

00018c7c <GL_Widget_SetMinSize>:
   18c7c:	b401      	push	{r0}
   18c7e:	4803      	ldr	r0, [pc, #12]	; (18c8c <GL_Widget_SetMinSize+0x10>)
   18c80:	6800      	ldr	r0, [r0, #0]
   18c82:	4684      	mov	ip, r0
   18c84:	bc01      	pop	{r0}
   18c86:	4760      	bx	ip
   18c88:	0000273f 	.word	0x0000273f
   18c8c:	00024860 	.word	0x00024860
   18c90:	00018f3d 	.word	0x00018f3d

00018c94 <GL_Widget_SetShortcut_Init>:
   18c94:	b40f      	push	{r0, r1, r2, r3}
   18c96:	4805      	ldr	r0, [pc, #20]	; (18cac <GL_Widget_SetShortcut+0xc>)
   18c98:	2100      	movs	r1, #0
   18c9a:	4a05      	ldr	r2, [pc, #20]	; (18cb0 <GL_Widget_SetShortcut+0x10>)
   18c9c:	4b05      	ldr	r3, [pc, #20]	; (18cb4 <GL_Widget_SetShortcut+0x14>)
   18c9e:	4718      	bx	r3

00018ca0 <GL_Widget_SetShortcut>:
   18ca0:	b401      	push	{r0}
   18ca2:	4803      	ldr	r0, [pc, #12]	; (18cb0 <GL_Widget_SetShortcut+0x10>)
   18ca4:	6800      	ldr	r0, [r0, #0]
   18ca6:	4684      	mov	ip, r0
   18ca8:	bc01      	pop	{r0}
   18caa:	4760      	bx	ip
   18cac:	00002776 	.word	0x00002776
   18cb0:	00024870 	.word	0x00024870
   18cb4:	00018f3d 	.word	0x00018f3d

00018cb8 <GL_Widget_SetShrink_Init>:
   18cb8:	b40f      	push	{r0, r1, r2, r3}
   18cba:	4805      	ldr	r0, [pc, #20]	; (18cd0 <GL_Widget_SetShrink+0xc>)
   18cbc:	2100      	movs	r1, #0
   18cbe:	4a05      	ldr	r2, [pc, #20]	; (18cd4 <GL_Widget_SetShrink+0x10>)
   18cc0:	4b05      	ldr	r3, [pc, #20]	; (18cd8 <GL_Widget_SetShrink+0x14>)
   18cc2:	4718      	bx	r3

00018cc4 <GL_Widget_SetShrink>:
   18cc4:	b401      	push	{r0}
   18cc6:	4803      	ldr	r0, [pc, #12]	; (18cd4 <GL_Widget_SetShrink+0x10>)
   18cc8:	6800      	ldr	r0, [r0, #0]
   18cca:	4684      	mov	ip, r0
   18ccc:	bc01      	pop	{r0}
   18cce:	4760      	bx	ip
   18cd0:	00002758 	.word	0x00002758
   18cd4:	00024880 	.word	0x00024880
   18cd8:	00018f3d 	.word	0x00018f3d

00018cdc <GL_Widget_SetSize_Init>:
   18cdc:	b40f      	push	{r0, r1, r2, r3}
   18cde:	4805      	ldr	r0, [pc, #20]	; (18cf4 <GL_Widget_SetSize+0xc>)
   18ce0:	2100      	movs	r1, #0
   18ce2:	4a05      	ldr	r2, [pc, #20]	; (18cf8 <GL_Widget_SetSize+0x10>)
   18ce4:	4b05      	ldr	r3, [pc, #20]	; (18cfc <GL_Widget_SetSize+0x14>)
   18ce6:	4718      	bx	r3

00018ce8 <GL_Widget_SetSize>:
   18ce8:	b401      	push	{r0}
   18cea:	4803      	ldr	r0, [pc, #12]	; (18cf8 <GL_Widget_SetSize+0x10>)
   18cec:	6800      	ldr	r0, [r0, #0]
   18cee:	4684      	mov	ip, r0
   18cf0:	bc01      	pop	{r0}
   18cf2:	4760      	bx	ip
   18cf4:	0000273d 	.word	0x0000273d
   18cf8:	00024890 	.word	0x00024890
   18cfc:	00018f3d 	.word	0x00018f3d

00018d00 <GL_Widget_SetSource_Init>:
   18d00:	b40f      	push	{r0, r1, r2, r3}
   18d02:	4805      	ldr	r0, [pc, #20]	; (18d18 <GL_Widget_SetSource+0xc>)
   18d04:	2100      	movs	r1, #0
   18d06:	4a05      	ldr	r2, [pc, #20]	; (18d1c <GL_Widget_SetSource+0x10>)
   18d08:	4b05      	ldr	r3, [pc, #20]	; (18d20 <GL_Widget_SetSource+0x14>)
   18d0a:	4718      	bx	r3

00018d0c <GL_Widget_SetSource>:
   18d0c:	b401      	push	{r0}
   18d0e:	4803      	ldr	r0, [pc, #12]	; (18d1c <GL_Widget_SetSource+0x10>)
   18d10:	6800      	ldr	r0, [r0, #0]
   18d12:	4684      	mov	ip, r0
   18d14:	bc01      	pop	{r0}
   18d16:	4760      	bx	ip
   18d18:	000027c0 	.word	0x000027c0
   18d1c:	000248a0 	.word	0x000248a0
   18d20:	00018f3d 	.word	0x00018f3d

00018d24 <GL_Widget_SetText_Init>:
   18d24:	b40f      	push	{r0, r1, r2, r3}
   18d26:	4805      	ldr	r0, [pc, #20]	; (18d3c <GL_Widget_SetText+0xc>)
   18d28:	2100      	movs	r1, #0
   18d2a:	4a05      	ldr	r2, [pc, #20]	; (18d40 <GL_Widget_SetText+0x10>)
   18d2c:	4b05      	ldr	r3, [pc, #20]	; (18d44 <GL_Widget_SetText+0x14>)
   18d2e:	4718      	bx	r3

00018d30 <GL_Widget_SetText>:
   18d30:	b401      	push	{r0}
   18d32:	4803      	ldr	r0, [pc, #12]	; (18d40 <GL_Widget_SetText+0x10>)
   18d34:	6800      	ldr	r0, [r0, #0]
   18d36:	4684      	mov	ip, r0
   18d38:	bc01      	pop	{r0}
   18d3a:	4760      	bx	ip
   18d3c:	00002768 	.word	0x00002768
   18d40:	000248b0 	.word	0x000248b0
   18d44:	00018f3d 	.word	0x00018f3d

00018d48 <GL_Widget_SetTextAlign_Init>:
   18d48:	b40f      	push	{r0, r1, r2, r3}
   18d4a:	4805      	ldr	r0, [pc, #20]	; (18d60 <GL_Widget_SetTextAlign+0xc>)
   18d4c:	2100      	movs	r1, #0
   18d4e:	4a05      	ldr	r2, [pc, #20]	; (18d64 <GL_Widget_SetTextAlign+0x10>)
   18d50:	4b05      	ldr	r3, [pc, #20]	; (18d68 <GL_Widget_SetTextAlign+0x14>)
   18d52:	4718      	bx	r3

00018d54 <GL_Widget_SetTextAlign>:
   18d54:	b401      	push	{r0}
   18d56:	4803      	ldr	r0, [pc, #12]	; (18d64 <GL_Widget_SetTextAlign+0x10>)
   18d58:	6800      	ldr	r0, [r0, #0]
   18d5a:	4684      	mov	ip, r0
   18d5c:	bc01      	pop	{r0}
   18d5e:	4760      	bx	ip
   18d60:	00002774 	.word	0x00002774
   18d64:	000248c0 	.word	0x000248c0
   18d68:	00018f3d 	.word	0x00018f3d

00018d6c <GL_Widget_SetTextPaddings_Init>:
   18d6c:	b40f      	push	{r0, r1, r2, r3}
   18d6e:	4805      	ldr	r0, [pc, #20]	; (18d84 <GL_Widget_SetTextPaddings+0xc>)
   18d70:	2100      	movs	r1, #0
   18d72:	4a05      	ldr	r2, [pc, #20]	; (18d88 <GL_Widget_SetTextPaddings+0x10>)
   18d74:	4b05      	ldr	r3, [pc, #20]	; (18d8c <GL_Widget_SetTextPaddings+0x14>)
   18d76:	4718      	bx	r3

00018d78 <GL_Widget_SetTextPaddings>:
   18d78:	b401      	push	{r0}
   18d7a:	4803      	ldr	r0, [pc, #12]	; (18d88 <GL_Widget_SetTextPaddings+0x10>)
   18d7c:	6800      	ldr	r0, [r0, #0]
   18d7e:	4684      	mov	ip, r0
   18d80:	bc01      	pop	{r0}
   18d82:	4760      	bx	ip
   18d84:	000027a8 	.word	0x000027a8
   18d88:	000248d0 	.word	0x000248d0
   18d8c:	00018f3d 	.word	0x00018f3d

00018d90 <GL_Widget_SetTransformation_Init>:
   18d90:	b40f      	push	{r0, r1, r2, r3}
   18d92:	4805      	ldr	r0, [pc, #20]	; (18da8 <GL_Widget_SetTransformation+0xc>)
   18d94:	2100      	movs	r1, #0
   18d96:	4a05      	ldr	r2, [pc, #20]	; (18dac <GL_Widget_SetTransformation+0x10>)
   18d98:	4b05      	ldr	r3, [pc, #20]	; (18db0 <GL_Widget_SetTransformation+0x14>)
   18d9a:	4718      	bx	r3

00018d9c <GL_Widget_SetTransformation>:
   18d9c:	b401      	push	{r0}
   18d9e:	4803      	ldr	r0, [pc, #12]	; (18dac <GL_Widget_SetTransformation+0x10>)
   18da0:	6800      	ldr	r0, [r0, #0]
   18da2:	4684      	mov	ip, r0
   18da4:	bc01      	pop	{r0}
   18da6:	4760      	bx	ip
   18da8:	00002862 	.word	0x00002862
   18dac:	000248e0 	.word	0x000248e0
   18db0:	00018f3d 	.word	0x00018f3d

00018db4 <GL_Widget_SetVisible_Init>:
   18db4:	b40f      	push	{r0, r1, r2, r3}
   18db6:	4805      	ldr	r0, [pc, #20]	; (18dcc <GL_Widget_SetVisible+0xc>)
   18db8:	2100      	movs	r1, #0
   18dba:	4a05      	ldr	r2, [pc, #20]	; (18dd0 <GL_Widget_SetVisible+0x10>)
   18dbc:	4b05      	ldr	r3, [pc, #20]	; (18dd4 <GL_Widget_SetVisible+0x14>)
   18dbe:	4718      	bx	r3

00018dc0 <GL_Widget_SetVisible>:
   18dc0:	b401      	push	{r0}
   18dc2:	4803      	ldr	r0, [pc, #12]	; (18dd0 <GL_Widget_SetVisible+0x10>)
   18dc4:	6800      	ldr	r0, [r0, #0]
   18dc6:	4684      	mov	ip, r0
   18dc8:	bc01      	pop	{r0}
   18dca:	4760      	bx	ip
   18dcc:	00002745 	.word	0x00002745
   18dd0:	000248f0 	.word	0x000248f0
   18dd4:	00018f3d 	.word	0x00018f3d

00018dd8 <GL_Widget_SetWrap_Init>:
   18dd8:	b40f      	push	{r0, r1, r2, r3}
   18dda:	4805      	ldr	r0, [pc, #20]	; (18df0 <GL_Widget_SetWrap+0xc>)
   18ddc:	2100      	movs	r1, #0
   18dde:	4a05      	ldr	r2, [pc, #20]	; (18df4 <GL_Widget_SetWrap+0x10>)
   18de0:	4b05      	ldr	r3, [pc, #20]	; (18df8 <GL_Widget_SetWrap+0x14>)
   18de2:	4718      	bx	r3

00018de4 <GL_Widget_SetWrap>:
   18de4:	b401      	push	{r0}
   18de6:	4803      	ldr	r0, [pc, #12]	; (18df4 <GL_Widget_SetWrap+0x10>)
   18de8:	6800      	ldr	r0, [r0, #0]
   18dea:	4684      	mov	ip, r0
   18dec:	bc01      	pop	{r0}
   18dee:	4760      	bx	ip
   18df0:	00002876 	.word	0x00002876
   18df4:	00024900 	.word	0x00024900
   18df8:	00018f3d 	.word	0x00018f3d

00018dfc <GL_Widget_UnregisterCallback_Init>:
   18dfc:	b40f      	push	{r0, r1, r2, r3}
   18dfe:	4805      	ldr	r0, [pc, #20]	; (18e14 <GL_Widget_UnregisterCallback+0xc>)
   18e00:	2100      	movs	r1, #0
   18e02:	4a05      	ldr	r2, [pc, #20]	; (18e18 <GL_Widget_UnregisterCallback+0x10>)
   18e04:	4b05      	ldr	r3, [pc, #20]	; (18e1c <GL_Widget_UnregisterCallback+0x14>)
   18e06:	4718      	bx	r3

00018e08 <GL_Widget_UnregisterCallback>:
   18e08:	b401      	push	{r0}
   18e0a:	4803      	ldr	r0, [pc, #12]	; (18e18 <GL_Widget_UnregisterCallback+0x10>)
   18e0c:	6800      	ldr	r0, [r0, #0]
   18e0e:	4684      	mov	ip, r0
   18e10:	bc01      	pop	{r0}
   18e12:	4760      	bx	ip
   18e14:	00002773 	.word	0x00002773
   18e18:	00024910 	.word	0x00024910
   18e1c:	00018f3d 	.word	0x00018f3d

00018e20 <GL_Window_Create_Init>:
   18e20:	b40f      	push	{r0, r1, r2, r3}
   18e22:	4805      	ldr	r0, [pc, #20]	; (18e38 <GL_Window_Create+0xc>)
   18e24:	2100      	movs	r1, #0
   18e26:	4a05      	ldr	r2, [pc, #20]	; (18e3c <GL_Window_Create+0x10>)
   18e28:	4b05      	ldr	r3, [pc, #20]	; (18e40 <GL_Window_Create+0x14>)
   18e2a:	4718      	bx	r3

00018e2c <GL_Window_Create>:
   18e2c:	b401      	push	{r0}
   18e2e:	4803      	ldr	r0, [pc, #12]	; (18e3c <GL_Window_Create+0x10>)
   18e30:	6800      	ldr	r0, [r0, #0]
   18e32:	4684      	mov	ip, r0
   18e34:	bc01      	pop	{r0}
   18e36:	4760      	bx	ip
   18e38:	00002778 	.word	0x00002778
   18e3c:	00024920 	.word	0x00024920
   18e40:	00018f3d 	.word	0x00018f3d

00018e44 <GL_Window_Dispatch_Init>:
   18e44:	b40f      	push	{r0, r1, r2, r3}
   18e46:	4805      	ldr	r0, [pc, #20]	; (18e5c <GL_Window_Dispatch+0xc>)
   18e48:	2100      	movs	r1, #0
   18e4a:	4a05      	ldr	r2, [pc, #20]	; (18e60 <GL_Window_Dispatch+0x10>)
   18e4c:	4b05      	ldr	r3, [pc, #20]	; (18e64 <GL_Window_Dispatch+0x14>)
   18e4e:	4718      	bx	r3

00018e50 <GL_Window_Dispatch>:
   18e50:	b401      	push	{r0}
   18e52:	4803      	ldr	r0, [pc, #12]	; (18e60 <GL_Window_Dispatch+0x10>)
   18e54:	6800      	ldr	r0, [r0, #0]
   18e56:	4684      	mov	ip, r0
   18e58:	bc01      	pop	{r0}
   18e5a:	4760      	bx	ip
   18e5c:	000027be 	.word	0x000027be
   18e60:	00024930 	.word	0x00024930
   18e64:	00018f3d 	.word	0x00018f3d

00018e68 <GL_Window_GetResult_Init>:
   18e68:	b40f      	push	{r0, r1, r2, r3}
   18e6a:	4805      	ldr	r0, [pc, #20]	; (18e80 <GL_Window_GetResult+0xc>)
   18e6c:	2100      	movs	r1, #0
   18e6e:	4a05      	ldr	r2, [pc, #20]	; (18e84 <GL_Window_GetResult+0x10>)
   18e70:	4b05      	ldr	r3, [pc, #20]	; (18e88 <GL_Window_GetResult+0x14>)
   18e72:	4718      	bx	r3

00018e74 <GL_Window_GetResult>:
   18e74:	b401      	push	{r0}
   18e76:	4803      	ldr	r0, [pc, #12]	; (18e84 <GL_Window_GetResult+0x10>)
   18e78:	6800      	ldr	r0, [r0, #0]
   18e7a:	4684      	mov	ip, r0
   18e7c:	bc01      	pop	{r0}
   18e7e:	4760      	bx	ip
   18e80:	000027f4 	.word	0x000027f4
   18e84:	00024940 	.word	0x00024940
   18e88:	00018f3d 	.word	0x00018f3d

00018e8c <GL_Window_MainLoop_Init>:
   18e8c:	b40f      	push	{r0, r1, r2, r3}
   18e8e:	4805      	ldr	r0, [pc, #20]	; (18ea4 <GL_Window_MainLoop+0xc>)
   18e90:	2100      	movs	r1, #0
   18e92:	4a05      	ldr	r2, [pc, #20]	; (18ea8 <GL_Window_MainLoop+0x10>)
   18e94:	4b05      	ldr	r3, [pc, #20]	; (18eac <GL_Window_MainLoop+0x14>)
   18e96:	4718      	bx	r3

00018e98 <GL_Window_MainLoop>:
   18e98:	b401      	push	{r0}
   18e9a:	4803      	ldr	r0, [pc, #12]	; (18ea8 <GL_Window_MainLoop+0x10>)
   18e9c:	6800      	ldr	r0, [r0, #0]
   18e9e:	4684      	mov	ip, r0
   18ea0:	bc01      	pop	{r0}
   18ea2:	4760      	bx	ip
   18ea4:	00002780 	.word	0x00002780
   18ea8:	00024950 	.word	0x00024950
   18eac:	00018f3d 	.word	0x00018f3d

00018eb0 <GL_GetProcAddressWithoutExit>:
   18eb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   18eb2:	4d12      	ldr	r5, [pc, #72]	; (18efc <GL_GetProcAddressWithoutExit+0x4c>)
   18eb4:	4607      	mov	r7, r0
   18eb6:	447d      	add	r5, pc
   18eb8:	460e      	mov	r6, r1
   18eba:	682b      	ldr	r3, [r5, #0]
   18ebc:	4614      	mov	r4, r2
   18ebe:	b923      	cbnz	r3, 18eca <GL_GetProcAddressWithoutExit+0x1a>
   18ec0:	480f      	ldr	r0, [pc, #60]	; (18f00 <GL_GetProcAddressWithoutExit+0x50>)
   18ec2:	4478      	add	r0, pc
   18ec4:	f000 f885 	bl	18fd2 <OSL_Dll_Open>
   18ec8:	6028      	str	r0, [r5, #0]
   18eca:	4d0e      	ldr	r5, [pc, #56]	; (18f04 <GL_GetProcAddressWithoutExit+0x54>)
   18ecc:	447d      	add	r5, pc
   18ece:	6828      	ldr	r0, [r5, #0]
   18ed0:	b920      	cbnz	r0, 18edc <GL_GetProcAddressWithoutExit+0x2c>
   18ed2:	480d      	ldr	r0, [pc, #52]	; (18f08 <GL_GetProcAddressWithoutExit+0x58>)
   18ed4:	4478      	add	r0, pc
   18ed6:	f7ef eea0 	blx	8c18 <_init+0x148>
   18eda:	e005      	b.n	18ee8 <GL_GetProcAddressWithoutExit+0x38>
   18edc:	4639      	mov	r1, r7
   18ede:	f000 f858 	bl	18f92 <OSL_Dll_GetSymbolByName>
   18ee2:	2301      	movs	r3, #1
   18ee4:	606b      	str	r3, [r5, #4]
   18ee6:	b920      	cbnz	r0, 18ef2 <GL_GetProcAddressWithoutExit+0x42>
   18ee8:	4808      	ldr	r0, [pc, #32]	; (18f0c <GL_GetProcAddressWithoutExit+0x5c>)
   18eea:	4478      	add	r0, pc
   18eec:	f7ef ee94 	blx	8c18 <_init+0x148>
   18ef0:	4630      	mov	r0, r6
   18ef2:	b114      	cbz	r4, 18efa <GL_GetProcAddressWithoutExit+0x4a>
   18ef4:	6823      	ldr	r3, [r4, #0]
   18ef6:	b103      	cbz	r3, 18efa <GL_GetProcAddressWithoutExit+0x4a>
   18ef8:	6020      	str	r0, [r4, #0]
   18efa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   18efc:	0000bbea 	.word	0x0000bbea
   18f00:	0000275e 	.word	0x0000275e
   18f04:	0000bbd4 	.word	0x0000bbd4
   18f08:	0000275c 	.word	0x0000275c
   18f0c:	00002766 	.word	0x00002766

00018f10 <GL_GetProcAddress>:
   18f10:	b510      	push	{r4, lr}
   18f12:	f7ff ffcd 	bl	18eb0 <GL_GetProcAddressWithoutExit>
   18f16:	4604      	mov	r4, r0
   18f18:	b918      	cbnz	r0, 18f22 <GL_GetProcAddress+0x12>
   18f1a:	4803      	ldr	r0, [pc, #12]	; (18f28 <GL_GetProcAddress+0x18>)
   18f1c:	4478      	add	r0, pc
   18f1e:	f7ef ee7c 	blx	8c18 <_init+0x148>
   18f22:	4620      	mov	r0, r4
   18f24:	bd10      	pop	{r4, pc}
   18f26:	bf00      	nop
   18f28:	00002745 	.word	0x00002745

00018f2c <GL_IsPresent>:
   18f2c:	4802      	ldr	r0, [pc, #8]	; (18f38 <GL_IsPresent+0xc>)
   18f2e:	b508      	push	{r3, lr}
   18f30:	4478      	add	r0, pc
   18f32:	f000 f83e 	bl	18fb2 <OSL_Dll_IsPresent>
   18f36:	bd08      	pop	{r3, pc}
   18f38:	000026f0 	.word	0x000026f0

00018f3c <GL_InitFuncAndBranch>:
   18f3c:	b500      	push	{lr}
   18f3e:	f7ff ffe7 	bl	18f10 <GL_GetProcAddress>
   18f42:	bc08      	pop	{r3}
   18f44:	469e      	mov	lr, r3
   18f46:	4684      	mov	ip, r0
   18f48:	bc0f      	pop	{r0, r1, r2, r3}
   18f4a:	4760      	bx	ip

00018f4c <GL_Swi_ObjectLoad>:
   18f4c:	b580      	push	{r7, lr}
   18f4e:	2749      	movs	r7, #73	; 0x49
   18f50:	46bc      	mov	ip, r7
   18f52:	df13      	svc	19
   18f54:	bc80      	pop	{r7}
   18f56:	bc08      	pop	{r3}
   18f58:	4718      	bx	r3

00018f5a <GL_Swi_DllLink>:
   18f5a:	b580      	push	{r7, lr}
   18f5c:	2750      	movs	r7, #80	; 0x50
   18f5e:	46bc      	mov	ip, r7
   18f60:	df13      	svc	19
   18f62:	bc80      	pop	{r7}
   18f64:	bc08      	pop	{r3}
   18f66:	4718      	bx	r3

00018f68 <OSL_Dll_Close_Init>:
   18f68:	b40f      	push	{r0, r1, r2, r3}
   18f6a:	2003      	movs	r0, #3
   18f6c:	4904      	ldr	r1, [pc, #16]	; (18f80 <OSL_Dll_Close+0xe>)
   18f6e:	4a05      	ldr	r2, [pc, #20]	; (18f84 <OSL_Dll_Close+0x12>)
   18f70:	4710      	bx	r2

00018f72 <OSL_Dll_Close>:
   18f72:	b401      	push	{r0}
   18f74:	4802      	ldr	r0, [pc, #8]	; (18f80 <OSL_Dll_Close+0xe>)
   18f76:	6800      	ldr	r0, [r0, #0]
   18f78:	4684      	mov	ip, r0
   18f7a:	bc01      	pop	{r0}
   18f7c:	4760      	bx	ip
   18f7e:	0000      	.short	0x0000
   18f80:	00024960 	.word	0x00024960
   18f84:	00008c00 	.word	0x00008c00

00018f88 <OSL_Dll_GetSymbolByName_Init>:
   18f88:	b40f      	push	{r0, r1, r2, r3}
   18f8a:	2002      	movs	r0, #2
   18f8c:	4904      	ldr	r1, [pc, #16]	; (18fa0 <OSL_Dll_GetSymbolByName+0xe>)
   18f8e:	4a05      	ldr	r2, [pc, #20]	; (18fa4 <OSL_Dll_GetSymbolByName+0x12>)
   18f90:	4710      	bx	r2

00018f92 <OSL_Dll_GetSymbolByName>:
   18f92:	b401      	push	{r0}
   18f94:	4802      	ldr	r0, [pc, #8]	; (18fa0 <OSL_Dll_GetSymbolByName+0xe>)
   18f96:	6800      	ldr	r0, [r0, #0]
   18f98:	4684      	mov	ip, r0
   18f9a:	bc01      	pop	{r0}
   18f9c:	4760      	bx	ip
   18f9e:	0000      	.short	0x0000
   18fa0:	00024964 	.word	0x00024964
   18fa4:	00008c00 	.word	0x00008c00

00018fa8 <OSL_Dll_IsPresent_Init>:
   18fa8:	b40f      	push	{r0, r1, r2, r3}
   18faa:	201c      	movs	r0, #28
   18fac:	4904      	ldr	r1, [pc, #16]	; (18fc0 <OSL_Dll_IsPresent+0xe>)
   18fae:	4a05      	ldr	r2, [pc, #20]	; (18fc4 <OSL_Dll_IsPresent+0x12>)
   18fb0:	4710      	bx	r2

00018fb2 <OSL_Dll_IsPresent>:
   18fb2:	b401      	push	{r0}
   18fb4:	4802      	ldr	r0, [pc, #8]	; (18fc0 <OSL_Dll_IsPresent+0xe>)
   18fb6:	6800      	ldr	r0, [r0, #0]
   18fb8:	4684      	mov	ip, r0
   18fba:	bc01      	pop	{r0}
   18fbc:	4760      	bx	ip
   18fbe:	0000      	.short	0x0000
   18fc0:	00024968 	.word	0x00024968
   18fc4:	00008c00 	.word	0x00008c00

00018fc8 <OSL_Dll_Open_Init>:
   18fc8:	b40f      	push	{r0, r1, r2, r3}
   18fca:	2000      	movs	r0, #0
   18fcc:	4904      	ldr	r1, [pc, #16]	; (18fe0 <OSL_Dll_Open+0xe>)
   18fce:	4a05      	ldr	r2, [pc, #20]	; (18fe4 <OSL_Dll_Open+0x12>)
   18fd0:	4710      	bx	r2

00018fd2 <OSL_Dll_Open>:
   18fd2:	b401      	push	{r0}
   18fd4:	4802      	ldr	r0, [pc, #8]	; (18fe0 <OSL_Dll_Open+0xe>)
   18fd6:	6800      	ldr	r0, [r0, #0]
   18fd8:	4684      	mov	ip, r0
   18fda:	bc01      	pop	{r0}
   18fdc:	4760      	bx	ip
   18fde:	0000      	.short	0x0000
   18fe0:	0002496c 	.word	0x0002496c
   18fe4:	00008c00 	.word	0x00008c00

00018fe8 <OSL_Dll_OpenByAppliType_Init>:
   18fe8:	b40f      	push	{r0, r1, r2, r3}
   18fea:	201d      	movs	r0, #29
   18fec:	4904      	ldr	r1, [pc, #16]	; (19000 <OSL_Dll_OpenByAppliType+0xe>)
   18fee:	4a05      	ldr	r2, [pc, #20]	; (19004 <OSL_Dll_OpenByAppliType+0x12>)
   18ff0:	4710      	bx	r2

00018ff2 <OSL_Dll_OpenByAppliType>:
   18ff2:	b401      	push	{r0}
   18ff4:	4802      	ldr	r0, [pc, #8]	; (19000 <OSL_Dll_OpenByAppliType+0xe>)
   18ff6:	6800      	ldr	r0, [r0, #0]
   18ff8:	4684      	mov	ip, r0
   18ffa:	bc01      	pop	{r0}
   18ffc:	4760      	bx	ip
   18ffe:	0000      	.short	0x0000
   19000:	00024970 	.word	0x00024970
   19004:	00008c00 	.word	0x00008c00

00019008 <OSL_TimeStp_ElapsedMs_Init>:
   19008:	b40f      	push	{r0, r1, r2, r3}
   1900a:	201b      	movs	r0, #27
   1900c:	4904      	ldr	r1, [pc, #16]	; (19020 <OSL_TimeStp_ElapsedMs+0xe>)
   1900e:	4a05      	ldr	r2, [pc, #20]	; (19024 <OSL_TimeStp_ElapsedMs+0x12>)
   19010:	4710      	bx	r2

00019012 <OSL_TimeStp_ElapsedMs>:
   19012:	b401      	push	{r0}
   19014:	4802      	ldr	r0, [pc, #8]	; (19020 <OSL_TimeStp_ElapsedMs+0xe>)
   19016:	6800      	ldr	r0, [r0, #0]
   19018:	4684      	mov	ip, r0
   1901a:	bc01      	pop	{r0}
   1901c:	4760      	bx	ip
   1901e:	0000      	.short	0x0000
   19020:	00024974 	.word	0x00024974
   19024:	00008c00 	.word	0x00008c00

00019028 <OSL_TimeStp_Now_Init>:
   19028:	b40f      	push	{r0, r1, r2, r3}
   1902a:	2019      	movs	r0, #25
   1902c:	4904      	ldr	r1, [pc, #16]	; (19040 <OSL_TimeStp_Now+0xe>)
   1902e:	4a05      	ldr	r2, [pc, #20]	; (19044 <OSL_TimeStp_Now+0x12>)
   19030:	4710      	bx	r2

00019032 <OSL_TimeStp_Now>:
   19032:	b401      	push	{r0}
   19034:	4802      	ldr	r0, [pc, #8]	; (19040 <OSL_TimeStp_Now+0xe>)
   19036:	6800      	ldr	r0, [r0, #0]
   19038:	4684      	mov	ip, r0
   1903a:	bc01      	pop	{r0}
   1903c:	4760      	bx	ip
   1903e:	0000      	.short	0x0000
   19040:	00024978 	.word	0x00024978
   19044:	00008c00 	.word	0x00008c00

00019048 <__libc_csu_init>:
   19048:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, sl, lr}
   1904c:	e59f6050 	ldr	r6, [pc, #80]	; 190a4 <__libc_csu_init+0x5c>
   19050:	e59f5050 	ldr	r5, [pc, #80]	; 190a8 <__libc_csu_init+0x60>
   19054:	e08f6006 	add	r6, pc, r6
   19058:	e08f5005 	add	r5, pc, r5
   1905c:	e0656006 	rsb	r6, r5, r6
   19060:	e1a07000 	mov	r7, r0
   19064:	e1a08001 	mov	r8, r1
   19068:	e1a0a002 	mov	sl, r2
   1906c:	ebffbe97 	bl	8ad0 <_init>
   19070:	e1b06146 	asrs	r6, r6, #2
   19074:	08bd85f8 	popeq	{r3, r4, r5, r6, r7, r8, sl, pc}
   19078:	e2455004 	sub	r5, r5, #4
   1907c:	e3a04000 	mov	r4, #0
   19080:	e2844001 	add	r4, r4, #1
   19084:	e5b53004 	ldr	r3, [r5, #4]!
   19088:	e1a00007 	mov	r0, r7
   1908c:	e1a01008 	mov	r1, r8
   19090:	e1a0200a 	mov	r2, sl
   19094:	e12fff33 	blx	r3
   19098:	e1540006 	cmp	r4, r6
   1909c:	1afffff7 	bne	19080 <__libc_csu_init+0x38>
   190a0:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, sl, pc}
   190a4:	0000afac 	.word	0x0000afac
   190a8:	0000afa0 	.word	0x0000afa0

000190ac <__libc_csu_fini>:
   190ac:	e12fff1e 	bx	lr

Disassembly of section .fini:

000190b0 <_fini>:
   190b0:	e92d4008 	push	{r3, lr}
   190b4:	e8bd8008 	pop	{r3, pc}
